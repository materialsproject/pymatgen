name: Release

on:
  release:
    types: [ created ]
  workflow_dispatch:

jobs:
  test:

    strategy:
      max-parallel: 20
      matrix:
        # This distribution of tests is designed to ensure an approximately even time to finish for parallel jobs.
        include:
          - pkg: pymatgen/analysis/defects pymatgen/analysis/chemenv pymatgen/analysis/elasticity pymatgen/analysis/magnetism
            pkg_id: 1
          - pkg: pymatgen/analysis --ignore=pymatgen/analysis/defects --ignore=pymatgen/analysis/chemenv --ignore=pymatgen/analysis/elasticity --ignore=pymatgen/analysis/magnetism
            pkg_id: 2
          - pkg: pymatgen/electronic_structure pymatgen/symmetry pymatgen/command_line
            pkg_id: 3
          - pkg: pymatgen --ignore=pymatgen/analysis --ignore=pymatgen/electronic_structure --ignore=pymatgen/symmetry --ignore=pymatgen/ext --ignore=pymatgen/command_line
            pkg_id: 4

    runs-on: macos-latest

    env:
      PMG_MAPI_KEY: ${{ secrets.PMG_MAPI_KEY }}
      MPLBACKEND: "Agg"
      PMG_TEST_FILES_DIR: ${{ github.workspace }}/test_files
      GULP_LIB: ${{ github.workspace }}/cmd_line/gulp/Libraries

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - uses: actions/cache@v2
        if: startsWith(runner.os, 'macOS')
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          pip install --upgrade pip wheel
          pip install -r requirements.txt
          pip install -r requirements-optional.txt -r requirements-dev.txt
          pip install -e .
      - name: pytest ${{ matrix.pkg }}
        run: |
          pytest ${{ matrix.pkg }}

  release:
    needs: test
    strategy:
      max-parallel: 2
      matrix:
        os: [ macos-latest, windows-latest ]
        python-version: [ 3.7, 3.8 ]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v2
        if: startsWith(runner.os, 'macOS')
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          pip install --upgrade pip wheel
          pip install -r requirements.txt
          pip install -e .
      - name: Release
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: |
          pip install setuptools wheel twine
          python setup.py sdist bdist_wheel
          twine upload dist/*.whl
          twine upload --skip-existing dist/*.tar.gz
