Search.setIndex({"docnames": ["addons", "change_log", "compatibility", "contributing", "index", "installation", "introduction", "latest_changes", "modules", "pymatgen", "pymatgen.alchemy", "pymatgen.alchemy.filters", "pymatgen.alchemy.materials", "pymatgen.alchemy.transmuters", "pymatgen.analysis", "pymatgen.analysis.adsorption", "pymatgen.analysis.bond_dissociation", "pymatgen.analysis.bond_valence", "pymatgen.analysis.chemenv", "pymatgen.analysis.chemenv.connectivity", "pymatgen.analysis.chemenv.connectivity.connected_components", "pymatgen.analysis.chemenv.connectivity.connectivity_finder", "pymatgen.analysis.chemenv.connectivity.environment_nodes", "pymatgen.analysis.chemenv.connectivity.structure_connectivity", "pymatgen.analysis.chemenv.coordination_environments", "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies", "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries", "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries_files", "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder", "pymatgen.analysis.chemenv.coordination_environments.structure_environments", "pymatgen.analysis.chemenv.coordination_environments.voronoi", "pymatgen.analysis.chemenv.utils", "pymatgen.analysis.chemenv.utils.chemenv_config", "pymatgen.analysis.chemenv.utils.chemenv_errors", "pymatgen.analysis.chemenv.utils.coordination_geometry_utils", "pymatgen.analysis.chemenv.utils.defs_utils", "pymatgen.analysis.chemenv.utils.func_utils", "pymatgen.analysis.chemenv.utils.graph_utils", "pymatgen.analysis.chemenv.utils.math_utils", "pymatgen.analysis.chemenv.utils.scripts_utils", "pymatgen.analysis.chempot_diagram", "pymatgen.analysis.cost", "pymatgen.analysis.diffraction", "pymatgen.analysis.diffraction.core", "pymatgen.analysis.diffraction.neutron", "pymatgen.analysis.diffraction.tem", "pymatgen.analysis.diffraction.xrd", "pymatgen.analysis.dimensionality", "pymatgen.analysis.disorder", "pymatgen.analysis.elasticity", "pymatgen.analysis.elasticity.elastic", "pymatgen.analysis.elasticity.strain", "pymatgen.analysis.elasticity.stress", "pymatgen.analysis.energy_models", "pymatgen.analysis.eos", "pymatgen.analysis.ewald", "pymatgen.analysis.excitation", "pymatgen.analysis.ferroelectricity", "pymatgen.analysis.ferroelectricity.polarization", "pymatgen.analysis.fragmenter", "pymatgen.analysis.functional_groups", "pymatgen.analysis.gb", "pymatgen.analysis.gb.grain", "pymatgen.analysis.graphs", "pymatgen.analysis.hhi", "pymatgen.analysis.interface", "pymatgen.analysis.interface_reactions", "pymatgen.analysis.interfaces", "pymatgen.analysis.interfaces.coherent_interfaces", "pymatgen.analysis.interfaces.substrate_analyzer", "pymatgen.analysis.interfaces.zsl", "pymatgen.analysis.local_env", "pymatgen.analysis.magnetism", "pymatgen.analysis.magnetism.analyzer", "pymatgen.analysis.magnetism.heisenberg", "pymatgen.analysis.magnetism.jahnteller", "pymatgen.analysis.molecule_matcher", "pymatgen.analysis.molecule_structure_comparator", "pymatgen.analysis.nmr", "pymatgen.analysis.path_finder", "pymatgen.analysis.phase_diagram", "pymatgen.analysis.piezo", "pymatgen.analysis.piezo_sensitivity", "pymatgen.analysis.pourbaix_diagram", "pymatgen.analysis.prototypes", "pymatgen.analysis.quasiharmonic", "pymatgen.analysis.reaction_calculator", "pymatgen.analysis.solar", "pymatgen.analysis.solar.slme", "pymatgen.analysis.structure_analyzer", "pymatgen.analysis.structure_matcher", "pymatgen.analysis.structure_prediction", "pymatgen.analysis.structure_prediction.dopant_predictor", "pymatgen.analysis.structure_prediction.substitution_probability", "pymatgen.analysis.structure_prediction.substitutor", "pymatgen.analysis.structure_prediction.volume_predictor", "pymatgen.analysis.surface_analysis", "pymatgen.analysis.thermochemistry", "pymatgen.analysis.topological", "pymatgen.analysis.topological.spillage", "pymatgen.analysis.transition_state", "pymatgen.analysis.wulff", "pymatgen.analysis.xas", "pymatgen.analysis.xas.spectrum", "pymatgen.analysis.xps", "pymatgen.apps", "pymatgen.apps.battery", "pymatgen.apps.battery.analyzer", "pymatgen.apps.battery.battery_abc", "pymatgen.apps.battery.conversion_battery", "pymatgen.apps.battery.insertion_battery", "pymatgen.apps.battery.plotter", "pymatgen.apps.borg", "pymatgen.apps.borg.hive", "pymatgen.apps.borg.queen", "pymatgen.cli", "pymatgen.cli.feff_plot_cross_section", "pymatgen.cli.feff_plot_dos", "pymatgen.cli.gaussian_analyzer", "pymatgen.cli.get_environment", "pymatgen.cli.pmg", "pymatgen.cli.pmg_analyze", "pymatgen.cli.pmg_config", "pymatgen.cli.pmg_plot", "pymatgen.cli.pmg_potcar", "pymatgen.cli.pmg_query", "pymatgen.cli.pmg_structure", "pymatgen.command_line", "pymatgen.command_line.bader_caller", "pymatgen.command_line.chargemol_caller", "pymatgen.command_line.critic2_caller", "pymatgen.command_line.enumlib_caller", "pymatgen.command_line.gulp_caller", "pymatgen.command_line.mcsqs_caller", "pymatgen.command_line.vampire_caller", "pymatgen.core", "pymatgen.core.bonds", "pymatgen.core.composition", "pymatgen.core.interface", "pymatgen.core.ion", "pymatgen.core.lattice", "pymatgen.core.libxcfunc", "pymatgen.core.molecular_orbitals", "pymatgen.core.operations", "pymatgen.core.periodic_table", "pymatgen.core.sites", "pymatgen.core.spectrum", "pymatgen.core.structure", "pymatgen.core.surface", "pymatgen.core.tensors", "pymatgen.core.trajectory", "pymatgen.core.units", "pymatgen.core.xcfunc", "pymatgen.dao", "pymatgen.electronic_structure", "pymatgen.electronic_structure.bandstructure", "pymatgen.electronic_structure.boltztrap", "pymatgen.electronic_structure.boltztrap2", "pymatgen.electronic_structure.cohp", "pymatgen.electronic_structure.core", "pymatgen.electronic_structure.dos", "pymatgen.electronic_structure.plotter", "pymatgen.entries", "pymatgen.entries.compatibility", "pymatgen.entries.computed_entries", "pymatgen.entries.correction_calculator", "pymatgen.entries.entry_tools", "pymatgen.entries.exp_entries", "pymatgen.entries.mixing_scheme", "pymatgen.ext", "pymatgen.ext.cod", "pymatgen.ext.matproj", "pymatgen.ext.optimade", "pymatgen.io", "pymatgen.io.abinit", "pymatgen.io.abinit.abiobjects", "pymatgen.io.abinit.abitimer", "pymatgen.io.abinit.inputs", "pymatgen.io.abinit.netcdf", "pymatgen.io.abinit.pseudos", "pymatgen.io.abinit.variable", "pymatgen.io.adf", "pymatgen.io.ase", "pymatgen.io.atat", "pymatgen.io.babel", "pymatgen.io.cif", "pymatgen.io.common", "pymatgen.io.core", "pymatgen.io.cp2k", "pymatgen.io.cp2k.inputs", "pymatgen.io.cp2k.outputs", "pymatgen.io.cp2k.sets", "pymatgen.io.cp2k.utils", "pymatgen.io.cssr", "pymatgen.io.exciting", "pymatgen.io.exciting.inputs", "pymatgen.io.feff", "pymatgen.io.feff.inputs", "pymatgen.io.feff.outputs", "pymatgen.io.feff.sets", "pymatgen.io.fiesta", "pymatgen.io.gaussian", "pymatgen.io.jarvis", "pymatgen.io.lammps", "pymatgen.io.lammps.data", "pymatgen.io.lammps.generators", "pymatgen.io.lammps.inputs", "pymatgen.io.lammps.outputs", "pymatgen.io.lammps.sets", "pymatgen.io.lammps.utils", "pymatgen.io.lmto", "pymatgen.io.lobster", "pymatgen.io.lobster.inputs", "pymatgen.io.lobster.lobsterenv", "pymatgen.io.lobster.outputs", "pymatgen.io.nwchem", "pymatgen.io.packmol", "pymatgen.io.phonopy", "pymatgen.io.prismatic", "pymatgen.io.pwscf", "pymatgen.io.qchem", "pymatgen.io.qchem.inputs", "pymatgen.io.qchem.outputs", "pymatgen.io.qchem.sets", "pymatgen.io.qchem.utils", "pymatgen.io.res", "pymatgen.io.shengbte", "pymatgen.io.template", "pymatgen.io.vasp", "pymatgen.io.vasp.help", "pymatgen.io.vasp.inputs", "pymatgen.io.vasp.optics", "pymatgen.io.vasp.outputs", "pymatgen.io.vasp.sets", "pymatgen.io.wannier90", "pymatgen.io.xcrysden", "pymatgen.io.xr", "pymatgen.io.xtb", "pymatgen.io.xtb.inputs", "pymatgen.io.xtb.outputs", "pymatgen.io.xyz", "pymatgen.io.zeopp", "pymatgen.optimization", "pymatgen.optimization.linear_assignment", "pymatgen.optimization.linear_assignment_numpy", "pymatgen.optimization.neighbors", "pymatgen.phonon", "pymatgen.phonon.bandstructure", "pymatgen.phonon.dos", "pymatgen.phonon.gruneisen", "pymatgen.phonon.ir_spectra", "pymatgen.phonon.plotter", "pymatgen.phonon.thermal_displacements", "pymatgen.symmetry", "pymatgen.symmetry.analyzer", "pymatgen.symmetry.bandstructure", "pymatgen.symmetry.groups", "pymatgen.symmetry.kpath", "pymatgen.symmetry.maggroups", "pymatgen.symmetry.settings", "pymatgen.symmetry.site_symmetries", "pymatgen.symmetry.structure", "pymatgen.transformations", "pymatgen.transformations.advanced_transformations", "pymatgen.transformations.site_transformations", "pymatgen.transformations.standard_transformations", "pymatgen.transformations.transformation_abc", "pymatgen.util", "pymatgen.util.convergence", "pymatgen.util.coord", "pymatgen.util.coord_cython", "pymatgen.util.due", "pymatgen.util.graph_hashing", "pymatgen.util.io_utils", "pymatgen.util.num", "pymatgen.util.numba", "pymatgen.util.plotting", "pymatgen.util.provenance", "pymatgen.util.string", "pymatgen.util.testing", "pymatgen.util.typing", "pymatgen.vis", "pymatgen.vis.plotters", "pymatgen.vis.structure_chemview", "pymatgen.vis.structure_vtk", "references", "team", "usage"], "filenames": ["addons.rst", "change_log.rst", "compatibility.rst", "contributing.rst", "index.rst", "installation.rst", "introduction.rst", "latest_changes.rst", "modules.rst", "pymatgen.rst", "pymatgen.alchemy.rst", "pymatgen.alchemy.filters.rst", "pymatgen.alchemy.materials.rst", "pymatgen.alchemy.transmuters.rst", "pymatgen.analysis.rst", "pymatgen.analysis.adsorption.rst", "pymatgen.analysis.bond_dissociation.rst", "pymatgen.analysis.bond_valence.rst", "pymatgen.analysis.chemenv.rst", "pymatgen.analysis.chemenv.connectivity.rst", "pymatgen.analysis.chemenv.connectivity.connected_components.rst", "pymatgen.analysis.chemenv.connectivity.connectivity_finder.rst", "pymatgen.analysis.chemenv.connectivity.environment_nodes.rst", "pymatgen.analysis.chemenv.connectivity.structure_connectivity.rst", "pymatgen.analysis.chemenv.coordination_environments.rst", "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.rst", "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.rst", "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries_files.rst", "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.rst", "pymatgen.analysis.chemenv.coordination_environments.structure_environments.rst", "pymatgen.analysis.chemenv.coordination_environments.voronoi.rst", "pymatgen.analysis.chemenv.utils.rst", "pymatgen.analysis.chemenv.utils.chemenv_config.rst", "pymatgen.analysis.chemenv.utils.chemenv_errors.rst", "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.rst", "pymatgen.analysis.chemenv.utils.defs_utils.rst", "pymatgen.analysis.chemenv.utils.func_utils.rst", "pymatgen.analysis.chemenv.utils.graph_utils.rst", "pymatgen.analysis.chemenv.utils.math_utils.rst", "pymatgen.analysis.chemenv.utils.scripts_utils.rst", "pymatgen.analysis.chempot_diagram.rst", "pymatgen.analysis.cost.rst", "pymatgen.analysis.diffraction.rst", "pymatgen.analysis.diffraction.core.rst", "pymatgen.analysis.diffraction.neutron.rst", "pymatgen.analysis.diffraction.tem.rst", "pymatgen.analysis.diffraction.xrd.rst", "pymatgen.analysis.dimensionality.rst", "pymatgen.analysis.disorder.rst", "pymatgen.analysis.elasticity.rst", "pymatgen.analysis.elasticity.elastic.rst", "pymatgen.analysis.elasticity.strain.rst", "pymatgen.analysis.elasticity.stress.rst", "pymatgen.analysis.energy_models.rst", "pymatgen.analysis.eos.rst", "pymatgen.analysis.ewald.rst", "pymatgen.analysis.excitation.rst", "pymatgen.analysis.ferroelectricity.rst", "pymatgen.analysis.ferroelectricity.polarization.rst", "pymatgen.analysis.fragmenter.rst", "pymatgen.analysis.functional_groups.rst", "pymatgen.analysis.gb.rst", "pymatgen.analysis.gb.grain.rst", "pymatgen.analysis.graphs.rst", "pymatgen.analysis.hhi.rst", "pymatgen.analysis.interface.rst", "pymatgen.analysis.interface_reactions.rst", "pymatgen.analysis.interfaces.rst", "pymatgen.analysis.interfaces.coherent_interfaces.rst", "pymatgen.analysis.interfaces.substrate_analyzer.rst", "pymatgen.analysis.interfaces.zsl.rst", "pymatgen.analysis.local_env.rst", "pymatgen.analysis.magnetism.rst", "pymatgen.analysis.magnetism.analyzer.rst", "pymatgen.analysis.magnetism.heisenberg.rst", "pymatgen.analysis.magnetism.jahnteller.rst", "pymatgen.analysis.molecule_matcher.rst", "pymatgen.analysis.molecule_structure_comparator.rst", "pymatgen.analysis.nmr.rst", "pymatgen.analysis.path_finder.rst", "pymatgen.analysis.phase_diagram.rst", "pymatgen.analysis.piezo.rst", "pymatgen.analysis.piezo_sensitivity.rst", "pymatgen.analysis.pourbaix_diagram.rst", "pymatgen.analysis.prototypes.rst", "pymatgen.analysis.quasiharmonic.rst", "pymatgen.analysis.reaction_calculator.rst", "pymatgen.analysis.solar.rst", "pymatgen.analysis.solar.slme.rst", "pymatgen.analysis.structure_analyzer.rst", "pymatgen.analysis.structure_matcher.rst", "pymatgen.analysis.structure_prediction.rst", "pymatgen.analysis.structure_prediction.dopant_predictor.rst", "pymatgen.analysis.structure_prediction.substitution_probability.rst", "pymatgen.analysis.structure_prediction.substitutor.rst", "pymatgen.analysis.structure_prediction.volume_predictor.rst", "pymatgen.analysis.surface_analysis.rst", "pymatgen.analysis.thermochemistry.rst", "pymatgen.analysis.topological.rst", "pymatgen.analysis.topological.spillage.rst", "pymatgen.analysis.transition_state.rst", "pymatgen.analysis.wulff.rst", "pymatgen.analysis.xas.rst", "pymatgen.analysis.xas.spectrum.rst", "pymatgen.analysis.xps.rst", "pymatgen.apps.rst", "pymatgen.apps.battery.rst", "pymatgen.apps.battery.analyzer.rst", "pymatgen.apps.battery.battery_abc.rst", "pymatgen.apps.battery.conversion_battery.rst", "pymatgen.apps.battery.insertion_battery.rst", "pymatgen.apps.battery.plotter.rst", "pymatgen.apps.borg.rst", "pymatgen.apps.borg.hive.rst", "pymatgen.apps.borg.queen.rst", "pymatgen.cli.rst", "pymatgen.cli.feff_plot_cross_section.rst", "pymatgen.cli.feff_plot_dos.rst", "pymatgen.cli.gaussian_analyzer.rst", "pymatgen.cli.get_environment.rst", "pymatgen.cli.pmg.rst", "pymatgen.cli.pmg_analyze.rst", "pymatgen.cli.pmg_config.rst", "pymatgen.cli.pmg_plot.rst", "pymatgen.cli.pmg_potcar.rst", "pymatgen.cli.pmg_query.rst", "pymatgen.cli.pmg_structure.rst", "pymatgen.command_line.rst", "pymatgen.command_line.bader_caller.rst", "pymatgen.command_line.chargemol_caller.rst", "pymatgen.command_line.critic2_caller.rst", "pymatgen.command_line.enumlib_caller.rst", "pymatgen.command_line.gulp_caller.rst", "pymatgen.command_line.mcsqs_caller.rst", "pymatgen.command_line.vampire_caller.rst", "pymatgen.core.rst", "pymatgen.core.bonds.rst", "pymatgen.core.composition.rst", "pymatgen.core.interface.rst", "pymatgen.core.ion.rst", "pymatgen.core.lattice.rst", "pymatgen.core.libxcfunc.rst", "pymatgen.core.molecular_orbitals.rst", "pymatgen.core.operations.rst", "pymatgen.core.periodic_table.rst", "pymatgen.core.sites.rst", "pymatgen.core.spectrum.rst", "pymatgen.core.structure.rst", "pymatgen.core.surface.rst", "pymatgen.core.tensors.rst", "pymatgen.core.trajectory.rst", "pymatgen.core.units.rst", "pymatgen.core.xcfunc.rst", "pymatgen.dao.rst", "pymatgen.electronic_structure.rst", "pymatgen.electronic_structure.bandstructure.rst", "pymatgen.electronic_structure.boltztrap.rst", "pymatgen.electronic_structure.boltztrap2.rst", "pymatgen.electronic_structure.cohp.rst", "pymatgen.electronic_structure.core.rst", "pymatgen.electronic_structure.dos.rst", "pymatgen.electronic_structure.plotter.rst", "pymatgen.entries.rst", "pymatgen.entries.compatibility.rst", "pymatgen.entries.computed_entries.rst", "pymatgen.entries.correction_calculator.rst", "pymatgen.entries.entry_tools.rst", "pymatgen.entries.exp_entries.rst", "pymatgen.entries.mixing_scheme.rst", "pymatgen.ext.rst", "pymatgen.ext.cod.rst", "pymatgen.ext.matproj.rst", "pymatgen.ext.optimade.rst", "pymatgen.io.rst", "pymatgen.io.abinit.rst", "pymatgen.io.abinit.abiobjects.rst", "pymatgen.io.abinit.abitimer.rst", "pymatgen.io.abinit.inputs.rst", "pymatgen.io.abinit.netcdf.rst", "pymatgen.io.abinit.pseudos.rst", "pymatgen.io.abinit.variable.rst", "pymatgen.io.adf.rst", "pymatgen.io.ase.rst", "pymatgen.io.atat.rst", "pymatgen.io.babel.rst", "pymatgen.io.cif.rst", "pymatgen.io.common.rst", "pymatgen.io.core.rst", "pymatgen.io.cp2k.rst", "pymatgen.io.cp2k.inputs.rst", "pymatgen.io.cp2k.outputs.rst", "pymatgen.io.cp2k.sets.rst", "pymatgen.io.cp2k.utils.rst", "pymatgen.io.cssr.rst", "pymatgen.io.exciting.rst", "pymatgen.io.exciting.inputs.rst", "pymatgen.io.feff.rst", "pymatgen.io.feff.inputs.rst", "pymatgen.io.feff.outputs.rst", "pymatgen.io.feff.sets.rst", "pymatgen.io.fiesta.rst", "pymatgen.io.gaussian.rst", "pymatgen.io.jarvis.rst", "pymatgen.io.lammps.rst", "pymatgen.io.lammps.data.rst", "pymatgen.io.lammps.generators.rst", "pymatgen.io.lammps.inputs.rst", "pymatgen.io.lammps.outputs.rst", "pymatgen.io.lammps.sets.rst", "pymatgen.io.lammps.utils.rst", "pymatgen.io.lmto.rst", "pymatgen.io.lobster.rst", "pymatgen.io.lobster.inputs.rst", "pymatgen.io.lobster.lobsterenv.rst", "pymatgen.io.lobster.outputs.rst", "pymatgen.io.nwchem.rst", "pymatgen.io.packmol.rst", "pymatgen.io.phonopy.rst", "pymatgen.io.prismatic.rst", "pymatgen.io.pwscf.rst", "pymatgen.io.qchem.rst", "pymatgen.io.qchem.inputs.rst", "pymatgen.io.qchem.outputs.rst", "pymatgen.io.qchem.sets.rst", "pymatgen.io.qchem.utils.rst", "pymatgen.io.res.rst", "pymatgen.io.shengbte.rst", "pymatgen.io.template.rst", "pymatgen.io.vasp.rst", "pymatgen.io.vasp.help.rst", "pymatgen.io.vasp.inputs.rst", "pymatgen.io.vasp.optics.rst", "pymatgen.io.vasp.outputs.rst", "pymatgen.io.vasp.sets.rst", "pymatgen.io.wannier90.rst", "pymatgen.io.xcrysden.rst", "pymatgen.io.xr.rst", "pymatgen.io.xtb.rst", "pymatgen.io.xtb.inputs.rst", "pymatgen.io.xtb.outputs.rst", "pymatgen.io.xyz.rst", "pymatgen.io.zeopp.rst", "pymatgen.optimization.rst", "pymatgen.optimization.linear_assignment.rst", "pymatgen.optimization.linear_assignment_numpy.rst", "pymatgen.optimization.neighbors.rst", "pymatgen.phonon.rst", "pymatgen.phonon.bandstructure.rst", "pymatgen.phonon.dos.rst", "pymatgen.phonon.gruneisen.rst", "pymatgen.phonon.ir_spectra.rst", "pymatgen.phonon.plotter.rst", "pymatgen.phonon.thermal_displacements.rst", "pymatgen.symmetry.rst", "pymatgen.symmetry.analyzer.rst", "pymatgen.symmetry.bandstructure.rst", "pymatgen.symmetry.groups.rst", "pymatgen.symmetry.kpath.rst", "pymatgen.symmetry.maggroups.rst", "pymatgen.symmetry.settings.rst", "pymatgen.symmetry.site_symmetries.rst", "pymatgen.symmetry.structure.rst", "pymatgen.transformations.rst", "pymatgen.transformations.advanced_transformations.rst", "pymatgen.transformations.site_transformations.rst", "pymatgen.transformations.standard_transformations.rst", "pymatgen.transformations.transformation_abc.rst", "pymatgen.util.rst", "pymatgen.util.convergence.rst", "pymatgen.util.coord.rst", "pymatgen.util.coord_cython.rst", "pymatgen.util.due.rst", "pymatgen.util.graph_hashing.rst", "pymatgen.util.io_utils.rst", "pymatgen.util.num.rst", "pymatgen.util.numba.rst", "pymatgen.util.plotting.rst", "pymatgen.util.provenance.rst", "pymatgen.util.string.rst", "pymatgen.util.testing.rst", "pymatgen.util.typing.rst", "pymatgen.vis.rst", "pymatgen.vis.plotters.rst", "pymatgen.vis.structure_chemview.rst", "pymatgen.vis.structure_vtk.rst", "references.rst", "team.rst", "usage.rst"], "titles": ["Pymatgen Add-ons and External Tools", "Change log", "Compatibility", "Contributing", "Introduction", "Installation", "Introduction", "Change log", "pymatgen", "pymatgen namespace", "pymatgen.alchemy package", "pymatgen.alchemy.filters module", "pymatgen.alchemy.materials module", "pymatgen.alchemy.transmuters module", "pymatgen.analysis namespace", "pymatgen.analysis.adsorption module", "pymatgen.analysis.bond_dissociation module", "pymatgen.analysis.bond_valence module", "pymatgen.analysis.chemenv package", "pymatgen.analysis.chemenv.connectivity package", "pymatgen.analysis.chemenv.connectivity.connected_components module", "pymatgen.analysis.chemenv.connectivity.connectivity_finder module", "pymatgen.analysis.chemenv.connectivity.environment_nodes module", "pymatgen.analysis.chemenv.connectivity.structure_connectivity module", "pymatgen.analysis.chemenv.coordination_environments package", "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies module", "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries module", "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries_files package", "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder module", "pymatgen.analysis.chemenv.coordination_environments.structure_environments module", "pymatgen.analysis.chemenv.coordination_environments.voronoi module", "pymatgen.analysis.chemenv.utils package", "pymatgen.analysis.chemenv.utils.chemenv_config module", "pymatgen.analysis.chemenv.utils.chemenv_errors module", "pymatgen.analysis.chemenv.utils.coordination_geometry_utils module", "pymatgen.analysis.chemenv.utils.defs_utils module", "pymatgen.analysis.chemenv.utils.func_utils module", "pymatgen.analysis.chemenv.utils.graph_utils module", "pymatgen.analysis.chemenv.utils.math_utils module", "pymatgen.analysis.chemenv.utils.scripts_utils module", "pymatgen.analysis.chempot_diagram module", "pymatgen.analysis.cost module", "pymatgen.analysis.diffraction package", "pymatgen.analysis.diffraction.core module", "pymatgen.analysis.diffraction.neutron module", "pymatgen.analysis.diffraction.tem module", "pymatgen.analysis.diffraction.xrd module", "pymatgen.analysis.dimensionality module", "pymatgen.analysis.disorder module", "pymatgen.analysis.elasticity package", "pymatgen.analysis.elasticity.elastic module", "pymatgen.analysis.elasticity.strain module", "pymatgen.analysis.elasticity.stress module", "pymatgen.analysis.energy_models module", "pymatgen.analysis.eos module", "pymatgen.analysis.ewald module", "pymatgen.analysis.excitation module", "pymatgen.analysis.ferroelectricity package", "pymatgen.analysis.ferroelectricity.polarization module", "pymatgen.analysis.fragmenter module", "pymatgen.analysis.functional_groups module", "pymatgen.analysis.gb package", "pymatgen.analysis.gb.grain module", "pymatgen.analysis.graphs module", "pymatgen.analysis.hhi module", "pymatgen.analysis.interface module", "pymatgen.analysis.interface_reactions module", "pymatgen.analysis.interfaces package", "pymatgen.analysis.interfaces.coherent_interfaces module", "pymatgen.analysis.interfaces.substrate_analyzer module", "pymatgen.analysis.interfaces.zsl module", "pymatgen.analysis.local_env module", "pymatgen.analysis.magnetism package", "pymatgen.analysis.magnetism.analyzer module", "pymatgen.analysis.magnetism.heisenberg module", "pymatgen.analysis.magnetism.jahnteller module", "pymatgen.analysis.molecule_matcher module", "pymatgen.analysis.molecule_structure_comparator module", "pymatgen.analysis.nmr module", "pymatgen.analysis.path_finder module", "pymatgen.analysis.phase_diagram module", "pymatgen.analysis.piezo module", "pymatgen.analysis.piezo_sensitivity module", "pymatgen.analysis.pourbaix_diagram module", "pymatgen.analysis.prototypes module", "pymatgen.analysis.quasiharmonic module", "pymatgen.analysis.reaction_calculator module", "pymatgen.analysis.solar package", "pymatgen.analysis.solar.slme module", "pymatgen.analysis.structure_analyzer module", "pymatgen.analysis.structure_matcher module", "pymatgen.analysis.structure_prediction package", "pymatgen.analysis.structure_prediction.dopant_predictor module", "pymatgen.analysis.structure_prediction.substitution_probability module", "pymatgen.analysis.structure_prediction.substitutor module", "pymatgen.analysis.structure_prediction.volume_predictor module", "pymatgen.analysis.surface_analysis module", "pymatgen.analysis.thermochemistry module", "pymatgen.analysis.topological package", "pymatgen.analysis.topological.spillage module", "pymatgen.analysis.transition_state module", "pymatgen.analysis.wulff module", "pymatgen.analysis.xas package", "pymatgen.analysis.xas.spectrum module", "pymatgen.analysis.xps module", "pymatgen.apps package", "pymatgen.apps.battery package", "pymatgen.apps.battery.analyzer module", "pymatgen.apps.battery.battery_abc module", "pymatgen.apps.battery.conversion_battery module", "pymatgen.apps.battery.insertion_battery module", "pymatgen.apps.battery.plotter module", "pymatgen.apps.borg package", "pymatgen.apps.borg.hive module", "pymatgen.apps.borg.queen module", "pymatgen.cli package", "pymatgen.cli.feff_plot_cross_section module", "pymatgen.cli.feff_plot_dos module", "pymatgen.cli.gaussian_analyzer module", "pymatgen.cli.get_environment module", "pymatgen.cli.pmg module", "pymatgen.cli.pmg_analyze module", "pymatgen.cli.pmg_config module", "pymatgen.cli.pmg_plot module", "pymatgen.cli.pmg_potcar module", "pymatgen.cli.pmg_query module", "pymatgen.cli.pmg_structure module", "pymatgen.command_line package", "pymatgen.command_line.bader_caller module", "pymatgen.command_line.chargemol_caller module", "pymatgen.command_line.critic2_caller module", "pymatgen.command_line.enumlib_caller module", "pymatgen.command_line.gulp_caller module", "pymatgen.command_line.mcsqs_caller module", "pymatgen.command_line.vampire_caller module", "pymatgen.core package", "pymatgen.core.bonds module", "pymatgen.core.composition module", "pymatgen.core.interface module", "pymatgen.core.ion module", "pymatgen.core.lattice module", "pymatgen.core.libxcfunc module", "pymatgen.core.molecular_orbitals module", "pymatgen.core.operations module", "pymatgen.core.periodic_table module", "pymatgen.core.sites module", "pymatgen.core.spectrum module", "pymatgen.core.structure module", "pymatgen.core.surface module", "pymatgen.core.tensors module", "pymatgen.core.trajectory module", "pymatgen.core.units module", "pymatgen.core.xcfunc module", "pymatgen.dao module", "pymatgen.electronic_structure package", "pymatgen.electronic_structure.bandstructure module", "pymatgen.electronic_structure.boltztrap module", "pymatgen.electronic_structure.boltztrap2 module", "pymatgen.electronic_structure.cohp module", "pymatgen.electronic_structure.core module", "pymatgen.electronic_structure.dos module", "pymatgen.electronic_structure.plotter module", "pymatgen.entries package", "pymatgen.entries.compatibility module", "pymatgen.entries.computed_entries module", "pymatgen.entries.correction_calculator module", "pymatgen.entries.entry_tools module", "pymatgen.entries.exp_entries module", "pymatgen.entries.mixing_scheme module", "pymatgen.ext namespace", "pymatgen.ext.cod module", "pymatgen.ext.matproj module", "pymatgen.ext.optimade module", "pymatgen.io namespace", "pymatgen.io.abinit package", "pymatgen.io.abinit.abiobjects module", "pymatgen.io.abinit.abitimer module", "pymatgen.io.abinit.inputs module", "pymatgen.io.abinit.netcdf module", "pymatgen.io.abinit.pseudos module", "pymatgen.io.abinit.variable module", "pymatgen.io.adf module", "pymatgen.io.ase module", "pymatgen.io.atat module", "pymatgen.io.babel module", "pymatgen.io.cif module", "pymatgen.io.common module", "pymatgen.io.core module", "pymatgen.io.cp2k package", "pymatgen.io.cp2k.inputs module", "pymatgen.io.cp2k.outputs module", "pymatgen.io.cp2k.sets module", "pymatgen.io.cp2k.utils module", "pymatgen.io.cssr module", "pymatgen.io.exciting package", "pymatgen.io.exciting.inputs module", "pymatgen.io.feff package", "pymatgen.io.feff.inputs module", "pymatgen.io.feff.outputs module", "pymatgen.io.feff.sets module", "pymatgen.io.fiesta module", "pymatgen.io.gaussian module", "pymatgen.io.jarvis module", "pymatgen.io.lammps package", "pymatgen.io.lammps.data module", "pymatgen.io.lammps.generators module", "pymatgen.io.lammps.inputs module", "pymatgen.io.lammps.outputs module", "pymatgen.io.lammps.sets module", "pymatgen.io.lammps.utils module", "pymatgen.io.lmto module", "pymatgen.io.lobster package", "pymatgen.io.lobster.inputs module", "pymatgen.io.lobster.lobsterenv module", "pymatgen.io.lobster.outputs module", "pymatgen.io.nwchem module", "pymatgen.io.packmol module", "pymatgen.io.phonopy module", "pymatgen.io.prismatic module", "pymatgen.io.pwscf module", "pymatgen.io.qchem package", "pymatgen.io.qchem.inputs module", "pymatgen.io.qchem.outputs module", "pymatgen.io.qchem.sets module", "pymatgen.io.qchem.utils module", "pymatgen.io.res module", "pymatgen.io.shengbte module", "pymatgen.io.template module", "pymatgen.io.vasp package", "pymatgen.io.vasp.help module", "pymatgen.io.vasp.inputs module", "pymatgen.io.vasp.optics module", "pymatgen.io.vasp.outputs module", "pymatgen.io.vasp.sets module", "pymatgen.io.wannier90 module", "pymatgen.io.xcrysden module", "pymatgen.io.xr module", "pymatgen.io.xtb package", "pymatgen.io.xtb.inputs module", "pymatgen.io.xtb.outputs module", "pymatgen.io.xyz module", "pymatgen.io.zeopp module", "pymatgen.optimization package", "pymatgen.optimization.linear_assignment module", "pymatgen.optimization.linear_assignment_numpy module", "pymatgen.optimization.neighbors module", "pymatgen.phonon package", "pymatgen.phonon.bandstructure module", "pymatgen.phonon.dos module", "pymatgen.phonon.gruneisen module", "pymatgen.phonon.ir_spectra module", "pymatgen.phonon.plotter module", "pymatgen.phonon.thermal_displacements module", "pymatgen.symmetry package", "pymatgen.symmetry.analyzer module", "pymatgen.symmetry.bandstructure module", "pymatgen.symmetry.groups module", "pymatgen.symmetry.kpath module", "pymatgen.symmetry.maggroups module", "pymatgen.symmetry.settings module", "pymatgen.symmetry.site_symmetries module", "pymatgen.symmetry.structure module", "pymatgen.transformations package", "pymatgen.transformations.advanced_transformations module", "pymatgen.transformations.site_transformations module", "pymatgen.transformations.standard_transformations module", "pymatgen.transformations.transformation_abc module", "pymatgen.util package", "pymatgen.util.convergence module", "pymatgen.util.coord module", "pymatgen.util.coord_cython module", "pymatgen.util.due module", "pymatgen.util.graph_hashing module", "pymatgen.util.io_utils module", "pymatgen.util.num module", "pymatgen.util.numba module", "pymatgen.util.plotting module", "pymatgen.util.provenance module", "pymatgen.util.string module", "pymatgen.util.testing module", "pymatgen.util.typing module", "pymatgen.vis package", "pymatgen.vis.plotters module", "pymatgen.vis.structure_chemview module", "pymatgen.vis.structure_vtk module", "References", "Development Team", "Usage"], "terms": {"With": [0, 1, 3, 4, 5, 6, 71, 185, 191, 225, 254, 268], "effect": [0, 1, 3, 4, 6, 7, 25, 45, 50, 55, 70, 71, 75, 82, 85, 96, 137, 139, 144, 156, 161, 175, 189, 191, 232], "from": [0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 15, 16, 17, 20, 21, 23, 25, 26, 28, 29, 30, 34, 36, 37, 38, 40, 41, 43, 45, 47, 50, 51, 53, 54, 55, 58, 59, 60, 62, 63, 64, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 88, 89, 90, 93, 94, 95, 96, 99, 100, 101, 104, 107, 108, 109, 110, 113, 114, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 172, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 264, 265, 269, 270, 271, 272, 273, 276, 277, 278, 279, 284, 285, 286, 287], "v2022": [0, 3, 191], "0": [0, 3, 11, 12, 13, 15, 17, 20, 22, 25, 26, 28, 29, 30, 32, 34, 35, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 53, 55, 58, 59, 62, 63, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96, 99, 100, 101, 121, 133, 134, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 155, 156, 158, 159, 160, 161, 164, 165, 166, 172, 175, 176, 177, 179, 180, 184, 185, 186, 189, 190, 191, 195, 197, 198, 199, 200, 201, 204, 206, 209, 212, 213, 214, 215, 216, 217, 219, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 236, 241, 243, 244, 247, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 268, 269, 270, 274, 276, 278, 279, 282, 283, 284, 287], "3": [0, 3, 4, 6, 15, 17, 20, 22, 25, 26, 28, 32, 34, 35, 36, 37, 40, 43, 45, 47, 50, 53, 54, 55, 58, 62, 63, 66, 70, 71, 73, 76, 77, 78, 79, 80, 83, 84, 85, 89, 90, 94, 96, 101, 103, 104, 107, 128, 129, 130, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 155, 156, 158, 159, 160, 161, 163, 164, 172, 175, 176, 177, 179, 180, 185, 186, 187, 189, 191, 197, 199, 204, 205, 206, 212, 213, 214, 216, 219, 221, 223, 226, 230, 231, 232, 233, 245, 247, 249, 250, 251, 254, 255, 257, 263, 264, 265, 269, 270, 272, 273, 274, 277, 278, 279, 285, 287], "ext": [0, 1, 2, 3, 4, 6, 8, 9, 176, 179, 258, 287], "io": [0, 1, 2, 3, 4, 5, 6, 8, 9, 12, 13, 101, 113, 160, 163, 172, 247, 273], "ar": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 15, 16, 17, 20, 25, 26, 28, 29, 30, 34, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 50, 53, 54, 55, 58, 59, 60, 62, 63, 64, 66, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 89, 90, 92, 93, 94, 95, 96, 99, 100, 104, 107, 108, 109, 110, 113, 114, 115, 128, 130, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 171, 175, 176, 177, 179, 181, 184, 185, 186, 187, 189, 190, 191, 192, 195, 197, 198, 200, 201, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 219, 221, 223, 224, 225, 226, 227, 230, 231, 232, 233, 240, 241, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 261, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 276, 278, 279, 280, 282, 283, 284, 285, 286, 287], "now": [0, 1, 2, 3, 4, 5, 6, 7, 80, 138, 142, 144, 147, 148, 151, 155, 193, 200, 204, 215, 219, 247, 254, 263, 272, 278, 286, 287], "namespac": [0, 1, 2, 3, 4, 6, 8, 122, 172, 277], "packag": [0, 1, 2, 3, 4, 5, 6, 8, 9, 14, 32, 33, 34, 35, 36, 37, 38, 39, 63, 76, 80, 104, 122, 163, 171, 173, 181, 186, 216, 263, 283, 285, 286, 287], "you": [0, 1, 2, 3, 4, 5, 6, 11, 12, 28, 29, 43, 44, 46, 47, 54, 55, 58, 59, 62, 66, 68, 71, 76, 79, 80, 84, 93, 95, 96, 100, 101, 104, 107, 108, 113, 114, 128, 129, 130, 131, 132, 134, 137, 138, 140, 143, 144, 145, 147, 148, 151, 155, 156, 159, 160, 161, 163, 166, 170, 171, 175, 187, 189, 190, 191, 192, 199, 201, 205, 206, 212, 214, 215, 216, 219, 223, 224, 225, 230, 231, 232, 233, 251, 254, 263, 264, 265, 273, 277, 278, 282, 285, 286], "mai": [0, 1, 2, 3, 4, 5, 6, 17, 47, 55, 59, 62, 71, 75, 76, 79, 80, 83, 104, 109, 130, 131, 137, 144, 147, 148, 149, 163, 165, 168, 172, 176, 179, 181, 185, 189, 190, 191, 204, 207, 215, 216, 223, 225, 232, 233, 243, 244, 247, 249, 254, 255, 257, 263, 265, 266, 272, 274, 278, 285, 287], "refer": [0, 1, 3, 4, 6, 26, 28, 29, 36, 40, 41, 44, 54, 58, 62, 63, 66, 80, 88, 90, 94, 95, 96, 97, 100, 108, 128, 130, 140, 142, 144, 148, 152, 155, 156, 159, 160, 161, 163, 164, 176, 185, 190, 219, 221, 223, 232, 233, 238, 247, 249, 258, 259, 272, 276, 277, 287], "contribut": [0, 1, 2, 43, 50, 58, 71, 83, 85, 96, 158, 161, 191, 214, 215, 231, 232, 247, 248, 249, 251, 282, 285, 286], "page": [0, 1, 2, 3, 4, 6, 54, 204, 286, 287], "detail": [0, 1, 3, 4, 5, 6, 29, 36, 44, 47, 55, 71, 80, 104, 140, 145, 175, 181, 205, 217, 223, 226, 227, 232, 233, 255, 263, 272, 287], "how": [0, 1, 15, 25, 28, 29, 30, 43, 53, 55, 58, 60, 63, 64, 90, 137, 140, 147, 148, 156, 158, 161, 164, 168, 186, 187, 189, 190, 191, 206, 213, 232, 233, 263, 268, 277, 287], "write": [0, 1, 2, 4, 6, 8, 9, 12, 13, 130, 137, 150, 156, 159, 161, 166, 173, 174, 176, 177, 181, 183, 185, 186, 187, 189, 190, 191, 193, 195, 197, 199, 200, 201, 204, 206, 209, 210, 212, 216, 218, 219, 220, 221, 223, 225, 226, 227, 230, 232, 233, 234, 236, 238, 240, 247, 251, 252, 282], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 15, 16, 17, 20, 22, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 93, 94, 95, 96, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 261, 263, 264, 265, 266, 269, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 284, 285, 286, 287], "serv": [0, 58, 147, 182, 184, 187, 202, 233, 254], "univers": [0, 44, 50, 85, 108, 147, 191, 232, 286], "resourc": [0, 1, 3, 4, 5, 6, 64, 172, 277], "list": [0, 1, 3, 4, 5, 6, 11, 12, 13, 15, 16, 17, 20, 25, 26, 28, 29, 30, 34, 36, 37, 38, 40, 41, 43, 45, 47, 50, 51, 54, 55, 58, 59, 60, 62, 63, 66, 68, 69, 70, 71, 73, 74, 76, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 96, 100, 101, 103, 108, 109, 110, 113, 114, 121, 122, 129, 130, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 168, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 189, 190, 191, 197, 199, 200, 201, 204, 206, 210, 212, 213, 214, 215, 216, 217, 219, 221, 222, 223, 224, 225, 226, 230, 232, 233, 238, 240, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 269, 270, 272, 273, 274, 276, 277, 279, 283, 284, 287], "known": [0, 4, 6, 28, 41, 47, 62, 71, 76, 77, 80, 84, 95, 144, 148, 172, 230, 233], "It": [0, 1, 3, 4, 5, 6, 13, 16, 17, 47, 55, 58, 62, 63, 69, 71, 74, 76, 80, 94, 96, 104, 108, 113, 114, 137, 138, 140, 144, 147, 148, 149, 150, 151, 152, 155, 156, 158, 160, 161, 163, 165, 168, 172, 176, 177, 189, 191, 201, 204, 206, 208, 210, 211, 228, 230, 232, 233, 243, 244, 247, 254, 256, 257, 263, 264, 265, 269, 277, 287], "should": [0, 1, 2, 3, 4, 5, 6, 12, 13, 16, 20, 25, 26, 29, 43, 50, 54, 55, 58, 62, 63, 71, 75, 77, 79, 80, 83, 84, 88, 89, 96, 97, 104, 107, 111, 130, 133, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156, 158, 159, 161, 163, 165, 168, 172, 175, 176, 177, 178, 179, 184, 185, 187, 189, 190, 191, 204, 205, 206, 208, 212, 213, 215, 216, 217, 221, 222, 223, 224, 225, 230, 231, 232, 233, 234, 241, 243, 244, 245, 247, 248, 251, 254, 255, 257, 259, 263, 264, 265, 266, 269, 272, 276, 277, 279, 287], "note": [0, 1, 3, 4, 5, 6, 11, 13, 16, 37, 40, 44, 45, 46, 47, 50, 51, 52, 54, 55, 58, 59, 62, 63, 66, 70, 71, 76, 78, 80, 81, 82, 83, 85, 89, 94, 96, 100, 101, 104, 107, 108, 114, 128, 129, 130, 137, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 155, 156, 158, 160, 161, 162, 163, 164, 168, 177, 178, 179, 185, 186, 187, 189, 190, 191, 197, 204, 205, 206, 207, 215, 216, 219, 221, 223, 224, 225, 226, 230, 232, 233, 241, 251, 254, 255, 256, 263, 272, 278, 282], "maintain": [0, 1, 2, 3, 4, 6, 73, 107, 144, 147, 148, 230, 263], "provid": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 15, 16, 21, 25, 29, 40, 44, 45, 46, 47, 48, 50, 51, 52, 55, 58, 59, 62, 63, 65, 66, 68, 69, 70, 71, 73, 75, 76, 77, 79, 80, 81, 86, 89, 90, 93, 94, 96, 104, 109, 110, 111, 130, 138, 140, 141, 143, 145, 146, 147, 148, 149, 150, 152, 155, 156, 159, 160, 161, 163, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 182, 184, 185, 186, 187, 189, 190, 191, 193, 195, 196, 197, 202, 205, 206, 208, 212, 213, 216, 225, 227, 230, 232, 233, 236, 247, 248, 249, 250, 251, 252, 254, 255, 257, 259, 260, 263, 264, 265, 272, 273, 274, 275, 276, 278, 279, 284, 287], "guarante": [0, 1, 3, 4, 6, 63, 73, 76, 104, 146, 148, 163, 189, 206, 225, 231, 254, 264, 265, 271, 272, 287], "whatsoev": [0, 3, 144], "qualiti": [0, 3, 165, 214, 268, 276, 284], "reliabl": [0, 3, 4, 6, 79, 148, 163, 191, 230], "ani": [0, 1, 2, 3, 4, 5, 6, 11, 12, 13, 15, 20, 23, 26, 28, 40, 47, 53, 55, 58, 59, 60, 62, 63, 71, 73, 79, 80, 89, 90, 94, 96, 97, 101, 109, 130, 137, 138, 140, 143, 144, 146, 147, 148, 151, 155, 158, 159, 160, 163, 164, 168, 171, 172, 180, 182, 184, 185, 186, 187, 189, 190, 191, 199, 204, 207, 214, 215, 216, 219, 222, 224, 225, 230, 232, 233, 256, 257, 263, 264, 265, 266, 269, 272, 284, 285, 287], "here": [0, 4, 5, 6, 37, 47, 71, 73, 76, 90, 96, 137, 147, 148, 152, 164, 179, 190, 206, 217, 223, 226, 231, 232, 252, 273, 287], "end": [0, 1, 2, 3, 26, 68, 79, 93, 100, 109, 111, 114, 134, 139, 143, 147, 148, 150, 190, 191, 197, 201, 206, 224, 225, 230, 232, 233, 284], "user": [0, 1, 2, 3, 4, 5, 6, 15, 16, 25, 37, 47, 62, 66, 80, 96, 128, 130, 147, 148, 158, 171, 172, 179, 181, 189, 191, 192, 197, 199, 201, 206, 215, 221, 227, 230, 231, 232, 233, 255, 257, 263, 279, 287], "make": [0, 1, 2, 3, 4, 5, 6, 15, 20, 29, 62, 63, 73, 80, 90, 93, 96, 101, 109, 110, 111, 132, 138, 141, 144, 145, 147, 148, 152, 156, 161, 163, 171, 175, 184, 187, 189, 191, 212, 216, 222, 224, 230, 232, 233, 236, 252, 258, 263, 276, 278, 283, 284], "own": [0, 1, 2, 3, 4, 6, 62, 66, 80, 96, 101, 177, 205, 221, 223, 233, 255, 287], "assess": [0, 1, 58], "function": [0, 1, 2, 3, 5, 8, 9, 13, 15, 16, 25, 30, 34, 36, 45, 47, 50, 51, 54, 55, 58, 59, 60, 62, 63, 66, 71, 73, 76, 79, 80, 83, 85, 88, 89, 90, 93, 94, 96, 99, 104, 107, 115, 116, 117, 118, 119, 121, 126, 129, 133, 137, 138, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 155, 156, 159, 160, 161, 163, 166, 168, 172, 173, 175, 177, 179, 181, 184, 185, 189, 190, 191, 192, 197, 198, 201, 206, 208, 209, 212, 214, 215, 217, 219, 221, 222, 223, 224, 225, 228, 230, 231, 232, 233, 241, 244, 247, 248, 250, 251, 256, 263, 268, 272, 273, 274, 275, 276, 278, 279, 282, 283, 285, 287], "pleas": [0, 1, 2, 3, 4, 5, 6, 12, 28, 40, 66, 70, 79, 84, 89, 96, 104, 128, 129, 130, 131, 134, 139, 148, 155, 161, 170, 171, 172, 181, 184, 187, 191, 213, 215, 230, 232, 233, 252, 263, 265, 285, 286, 287], "submit": [0, 1, 3, 4, 6, 71], "pull": [0, 1, 2, 3, 4, 6, 71, 277], "request": [0, 1, 3, 4, 6, 29, 89, 171, 172, 190, 201, 221, 223, 233, 250], "updat": [0, 1, 2, 5, 9, 28, 29, 47, 55, 63, 89, 122, 129, 172, 173, 188, 189, 191, 206, 226, 233, 254, 272], "when": [0, 1, 3, 4, 5, 6, 12, 13, 17, 21, 28, 29, 30, 34, 47, 55, 59, 62, 63, 66, 71, 76, 80, 83, 90, 96, 101, 104, 108, 130, 132, 137, 140, 141, 144, 146, 147, 148, 149, 150, 151, 155, 156, 160, 161, 163, 168, 171, 172, 175, 177, 184, 187, 190, 191, 197, 199, 206, 217, 219, 221, 223, 224, 230, 232, 233, 245, 255, 258, 259, 263, 272, 275, 279, 283, 284, 287], "releas": [0, 2, 3, 4, 5, 6, 96, 144, 148, 223, 233], "new": [0, 1, 2, 3, 5, 12, 13, 26, 43, 47, 54, 55, 59, 62, 63, 71, 73, 78, 79, 80, 90, 91, 93, 94, 95, 96, 108, 110, 130, 137, 140, 147, 148, 149, 151, 159, 161, 164, 171, 172, 175, 176, 177, 179, 181, 187, 189, 191, 201, 206, 212, 213, 215, 216, 221, 222, 223, 227, 230, 232, 233, 251, 255, 265, 272, 276, 277, 280, 287], "diffus": [0, 1, 3, 4, 6, 9, 79, 173, 188, 189, 285], "modul": [0, 1, 2, 3, 4, 5, 6, 8, 9, 14, 169, 173, 285, 287], "includ": [0, 1, 3, 4, 5, 6, 12, 13, 15, 20, 25, 26, 28, 29, 41, 46, 47, 50, 51, 55, 58, 59, 62, 63, 66, 69, 71, 80, 83, 94, 96, 106, 110, 113, 129, 137, 138, 139, 140, 143, 145, 146, 147, 148, 149, 150, 151, 156, 158, 160, 162, 163, 164, 165, 166, 167, 168, 175, 176, 177, 181, 185, 187, 189, 191, 192, 195, 199, 204, 206, 208, 212, 214, 217, 221, 222, 223, 231, 232, 233, 239, 249, 252, 254, 257, 258, 263, 272, 278, 287], "path": [0, 1, 4, 5, 6, 9, 20, 37, 58, 71, 79, 88, 99, 100, 108, 109, 110, 113, 128, 129, 130, 131, 132, 134, 147, 150, 156, 161, 163, 170, 173, 174, 175, 176, 177, 178, 179, 187, 189, 190, 192, 195, 196, 197, 198, 199, 205, 206, 208, 212, 213, 214, 216, 217, 221, 222, 225, 226, 227, 231, 232, 233, 234, 239, 243, 244, 255, 257, 285, 287], "determin": [0, 1, 4, 6, 13, 15, 16, 17, 25, 28, 29, 34, 40, 41, 47, 50, 51, 53, 55, 58, 59, 60, 62, 63, 66, 70, 71, 76, 80, 82, 89, 90, 94, 95, 96, 97, 101, 107, 128, 133, 136, 137, 139, 140, 143, 144, 147, 148, 149, 160, 161, 163, 168, 185, 189, 191, 197, 199, 204, 212, 213, 214, 217, 230, 232, 233, 243, 244, 247, 248, 250, 251, 252, 253, 254, 255, 257, 263, 264, 265, 266, 269, 270, 282, 284, 287], "neb": [0, 1, 4, 6, 100, 147, 232, 233, 287], "calcul": [0, 1, 4, 5, 6, 8, 9, 14, 15, 16, 17, 25, 26, 28, 34, 40, 43, 44, 45, 46, 47, 50, 51, 52, 53, 55, 58, 59, 62, 63, 66, 67, 69, 70, 71, 73, 74, 75, 76, 79, 80, 82, 83, 85, 86, 88, 89, 90, 96, 99, 100, 101, 128, 129, 130, 133, 134, 135, 136, 137, 139, 140, 142, 144, 147, 148, 149, 156, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 175, 176, 177, 179, 181, 187, 188, 189, 190, 191, 198, 199, 201, 204, 205, 212, 214, 215, 217, 219, 221, 222, 223, 225, 226, 230, 231, 232, 233, 234, 245, 247, 249, 250, 251, 254, 257, 258, 263, 265, 268, 269, 270, 285], "md": [0, 1, 4, 6, 8, 9, 135, 144, 150, 173, 189, 190, 191, 203, 206, 215, 230, 232, 233, 271], "trajectori": [0, 1, 4, 6, 8, 9, 135, 147, 190, 232], "rdf": [0, 4, 6, 30], "van": [0, 1, 4, 6, 144, 191, 219, 221, 223, 233, 272, 276], "hove": [0, 4, 6], "arrheniu": [0, 4, 6], "plot": [0, 1, 2, 4, 6, 8, 9, 14, 15, 25, 29, 40, 43, 44, 45, 46, 54, 66, 80, 83, 88, 89, 96, 100, 101, 104, 111, 115, 116, 117, 123, 155, 158, 160, 161, 165, 176, 179, 186, 201, 213, 214, 215, 221, 223, 231, 246, 250, 251, 255, 267, 268, 282, 284, 285, 287], "etc": [0, 1, 3, 4, 5, 6, 50, 60, 62, 63, 71, 73, 74, 76, 80, 90, 104, 107, 108, 115, 128, 134, 143, 144, 145, 146, 147, 149, 151, 159, 160, 166, 168, 190, 191, 197, 198, 199, 212, 216, 218, 219, 223, 230, 232, 233, 239, 248, 253, 254, 263, 276, 279, 287], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 20, 21, 22, 23, 25, 26, 28, 29, 30, 32, 34, 36, 37, 40, 41, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 58, 59, 60, 62, 63, 64, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 113, 114, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 175, 176, 177, 178, 179, 181, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 236, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287], "materi": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 13, 32, 40, 44, 45, 46, 47, 48, 50, 58, 62, 64, 65, 66, 68, 69, 71, 74, 78, 80, 84, 88, 96, 99, 101, 105, 107, 108, 110, 125, 129, 134, 138, 142, 156, 161, 163, 164, 168, 171, 172, 197, 198, 199, 230, 233, 241, 254, 255, 256, 257, 272, 276, 279, 284, 285, 286], "virtual": [0, 3, 4, 6, 191, 233, 285], "lab": [0, 1, 3, 4, 6, 133, 172, 233, 285, 286], "defect": [0, 1, 2, 5, 26, 80, 132, 241, 264, 265], "relat": [0, 1, 3, 4, 5, 6, 7, 50, 67, 71, 82, 96, 106, 108, 110, 111, 129, 132, 137, 140, 143, 147, 154, 155, 156, 160, 162, 190, 204, 206, 216, 261, 277], "jimmi": [0, 1, 232, 286], "xuan": [0, 1, 232, 286], "shen": [0, 1, 232, 286], "offici": [0, 4, 5, 6, 205, 219, 223, 233], "support": [0, 1, 2, 3, 4, 6, 7, 12, 13, 46, 50, 51, 54, 63, 71, 75, 78, 80, 83, 85, 101, 113, 130, 137, 143, 144, 147, 150, 151, 164, 170, 172, 177, 178, 180, 181, 184, 185, 191, 193, 195, 198, 199, 201, 204, 206, 207, 215, 216, 219, 223, 225, 227, 230, 232, 233, 235, 256, 257, 263, 276, 278, 279, 284, 287], "project": [0, 1, 3, 4, 5, 6, 8, 9, 13, 15, 32, 34, 40, 45, 62, 66, 80, 104, 125, 129, 132, 135, 140, 147, 149, 154, 155, 156, 159, 160, 161, 163, 164, 168, 171, 189, 190, 197, 199, 212, 214, 215, 217, 230, 232, 233, 247, 248, 249, 251, 254, 263, 269, 277, 285, 286], "fleur": [0, 1, 147], "read": [0, 1, 4, 5, 6, 41, 50, 71, 96, 100, 118, 129, 130, 132, 140, 143, 147, 148, 149, 150, 156, 176, 177, 178, 179, 181, 183, 184, 185, 186, 187, 189, 190, 193, 195, 197, 199, 200, 201, 204, 206, 208, 210, 212, 214, 215, 216, 217, 219, 221, 223, 224, 225, 226, 230, 232, 233, 234, 235, 236, 241, 252], "file": [0, 1, 3, 4, 5, 6, 12, 13, 23, 27, 29, 41, 43, 50, 54, 58, 63, 71, 79, 80, 96, 99, 111, 113, 114, 115, 116, 122, 126, 128, 129, 130, 132, 133, 134, 147, 148, 149, 150, 155, 156, 158, 159, 160, 161, 163, 165, 166, 176, 177, 178, 179, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 247, 249, 250, 251, 252, 263, 271, 273, 277, 279, 282, 284], "us": [0, 1, 2, 3, 7, 11, 12, 13, 15, 17, 20, 21, 22, 25, 26, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 58, 59, 60, 62, 63, 64, 66, 69, 70, 71, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 92, 93, 94, 95, 96, 97, 100, 101, 103, 104, 107, 108, 109, 110, 111, 113, 114, 121, 126, 127, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 176, 177, 178, 179, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 197, 199, 201, 204, 205, 206, 208, 210, 212, 213, 215, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 240, 241, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 282, 283, 284, 285, 287], "dft": [0, 1, 9, 40, 73, 79, 83, 85, 128, 129, 156, 163, 164, 168, 173, 188, 189, 190, 191, 201, 215, 232, 233, 263], "code": [0, 1, 2, 4, 5, 6, 7, 37, 44, 45, 46, 54, 55, 62, 63, 66, 75, 89, 99, 100, 101, 128, 129, 130, 131, 133, 134, 136, 141, 147, 148, 152, 156, 158, 161, 164, 175, 176, 177, 179, 183, 186, 189, 191, 194, 210, 221, 225, 227, 230, 232, 233, 251, 252, 254, 263, 265, 271, 272, 277, 284, 285, 287], "judft": 0, "team": [0, 1, 3, 233], "none": [0, 1, 9, 11, 12, 13, 14, 15, 17, 18, 20, 21, 23, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 58, 59, 60, 62, 63, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 83, 84, 89, 90, 93, 95, 96, 97, 100, 101, 103, 107, 108, 110, 111, 113, 114, 122, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 144, 145, 147, 148, 149, 150, 151, 152, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 168, 172, 175, 176, 177, 178, 179, 181, 184, 185, 186, 187, 189, 190, 191, 192, 195, 197, 199, 200, 201, 204, 205, 206, 210, 212, 213, 214, 215, 216, 217, 219, 221, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 238, 240, 241, 247, 248, 249, 250, 251, 252, 254, 255, 257, 263, 264, 265, 266, 269, 272, 273, 276, 277, 278, 279, 282, 283, 284], "present": [0, 11, 12, 13, 16, 29, 59, 60, 63, 71, 73, 83, 90, 93, 94, 95, 96, 100, 101, 107, 128, 130, 144, 158, 177, 178, 179, 185, 189, 190, 191, 199, 204, 205, 206, 213, 217, 223, 224, 230, 232, 233, 247, 250, 254, 256, 258, 263, 278, 287], "If": [0, 1, 2, 3, 4, 5, 6, 11, 12, 15, 16, 20, 28, 29, 30, 34, 37, 40, 43, 44, 45, 46, 47, 50, 54, 59, 60, 62, 63, 66, 71, 73, 75, 77, 79, 80, 84, 90, 92, 93, 94, 96, 100, 101, 103, 107, 108, 109, 110, 111, 113, 114, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 150, 152, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 168, 170, 175, 177, 178, 179, 181, 184, 185, 186, 187, 189, 190, 191, 192, 197, 199, 200, 201, 204, 205, 206, 212, 213, 214, 215, 216, 217, 222, 223, 224, 225, 226, 230, 231, 232, 233, 241, 245, 247, 248, 249, 250, 251, 254, 255, 256, 257, 263, 264, 265, 266, 269, 271, 272, 276, 279, 282, 284, 285, 286, 287], "would": [0, 1, 3, 4, 5, 6, 11, 12, 34, 80, 90, 94, 108, 109, 133, 137, 140, 144, 147, 148, 159, 161, 163, 177, 181, 186, 189, 191, 197, 199, 225, 230, 233, 263, 271, 286, 287], "like": [0, 1, 2, 3, 4, 5, 6, 12, 15, 26, 29, 34, 40, 50, 51, 52, 55, 71, 73, 78, 80, 81, 82, 83, 84, 93, 94, 96, 100, 107, 108, 113, 128, 130, 137, 140, 143, 144, 146, 147, 148, 149, 152, 159, 161, 163, 166, 177, 179, 184, 187, 189, 190, 191, 192, 206, 216, 217, 223, 224, 230, 231, 232, 233, 250, 252, 253, 256, 263, 264, 278, 279, 287], "your": [0, 1, 2, 3, 4, 6, 66, 71, 79, 84, 95, 96, 101, 107, 132, 148, 159, 161, 171, 191, 205, 206, 230, 233, 271, 273, 285, 286, 287], "pr": [0, 1, 3, 4, 6, 7, 8, 9, 77, 135, 144, 233], "For": [0, 1, 2, 3, 4, 5, 6, 11, 12, 17, 20, 25, 26, 29, 34, 40, 41, 45, 46, 47, 50, 58, 62, 63, 70, 71, 76, 80, 86, 89, 90, 92, 96, 97, 100, 108, 109, 110, 113, 128, 129, 130, 132, 136, 137, 138, 139, 140, 143, 144, 147, 148, 150, 151, 152, 156, 159, 160, 161, 162, 163, 164, 166, 167, 171, 172, 175, 176, 177, 179, 184, 186, 189, 190, 191, 192, 201, 204, 205, 206, 208, 212, 214, 215, 216, 219, 221, 223, 224, 230, 232, 233, 241, 245, 251, 254, 256, 263, 264, 265, 272, 277, 278, 281, 282, 284, 285, 287], "more": [0, 1, 2, 4, 5, 6, 13, 16, 21, 28, 29, 34, 40, 53, 55, 58, 60, 63, 71, 75, 76, 80, 83, 85, 86, 90, 93, 94, 95, 104, 107, 108, 109, 110, 114, 129, 130, 137, 139, 140, 144, 145, 147, 148, 149, 156, 159, 171, 175, 177, 181, 187, 189, 190, 191, 201, 204, 206, 208, 212, 214, 215, 216, 217, 221, 222, 223, 226, 227, 230, 231, 232, 233, 255, 258, 263, 264, 265, 266, 278, 285, 287], "complet": [0, 1, 3, 4, 5, 6, 9, 80, 86, 137, 148, 160, 168, 173, 179, 188, 190, 198, 199, 201, 206, 207, 223, 230, 232, 254, 263, 264, 287], "less": [0, 15, 34, 58, 62, 71, 77, 79, 80, 89, 90, 136, 137, 138, 139, 144, 147, 148, 149, 163, 168, 176, 189, 223, 233, 245, 263, 274, 287], "curat": [0, 172], "have": [0, 1, 2, 3, 4, 5, 6, 7, 11, 15, 16, 17, 20, 23, 26, 28, 29, 30, 37, 40, 47, 51, 53, 55, 58, 59, 60, 62, 63, 70, 71, 73, 74, 75, 76, 77, 79, 80, 89, 90, 92, 96, 100, 101, 107, 108, 109, 110, 113, 114, 127, 128, 132, 133, 137, 138, 139, 142, 144, 145, 147, 148, 149, 151, 155, 156, 159, 160, 161, 163, 164, 168, 172, 176, 177, 178, 179, 181, 184, 186, 189, 190, 191, 192, 204, 206, 212, 217, 223, 226, 230, 231, 232, 233, 234, 241, 245, 249, 251, 254, 255, 263, 264, 265, 266, 269, 272, 273, 278, 279, 285, 286, 287], "look": [0, 1, 4, 6, 11, 25, 28, 29, 47, 71, 80, 93, 94, 96, 100, 104, 128, 130, 133, 140, 148, 152, 155, 161, 163, 176, 190, 200, 206, 212, 232, 233, 251, 257, 263, 282, 287], "depend": [0, 1, 3, 4, 6, 25, 28, 44, 45, 46, 50, 58, 71, 76, 79, 80, 89, 96, 103, 104, 107, 113, 128, 129, 130, 131, 134, 155, 156, 158, 159, 161, 163, 164, 167, 175, 177, 186, 189, 190, 191, 198, 214, 215, 221, 223, 231, 232, 233, 247, 249, 254, 263, 264, 265, 266, 269, 276, 287], "atomate2": [0, 205, 206, 208], "librari": [0, 1, 2, 4, 6, 66, 84, 128, 131, 132, 152, 254, 287], "comput": [0, 1, 4, 5, 6, 20, 23, 25, 26, 28, 29, 30, 33, 34, 39, 43, 44, 45, 46, 47, 55, 58, 62, 71, 74, 76, 78, 80, 83, 84, 85, 86, 89, 90, 96, 101, 108, 128, 129, 130, 132, 134, 138, 140, 147, 148, 155, 156, 160, 161, 163, 164, 165, 168, 170, 175, 176, 177, 179, 181, 186, 189, 191, 198, 200, 201, 205, 206, 208, 213, 215, 221, 223, 225, 230, 231, 232, 233, 243, 244, 252, 254, 255, 257, 263, 264, 265, 269, 272, 276, 285, 286, 287], "scienc": [0, 3, 4, 6, 70, 84, 148, 172, 233, 254, 255, 257, 285, 286], "workflow": [0, 1, 4, 6, 16], "lobsterpi": 0, "automat": [0, 1, 2, 3, 5, 9, 11, 34, 37, 40, 53, 55, 63, 73, 86, 96, 100, 128, 129, 130, 141, 144, 147, 151, 156, 159, 161, 163, 168, 173, 174, 175, 177, 186, 189, 190, 191, 204, 206, 219, 223, 228, 230, 232, 233, 250, 251, 263, 265, 276, 282, 285, 287], "analyz": [0, 1, 4, 6, 8, 9, 11, 14, 17, 18, 19, 24, 28, 47, 48, 49, 57, 58, 62, 66, 69, 71, 72, 80, 89, 96, 105, 106, 115, 121, 126, 130, 140, 148, 149, 156, 161, 176, 179, 241, 253, 255, 257, 261], "lobster": [0, 1, 8, 9, 155, 158, 160, 173, 233], "run": [0, 1, 2, 3, 4, 5, 6, 8, 9, 13, 16, 55, 74, 79, 88, 89, 100, 113, 114, 117, 127, 128, 129, 130, 132, 133, 134, 150, 154, 155, 156, 161, 163, 168, 173, 177, 186, 189, 190, 191, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 221, 223, 225, 226, 230, 232, 233, 241, 263, 273, 285], "http": [0, 1, 4, 5, 6, 40, 55, 58, 66, 71, 76, 77, 80, 84, 85, 88, 96, 99, 101, 104, 128, 129, 130, 131, 132, 133, 134, 142, 143, 144, 152, 156, 159, 160, 161, 163, 164, 171, 172, 178, 196, 200, 204, 205, 206, 208, 216, 217, 218, 226, 232, 233, 235, 241, 247, 250, 252, 254, 257, 258, 269, 271, 272, 285, 287], "cohp": [0, 1, 8, 9, 154, 161, 210, 212, 213, 214, 233], "de": [0, 44, 46, 130, 156, 160, 189, 212, 214, 232, 233, 256, 286], "_": [0, 1, 13, 179, 204, 233, 272, 278, 285], "pymatviz": 0, "complement": 0, "addit": [0, 1, 3, 4, 5, 6, 12, 13, 25, 26, 28, 29, 30, 35, 45, 54, 59, 62, 63, 69, 71, 79, 86, 100, 132, 133, 137, 138, 139, 143, 146, 147, 148, 150, 151, 164, 165, 172, 178, 182, 185, 187, 189, 195, 201, 204, 205, 206, 208, 213, 215, 217, 226, 233, 241, 247, 249, 263, 277, 278, 286], "larger": [0, 16, 25, 34, 47, 62, 63, 89, 90, 136, 147, 148, 185, 189, 191, 232, 245, 263, 272], "dataset": [0, 9, 71, 152, 173, 174, 177, 178, 180, 254], "common": [0, 1, 4, 5, 6, 8, 9, 59, 71, 75, 80, 86, 108, 115, 137, 139, 144, 147, 150, 159, 161, 164, 173, 175, 189, 191, 238, 258, 265, 279], "informat": [0, 233, 286], "discov": 0, "A": [0, 1, 2, 3, 4, 6, 11, 12, 13, 15, 17, 20, 25, 26, 28, 29, 34, 37, 40, 43, 47, 53, 54, 55, 56, 58, 59, 62, 63, 64, 66, 69, 70, 71, 73, 76, 78, 80, 83, 84, 86, 88, 89, 90, 92, 93, 94, 95, 96, 97, 99, 101, 103, 104, 107, 108, 109, 110, 111, 113, 118, 120, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 176, 177, 179, 181, 184, 185, 186, 187, 189, 190, 191, 193, 195, 197, 200, 201, 204, 206, 208, 212, 215, 216, 217, 219, 221, 223, 224, 226, 229, 230, 232, 233, 241, 243, 244, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 261, 263, 264, 265, 269, 272, 276, 277, 278, 279, 282, 283, 284, 285, 287], "discoveri": [0, 93, 94], "algorithm": [0, 1, 3, 11, 14, 15, 17, 18, 20, 24, 26, 28, 29, 40, 44, 46, 47, 50, 58, 60, 62, 63, 67, 69, 70, 71, 74, 76, 79, 80, 89, 90, 93, 94, 107, 128, 131, 138, 140, 147, 148, 160, 175, 177, 184, 189, 191, 215, 217, 223, 230, 232, 233, 241, 243, 244, 245, 254, 257, 263, 264, 265, 269, 272, 285], "gear": 0, "toward": [0, 25, 287], "explor": [0, 4, 6, 130, 287], "high": [0, 1, 3, 4, 6, 13, 40, 73, 74, 75, 93, 96, 99, 131, 144, 156, 161, 168, 177, 179, 184, 189, 191, 215, 217, 230, 233, 241, 254, 255, 257, 284, 285, 286], "perform": [0, 1, 3, 4, 5, 6, 10, 11, 12, 13, 15, 17, 26, 34, 37, 40, 41, 44, 45, 46, 55, 58, 59, 60, 64, 71, 75, 76, 77, 78, 79, 80, 85, 89, 90, 94, 97, 103, 121, 125, 126, 128, 129, 130, 137, 139, 140, 147, 148, 149, 151, 160, 163, 164, 166, 168, 170, 175, 181, 184, 189, 190, 196, 198, 200, 205, 206, 208, 213, 214, 215, 223, 225, 230, 231, 232, 233, 238, 248, 249, 252, 254, 263, 264, 265, 269, 271, 272, 287], "candid": [0, 55, 58, 263], "chemic": [0, 1, 18, 26, 29, 40, 41, 63, 64, 66, 71, 78, 79, 80, 83, 86, 96, 109, 110, 119, 129, 137, 142, 144, 147, 148, 156, 161, 162, 165, 166, 170, 172, 178, 179, 198, 204, 214, 232, 233, 276, 285, 286, 287], "space": [0, 1, 25, 28, 34, 40, 43, 45, 53, 55, 58, 70, 71, 80, 83, 89, 137, 138, 140, 143, 145, 147, 148, 151, 156, 168, 177, 185, 191, 197, 199, 200, 204, 210, 216, 225, 226, 231, 232, 241, 254, 255, 256, 257, 258, 259, 279], "rxn": [0, 9, 105, 106, 109, 287], "network": [0, 15, 20, 71], "reaction": [0, 1, 4, 6, 8, 9, 14, 40, 66, 80, 83, 86, 100, 109, 163, 167], "python": [0, 1, 3, 4, 6, 76, 80, 90, 100, 113, 114, 127, 133, 137, 147, 149, 151, 158, 178, 184, 192, 200, 206, 226, 227, 231, 241, 254, 263, 278, 284, 287], "predict": [0, 1, 9, 14, 66, 71, 80, 91, 92, 93, 94, 95, 99, 142, 163, 164, 263], "inorgan": [0, 93, 94, 137, 139, 144, 164, 233, 276], "pathwai": 0, "graph": [0, 1, 5, 8, 9, 14, 18, 19, 20, 22, 23, 37, 47, 59, 60, 71, 74, 92, 130, 134, 161, 165, 213, 251, 255, 272], "theori": [0, 5, 8, 9, 58, 63, 128, 129, 134, 156, 173, 198, 215, 221, 223, 233, 255, 258, 272, 276, 285], "matbench": 0, "benchmark": [0, 223], "machin": [0, 3, 80, 114, 164, 190, 224, 272], "learn": [0, 3, 80, 164, 272, 287], "properti": [0, 1, 3, 4, 6, 7, 8, 9, 12, 15, 20, 22, 25, 26, 28, 29, 32, 34, 40, 49, 50, 51, 52, 54, 55, 58, 62, 63, 66, 69, 70, 71, 73, 74, 75, 78, 79, 80, 83, 85, 86, 89, 96, 98, 101, 107, 108, 109, 110, 113, 128, 129, 130, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 155, 156, 158, 159, 160, 162, 164, 166, 168, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 189, 190, 191, 192, 195, 197, 198, 199, 200, 201, 204, 205, 206, 213, 214, 215, 219, 225, 230, 231, 232, 233, 234, 240, 241, 244, 247, 249, 250, 251, 252, 254, 255, 256, 257, 259, 263, 264, 265, 266, 269, 287], "crystal": [0, 1, 3, 4, 5, 6, 43, 44, 45, 46, 47, 58, 62, 63, 71, 75, 84, 89, 95, 96, 101, 130, 140, 142, 143, 144, 147, 148, 149, 155, 158, 159, 161, 170, 175, 183, 185, 213, 226, 247, 249, 254, 257, 258, 263, 264, 265, 276, 285, 287], "stabil": [0, 1, 26, 50, 66, 80, 83, 96, 189, 285, 287], "matgl": [0, 147], "deep": [0, 140, 177], "implement": [0, 1, 12, 13, 17, 21, 25, 26, 28, 30, 36, 40, 42, 43, 44, 45, 46, 47, 53, 54, 61, 62, 67, 70, 74, 76, 79, 80, 85, 90, 96, 108, 113, 114, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 136, 137, 142, 143, 146, 148, 151, 152, 159, 161, 162, 163, 164, 166, 168, 174, 175, 177, 179, 187, 189, 191, 192, 199, 200, 201, 204, 205, 206, 207, 208, 210, 211, 213, 214, 215, 219, 220, 223, 226, 227, 228, 230, 231, 232, 233, 237, 240, 241, 243, 244, 249, 250, 251, 252, 253, 257, 261, 263, 265, 267, 272, 281, 284, 285, 287], "m3gnet": [0, 147, 263], "megnet": [0, 1], "dgl": 0, "pytorch": 0, "come": [0, 3, 4, 5, 6, 29, 59, 94, 95, 150, 156, 168, 175, 190, 192, 224, 225, 230, 258], "chgnet": 0, "pretrain": 0, "neural": 0, "potenti": [0, 1, 9, 40, 66, 71, 79, 80, 83, 92, 96, 107, 110, 122, 128, 129, 132, 137, 147, 148, 156, 161, 173, 179, 186, 188, 189, 191, 192, 196, 197, 198, 199, 201, 206, 215, 223, 225, 232, 233, 263, 285], "charg": [0, 1, 5, 8, 9, 11, 16, 17, 55, 58, 63, 71, 78, 79, 82, 92, 93, 94, 107, 108, 109, 110, 123, 128, 129, 130, 132, 135, 137, 139, 142, 144, 147, 150, 151, 173, 175, 177, 179, 181, 186, 188, 190, 191, 198, 199, 201, 204, 211, 212, 213, 214, 215, 221, 223, 228, 232, 233, 263, 265, 278, 285], "inform": [0, 1, 4, 5, 6, 16, 20, 25, 28, 29, 34, 40, 47, 62, 63, 66, 71, 73, 86, 89, 90, 104, 109, 110, 121, 130, 132, 134, 138, 139, 142, 147, 148, 149, 151, 152, 155, 156, 158, 159, 162, 164, 168, 172, 184, 185, 186, 187, 189, 190, 197, 205, 206, 208, 212, 213, 214, 216, 221, 223, 224, 225, 232, 233, 236, 240, 241, 247, 249, 251, 258, 263, 264, 265, 266, 272, 284, 285, 287], "atomist": [0, 5, 134, 186], "model": [0, 1, 4, 6, 8, 9, 14, 26, 28, 53, 54, 66, 74, 94, 96, 104, 129, 134, 148, 156, 161, 164, 175, 189, 221, 223, 236, 263, 285, 287], "lru_cach": [1, 4, 6, 7], "speed": [1, 4, 5, 6, 7, 55, 62, 80, 114, 137, 139, 145, 147, 166, 184, 191, 204, 231, 263, 264, 265, 270, 287], "up": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 20, 23, 25, 28, 29, 30, 36, 59, 62, 80, 83, 89, 90, 96, 109, 114, 128, 134, 136, 137, 139, 140, 142, 148, 154, 155, 156, 158, 159, 160, 161, 172, 176, 184, 186, 190, 191, 204, 206, 213, 214, 223, 225, 231, 232, 233, 263, 264, 270, 279, 284, 287], "get_el_sp": [1, 4, 6, 7, 8, 9, 135, 144], "400x": [1, 4, 6, 7], "v1kko": [1, 4, 6, 7], "speci": [1, 2, 4, 6, 7, 8, 9, 11, 12, 15, 17, 28, 29, 55, 58, 62, 63, 71, 73, 75, 76, 78, 80, 84, 86, 90, 92, 93, 94, 95, 128, 132, 134, 135, 136, 137, 138, 142, 144, 145, 147, 148, 150, 159, 162, 165, 166, 172, 175, 178, 189, 190, 192, 198, 200, 204, 213, 225, 230, 232, 233, 252, 254, 263, 264, 265, 278, 284, 287], "favor": [1, 2, 4, 6, 7], "set": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 15, 17, 20, 23, 25, 26, 28, 29, 30, 34, 36, 37, 40, 41, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 58, 59, 60, 62, 63, 68, 69, 70, 71, 73, 75, 76, 79, 80, 83, 85, 88, 89, 90, 96, 101, 107, 108, 109, 110, 113, 128, 130, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 155, 156, 159, 160, 161, 163, 164, 166, 168, 172, 173, 175, 177, 178, 179, 181, 185, 186, 187, 188, 189, 190, 192, 195, 196, 197, 200, 201, 203, 204, 205, 206, 210, 212, 213, 215, 216, 217, 219, 220, 221, 224, 225, 226, 228, 230, 232, 236, 243, 244, 245, 251, 253, 254, 255, 256, 257, 258, 263, 264, 265, 268, 269, 270, 272, 273, 276, 278, 279, 282, 283, 284], "spin": [1, 2, 4, 6, 7, 8, 9, 73, 74, 75, 90, 99, 128, 129, 134, 135, 142, 144, 147, 150, 154, 155, 156, 158, 159, 160, 161, 173, 175, 177, 179, 186, 189, 190, 191, 192, 197, 198, 201, 213, 214, 215, 219, 221, 223, 225, 228, 231, 232, 233, 234, 255, 257, 263], "rational": [1, 4, 6, 7], "onli": [1, 2, 3, 4, 6, 7, 11, 12, 15, 16, 17, 23, 25, 28, 29, 35, 40, 47, 50, 55, 58, 59, 60, 62, 63, 69, 71, 73, 74, 75, 78, 80, 83, 84, 89, 90, 92, 94, 95, 96, 97, 100, 108, 109, 110, 111, 113, 129, 130, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 155, 156, 159, 160, 161, 163, 164, 166, 167, 168, 172, 175, 176, 177, 178, 179, 181, 184, 185, 189, 190, 191, 192, 193, 195, 197, 199, 204, 206, 208, 210, 212, 213, 214, 215, 216, 219, 223, 224, 225, 230, 231, 232, 233, 238, 240, 248, 249, 250, 254, 255, 256, 263, 264, 265, 266, 269, 272, 278, 287], "anywai": [1, 4, 6, 7, 79], "dummyspeci": [1, 2, 4, 6, 7, 8, 9, 63, 73, 80, 130, 135, 137, 144, 145, 147, 150], "mostli": [1, 2, 3, 4, 6, 7, 186, 210], "immut": [1, 4, 6, 7, 137, 144, 147, 287], "e": [1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 15, 17, 20, 22, 23, 25, 26, 28, 29, 34, 36, 40, 41, 43, 44, 46, 47, 48, 50, 51, 53, 54, 55, 58, 59, 60, 62, 63, 66, 71, 73, 75, 78, 80, 81, 83, 84, 85, 86, 89, 90, 92, 94, 96, 97, 100, 103, 104, 107, 108, 109, 110, 111, 113, 128, 129, 130, 133, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 160, 161, 163, 164, 166, 168, 170, 172, 173, 175, 176, 177, 179, 184, 185, 186, 187, 189, 190, 191, 197, 198, 199, 201, 204, 205, 206, 207, 208, 212, 213, 214, 215, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 247, 249, 250, 251, 252, 254, 256, 257, 258, 261, 262, 263, 264, 265, 269, 270, 273, 276, 277, 278, 282, 284, 286, 287], "intend": [1, 3, 4, 6, 7, 63, 71, 74, 83, 84, 149, 162, 163, 168, 172, 189, 191, 205, 208, 230, 233], "sinc": [1, 2, 4, 5, 6, 7, 46, 50, 54, 55, 63, 73, 75, 80, 89, 109, 110, 130, 140, 142, 147, 149, 185, 187, 204, 231, 232, 233, 259], "first": [1, 2, 3, 4, 5, 6, 7, 11, 13, 17, 26, 29, 34, 37, 40, 45, 47, 50, 52, 55, 62, 63, 69, 71, 74, 76, 77, 78, 79, 80, 86, 90, 96, 100, 104, 130, 132, 136, 137, 139, 140, 143, 144, 146, 147, 148, 149, 150, 155, 160, 161, 163, 166, 168, 176, 177, 181, 184, 185, 186, 187, 189, 191, 197, 199, 204, 206, 217, 222, 230, 231, 232, 233, 247, 248, 249, 252, 254, 263, 264, 265, 268, 269, 270, 274, 285, 287], "version": [1, 3, 4, 5, 6, 7, 9, 29, 43, 71, 104, 129, 140, 147, 149, 156, 158, 160, 164, 167, 173, 184, 188, 189, 190, 191, 210, 212, 214, 216, 217, 223, 225, 230, 231, 232, 233, 241, 248, 254, 255, 287], "pymatgen": [1, 7, 286], "3111": [1, 4, 6, 7], "xjf729": [1, 4, 6, 7], "fix": [1, 2, 3, 4, 6, 7, 15, 25, 45, 62, 71, 79, 131, 147, 156, 175, 177, 185, 206, 221, 223, 230, 231, 238, 263, 272, 286], "moleculegraph": [1, 4, 6, 7, 8, 9, 14, 47, 60, 63, 71, 184, 222], "draw_graph": [1, 4, 6, 7], "3030": [1, 4, 6, 7], "lbluqu": [1, 4, 6, 7], "remov": [1, 2, 4, 5, 6, 7, 11, 12, 15, 43, 50, 54, 55, 59, 62, 63, 73, 80, 90, 94, 96, 107, 137, 141, 147, 148, 150, 156, 161, 163, 166, 168, 176, 177, 179, 181, 184, 185, 189, 190, 206, 224, 230, 232, 233, 236, 250, 251, 263, 264, 265, 277, 284, 287], "superflu": [1, 4, 6, 7], "structur": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20, 21, 22, 23, 25, 26, 28, 29, 30, 34, 35, 41, 43, 44, 45, 46, 47, 48, 50, 51, 53, 55, 58, 59, 60, 62, 63, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 82, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 103, 107, 108, 110, 113, 114, 119, 120, 126, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 142, 143, 144, 145, 148, 149, 150, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 168, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 225, 226, 228, 230, 232, 233, 235, 236, 238, 240, 241, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 270, 277, 278, 279, 281, 283, 284, 285], "argument": [1, 3, 4, 6, 7, 15, 40, 43, 50, 54, 62, 63, 71, 73, 80, 81, 108, 110, 133, 137, 138, 144, 146, 147, 148, 149, 160, 161, 168, 176, 179, 187, 189, 190, 191, 192, 197, 201, 205, 206, 215, 217, 219, 223, 226, 232, 233, 250, 251, 254, 255, 257, 263, 274, 276, 287], "docstr": [1, 3, 4, 6, 7, 217, 226, 232], "sqstransform": [1, 4, 6, 7, 8, 9, 262, 263], "init": [1, 4, 6, 7, 62, 71, 75, 132, 137, 148, 168, 216, 229, 232, 233], "3031": [1, 4, 6, 7], "kavanas": [1, 4, 6, 7], "quick": [1, 4, 6, 7, 121, 137, 184, 189, 191, 232, 287], "allow": [1, 2, 3, 4, 5, 6, 7, 12, 13, 15, 25, 26, 29, 30, 37, 40, 44, 45, 46, 50, 58, 62, 66, 70, 71, 76, 79, 80, 83, 86, 90, 100, 107, 108, 109, 110, 136, 137, 138, 145, 147, 148, 150, 151, 156, 158, 161, 163, 166, 168, 186, 189, 191, 201, 204, 206, 211, 212, 215, 221, 223, 228, 230, 231, 232, 233, 263, 264, 265, 266, 269, 270, 285, 287], "direct": [1, 4, 6, 7, 45, 47, 50, 58, 62, 63, 73, 88, 90, 96, 100, 101, 140, 147, 148, 149, 155, 159, 161, 163, 175, 177, 181, 186, 199, 209, 215, 230, 231, 232, 233, 247, 250, 254, 255, 257, 265, 272, 284], "initialis": [1, 4, 6, 7], "dictset": [1, 4, 6, 7, 9, 173, 228, 233], "class": [1, 2, 3, 4, 6, 7, 11, 12, 13, 15, 16, 17, 20, 21, 22, 23, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 243, 244, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 261, 263, 264, 265, 266, 269, 271, 273, 277, 278, 279, 282, 284, 287], "3015": [1, 4, 6, 7], "optim": [1, 4, 5, 6, 7, 8, 9, 14, 16, 26, 28, 29, 41, 59, 60, 69, 76, 79, 80, 85, 132, 147, 149, 150, 171, 175, 177, 181, 184, 186, 189, 190, 191, 201, 215, 221, 223, 224, 232, 264, 285], "cython": [1, 4, 6, 7, 147, 244], "find_points_in_spher": [1, 4, 6, 7, 8, 9, 242, 245], "get": [1, 3, 5, 7, 9, 15, 17, 20, 21, 22, 23, 25, 26, 29, 30, 34, 36, 37, 41, 45, 47, 50, 51, 58, 62, 66, 68, 70, 71, 74, 75, 76, 80, 83, 84, 85, 88, 90, 92, 96, 101, 103, 108, 110, 119, 121, 128, 129, 132, 136, 137, 138, 140, 144, 145, 147, 148, 149, 150, 156, 158, 159, 160, 161, 163, 172, 173, 177, 185, 186, 188, 189, 190, 191, 192, 198, 201, 210, 212, 213, 214, 217, 224, 225, 226, 229, 230, 231, 232, 233, 245, 248, 249, 251, 254, 260, 263, 264, 265, 269, 272, 277, 278, 279, 282, 287], "5x": [1, 4, 6, 7], "faster": [1, 4, 5, 6, 7, 37, 47, 70, 71, 76, 80, 96, 113, 147, 189, 191, 263, 264], "runtim": [1, 4, 6, 7], "3062": 1, "arosen93": 1, "asefix": 1, "close": [1, 4, 6, 9, 11, 29, 30, 43, 54, 62, 63, 71, 99, 100, 147, 148, 161, 171, 173, 174, 176, 178, 179, 197, 217, 250, 251, 263, 264], "3061": 1, "jageo": [1, 252], "master": [1, 3, 120, 121, 123, 126, 160, 226, 271], "which": [1, 2, 3, 4, 5, 6, 12, 13, 15, 17, 20, 23, 25, 26, 28, 29, 30, 34, 36, 37, 40, 45, 46, 50, 52, 53, 55, 58, 59, 62, 63, 66, 70, 71, 73, 75, 76, 79, 80, 82, 83, 85, 89, 90, 96, 97, 100, 103, 108, 113, 114, 121, 126, 128, 129, 130, 133, 137, 140, 143, 144, 145, 147, 148, 149, 150, 151, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 179, 184, 185, 186, 187, 189, 190, 191, 192, 197, 199, 200, 201, 204, 206, 210, 212, 213, 214, 215, 216, 217, 219, 221, 223, 224, 230, 232, 233, 236, 247, 248, 249, 250, 251, 252, 254, 255, 257, 258, 263, 264, 265, 266, 268, 269, 270, 271, 273, 276, 278, 282, 284, 285, 287], "wa": [1, 2, 3, 16, 29, 71, 76, 80, 97, 128, 148, 155, 158, 172, 181, 189, 190, 197, 201, 214, 223, 225, 232, 233, 247, 250, 252, 264, 265, 266, 269, 277, 287], "possibl": [1, 2, 3, 4, 5, 6, 12, 15, 28, 29, 30, 37, 40, 55, 59, 62, 63, 66, 70, 71, 73, 76, 80, 84, 90, 94, 95, 96, 108, 109, 110, 133, 136, 137, 138, 139, 144, 147, 148, 149, 155, 160, 161, 163, 164, 177, 179, 181, 187, 189, 190, 191, 197, 209, 212, 213, 222, 223, 232, 233, 247, 249, 254, 256, 257, 263, 264, 265, 272, 287], "befor": [1, 2, 3, 5, 26, 47, 63, 79, 80, 130, 147, 148, 156, 163, 166, 172, 178, 189, 190, 191, 192, 201, 224, 231, 232, 233, 254, 255, 264, 265, 287], "broke": 1, "github": [1, 2, 3, 4, 6, 71, 76, 80, 88, 101, 104, 130, 131, 144, 205, 206, 208, 217, 247, 250, 252, 271, 286], "com": [1, 3, 5, 15, 71, 76, 80, 88, 99, 104, 130, 131, 144, 147, 160, 178, 205, 206, 208, 218, 250, 252, 263, 271, 277, 286], "materialsproject": [1, 3, 5, 71, 80, 144, 163, 168, 171, 172, 197, 287], "2972": 1, "due": [1, 8, 9, 47, 50, 58, 62, 76, 80, 83, 90, 100, 148, 149, 155, 184, 204, 223, 224, 225, 232, 233, 259, 264, 267], "check": [1, 2, 3, 4, 5, 6, 8, 9, 11, 15, 22, 26, 29, 34, 45, 51, 55, 58, 62, 63, 70, 71, 75, 76, 77, 80, 83, 90, 94, 99, 109, 113, 132, 136, 137, 138, 139, 143, 144, 145, 147, 148, 149, 151, 155, 156, 159, 160, 161, 163, 173, 175, 181, 187, 188, 189, 190, 191, 197, 199, 201, 205, 206, 208, 212, 214, 221, 224, 230, 231, 232, 233, 236, 252, 254, 256, 257, 263, 269, 279], "queri": [1, 8, 9, 108, 125, 169, 170, 171, 172], "self": [1, 15, 16, 25, 37, 55, 59, 63, 66, 68, 79, 94, 109, 110, 140, 143, 148, 149, 155, 156, 161, 175, 176, 177, 178, 179, 181, 186, 187, 189, 190, 191, 195, 219, 224, 230, 232, 233, 252, 263, 273, 287], "config": [1, 3, 4, 5, 6, 9, 122, 144, 163, 173, 196, 199, 228, 230, 233], "defin": [1, 11, 15, 21, 22, 25, 26, 34, 41, 47, 50, 51, 56, 58, 59, 60, 63, 68, 69, 70, 71, 73, 75, 76, 78, 79, 80, 82, 84, 86, 90, 96, 101, 103, 108, 109, 110, 111, 113, 114, 115, 129, 130, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 159, 160, 161, 162, 163, 167, 175, 177, 179, 181, 186, 187, 189, 190, 191, 197, 198, 199, 201, 204, 206, 209, 216, 221, 223, 224, 227, 230, 231, 232, 233, 241, 247, 248, 249, 250, 251, 254, 256, 257, 259, 261, 262, 263, 264, 265, 266, 269, 270, 280, 282, 287], "being": [1, 2, 4, 6, 29, 34, 37, 55, 58, 59, 63, 74, 80, 108, 128, 129, 148, 149, 161, 163, 165, 172, 176, 189, 197, 199, 232, 241, 256, 257, 274, 287], "subclass": [1, 22, 50, 51, 52, 54, 62, 78, 81, 82, 104, 108, 110, 131, 138, 144, 146, 147, 148, 149, 151, 155, 163, 179, 204, 205, 232, 257, 282], "directli": [1, 3, 47, 62, 71, 80, 89, 109, 138, 141, 147, 148, 149, 150, 151, 156, 162, 168, 172, 186, 204, 225, 230, 232, 233, 245, 250, 254, 263, 287], "neighbor": [1, 8, 9, 11, 14, 17, 18, 23, 24, 25, 26, 28, 29, 30, 33, 34, 37, 39, 63, 71, 74, 80, 89, 135, 140, 147, 213, 242, 263, 264, 265, 272, 284], "break": [1, 4, 6, 16, 59, 63, 147, 148, 200, 204, 247, 263, 265], "default": [1, 4, 5, 6, 11, 12, 13, 15, 16, 17, 20, 25, 26, 28, 32, 37, 40, 41, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 58, 59, 60, 62, 63, 66, 68, 69, 71, 73, 74, 75, 79, 80, 83, 85, 86, 89, 90, 93, 94, 95, 96, 97, 100, 101, 107, 108, 109, 110, 111, 113, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 189, 190, 191, 192, 195, 197, 198, 199, 200, 201, 204, 206, 210, 213, 214, 215, 216, 217, 219, 221, 223, 224, 225, 226, 230, 232, 233, 235, 236, 238, 239, 241, 247, 249, 250, 251, 254, 255, 256, 257, 259, 263, 264, 265, 266, 269, 272, 273, 274, 276, 278, 279, 282, 283, 284, 287], "user_potcar_set": [1, 233], "w": [1, 8, 9, 43, 47, 48, 54, 55, 62, 66, 77, 85, 95, 96, 101, 130, 131, 134, 135, 140, 144, 147, 148, 152, 156, 161, 164, 172, 175, 176, 179, 222, 232, 233, 249, 250, 251, 252, 254, 257, 263, 285, 287], "w_sv": [1, 233], "all": [1, 2, 3, 4, 5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 25, 26, 28, 29, 30, 31, 34, 35, 36, 37, 38, 43, 44, 45, 46, 47, 50, 54, 55, 58, 59, 60, 62, 63, 66, 69, 70, 71, 73, 76, 79, 80, 83, 86, 88, 90, 94, 95, 96, 100, 101, 103, 104, 106, 107, 108, 109, 110, 111, 113, 121, 122, 130, 133, 136, 137, 139, 140, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 176, 177, 178, 179, 181, 184, 185, 187, 189, 190, 191, 199, 200, 201, 204, 205, 206, 208, 212, 213, 214, 215, 217, 219, 221, 222, 223, 224, 225, 229, 230, 232, 233, 239, 240, 245, 247, 248, 250, 251, 254, 255, 256, 257, 258, 260, 261, 263, 264, 265, 268, 269, 270, 272, 277, 279, 282, 284, 287], "input": [1, 3, 4, 5, 6, 8, 9, 11, 12, 13, 15, 21, 26, 43, 44, 45, 46, 47, 50, 54, 55, 58, 60, 62, 63, 70, 71, 73, 74, 75, 76, 78, 80, 83, 84, 88, 89, 90, 93, 94, 95, 96, 101, 110, 113, 130, 132, 133, 134, 137, 138, 140, 142, 144, 147, 148, 149, 150, 155, 156, 158, 161, 162, 163, 164, 166, 167, 168, 171, 173, 174, 175, 179, 180, 181, 183, 184, 185, 187, 188, 190, 191, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 205, 207, 208, 209, 210, 211, 213, 215, 216, 218, 219, 220, 222, 223, 224, 226, 227, 228, 231, 232, 233, 234, 236, 237, 240, 241, 254, 255, 257, 261, 263, 264, 265, 266, 268, 269, 272, 274, 278, 279], "user_potcar_funct": [1, 9, 173, 228, 233], "pbe_54": [1, 230, 233], "3022": 1, "unignor": 1, "ruff": 1, "pd011": 1, "3020": 1, "tweak": [1, 263], "variabl": [1, 2, 3, 5, 8, 9, 46, 50, 71, 80, 96, 97, 129, 139, 140, 145, 156, 161, 173, 174, 175, 177, 178, 187, 189, 191, 192, 200, 205, 206, 208, 216, 221, 223, 227, 230, 232, 233, 264, 265, 278], "name": [1, 2, 3, 4, 5, 6, 8, 9, 13, 14, 25, 26, 29, 36, 41, 45, 58, 63, 71, 80, 83, 84, 96, 97, 121, 124, 128, 130, 132, 135, 144, 145, 147, 148, 150, 152, 155, 158, 161, 163, 164, 165, 166, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 197, 198, 200, 201, 204, 205, 206, 209, 210, 213, 214, 216, 223, 224, 225, 226, 227, 230, 232, 233, 234, 236, 238, 240, 247, 251, 252, 256, 263, 267, 268, 272, 277, 279, 286, 287], "3019": 1, "materialsprojectcompat": [1, 8, 9, 162, 163, 287], "issu": [1, 2, 3, 4, 6, 50, 80, 144, 147, 158, 161, 185, 189, 190, 191, 207, 232, 233, 257, 263, 269], "silenc": [1, 9, 163, 173, 188, 189], "warn": [1, 3, 8, 9, 29, 50, 63, 66, 80, 128, 130, 132, 140, 147, 148, 156, 160, 163, 164, 184, 185, 190, 191, 214, 230, 232, 233, 255, 257, 267, 279, 284], "3017": 1, "find_points_in": 1, "_sphere": 1, "cp2k": [1, 8, 9, 122, 173, 287], "2672": [1, 279], "ad": [1, 2, 4, 5, 6, 12, 15, 23, 25, 29, 51, 60, 63, 71, 95, 100, 108, 129, 137, 147, 148, 161, 177, 184, 186, 189, 191, 201, 204, 206, 217, 223, 231, 232, 233, 251, 256, 263, 264, 278, 283, 284, 287], "method": [1, 3, 4, 6, 11, 13, 15, 17, 20, 23, 25, 26, 28, 29, 30, 33, 34, 40, 45, 47, 48, 50, 51, 52, 55, 58, 60, 62, 63, 66, 71, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 89, 90, 92, 93, 94, 95, 96, 97, 103, 107, 109, 110, 113, 114, 123, 128, 129, 130, 137, 138, 139, 140, 144, 147, 148, 149, 150, 151, 152, 155, 156, 158, 159, 161, 163, 164, 166, 168, 172, 175, 176, 177, 179, 181, 184, 186, 187, 189, 190, 191, 197, 200, 201, 206, 207, 213, 215, 216, 217, 219, 221, 223, 225, 226, 227, 230, 231, 232, 233, 238, 241, 252, 254, 255, 257, 258, 260, 264, 265, 266, 269, 276, 277, 278, 279, 283], "compar": [1, 4, 5, 6, 11, 22, 30, 34, 45, 58, 62, 63, 73, 77, 90, 100, 103, 108, 109, 113, 126, 138, 145, 147, 148, 156, 163, 166, 189, 191, 197, 199, 212, 217, 222, 230, 233, 248, 252, 254, 256, 257, 263, 279, 283, 287], "do": [1, 3, 4, 5, 6, 8, 9, 11, 12, 13, 25, 26, 29, 34, 43, 54, 55, 58, 60, 62, 63, 71, 73, 74, 76, 77, 80, 83, 90, 94, 104, 114, 117, 123, 127, 130, 146, 147, 148, 149, 154, 156, 159, 161, 163, 173, 175, 177, 184, 186, 188, 189, 190, 191, 192, 198, 204, 205, 212, 214, 216, 217, 230, 231, 232, 233, 246, 249, 251, 258, 263, 264, 265, 271, 282], "fingerprint": [1, 71, 160], "2772": 1, "overhaul": [1, 2], "pymatgentest": [1, 8, 9, 267, 279], "3014": 1, "valueerror": [1, 17, 28, 29, 34, 71, 76, 80, 136, 137, 139, 143, 144, 147, 149, 160, 161, 163, 165, 179, 181, 192, 216, 225, 254, 259, 261, 263, 279], "selective_dynam": [1, 9, 15, 147, 173, 228, 230, 263], "ha": [1, 2, 3, 4, 5, 6, 12, 23, 28, 29, 30, 36, 50, 54, 55, 58, 59, 62, 71, 73, 76, 80, 82, 83, 86, 96, 104, 108, 113, 128, 129, 130, 140, 143, 144, 147, 148, 149, 151, 152, 156, 159, 161, 168, 175, 177, 179, 181, 187, 189, 190, 191, 192, 197, 201, 204, 206, 213, 214, 215, 216, 218, 222, 230, 231, 232, 233, 234, 244, 247, 251, 254, 258, 263, 265, 278, 286, 287], "type": [1, 3, 4, 5, 6, 8, 9, 12, 13, 14, 15, 20, 25, 26, 28, 29, 30, 34, 40, 41, 43, 45, 47, 48, 50, 54, 55, 60, 62, 63, 66, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 83, 85, 88, 89, 90, 92, 95, 96, 97, 101, 103, 108, 109, 113, 121, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 144, 145, 146, 147, 148, 149, 151, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 168, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 213, 214, 215, 219, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 236, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 261, 263, 264, 265, 267, 269, 272, 276, 278, 284, 287], "np": [1, 8, 9, 40, 45, 47, 54, 58, 62, 70, 77, 80, 82, 88, 90, 135, 140, 143, 144, 145, 147, 148, 149, 150, 155, 158, 159, 160, 161, 164, 175, 186, 214, 231, 232, 233, 234, 245, 247, 252, 254, 256, 259, 264, 265, 270, 276], "arrai": [1, 15, 34, 40, 41, 45, 47, 50, 51, 52, 54, 55, 58, 62, 63, 69, 70, 71, 73, 76, 78, 80, 81, 82, 83, 88, 89, 90, 96, 107, 138, 140, 143, 145, 146, 147, 148, 149, 151, 155, 156, 158, 159, 160, 161, 175, 178, 186, 189, 195, 201, 204, 210, 214, 217, 224, 226, 230, 231, 232, 247, 249, 250, 252, 254, 255, 256, 257, 264, 265, 269, 270, 274, 276, 279, 284, 287], "3012": 1, "clean": [1, 3, 74, 96, 163, 168, 273], "3010": [1, 279], "pytest": [1, 3, 5], "split": [1, 4, 6, 63, 155, 161, 181, 232], "durat": 1, "3005": 1, "lookup": [1, 165], "mprester": [1, 2, 4, 6, 8, 9, 169, 171, 287], "api": [1, 3, 4, 6, 11, 12, 71, 113, 137, 141, 149, 164, 171, 172, 233, 268, 285], "kei": [1, 3, 8, 9, 12, 13, 16, 30, 47, 50, 54, 62, 63, 71, 74, 75, 84, 89, 92, 93, 96, 101, 122, 128, 130, 137, 138, 142, 147, 148, 149, 152, 155, 156, 158, 160, 161, 163, 165, 168, 171, 172, 173, 176, 177, 178, 179, 181, 185, 187, 189, 190, 191, 197, 199, 200, 201, 204, 206, 211, 215, 216, 217, 219, 221, 223, 224, 226, 227, 228, 230, 232, 233, 251, 252, 254, 255, 257, 264, 265, 266, 272, 276, 277, 282, 287], "arg": [1, 11, 12, 26, 50, 53, 54, 62, 80, 83, 93, 101, 104, 114, 120, 121, 122, 123, 124, 125, 126, 128, 132, 137, 146, 148, 149, 161, 163, 170, 171, 175, 176, 177, 184, 187, 189, 197, 206, 214, 221, 230, 233, 251, 255, 256, 257, 258, 263, 264, 265, 266, 271, 276, 282], "3004": 1, "compress": [1, 114, 252, 272], "json": [1, 25, 26, 29, 55, 63, 71, 74, 93, 100, 130, 134, 140, 141, 142, 144, 145, 147, 148, 152, 155, 158, 160, 161, 165, 172, 175, 177, 181, 186, 201, 232, 247, 248, 250, 251, 264, 277, 279, 287], "gz": [1, 4, 5, 6, 114, 128, 130, 165], "bz2": [1, 114], "xz": [1, 88, 252], "lzma": 1, "3003": 1, "add": [1, 4, 5, 6, 8, 9, 12, 13, 15, 17, 23, 25, 26, 28, 29, 34, 43, 45, 50, 51, 54, 55, 59, 62, 63, 71, 75, 80, 96, 111, 122, 130, 137, 146, 147, 148, 161, 162, 163, 164, 166, 173, 176, 177, 179, 181, 184, 188, 189, 204, 206, 213, 216, 217, 221, 223, 230, 233, 241, 250, 251, 255, 263, 264, 267, 271, 276, 282, 284, 287], "lightstructureenviron": [1, 14, 18, 21, 23, 24, 29, 213], "from_structure_environ": [1, 14, 18, 24, 29], "fallback": [1, 28], "valu": [1, 3, 8, 9, 11, 12, 13, 15, 25, 26, 28, 29, 30, 34, 36, 43, 44, 45, 46, 47, 50, 51, 53, 55, 56, 58, 62, 63, 71, 73, 74, 75, 76, 78, 80, 82, 83, 85, 89, 90, 93, 94, 95, 96, 97, 99, 101, 104, 128, 129, 130, 134, 135, 136, 137, 138, 139, 141, 144, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 168, 171, 175, 176, 177, 178, 179, 180, 185, 186, 187, 189, 190, 191, 192, 195, 197, 199, 201, 204, 205, 206, 210, 213, 214, 216, 217, 219, 221, 223, 224, 225, 226, 227, 230, 231, 232, 233, 241, 245, 247, 248, 249, 251, 252, 254, 255, 257, 263, 268, 269, 272, 274, 276, 282], "ce_and_neighbor": 1, "3002": 1, "pars": [1, 4, 6, 9, 60, 100, 113, 134, 144, 147, 151, 156, 158, 173, 174, 176, 179, 181, 183, 185, 188, 190, 192, 194, 197, 198, 200, 204, 206, 207, 210, 215, 221, 222, 224, 225, 230, 231, 232, 233, 235, 239, 259, 264, 265, 266, 277, 287], "oxi": 1, "state": [1, 3, 4, 6, 11, 17, 50, 54, 55, 58, 66, 69, 71, 74, 75, 85, 90, 92, 94, 95, 100, 107, 108, 109, 110, 117, 128, 129, 132, 134, 137, 139, 140, 144, 147, 148, 158, 160, 161, 163, 166, 168, 177, 179, 185, 189, 191, 214, 215, 217, 221, 223, 232, 248, 263, 264, 265, 278, 285, 286, 287], "symbol": [1, 4, 6, 8, 9, 14, 22, 23, 26, 28, 29, 34, 44, 45, 46, 47, 49, 50, 51, 52, 58, 62, 71, 77, 89, 96, 107, 109, 130, 135, 137, 138, 139, 144, 145, 147, 148, 149, 150, 162, 163, 164, 167, 173, 174, 178, 179, 185, 191, 197, 198, 199, 204, 210, 212, 213, 228, 230, 232, 233, 235, 251, 253, 254, 255, 256, 258, 263, 276, 278, 284], "str": [1, 12, 13, 15, 16, 20, 22, 25, 26, 29, 36, 40, 41, 43, 45, 46, 47, 50, 54, 55, 60, 62, 63, 66, 68, 71, 73, 74, 75, 80, 83, 85, 86, 89, 90, 95, 96, 97, 100, 103, 108, 109, 110, 114, 121, 122, 124, 128, 129, 132, 133, 134, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 150, 151, 156, 158, 160, 161, 162, 163, 164, 165, 166, 168, 170, 172, 175, 179, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 236, 238, 239, 240, 251, 252, 254, 255, 256, 258, 259, 261, 263, 268, 276, 277, 278, 279, 282, 284], "2998": 1, "re": [1, 8, 9, 59, 76, 77, 135, 144, 147, 148, 173, 181, 233, 247, 249, 250, 284], "export": [1, 5, 166, 204, 240, 277], "sitecollect": [1, 8, 9, 58, 135, 147, 182, 204], "core": [1, 2, 3, 4, 5, 6, 8, 9, 12, 13, 14, 40, 41, 42, 58, 60, 62, 63, 71, 79, 80, 86, 130, 132, 133, 154, 155, 160, 170, 172, 173, 175, 178, 179, 182, 186, 188, 189, 191, 202, 204, 216, 222, 225, 232, 233, 236, 241, 254, 261, 263, 277, 279, 287], "2995": 1, "orbit": [1, 2, 8, 9, 75, 99, 104, 117, 142, 144, 147, 154, 155, 156, 158, 159, 160, 161, 173, 179, 189, 190, 191, 200, 201, 212, 214, 215, 221, 222, 223, 228, 230, 232, 233, 248, 282], "resolv": [1, 2, 3, 4, 6, 100, 158], "icohplist": [1, 9, 158, 173, 211, 213, 214], "2993": 1, "hide": [1, 63], "hint": [1, 9, 18, 24, 25, 26, 28, 29, 73, 173, 174, 179, 280], "import": [1, 2, 3, 4, 5, 6, 28, 55, 59, 60, 63, 71, 140, 144, 147, 156, 166, 176, 179, 190, 191, 211, 222, 228, 230, 233, 240, 263, 271, 277, 279, 287], "behind": [1, 199, 233], "type_check": 1, "2992": 1, "ase": [1, 5, 8, 9, 173], "2991": [1, 279], "enabl": [1, 2, 4, 6, 13, 15, 32, 140, 161, 171, 232, 233, 263], "doc": [1, 4, 6, 156, 171, 175, 178, 184, 204, 219, 235, 276, 287], "rule": [1, 2, 45, 82, 144, 184, 233, 247], "ci": [1, 215, 221, 223, 232], "2990": 1, "suspect": 1, "typo": [1, 230], "vasp": [1, 2, 4, 5, 6, 8, 9, 12, 13, 50, 58, 71, 79, 96, 113, 120, 128, 130, 156, 159, 160, 161, 163, 164, 168, 173, 186, 189, 190, 191, 212, 214, 287], "optic": [1, 8, 9, 14, 87, 88, 173, 228, 232, 233], "2989": 1, "string": [1, 4, 5, 6, 8, 9, 11, 12, 13, 26, 41, 46, 47, 58, 62, 63, 66, 71, 76, 78, 79, 80, 83, 86, 90, 97, 107, 109, 113, 130, 132, 137, 138, 139, 141, 143, 144, 145, 147, 148, 150, 151, 152, 156, 158, 160, 161, 162, 163, 164, 167, 168, 170, 173, 175, 176, 177, 179, 180, 181, 184, 185, 186, 187, 189, 192, 193, 195, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 210, 214, 215, 216, 219, 221, 222, 223, 224, 225, 227, 230, 232, 233, 235, 236, 238, 240, 241, 250, 256, 257, 258, 259, 263, 264, 265, 267, 272, 273, 276, 277, 279, 287], "2987": 1, "averag": [1, 15, 25, 50, 55, 58, 71, 74, 76, 89, 90, 96, 108, 128, 134, 137, 139, 144, 147, 149, 155, 156, 158, 161, 186, 190, 198, 199, 232, 249, 254, 263, 268, 276], "error": [1, 2, 3, 4, 5, 6, 8, 9, 33, 34, 45, 50, 54, 62, 71, 76, 80, 81, 83, 108, 131, 132, 135, 137, 148, 149, 151, 156, 160, 161, 165, 168, 170, 173, 174, 176, 177, 178, 179, 181, 185, 189, 191, 201, 215, 219, 221, 226, 230, 232, 241, 263, 265, 268, 274, 276, 286], "2986": [1, 279], "drop": [1, 2, 4, 6, 110], "substrateanalyz": [1, 5, 9, 14, 67, 69], "zslgener": [1, 9, 14, 67, 68, 69, 70], "reexport": 1, "2981": 1, "unwant": 1, "x": [1, 2, 4, 6, 8, 9, 13, 28, 34, 36, 43, 44, 45, 56, 63, 66, 77, 80, 96, 102, 103, 104, 111, 131, 133, 134, 135, 137, 139, 140, 143, 144, 145, 146, 147, 149, 152, 155, 156, 159, 160, 161, 164, 186, 191, 197, 200, 204, 213, 230, 231, 232, 240, 241, 243, 244, 248, 250, 251, 252, 263, 264, 268, 269, 276, 278, 282], "margin": 1, "get_elt_projected_plots_color": [1, 8, 9, 154, 161], "562": 1, "2756": 1, "explain": [1, 8, 9, 130, 156, 161, 162, 163, 164], "need": [1, 2, 3, 4, 5, 6, 15, 20, 25, 26, 29, 30, 43, 44, 46, 55, 60, 62, 63, 71, 94, 96, 108, 132, 137, 139, 140, 144, 147, 148, 150, 155, 156, 159, 160, 161, 164, 171, 172, 176, 184, 185, 189, 191, 199, 200, 201, 206, 212, 213, 215, 216, 217, 219, 221, 231, 232, 233, 247, 249, 251, 254, 259, 263, 265, 272, 278, 287], "elementbas": [1, 8, 9, 135, 144], "2999": [1, 144, 279], "3e3c31c": 1, "isort": 1, "trail": [1, 279], "comma": [1, 181, 223, 277], "fals": [1, 11, 12, 13, 15, 16, 20, 22, 25, 26, 28, 29, 34, 37, 38, 39, 43, 44, 46, 47, 50, 51, 54, 55, 58, 59, 60, 62, 63, 66, 69, 70, 71, 73, 74, 75, 76, 79, 80, 85, 88, 89, 90, 92, 93, 94, 95, 96, 100, 101, 108, 109, 110, 111, 113, 128, 129, 130, 132, 134, 137, 138, 139, 140, 142, 143, 144, 145, 147, 148, 149, 150, 155, 156, 158, 160, 161, 163, 165, 166, 172, 175, 176, 177, 179, 181, 184, 185, 187, 189, 190, 191, 195, 197, 201, 204, 205, 206, 208, 209, 210, 212, 213, 214, 217, 219, 223, 224, 230, 232, 233, 247, 249, 250, 251, 254, 255, 257, 263, 264, 265, 266, 268, 269, 271, 274, 276, 279, 282, 283, 284], "c0ec534": 1, "mem": [1, 201], "leak": 1, "pbc_shortest_vector": [1, 8, 9, 267, 269, 270], "stichri": 1, "languag": [1, 4, 5, 6, 41, 170, 277], "level": [1, 2, 3, 4, 6, 28, 55, 59, 140, 141, 144, 145, 147, 155, 156, 158, 160, 161, 175, 189, 190, 191, 198, 204, 215, 232, 277, 287], "ytterbium": 1, "yb": [1, 8, 9, 77, 135, 144, 233], "pseudo": [1, 8, 9, 50, 144, 173, 174, 175, 177, 189, 219, 232], "psp": [1, 179, 230, 233], "yb_3": [1, 233], "background": [1, 198, 276], "reveal": 1, "result": [1, 5, 8, 9, 14, 16, 17, 20, 34, 36, 50, 54, 55, 59, 62, 63, 73, 74, 76, 80, 96, 100, 109, 110, 121, 128, 129, 130, 134, 137, 139, 140, 147, 148, 149, 155, 156, 160, 161, 168, 176, 180, 190, 191, 192, 199, 219, 224, 230, 232, 233, 248, 249, 250, 252, 263, 265, 272, 273, 274, 278, 287], "energi": [1, 4, 5, 6, 8, 9, 14, 15, 16, 40, 50, 53, 54, 55, 56, 58, 66, 69, 73, 74, 80, 83, 85, 86, 88, 96, 100, 101, 103, 104, 108, 110, 121, 132, 134, 135, 137, 142, 144, 148, 150, 151, 155, 156, 158, 160, 161, 162, 163, 164, 165, 166, 168, 173, 175, 177, 179, 181, 184, 189, 190, 191, 196, 198, 199, 200, 201, 205, 206, 210, 211, 212, 214, 215, 217, 219, 222, 223, 224, 225, 230, 231, 232, 233, 248, 250, 251, 263, 264, 265, 266, 276, 282, 285, 286], "compound": [1, 41, 47, 54, 64, 74, 80, 83, 93, 94, 95, 96, 97, 108, 109, 110, 151, 158, 161, 163, 165, 226, 233, 276, 287], "off": [1, 17, 29, 63, 71, 96, 101, 161, 179, 189, 215, 225, 232, 233, 265], "lot": [1, 63, 147, 148, 190, 241, 287], "supposedli": 1, "stabl": [1, 4, 6, 40, 80, 83, 94, 96, 108, 110, 140, 168, 241], "thing": [1, 80, 114, 129, 130, 146, 147, 148, 149, 189, 233, 279], "unsynthesiz": 1, "while": [1, 2, 3, 5, 11, 25, 29, 34, 58, 62, 68, 71, 76, 77, 96, 107, 128, 147, 148, 161, 163, 190, 191, 204, 207, 224, 225, 230, 232, 265, 287], "an": [1, 2, 3, 4, 5, 6, 11, 12, 13, 15, 16, 17, 21, 22, 25, 26, 28, 29, 30, 34, 40, 41, 46, 47, 50, 51, 53, 54, 55, 56, 58, 59, 60, 62, 63, 66, 70, 71, 73, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 94, 95, 96, 97, 100, 104, 105, 107, 108, 109, 110, 111, 113, 114, 117, 128, 129, 130, 131, 132, 134, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 177, 178, 179, 180, 181, 184, 185, 186, 187, 189, 191, 192, 195, 197, 199, 200, 201, 204, 206, 208, 210, 214, 215, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 236, 238, 240, 241, 243, 244, 248, 250, 251, 252, 254, 255, 256, 258, 259, 261, 263, 264, 265, 266, 268, 269, 273, 274, 276, 277, 278, 279, 282, 284, 285, 286, 287], "unfortun": 1, "mistak": [1, 206], "": [1, 2, 3, 4, 5, 6, 8, 9, 13, 23, 28, 29, 30, 40, 45, 46, 50, 52, 58, 59, 60, 62, 63, 66, 71, 76, 77, 78, 80, 82, 83, 84, 85, 90, 95, 96, 97, 100, 101, 107, 108, 109, 110, 113, 114, 128, 129, 131, 132, 135, 137, 138, 139, 140, 142, 143, 144, 147, 148, 149, 150, 151, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 170, 172, 175, 177, 179, 181, 183, 184, 185, 189, 190, 198, 206, 207, 214, 219, 221, 222, 223, 224, 227, 230, 231, 232, 233, 247, 249, 254, 256, 257, 258, 263, 264, 272, 276, 278, 279, 284, 285, 287], "also": [1, 2, 3, 4, 5, 6, 13, 16, 26, 34, 40, 51, 59, 62, 63, 66, 71, 76, 79, 80, 82, 85, 89, 90, 101, 108, 109, 110, 113, 114, 130, 132, 137, 139, 140, 141, 143, 145, 147, 148, 149, 151, 156, 158, 159, 160, 163, 176, 177, 179, 185, 189, 190, 191, 192, 197, 204, 206, 212, 221, 223, 224, 225, 230, 231, 232, 233, 248, 249, 255, 257, 263, 264, 265, 269, 272, 286, 287], "great": [1, 101], "see": [1, 2, 3, 4, 5, 6, 16, 28, 36, 40, 44, 47, 50, 58, 62, 63, 71, 76, 80, 83, 85, 89, 94, 96, 101, 113, 114, 130, 137, 139, 140, 141, 143, 144, 147, 149, 150, 156, 159, 160, 161, 163, 164, 171, 172, 175, 185, 189, 190, 191, 197, 199, 201, 204, 205, 206, 212, 214, 216, 217, 221, 226, 227, 232, 233, 235, 249, 250, 255, 258, 259, 263, 265, 269, 271, 272, 276, 287], "experi": [1, 5, 83, 223], "can": [1, 2, 3, 4, 5, 6, 11, 12, 13, 15, 25, 26, 28, 29, 40, 41, 46, 47, 50, 51, 55, 58, 59, 62, 63, 66, 69, 71, 73, 75, 76, 78, 79, 80, 83, 84, 85, 86, 89, 90, 94, 95, 96, 100, 101, 104, 107, 108, 109, 110, 111, 113, 130, 134, 137, 138, 139, 140, 142, 144, 145, 147, 148, 149, 150, 151, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 172, 175, 176, 177, 179, 181, 184, 185, 186, 187, 189, 190, 191, 192, 195, 199, 201, 204, 205, 206, 208, 210, 212, 213, 214, 215, 217, 219, 221, 223, 224, 225, 226, 227, 230, 231, 232, 233, 241, 247, 250, 251, 252, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 269, 270, 272, 275, 277, 278, 279, 282, 283, 285, 286], "help": [1, 3, 4, 6, 8, 9, 15, 40, 58, 62, 63, 73, 79, 80, 96, 140, 148, 160, 161, 173, 189, 212, 228, 231, 233, 250, 252, 284], "surfac": [1, 8, 9, 15, 25, 29, 30, 34, 47, 62, 69, 70, 96, 101, 135, 138, 156, 161, 189, 201, 223, 233, 263, 276, 284], "simul": [1, 5, 55, 71, 89, 104, 134, 148, 150, 182, 186, 189, 191, 204, 206, 207, 215, 216, 218, 233], "On": [1, 4, 6, 113, 225, 233, 263], "pre": [1, 3, 63, 66, 74, 76, 80, 148, 151, 152, 163, 168, 186, 191, 232, 233, 263, 265, 284, 287], "we": [1, 2, 3, 4, 5, 6, 15, 16, 29, 34, 58, 60, 62, 71, 76, 79, 80, 94, 95, 96, 110, 140, 147, 148, 155, 156, 175, 177, 178, 179, 189, 191, 223, 226, 230, 231, 232, 233, 247, 249, 263, 269, 272, 273, 276, 287], "give": [1, 4, 6, 29, 34, 40, 41, 55, 58, 62, 63, 70, 71, 73, 75, 79, 80, 84, 95, 96, 107, 130, 132, 137, 139, 143, 150, 156, 159, 160, 161, 191, 201, 206, 210, 213, 214, 232, 254, 263, 269, 270, 287], "bad": [1, 95, 176, 189, 230, 233, 271], "most": [1, 2, 3, 4, 5, 6, 25, 28, 29, 54, 55, 58, 59, 69, 71, 73, 83, 89, 95, 96, 107, 110, 128, 129, 130, 137, 139, 140, 144, 147, 150, 155, 163, 175, 176, 179, 189, 190, 191, 192, 204, 211, 228, 230, 232, 233, 247, 249, 263, 265, 287], "system": [1, 2, 3, 4, 6, 15, 28, 40, 41, 54, 55, 62, 66, 73, 78, 80, 89, 96, 109, 111, 131, 132, 137, 140, 144, 145, 148, 150, 166, 172, 175, 185, 187, 189, 191, 205, 206, 208, 214, 219, 226, 232, 233, 241, 247, 248, 254, 257, 263, 269, 278, 287], "often": [1, 3, 62, 75, 130, 156, 158, 160, 177, 189, 191, 254, 287], "oxid": [1, 11, 17, 28, 40, 55, 58, 71, 75, 80, 83, 89, 90, 92, 94, 95, 96, 107, 128, 132, 137, 139, 144, 147, 148, 156, 163, 185, 189, 233, 263, 264, 265, 278, 287], "yb3": [1, 233], "reason": [1, 2, 11, 58, 71, 79, 89, 90, 130, 151, 159, 168, 177, 189, 191, 197, 230, 233, 264], "better": [1, 13, 71, 76, 90, 156, 225, 233, 263, 287], "becam": [1, 223], "avail": [1, 4, 5, 6, 29, 46, 71, 76, 97, 113, 128, 129, 130, 131, 134, 136, 140, 142, 144, 147, 148, 151, 155, 159, 171, 172, 178, 179, 186, 189, 191, 195, 197, 199, 201, 207, 223, 230, 232, 233, 245, 247, 264, 266, 268, 271, 275], "requir": [1, 2, 3, 4, 6, 11, 30, 45, 47, 62, 63, 71, 74, 96, 99, 129, 130, 140, 144, 147, 148, 150, 156, 159, 161, 163, 168, 170, 175, 184, 189, 191, 205, 212, 216, 218, 221, 226, 230, 232, 233, 238, 251, 257, 258, 263, 264, 265, 287], "mean": [1, 3, 4, 5, 6, 11, 12, 13, 17, 25, 29, 34, 38, 43, 52, 53, 54, 55, 58, 60, 62, 63, 64, 71, 73, 74, 76, 80, 96, 100, 128, 129, 134, 138, 140, 147, 148, 150, 155, 156, 159, 160, 161, 163, 166, 175, 176, 179, 191, 201, 215, 219, 221, 225, 230, 232, 233, 247, 250, 251, 252, 254, 258, 263, 276, 287], "t": [1, 3, 5, 8, 9, 12, 55, 62, 63, 71, 75, 83, 85, 101, 114, 129, 132, 133, 134, 135, 144, 147, 148, 149, 156, 158, 159, 160, 161, 164, 170, 176, 177, 189, 191, 215, 225, 226, 230, 232, 233, 241, 248, 249, 254, 257, 263, 269, 278, 285, 287], "2968": 1, "2969": 1, "what": [1, 2, 3, 4, 6, 12, 25, 29, 62, 63, 71, 76, 80, 90, 113, 128, 147, 148, 151, 152, 155, 156, 175, 176, 189, 190, 191, 206, 230, 232, 233, 247, 263, 287], "typeerror": [1, 181], "byte": 1, "object": [1, 2, 4, 5, 6, 9, 11, 12, 13, 15, 17, 20, 21, 22, 23, 25, 26, 28, 29, 30, 32, 34, 35, 36, 40, 41, 47, 50, 51, 52, 54, 55, 56, 58, 60, 62, 63, 66, 68, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 197, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 243, 244, 247, 248, 249, 250, 251, 252, 254, 255, 257, 259, 263, 264, 265, 266, 269, 271, 273, 276, 277, 278, 279, 282, 283, 284, 287], "pass": [1, 3, 4, 6, 11, 15, 16, 29, 34, 43, 45, 47, 54, 59, 71, 73, 79, 80, 89, 101, 107, 111, 121, 143, 144, 147, 150, 160, 161, 163, 164, 165, 168, 171, 172, 175, 176, 177, 179, 182, 184, 185, 186, 187, 189, 197, 199, 204, 205, 206, 216, 217, 223, 226, 230, 232, 233, 241, 250, 251, 254, 263, 273, 274, 276, 282], "triplet": [1, 215], "bool": [1, 5, 11, 12, 13, 15, 16, 20, 26, 28, 29, 30, 34, 40, 43, 44, 45, 46, 47, 50, 51, 55, 58, 59, 60, 62, 63, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 80, 83, 85, 89, 90, 92, 95, 96, 100, 101, 107, 108, 109, 110, 113, 121, 122, 128, 129, 130, 132, 134, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 155, 156, 158, 159, 160, 161, 162, 163, 165, 166, 168, 172, 175, 179, 181, 184, 185, 187, 189, 190, 191, 192, 195, 201, 204, 205, 206, 208, 209, 212, 213, 214, 217, 219, 223, 224, 225, 230, 232, 233, 234, 235, 236, 247, 249, 254, 255, 256, 257, 263, 264, 265, 266, 269, 276, 277, 278, 282, 283], "pbc": [1, 8, 9, 96, 135, 140, 147, 191, 204, 245, 269, 270, 279], "kwarg": [1, 12, 13, 43, 50, 54, 55, 66, 69, 71, 73, 80, 83, 93, 94, 96, 100, 101, 104, 111, 132, 137, 140, 144, 146, 147, 149, 150, 160, 161, 163, 170, 171, 175, 176, 177, 179, 182, 185, 186, 187, 189, 191, 195, 199, 204, 206, 210, 213, 215, 216, 217, 221, 226, 230, 232, 233, 250, 251, 256, 257, 258, 263, 271, 276, 282, 284, 287], "janosh": [1, 286], "2907": 1, "enough": [1, 3, 60, 62, 99, 147, 189, 191, 232, 254, 263], "unpack": 1, "pdplotter": [1, 8, 9, 14, 80, 287], "unstabl": [1, 80, 82, 83, 109, 110, 165], "entri": [1, 8, 9, 16, 40, 41, 50, 63, 71, 78, 80, 83, 84, 86, 88, 96, 108, 109, 110, 115, 133, 144, 149, 173, 175, 176, 177, 178, 179, 189, 204, 212, 221, 223, 225, 232, 233, 263, 276], "pd": [1, 8, 9, 45, 66, 77, 80, 96, 109, 135, 144, 164, 168, 207, 233, 287], "2908": [1, 279], "volumetricdata": [1, 8, 9, 173, 186, 214, 228, 232], "to_cub": [1, 8, 9, 173, 186], "preserv": [1, 68, 80, 137, 140, 147, 175, 191], "dimens": [1, 9, 47, 50, 63, 80, 104, 109, 130, 133, 134, 140, 146, 147, 161, 173, 178, 186, 203, 204, 205, 216, 219, 224, 230, 232, 252, 263, 287], "2909": 1, "rst": 1, "jmmshn": [1, 286], "2912": [1, 279], "faff": 1, "2915": 1, "formal_chempot": [1, 40], "option": [1, 3, 4, 6, 11, 12, 23, 25, 26, 28, 30, 32, 34, 40, 41, 43, 47, 54, 55, 62, 63, 68, 71, 73, 79, 80, 83, 85, 89, 90, 96, 100, 104, 108, 109, 110, 122, 128, 130, 132, 133, 134, 137, 139, 140, 144, 145, 147, 148, 149, 156, 161, 163, 164, 166, 168, 175, 176, 177, 179, 181, 184, 187, 189, 190, 191, 192, 195, 197, 199, 201, 204, 210, 212, 215, 217, 223, 224, 225, 226, 230, 232, 233, 241, 250, 251, 255, 259, 263, 264, 265, 266, 276, 277, 278, 282, 284, 287], "chemicalpotentialdiagram": [1, 8, 9, 14, 40, 80], "formal": [1, 40, 46, 83, 191, 232], "rather": [1, 5, 13, 50, 51, 52, 58, 78, 80, 81, 82, 89, 109, 128, 139, 143, 147, 149, 159, 184, 190, 221, 223, 230, 233, 244, 265, 278, 282, 287], "than": [1, 4, 5, 6, 11, 13, 15, 16, 21, 28, 29, 34, 50, 51, 52, 54, 58, 62, 71, 75, 76, 77, 78, 79, 80, 81, 82, 83, 89, 90, 94, 96, 104, 107, 108, 109, 128, 130, 136, 137, 138, 139, 140, 144, 146, 147, 148, 149, 155, 156, 159, 165, 168, 185, 189, 190, 191, 204, 217, 221, 222, 223, 225, 230, 232, 233, 244, 245, 248, 249, 257, 258, 263, 264, 265, 274, 278, 282, 287], "2916": [1, 279], "modifi": [1, 5, 12, 17, 47, 51, 60, 63, 71, 96, 99, 101, 147, 148, 160, 164, 175, 189, 191, 204, 212, 221, 223, 233, 236, 284], "dosplott": [1, 8, 9, 154, 161], "kaueltzen": 1, "2844": [1, 129], "auto": [1, 47, 233], "2925": [1, 279], "bug": [1, 232, 286], "potcar": [1, 4, 6, 9, 58, 113, 122, 124, 128, 129, 130, 163, 173, 212, 228, 230, 232, 233], "2910": 1, "panda": [1, 4, 5, 6, 45, 66, 147, 168, 176, 204, 222, 240], "2935": 1, "packmolset": [1, 8, 9, 173, 216], "orionarch": [1, 286], "2927": 1, "multipl": [1, 2, 9, 11, 12, 13, 20, 25, 26, 29, 34, 37, 43, 45, 46, 55, 58, 59, 62, 70, 71, 73, 80, 84, 90, 103, 107, 108, 109, 110, 130, 133, 137, 139, 146, 147, 148, 149, 150, 156, 161, 163, 166, 168, 173, 177, 179, 181, 188, 190, 191, 201, 204, 205, 206, 215, 217, 219, 221, 222, 223, 224, 232, 233, 240, 249, 258, 259, 263, 264, 265, 268, 284], "rout": [1, 3, 4, 6, 8, 9, 173, 201], "gaussian": [1, 4, 6, 8, 9, 17, 71, 79, 104, 113, 118, 146, 147, 160, 161, 173, 175, 181, 189, 190, 191, 200, 215, 231, 248, 251, 287], "ameyanagi": 1, "2939": 1, "2940": 1, "respars": 1, "scottnotfound": 1, "2941": 1, "ignor": [1, 47, 50, 63, 71, 73, 76, 80, 90, 121, 144, 145, 146, 164, 168, 176, 177, 207, 210, 230, 232, 249, 272, 278, 279], "unicod": [1, 158, 278], "charact": [1, 62, 128, 129, 142, 144, 161, 181, 190, 204, 222, 224, 225, 232, 254, 276, 278], "from_fil": [1, 4, 6, 8, 9, 14, 79, 96, 135, 147, 150, 154, 156, 158, 161, 173, 174, 179, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198, 200, 201, 203, 204, 205, 206, 210, 211, 212, 213, 214, 215, 219, 220, 221, 225, 226, 228, 230, 232, 234, 236, 240, 241, 287], "2948": 1, "minor": 1, "modif": [1, 2, 4, 6, 44, 104, 147, 189, 241, 272], "symmetr": [1, 5, 8, 9, 15, 17, 26, 28, 46, 50, 51, 55, 62, 73, 88, 90, 130, 135, 140, 143, 147, 148, 149, 155, 156, 173, 174, 177, 185, 197, 199, 217, 233, 254, 255, 257, 261, 263, 264, 265, 274], "distinct": [1, 5, 17, 50, 71, 73, 90, 96, 108, 128, 134, 147, 148, 149, 168, 254, 264], "miller": [1, 15, 43, 47, 62, 68, 69, 96, 101, 140, 147, 148, 263], "index": [1, 4, 6, 8, 9, 14, 15, 22, 23, 25, 28, 29, 30, 34, 37, 47, 50, 51, 55, 58, 59, 62, 63, 64, 66, 68, 69, 71, 76, 77, 82, 89, 96, 101, 103, 128, 129, 130, 134, 140, 144, 145, 147, 148, 149, 150, 155, 156, 159, 160, 161, 172, 175, 176, 177, 178, 179, 180, 181, 184, 186, 189, 192, 197, 198, 199, 200, 201, 204, 206, 209, 213, 219, 223, 231, 232, 233, 234, 238, 247, 248, 249, 250, 254, 257, 258, 260, 263, 264, 269, 270, 274, 284, 287], "gener": [1, 2, 3, 4, 5, 6, 8, 9, 12, 13, 15, 29, 40, 45, 47, 50, 51, 59, 62, 63, 65, 66, 68, 69, 70, 71, 73, 74, 76, 79, 80, 82, 83, 86, 90, 92, 96, 97, 99, 100, 101, 108, 109, 110, 113, 116, 117, 124, 128, 130, 131, 132, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 152, 155, 156, 159, 160, 161, 163, 164, 166, 167, 168, 172, 173, 175, 177, 179, 181, 184, 185, 187, 189, 190, 191, 197, 199, 200, 203, 204, 206, 207, 208, 209, 210, 212, 214, 215, 216, 217, 218, 219, 223, 224, 225, 230, 232, 233, 240, 247, 249, 250, 251, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 268, 269, 272, 274, 276, 278, 282, 284, 285, 287], "fyalcin": [1, 286], "2949": [1, 279], "wulff": [1, 8, 9, 14, 96], "shape": [1, 29, 47, 50, 51, 58, 71, 79, 81, 89, 96, 101, 149, 150, 156, 175, 184, 201, 204, 232, 234, 247, 249, 264, 269, 285], "matplotlib": [1, 5, 15, 20, 29, 30, 43, 54, 66, 80, 83, 89, 96, 100, 101, 111, 161, 176, 179, 201, 251, 276, 282], "ciflord": 1, "2950": 1, "test": [1, 2, 3, 4, 6, 8, 9, 10, 11, 17, 26, 28, 34, 47, 50, 58, 80, 95, 107, 136, 147, 149, 151, 179, 184, 191, 200, 213, 215, 232, 233, 241, 254, 256, 265, 267, 268, 269, 270, 273, 286], "figur": [1, 4, 6, 20, 29, 30, 40, 41, 43, 45, 53, 54, 55, 63, 66, 80, 101, 111, 150, 161, 165, 176, 179, 204, 230, 232, 250, 251, 274, 276], "return": [1, 3, 4, 6, 11, 12, 13, 15, 16, 17, 20, 21, 22, 23, 25, 26, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 58, 59, 60, 62, 63, 66, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96, 97, 100, 101, 103, 104, 107, 108, 109, 110, 111, 113, 114, 118, 121, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 229, 231, 232, 233, 234, 235, 236, 238, 240, 241, 244, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 259, 260, 261, 263, 264, 265, 266, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 282, 283, 284], "wulffshap": [1, 8, 9, 14, 96, 101], "get_plot": [1, 8, 9, 14, 40, 42, 43, 80, 100, 101, 105, 106, 111, 154, 161, 246, 251, 281, 282], "contain": [1, 2, 4, 6, 11, 12, 13, 23, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 47, 55, 58, 60, 62, 63, 66, 71, 76, 80, 83, 84, 88, 89, 90, 94, 96, 97, 101, 104, 106, 108, 109, 110, 112, 113, 114, 115, 127, 128, 130, 132, 134, 135, 137, 139, 140, 142, 144, 147, 148, 151, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 175, 176, 177, 178, 179, 181, 184, 186, 187, 189, 190, 191, 192, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 210, 213, 216, 217, 221, 222, 223, 224, 225, 227, 230, 231, 232, 233, 234, 238, 243, 244, 247, 248, 250, 254, 255, 257, 258, 264, 265, 269, 270, 272, 276, 277, 284, 285, 287], "singl": [1, 2, 4, 5, 6, 12, 26, 50, 55, 60, 63, 71, 82, 84, 96, 108, 109, 110, 137, 140, 145, 146, 147, 148, 150, 156, 161, 163, 168, 175, 176, 177, 180, 181, 185, 187, 189, 190, 204, 205, 206, 207, 213, 215, 217, 221, 223, 224, 226, 227, 230, 232, 233, 250, 254, 263, 264, 265, 266, 269, 277, 279, 284], "axes3d": [1, 276], "2953": 1, "cp2koutput": [1, 9, 173, 188, 190, 192], "spin_polar": [1, 8, 9, 154, 160, 173, 188, 190, 214, 233], "author": [1, 8, 9, 12, 47, 55, 78, 137, 232, 233, 265, 267, 273, 277], "2954": 1, "mpcule": 1, "molecul": [1, 2, 3, 4, 5, 6, 8, 9, 15, 16, 28, 47, 59, 60, 63, 71, 76, 77, 80, 96, 129, 130, 135, 136, 137, 147, 150, 163, 173, 181, 182, 184, 189, 190, 191, 192, 197, 199, 200, 201, 204, 209, 213, 215, 216, 221, 222, 223, 238, 240, 241, 254, 263, 264, 276, 277], "hash": [1, 5, 76, 90, 144, 149, 163, 179, 189, 191, 230, 232, 233, 272], "espottesmith": 1, "2945": 1, "assertarrayequ": 1, "assert": [1, 175, 274], "2955": 1, "gaussianoutput": [1, 8, 9, 113, 173, 201], "line": [1, 2, 3, 4, 5, 6, 34, 40, 58, 63, 66, 80, 83, 96, 101, 115, 119, 127, 132, 155, 156, 161, 171, 179, 180, 181, 185, 186, 189, 190, 191, 197, 201, 205, 206, 207, 212, 217, 219, 221, 222, 224, 230, 232, 233, 238, 247, 251, 255, 257, 264, 268, 269, 273, 276, 282, 284, 287], "2937": 1, "poscar": [1, 4, 6, 9, 12, 13, 79, 96, 100, 113, 147, 158, 161, 173, 212, 213, 214, 217, 228, 230, 232, 233, 287], "chiang": 1, "yuan": [1, 286], "2951": 1, "bump": 1, "beautifulsoup4": 1, "dependabot": 1, "2962": 1, "pypa": 1, "cibuildwheel": 1, "2959": 1, "uncertainti": [1, 8, 9, 80, 86, 97, 144, 162, 163, 164, 165, 185], "2960": 1, "numpi": [1, 2, 4, 5, 6, 34, 40, 45, 47, 50, 51, 52, 54, 70, 71, 73, 76, 78, 79, 81, 82, 83, 88, 90, 96, 140, 143, 146, 147, 148, 149, 151, 155, 159, 178, 198, 214, 217, 224, 232, 234, 244, 247, 249, 250, 252, 254, 255, 256, 257, 263, 264, 269, 279, 287], "2963": 1, "tabul": [1, 121], "2961": 1, "2964": 1, "link": [1, 3, 5, 20, 130, 155, 156, 217, 247, 249, 286], "addon": [1, 3, 4, 6, 96], "subsect": [1, 189, 191], "2967": 1, "recurs": [1, 55, 147, 189, 254], "copi": [1, 3, 8, 9, 12, 14, 34, 61, 62, 63, 86, 135, 137, 138, 140, 146, 147, 148, 162, 164, 173, 177, 179, 186, 200, 233, 253, 261, 264, 265, 269], "deepcopi": [1, 9, 173, 174, 177, 204], "dunder": 1, "2973": 1, "revert": 1, "misc": [1, 138, 172], "relax": [1, 8, 9, 17, 28, 62, 73, 74, 79, 89, 100, 132, 134, 135, 147, 150, 156, 161, 168, 175, 177, 191, 201, 206, 232, 233, 236, 254, 263, 265, 287], "trajectoryobserv": [1, 147], "renam": [1, 2, 73, 147, 206], "gen_sl_transform_matrici": 1, "gen_sl_transform_matric": [1, 9, 14, 67, 70], "2894": 1, "2882": 1, "substrat": [1, 8, 9, 68, 69, 70, 135, 138], "mkhorton": 1, "veri": [1, 3, 5, 28, 29, 47, 53, 73, 76, 90, 95, 100, 137, 139, 155, 177, 184, 185, 189, 190, 191, 205, 208, 215, 217, 219, 221, 232, 233, 264], "fragil": [1, 287], "69a548e210": 1, "ubuntu": 1, "latest": [1, 2, 4, 5, 6, 12, 13], "job": [1, 4, 6, 155, 176, 181, 199, 221, 223], "matrix": [1, 8, 9, 28, 29, 34, 47, 50, 51, 55, 62, 68, 70, 76, 80, 82, 88, 90, 135, 140, 143, 145, 147, 148, 149, 161, 175, 186, 189, 191, 201, 214, 215, 217, 223, 224, 231, 232, 243, 244, 245, 252, 254, 256, 259, 263, 265, 269, 274, 278], "e63cab3620": 1, "c03dacb94d": 1, "build": [1, 5, 26, 63, 69, 96, 109, 122, 140, 147, 148, 152, 161, 175, 177, 179, 189, 204, 223, 225, 251, 276], "linux": [1, 2, 4, 6], "wheel": [1, 4, 6], "2800": [1, 279], "fe2597d92": 1, "merg": [1, 2, 3, 62, 138, 147, 155, 204, 206, 263], "setup": [1, 3, 4, 6, 14, 18, 21, 26, 28, 31, 32, 58, 62, 100, 115, 122, 138, 145, 147, 148, 150, 152, 179, 191, 215, 216], "cfg": 1, "pyproject": [1, 3], "toml": [1, 3], "2858": 1, "40cbf1d7c4": 1, "del": [1, 15, 130], "atomicfil": 1, "_maketemp": 1, "ask_yesno": 1, "util": [1, 4, 5, 6, 8, 9, 14, 18, 25, 29, 30, 80, 91, 100, 144, 164, 173, 188, 203, 220, 233, 242], "io_util": [1, 8, 9, 267], "py": [1, 2, 3, 4, 5, 6, 8, 9, 115, 141, 148, 154, 159, 161, 206, 210, 215, 241, 279], "2860": 1, "0b16987f2c": 1, "reduc": [1, 4, 6, 15, 26, 28, 40, 41, 62, 70, 74, 80, 83, 90, 96, 108, 137, 139, 140, 143, 147, 148, 156, 161, 166, 175, 181, 189, 197, 201, 232, 233, 252, 254, 257, 263, 265, 276], "formula": [1, 4, 6, 8, 9, 13, 40, 41, 45, 53, 55, 66, 74, 76, 80, 83, 90, 96, 97, 108, 109, 111, 134, 135, 137, 139, 142, 147, 156, 162, 164, 165, 167, 168, 170, 172, 173, 195, 196, 197, 198, 201, 217, 230, 233, 248, 249, 251, 276, 278, 287], "ion": [1, 8, 9, 11, 47, 58, 73, 75, 83, 90, 107, 108, 109, 110, 111, 121, 135, 142, 166, 177, 191, 199, 200, 219, 232, 263, 278, 284], "2864": 1, "2848": 1, "ml": [1, 96, 232], "ev": [1, 40, 54, 55, 56, 63, 66, 80, 83, 85, 88, 96, 103, 104, 142, 144, 147, 151, 156, 158, 160, 161, 163, 164, 165, 168, 175, 177, 190, 198, 200, 201, 210, 214, 215, 225, 232, 233, 247, 249, 251, 287], "update_optimade_alias": 1, "current": [1, 2, 3, 5, 17, 20, 26, 28, 29, 30, 50, 55, 63, 69, 71, 74, 75, 76, 80, 83, 88, 96, 109, 110, 129, 140, 147, 149, 150, 158, 164, 165, 167, 172, 181, 185, 189, 191, 192, 198, 200, 206, 207, 210, 212, 215, 216, 223, 230, 231, 232, 233, 238, 252, 257, 263, 265, 276, 287], "optimaderest": [1, 8, 9, 169, 172], "outdat": 1, "optimad": [1, 8, 9, 169], "databas": [1, 3, 4, 5, 6, 32, 41, 94, 136, 137, 144, 147, 163, 164, 168, 170, 172, 177, 230, 277, 287], "url": [1, 8, 9, 55, 172, 267, 271, 277], "sever": [1, 4, 6, 25, 108, 147, 155, 158, 180, 184, 191, 212, 216, 226, 232, 247, 264, 265, 287], "fail": [1, 2, 5, 11, 37, 59, 63, 85, 144, 160, 163, 168, 225, 230, 259], "design": [1, 15, 113, 145, 148, 152, 156, 159, 186, 191, 204, 218, 221, 232, 255, 287], "refresh": 1, "alias": [1, 8, 9, 135, 152, 169, 172, 189], "done": [1, 2, 3, 4, 5, 6, 11, 29, 44, 45, 46, 55, 128, 148, 158, 163, 176, 177, 187, 189, 191, 192, 197, 206, 230, 233, 250, 256, 263, 264, 265, 287], "post": [1, 2, 4, 6, 8, 9, 113, 144, 147, 156, 173, 177, 190, 192, 219, 224, 232, 287], "thei": [1, 3, 4, 5, 6, 13, 15, 29, 70, 71, 73, 76, 79, 80, 83, 92, 96, 108, 136, 137, 144, 147, 149, 155, 156, 158, 160, 161, 163, 168, 185, 187, 189, 190, 191, 198, 206, 207, 212, 215, 221, 223, 230, 247, 254, 264, 274, 287], "filter": [1, 3, 8, 9, 10, 12, 16, 45, 53, 80, 83, 90, 144, 148, 168, 172, 179, 287], "without": [1, 2, 4, 6, 28, 29, 37, 45, 59, 66, 73, 76, 77, 80, 90, 99, 137, 144, 147, 148, 149, 156, 160, 172, 175, 181, 189, 190, 191, 199, 204, 206, 224, 230, 232, 233, 254, 257, 272, 286, 287], "some": [1, 2, 3, 4, 5, 6, 17, 25, 26, 29, 34, 35, 36, 37, 38, 39, 40, 53, 55, 58, 59, 62, 71, 73, 74, 79, 80, 83, 86, 89, 90, 94, 96, 100, 104, 108, 109, 110, 113, 144, 145, 147, 148, 151, 156, 160, 161, 163, 164, 172, 179, 184, 189, 191, 199, 215, 221, 223, 226, 230, 231, 232, 233, 251, 263, 265, 276, 277, 279, 282, 285, 287], "extra": [1, 4, 6, 73, 78, 107, 175, 176, 186, 218, 223, 232, 241, 268, 283], "work": [1, 2, 3, 4, 5, 6, 11, 17, 47, 54, 62, 66, 79, 80, 83, 84, 88, 94, 95, 96, 104, 107, 108, 109, 110, 111, 113, 129, 130, 137, 143, 144, 145, 146, 147, 148, 150, 151, 155, 159, 160, 165, 167, 168, 170, 187, 189, 191, 193, 200, 204, 214, 215, 216, 222, 230, 231, 232, 233, 234, 236, 238, 254, 256, 263, 265, 269, 278, 279, 285, 286, 287], "vendor": 1, "much": [1, 5, 37, 70, 76, 80, 90, 96, 113, 147, 148, 149, 189, 191, 232, 233, 244, 254, 263, 287], "initi": [1, 3, 5, 12, 13, 16, 17, 25, 26, 28, 29, 30, 34, 44, 46, 50, 53, 54, 55, 59, 62, 69, 70, 71, 73, 76, 77, 78, 80, 83, 89, 95, 96, 100, 103, 107, 109, 128, 129, 132, 136, 137, 143, 144, 147, 148, 149, 151, 158, 159, 160, 161, 162, 163, 164, 165, 175, 176, 177, 181, 184, 186, 189, 190, 191, 200, 212, 219, 230, 233, 234, 235, 251, 252, 254, 255, 256, 257, 258, 259, 265, 269, 272, 278, 282, 287], "year": [1, 4, 6], "ago": 1, "affect": [1, 3, 147], "tutori": 1, "consortia": 1, "exercis": [1, 232], "2806": 1, "samblau": 1, "qchem": [1, 8, 9, 59, 173], "major": [1, 2, 3, 54, 71, 108, 160, 168, 223, 230, 233], "q": [1, 9, 34, 76, 78, 80, 83, 173, 175, 188, 189, 191, 204, 217, 221, 223, 226, 233, 287], "chem": [1, 26, 28, 47, 71, 78, 80, 129, 132, 221, 223, 285, 287], "output": [1, 2, 3, 4, 5, 6, 8, 9, 12, 13, 15, 55, 63, 71, 79, 80, 89, 94, 96, 113, 118, 128, 129, 130, 132, 134, 137, 147, 150, 151, 156, 158, 161, 168, 173, 174, 176, 177, 178, 181, 183, 184, 185, 186, 187, 188, 189, 193, 196, 197, 199, 200, 201, 203, 204, 206, 211, 212, 213, 215, 216, 217, 219, 220, 225, 226, 228, 230, 231, 233, 234, 236, 237, 240, 255, 257, 263, 278, 284], "accommod": [1, 107, 148], "differ": [1, 2, 4, 5, 6, 15, 20, 23, 25, 28, 29, 30, 36, 40, 47, 50, 51, 55, 58, 59, 62, 63, 71, 73, 76, 79, 80, 90, 92, 93, 95, 96, 100, 108, 110, 128, 130, 133, 136, 137, 140, 142, 144, 147, 148, 149, 155, 156, 160, 161, 163, 164, 168, 172, 175, 176, 177, 181, 184, 186, 189, 190, 191, 197, 204, 206, 212, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 247, 250, 251, 254, 255, 257, 258, 264, 265, 268, 272, 274, 276, 278, 282], "featur": [1, 2, 3, 4, 5, 6, 71, 100, 151, 172, 177, 189, 190, 191, 232, 272], "capabl": [1, 2, 4, 5, 6, 76, 111, 174, 213], "homo": [1, 142, 189, 190, 191], "lumo": [1, 142, 189, 190, 191, 232], "dipol": [1, 8, 9, 58, 129, 135, 140, 148, 175, 232], "nbo": [1, 201, 221, 222, 223], "info": [1, 3, 4, 6, 9, 18, 24, 25, 26, 28, 29, 45, 71, 76, 85, 121, 173, 176, 188, 189, 190, 191, 198, 200, 204, 213, 214, 232, 233, 284], "hyperbond": 1, "3c": [1, 147], "bond": [1, 8, 9, 16, 17, 23, 25, 28, 29, 30, 35, 47, 59, 60, 62, 63, 71, 77, 89, 95, 96, 127, 129, 130, 135, 142, 147, 148, 158, 184, 201, 204, 213, 221, 222, 223, 233, 263, 265, 276, 283, 284], "process": [1, 4, 5, 6, 16, 45, 55, 66, 70, 71, 74, 80, 83, 101, 113, 114, 124, 130, 132, 134, 140, 147, 156, 163, 166, 168, 184, 186, 189, 190, 191, 192, 201, 204, 207, 215, 219, 224, 232, 233, 263, 264, 265, 285, 287], "binari": [1, 47, 80, 84, 161, 232, 272, 276], "hessian": [1, 8, 9, 130, 161, 173, 201, 215], "scratch": [1, 134], "overdu": 1, "associ": [1, 5, 12, 29, 50, 58, 62, 63, 66, 71, 73, 80, 83, 90, 96, 103, 128, 129, 130, 138, 144, 145, 147, 148, 149, 150, 155, 158, 160, 161, 162, 164, 167, 168, 170, 172, 176, 177, 178, 179, 185, 186, 195, 199, 200, 201, 204, 215, 221, 223, 230, 232, 233, 240, 247, 248, 249, 254, 256, 286, 287], "2814": 1, "patch_do": 1, "conveni": [1, 2, 4, 6, 13, 15, 54, 58, 62, 73, 75, 80, 86, 109, 114, 118, 120, 128, 129, 130, 137, 140, 147, 148, 149, 152, 158, 159, 166, 171, 172, 175, 189, 201, 225, 230, 232, 233, 265, 276, 277, 278, 280, 287], "obtain": [1, 4, 6, 16, 25, 28, 29, 34, 54, 59, 62, 63, 66, 71, 74, 75, 79, 89, 90, 100, 103, 104, 121, 129, 136, 137, 140, 141, 142, 144, 147, 148, 149, 150, 159, 163, 171, 186, 198, 213, 217, 232, 233, 241, 248, 249, 250, 251, 254, 255, 256, 257, 261, 263, 272, 278, 287], "normal": [1, 8, 9, 14, 15, 16, 25, 28, 29, 30, 34, 45, 50, 51, 62, 66, 71, 72, 73, 79, 80, 83, 86, 89, 90, 96, 100, 101, 107, 108, 109, 135, 137, 139, 143, 146, 148, 160, 161, 162, 164, 177, 179, 181, 189, 198, 201, 212, 213, 214, 215, 230, 232, 233, 247, 258, 263, 265], "completedo": [1, 8, 9, 104, 154, 156, 160, 161, 173, 190, 198, 211, 214, 232, 248, 282], "sure": [1, 3, 5, 62, 132, 148, 233, 252, 263], "call": [1, 4, 5, 6, 15, 16, 25, 28, 29, 30, 43, 54, 55, 58, 63, 71, 76, 80, 90, 104, 109, 110, 121, 123, 128, 130, 133, 146, 147, 152, 155, 156, 161, 168, 172, 176, 179, 184, 187, 189, 190, 191, 200, 206, 211, 221, 224, 228, 232, 241, 247, 250, 251, 261, 263, 265, 276, 278, 287], "time": [1, 2, 3, 4, 5, 6, 8, 9, 28, 34, 46, 47, 52, 55, 62, 71, 80, 89, 95, 128, 130, 133, 135, 140, 143, 144, 147, 150, 151, 155, 156, 160, 161, 175, 176, 185, 189, 190, 191, 197, 206, 207, 214, 215, 216, 225, 232, 233, 248, 257, 258, 263, 264, 265, 275, 287], "still": [1, 2, 3, 4, 6, 62, 73, 79, 96, 113, 130, 137, 139, 175, 191, 201, 213, 215, 225, 230, 231, 254, 284, 287], "one": [1, 3, 4, 6, 12, 13, 15, 21, 23, 25, 26, 28, 29, 34, 37, 46, 47, 55, 58, 59, 62, 63, 66, 69, 71, 73, 74, 75, 76, 80, 86, 89, 90, 96, 97, 103, 108, 109, 110, 113, 114, 126, 130, 136, 137, 138, 140, 144, 145, 147, 148, 149, 150, 151, 152, 155, 156, 160, 161, 163, 164, 168, 175, 177, 179, 180, 184, 186, 187, 189, 190, 191, 197, 200, 204, 206, 207, 216, 219, 221, 222, 223, 224, 230, 232, 233, 247, 251, 254, 255, 257, 258, 262, 263, 264, 265, 266, 276, 278, 284, 287], "passthrough": [1, 147, 149, 185, 199, 276], "from_str": [1, 4, 6, 8, 9, 14, 86, 135, 144, 147, 151, 170, 173, 181, 184, 185, 187, 188, 189, 193, 194, 195, 196, 197, 200, 201, 203, 206, 207, 210, 215, 219, 220, 221, 225, 228, 230, 235, 236, 240, 241], "frac_toler": [1, 185], "specifi": [1, 2, 4, 5, 6, 11, 28, 40, 45, 46, 47, 50, 51, 55, 58, 62, 63, 71, 73, 78, 80, 86, 95, 96, 100, 130, 132, 133, 137, 138, 140, 144, 145, 147, 148, 149, 150, 152, 156, 159, 160, 161, 163, 164, 166, 172, 175, 176, 177, 178, 179, 180, 184, 185, 189, 190, 191, 197, 199, 201, 204, 205, 206, 215, 221, 223, 230, 232, 233, 234, 247, 251, 255, 257, 259, 263, 265, 277, 279, 282, 284, 287], "round": [1, 8, 9, 73, 135, 140, 147, 148, 149, 185, 263, 265, 274, 278], "coordin": [1, 4, 6, 15, 20, 21, 22, 24, 25, 26, 27, 28, 29, 34, 36, 39, 40, 45, 55, 58, 62, 63, 71, 75, 76, 79, 80, 89, 96, 100, 130, 132, 138, 140, 142, 143, 144, 145, 147, 148, 150, 155, 156, 161, 184, 185, 186, 187, 189, 201, 204, 205, 206, 210, 213, 214, 215, 216, 217, 224, 226, 230, 233, 238, 240, 241, 245, 247, 249, 252, 254, 257, 259, 264, 265, 269, 270, 284, 287], "cifpars": [1, 8, 9, 147, 173, 185, 252, 287], "2803": 1, "amkrajewski": 1, "add_weightbasedfunct": 1, "metal": [1, 11, 59, 71, 75, 80, 107, 137, 139, 142, 144, 155, 156, 161, 163, 189, 190, 191, 205, 232, 233, 276, 286, 287], "alloi": [1, 131, 263], "weight": [1, 4, 6, 8, 9, 14, 18, 24, 25, 36, 50, 55, 63, 71, 74, 76, 79, 83, 93, 96, 101, 103, 104, 107, 130, 133, 135, 137, 146, 147, 149, 173, 175, 176, 184, 189, 213, 228, 230, 231, 232, 233, 254, 263, 268], "fraction": [1, 3, 4, 6, 14, 15, 17, 18, 25, 29, 31, 34, 36, 55, 58, 62, 71, 80, 83, 84, 90, 95, 96, 109, 111, 130, 132, 137, 138, 140, 145, 147, 148, 150, 155, 156, 161, 166, 176, 186, 189, 191, 210, 217, 233, 254, 263, 264, 265, 269, 270, 287], "base": [1, 2, 3, 4, 6, 11, 12, 13, 15, 16, 17, 20, 21, 22, 23, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 113, 114, 123, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 221, 222, 223, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 243, 244, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 261, 263, 264, 265, 266, 268, 269, 271, 276, 277, 278, 279, 282, 284, 285, 286, 287], "notat": [1, 50, 51, 78, 81, 89, 137, 147, 148, 149, 185, 225, 232, 256, 259, 277], "ti64": 1, "ti": [1, 8, 9, 20, 77, 135, 137, 142, 144, 233, 263, 279], "6v": 1, "4al": 1, "nitinol60": 1, "ni": [1, 8, 9, 77, 94, 135, 144, 147, 179, 233], "40ti": 1, "commonli": [1, 46, 130, 137, 151, 230, 233, 259, 267, 282], "emploi": [1, 54, 176, 236], "both": [1, 4, 5, 6, 15, 16, 20, 29, 47, 63, 66, 80, 85, 89, 90, 96, 100, 110, 137, 144, 147, 148, 149, 150, 156, 158, 159, 160, 161, 164, 168, 177, 206, 207, 211, 228, 232, 233, 251, 252, 254, 259, 263, 268, 269, 287], "industri": [1, 137], "specif": [1, 2, 3, 4, 5, 6, 15, 16, 25, 28, 40, 44, 45, 46, 50, 62, 70, 71, 78, 80, 96, 105, 108, 110, 128, 130, 132, 140, 144, 145, 147, 148, 151, 152, 155, 156, 158, 159, 160, 161, 162, 163, 168, 172, 175, 178, 187, 189, 191, 199, 204, 206, 208, 218, 221, 223, 224, 230, 232, 233, 248, 251, 255, 258, 263, 264, 265, 266, 269, 270, 272, 274, 287], "scientif": [1, 3, 4, 6, 96, 101, 144, 148, 163, 230, 285, 286], "literatur": [1, 130], "regardless": [1, 47, 90, 108, 148, 165, 233], "numer": [1, 4, 6, 54, 74, 140, 147, 155, 180, 181, 189, 191, 217, 224, 233, 245, 274], "downsid": 1, "situat": [1, 86, 147, 191, 198, 230, 287], "nlp": 1, "mistaken": 1, "atom": [1, 3, 5, 9, 11, 14, 15, 16, 17, 18, 19, 22, 23, 25, 26, 28, 29, 30, 40, 44, 45, 46, 47, 55, 58, 59, 60, 62, 63, 66, 71, 73, 74, 76, 77, 78, 79, 80, 82, 83, 89, 90, 93, 95, 96, 103, 104, 111, 128, 129, 130, 133, 134, 136, 137, 138, 139, 140, 142, 143, 144, 145, 147, 148, 150, 152, 158, 161, 162, 163, 164, 165, 166, 168, 173, 175, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 195, 196, 197, 198, 199, 201, 202, 204, 205, 206, 207, 209, 210, 211, 213, 217, 221, 222, 223, 226, 230, 232, 233, 235, 238, 240, 241, 247, 248, 249, 251, 252, 254, 258, 260, 263, 264, 284, 287], "abl": [1, 2, 5, 58, 62, 76, 144, 205, 255, 263], "creat": [1, 3, 4, 6, 12, 13, 15, 20, 25, 29, 30, 34, 40, 43, 50, 51, 52, 54, 55, 58, 62, 63, 66, 70, 71, 73, 74, 78, 80, 81, 82, 83, 86, 96, 99, 109, 110, 137, 138, 139, 140, 141, 143, 145, 147, 148, 149, 150, 152, 155, 156, 158, 159, 160, 161, 164, 165, 168, 172, 175, 176, 179, 184, 185, 187, 189, 190, 191, 192, 193, 197, 198, 199, 200, 201, 204, 205, 206, 208, 210, 212, 213, 214, 215, 217, 219, 221, 222, 230, 232, 233, 235, 236, 240, 241, 251, 252, 258, 263, 264, 272, 276, 277, 278, 279, 284], "composit": [1, 2, 4, 6, 8, 9, 14, 17, 40, 41, 66, 80, 83, 86, 90, 93, 94, 96, 108, 109, 135, 138, 139, 142, 144, 145, 147, 150, 160, 162, 163, 164, 166, 167, 168, 170, 265, 269, 278, 287], "them": [1, 11, 55, 60, 62, 70, 90, 108, 130, 135, 148, 155, 166, 171, 175, 189, 190, 191, 192, 205, 206, 214, 231, 232, 247, 249, 259, 264, 269, 282, 287], "under": [1, 2, 3, 4, 5, 6, 17, 28, 29, 50, 90, 147, 148, 155, 160, 163, 168, 172, 206, 223, 232, 254, 265, 269, 270], "correct": [1, 4, 5, 6, 8, 9, 26, 44, 46, 62, 66, 73, 80, 96, 109, 137, 148, 156, 161, 162, 163, 164, 165, 168, 170, 173, 175, 179, 185, 189, 190, 191, 200, 201, 212, 215, 225, 232, 233, 247, 255, 257, 263, 287], "interpret": [1, 5, 46, 63, 104, 130, 137, 144, 146, 147, 160, 161, 189, 232, 276], "dictionari": [1, 15, 20, 25, 26, 28, 29, 30, 34, 36, 40, 43, 45, 47, 50, 54, 55, 58, 59, 62, 63, 66, 71, 80, 83, 86, 89, 90, 92, 93, 94, 96, 101, 129, 130, 133, 134, 137, 140, 141, 142, 144, 148, 149, 151, 152, 155, 156, 158, 160, 161, 165, 172, 175, 176, 177, 178, 179, 185, 189, 190, 191, 197, 198, 201, 204, 205, 206, 210, 212, 217, 219, 221, 223, 224, 226, 230, 232, 233, 238, 241, 247, 250, 251, 254, 263, 264, 265, 266, 272, 273, 276, 282], "concis": [1, 45], "two": [1, 2, 3, 4, 5, 6, 11, 26, 28, 29, 30, 34, 37, 43, 45, 47, 60, 62, 63, 66, 68, 69, 70, 71, 76, 77, 79, 80, 82, 89, 90, 94, 95, 96, 100, 108, 109, 114, 129, 130, 131, 133, 136, 138, 140, 143, 144, 145, 147, 148, 152, 156, 160, 161, 163, 168, 177, 181, 185, 186, 189, 191, 197, 204, 206, 208, 212, 214, 216, 221, 222, 223, 230, 232, 233, 241, 243, 244, 250, 251, 254, 258, 263, 268, 269, 270, 274, 276, 277, 279, 284, 287], "abov": [1, 3, 4, 5, 6, 15, 16, 20, 25, 50, 60, 66, 75, 80, 83, 85, 111, 130, 138, 148, 163, 165, 166, 175, 223, 233, 252, 265, 272, 286, 287], "were": [1, 2, 4, 6, 29, 54, 59, 62, 137, 138, 144, 147, 148, 197, 213, 230, 233], "translat": [1, 4, 6, 15, 25, 76, 90, 96, 138, 140, 143, 145, 147, 148, 155, 158, 161, 247, 254, 256, 257, 258, 259, 263, 264], "dmso": 1, "smd_solvent": [1, 223], "2792": 1, "bug_fix": 1, "2773": 1, "ab5424": 1, "cbar": 1, "2776": 1, "michaelwolloch": 1, "2762": 1, "2774": [1, 279], "dgaines2": [1, 286], "2667": 1, "nwinner": 1, "volumetr": [1, 108, 111, 186, 232], "data": [1, 2, 4, 5, 6, 8, 9, 13, 20, 36, 37, 40, 41, 46, 47, 50, 54, 58, 64, 66, 71, 79, 80, 83, 84, 85, 88, 89, 93, 94, 95, 96, 97, 101, 104, 108, 109, 110, 111, 112, 113, 114, 122, 135, 136, 138, 142, 144, 147, 148, 149, 155, 156, 158, 161, 163, 164, 165, 167, 168, 170, 171, 172, 173, 176, 177, 178, 179, 183, 184, 185, 186, 187, 189, 190, 191, 192, 195, 197, 198, 200, 201, 203, 205, 206, 207, 208, 209, 210, 213, 215, 216, 217, 219, 222, 224, 225, 228, 230, 231, 232, 234, 235, 240, 247, 248, 249, 250, 251, 252, 256, 258, 268, 272, 276, 277, 285], "patch": 1, "2764": 1, "naik": 1, "aakash": 1, "lobster_lsodo": 1, "2215": 1, "rkingsburi": 1, "cmir": [1, 221, 223], "2742": 1, "pip": [1, 2, 3, 4, 5, 6, 71], "2741": 1, "resurrect": 1, "req": 1, "txt": [1, 3, 5, 134, 227, 258], "2735": 1, "njzjz": 1, "2724": 1, "rais": [1, 12, 13, 17, 28, 29, 30, 34, 37, 50, 63, 71, 76, 80, 132, 137, 139, 143, 144, 145, 147, 149, 151, 156, 160, 161, 163, 165, 168, 171, 176, 177, 178, 179, 181, 187, 189, 191, 192, 197, 208, 216, 222, 224, 225, 230, 254, 259, 261, 263, 265, 279], "spacegroupanalyz": [1, 4, 6, 8, 9, 28, 53, 73, 147, 149, 185, 197, 199, 253, 254, 257, 261, 265], "get_symmetrized_structur": [1, 8, 9, 253, 254, 261], "spglib": [1, 4, 5, 6, 44, 45, 46, 149, 189, 254, 257, 285], "symmetri": [1, 4, 6, 8, 9, 11, 17, 25, 26, 28, 29, 36, 44, 45, 46, 50, 51, 53, 58, 62, 73, 82, 94, 126, 130, 132, 143, 147, 148, 149, 155, 156, 161, 175, 177, 181, 185, 189, 195, 197, 199, 201, 204, 212, 213, 215, 217, 219, 223, 230, 231, 232, 233, 247, 251, 252, 263, 265], "2720": 1, "utf": [1, 176, 179], "tensor": [1, 8, 9, 49, 50, 51, 52, 69, 76, 78, 81, 82, 88, 135, 140, 143, 156, 161, 190, 191, 215, 231, 232, 233, 250, 254], "map": [1, 9, 11, 17, 20, 25, 26, 28, 29, 40, 50, 58, 63, 70, 71, 74, 76, 80, 82, 90, 96, 134, 136, 137, 140, 144, 147, 148, 149, 151, 160, 163, 166, 173, 186, 187, 189, 191, 197, 203, 204, 216, 230, 254, 263, 264, 265, 269, 270, 276, 284, 286, 287], "2562": [1, 279], "sudarshanv01": [1, 286], "In": [1, 3, 4, 5, 6, 8, 9, 28, 29, 34, 40, 63, 66, 76, 77, 79, 80, 84, 89, 95, 101, 130, 135, 137, 140, 143, 144, 147, 148, 149, 150, 160, 161, 163, 168, 177, 185, 189, 191, 205, 206, 216, 221, 223, 230, 231, 232, 233, 236, 240, 257, 258, 287], "case": [1, 4, 5, 6, 12, 13, 16, 17, 25, 26, 28, 29, 30, 34, 37, 55, 63, 66, 71, 76, 80, 89, 128, 140, 141, 144, 147, 148, 155, 156, 158, 159, 161, 163, 168, 175, 177, 181, 185, 189, 190, 191, 197, 198, 200, 205, 206, 213, 216, 222, 224, 230, 232, 233, 240, 247, 255, 257, 258, 263, 265, 287], "fock": [1, 215, 223, 224], "eigenvalu": [1, 8, 9, 40, 82, 88, 155, 156, 173, 189, 190, 191, 201, 228, 231, 232, 233, 247, 252, 254], "though": [1, 4, 6, 29, 62, 90, 137, 148, 168, 189, 221, 265, 284, 287], "flag": [1, 5, 15, 50, 71, 132, 149, 192, 213, 232, 238, 263], "scf_final_print": 1, "scf_print": 1, "quantiti": [1, 96, 108, 111, 112, 149, 151, 156, 206, 224, 230, 287], "order": [1, 5, 8, 9, 12, 14, 17, 18, 25, 26, 28, 31, 34, 37, 38, 40, 45, 48, 49, 50, 54, 55, 58, 59, 63, 71, 72, 73, 74, 75, 76, 77, 80, 83, 86, 88, 89, 90, 100, 101, 107, 110, 121, 129, 134, 136, 137, 139, 144, 145, 147, 148, 149, 155, 156, 158, 159, 160, 161, 165, 168, 175, 176, 179, 185, 189, 191, 198, 201, 206, 215, 217, 222, 223, 224, 226, 230, 232, 233, 247, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 272, 287], "fmt": [1, 4, 6, 55, 121, 140, 147, 158, 229, 278], "filenam": [1, 4, 6, 9, 13, 41, 60, 63, 74, 80, 111, 114, 124, 128, 130, 147, 150, 156, 158, 161, 166, 173, 174, 176, 177, 178, 179, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 204, 206, 207, 210, 212, 214, 215, 216, 219, 221, 222, 223, 225, 226, 227, 228, 230, 232, 233, 234, 236, 239, 240, 241, 247, 250, 251, 252, 273, 282, 284, 287], "swap": [1, 63, 86, 137, 147], "eas": [1, 186, 277], "yuzie007": 1, "configur": [1, 5, 15, 26, 32, 73, 74, 76, 96, 122, 131, 144, 175, 191, 197, 215, 221, 223, 230, 233, 263], "52": [1, 5, 71, 141, 279], "54": [1, 5, 44, 77, 141, 250, 279], "estim": [1, 17, 25, 28, 36, 41, 50, 64, 71, 73, 74, 75, 89, 134, 164, 191, 216, 233, 249, 264], "nband": [1, 9, 173, 175, 177, 212, 228, 231, 232, 233], "enumeratestructuretransform": [1, 5, 8, 9, 262, 263, 264], "m3gnet_relax": [1, 263], "m3gnet_stat": [1, 263], "env": [1, 20, 126, 279], "overrid": [1, 26, 29, 54, 55, 62, 71, 137, 139, 145, 147, 148, 151, 189, 191, 199, 230, 231, 233], "pmgrc": [1, 122, 230, 287], "yaml": [1, 3, 71, 73, 122, 147, 163, 165, 199, 204, 217, 230, 233, 249, 252, 287], "entrylik": 1, "cnncnnzh": 1, "phonon": [1, 8, 9, 161, 217, 232], "band": [1, 2, 4, 6, 8, 9, 79, 99, 142, 154, 155, 156, 160, 161, 175, 177, 189, 190, 191, 200, 212, 214, 215, 217, 231, 232, 233, 234, 247, 249, 251, 254, 257], "flexibl": [1, 3, 4, 6, 58, 62, 78, 80, 83, 86, 137, 138, 139, 147, 148, 150, 161, 162, 164, 167, 175, 190, 205, 208, 215, 230, 233, 251, 282, 285, 287], "reproduct": 1, "sort": [1, 4, 6, 8, 9, 14, 26, 34, 50, 55, 62, 63, 74, 80, 90, 96, 101, 121, 135, 137, 138, 139, 142, 144, 147, 148, 156, 161, 166, 173, 174, 176, 179, 191, 192, 197, 204, 230, 233, 251, 252, 263, 276, 282], "feff": [1, 8, 9, 116, 117, 173], "extend": [1, 8, 9, 12, 13, 15, 41, 50, 52, 66, 71, 78, 79, 80, 135, 137, 143, 146, 147, 150, 160, 167, 173, 174, 177, 178, 188, 189, 199, 223, 248, 263, 279, 287], "thermaldisplacementmatric": [1, 8, 9, 217, 246, 252], "cif": [1, 4, 6, 8, 9, 12, 13, 113, 147, 170, 173, 197, 205, 233, 252, 263, 287], "p1": [1, 34, 38, 45, 137, 186, 197, 252, 278], "format": [1, 2, 4, 5, 6, 13, 16, 30, 41, 47, 62, 63, 71, 80, 83, 88, 96, 97, 100, 108, 109, 110, 111, 126, 147, 148, 149, 151, 155, 156, 158, 160, 161, 163, 164, 165, 166, 170, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 189, 190, 193, 197, 201, 204, 205, 206, 207, 214, 217, 218, 221, 222, 223, 224, 225, 230, 232, 233, 235, 236, 240, 241, 247, 251, 252, 256, 263, 276, 277, 278, 279, 282, 285, 287], "o": [1, 4, 6, 8, 9, 17, 20, 25, 29, 40, 47, 59, 60, 62, 63, 71, 77, 80, 83, 84, 86, 89, 94, 96, 104, 107, 113, 134, 135, 137, 139, 142, 144, 147, 148, 158, 161, 163, 166, 175, 177, 189, 192, 197, 204, 213, 216, 227, 232, 233, 247, 251, 254, 265, 276, 278, 279, 284, 287], "non": [1, 12, 15, 50, 59, 60, 62, 71, 73, 78, 80, 83, 89, 96, 99, 100, 128, 129, 130, 132, 140, 144, 145, 147, 148, 149, 155, 156, 159, 161, 163, 166, 175, 177, 179, 186, 189, 190, 191, 197, 198, 204, 206, 222, 230, 232, 233, 247, 249, 254, 259, 263, 265, 272, 287], "period": [1, 4, 6, 14, 18, 19, 20, 25, 30, 47, 55, 58, 63, 71, 79, 89, 129, 132, 137, 139, 140, 144, 145, 147, 179, 190, 191, 204, 232, 240, 245, 258, 263, 269, 270, 276, 287], "waverd": [1, 2], "wavederf": [1, 2, 232], "structure_charg": 1, "chunweizhu": 1, "temcalcul": [1, 9, 14, 42, 45], "munrojm": 1, "airssprovid": [1, 8, 9, 173, 225], "as_dict": [1, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 23, 24, 25, 26, 29, 30, 31, 37, 53, 55, 61, 62, 63, 72, 74, 76, 77, 80, 83, 86, 90, 91, 94, 96, 97, 100, 105, 112, 113, 135, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 152, 154, 155, 156, 158, 160, 162, 164, 166, 167, 173, 174, 175, 177, 179, 181, 185, 187, 188, 189, 190, 196, 197, 198, 200, 201, 203, 207, 210, 211, 212, 213, 215, 219, 220, 222, 225, 226, 228, 230, 232, 233, 246, 247, 248, 249, 250, 253, 261, 262, 264, 267, 277], "gpetretto": 1, "outcar": [1, 9, 58, 96, 100, 121, 173, 190, 219, 228, 232, 233], "handl": [1, 4, 6, 47, 96, 120, 122, 126, 128, 139, 158, 159, 168, 171, 183, 189, 206, 212, 221, 232, 233, 250, 252, 254], "airss": [1, 225], "search": [1, 2, 4, 6, 15, 16, 25, 29, 30, 33, 47, 60, 62, 69, 70, 71, 74, 89, 90, 128, 130, 147, 148, 156, 160, 172, 184, 189, 191, 204, 206, 215, 223, 224, 225, 232, 254, 256, 263, 264, 273], "attributeerror": [1, 144, 145, 147], "disord": [1, 4, 5, 6, 8, 9, 12, 14, 55, 58, 62, 71, 90, 107, 133, 138, 145, 147, 148, 150, 185, 254, 263, 264, 265, 278], "get_cn": [1, 8, 9, 14, 71], "get_bonded_structur": [1, 8, 9, 14, 47, 71, 92], "crystalnn": [1, 8, 9, 14, 47, 71, 92], "other": [1, 2, 3, 4, 5, 6, 11, 15, 22, 25, 26, 28, 29, 30, 34, 43, 45, 50, 54, 60, 62, 63, 71, 73, 76, 79, 80, 82, 83, 89, 90, 94, 95, 96, 101, 103, 104, 108, 109, 110, 113, 123, 130, 137, 140, 144, 145, 146, 147, 148, 150, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 175, 176, 181, 183, 184, 186, 187, 189, 190, 191, 192, 197, 201, 204, 205, 206, 208, 212, 213, 215, 222, 223, 225, 226, 230, 232, 233, 239, 248, 251, 252, 254, 257, 263, 264, 265, 266, 268, 269, 270, 272, 276, 287], "nearneighbor": [1, 8, 9, 14, 47, 63, 71, 213], "standard_with_comp_rang": 1, "lobsterin": [1, 9, 173, 211, 212], "get_orbit_and_gener": 1, "spacegroup": [1, 4, 6, 8, 9, 53, 147, 148, 149, 168, 225, 253, 254, 256, 261, 278], "nheinsdorf": 1, "thermal": [1, 50, 80, 85, 144, 156, 201, 226, 249, 252, 285], "displac": [1, 4, 6, 90, 130, 147, 148, 150, 217, 232, 247, 252, 263, 264, 265, 269, 270, 282], "matric": [1, 50, 70, 88, 140, 143, 149, 214, 232, 252, 254, 256], "number": [1, 3, 5, 8, 9, 10, 11, 12, 13, 15, 17, 20, 25, 26, 28, 29, 34, 40, 45, 47, 53, 54, 55, 58, 59, 62, 63, 66, 70, 71, 73, 75, 76, 78, 79, 80, 82, 83, 86, 89, 90, 92, 94, 96, 99, 101, 103, 107, 108, 109, 111, 114, 128, 129, 130, 133, 134, 135, 137, 138, 139, 140, 141, 144, 145, 147, 148, 149, 150, 155, 156, 158, 159, 160, 161, 164, 166, 168, 172, 175, 176, 177, 178, 179, 180, 184, 185, 186, 189, 190, 191, 192, 195, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 219, 221, 223, 225, 226, 227, 230, 231, 232, 233, 234, 235, 247, 248, 249, 250, 251, 254, 255, 256, 258, 263, 264, 265, 266, 272, 274, 276, 278, 287], "signific": [1, 2, 5, 53, 55, 89, 114, 150, 204, 230, 232, 274], "digit": [1, 189], "henriquemiranda": [1, 247], "suffici": [1, 62, 63, 147, 148, 189, 191, 254], "cover": [1, 40, 86, 156, 214, 276], "about": [1, 2, 20, 25, 28, 29, 34, 41, 62, 71, 86, 96, 130, 143, 147, 148, 152, 155, 156, 164, 168, 172, 189, 213, 214, 216, 232, 240, 277], "70": [1, 5, 54, 141, 185, 221], "80": [1, 89, 96, 131, 141, 148, 152, 189, 221, 223, 279, 285], "seamless": 1, "whether": [1, 3, 11, 12, 13, 15, 20, 25, 26, 28, 29, 30, 32, 34, 40, 43, 44, 46, 47, 50, 51, 55, 58, 59, 62, 63, 66, 71, 73, 75, 76, 77, 79, 80, 83, 85, 88, 90, 92, 95, 96, 99, 100, 107, 121, 128, 129, 130, 132, 136, 137, 138, 139, 140, 142, 144, 145, 147, 148, 149, 150, 155, 156, 158, 160, 161, 162, 163, 165, 166, 168, 175, 184, 185, 187, 189, 190, 191, 195, 197, 201, 204, 205, 206, 208, 213, 214, 219, 223, 224, 225, 230, 232, 233, 245, 247, 249, 251, 254, 255, 256, 257, 263, 264, 265, 266, 269, 272, 276, 278, 279, 282, 284], "old": [1, 3, 137, 147, 171, 230, 233], "mprester2": 1, "basic": [1, 4, 6, 29, 53, 56, 71, 79, 103, 109, 110, 136, 144, 145, 146, 147, 149, 150, 155, 158, 159, 160, 162, 164, 174, 179, 181, 187, 189, 190, 191, 193, 199, 208, 215, 219, 223, 232, 233, 236, 240, 248, 254, 274], "final": [1, 5, 16, 26, 46, 58, 66, 79, 85, 86, 89, 93, 100, 130, 140, 148, 164, 181, 201, 219, 224, 231, 232, 233, 249, 263, 272, 276, 287], "analysi": [1, 2, 3, 4, 5, 6, 8, 9, 107, 109, 110, 112, 120, 121, 128, 129, 130, 136, 140, 147, 148, 150, 156, 160, 164, 166, 181, 189, 190, 213, 215, 223, 230, 232, 233, 241, 246, 252, 260, 263], "standard": [1, 5, 16, 25, 28, 34, 47, 50, 51, 52, 59, 66, 69, 78, 79, 80, 81, 82, 86, 113, 128, 130, 132, 137, 140, 144, 145, 147, 149, 151, 156, 160, 161, 172, 187, 188, 189, 191, 199, 201, 210, 212, 223, 224, 230, 231, 233, 251, 254, 256, 257, 258, 259, 263, 264, 265, 269, 276, 286, 287], "older": [1, 3, 4, 5, 6, 214, 217, 233], "replac": [1, 2, 4, 6, 8, 9, 12, 63, 73, 110, 135, 137, 147, 160, 164, 175, 191, 192, 205, 206, 217, 224, 227, 231, 263, 264, 272, 275, 287], "newer": [1, 4, 5, 6, 158, 191, 217, 230], "through": [1, 4, 6, 16, 34, 46, 55, 63, 71, 79, 82, 85, 93, 94, 96, 143, 147, 148, 149, 150, 161, 171, 206, 230, 232, 233, 238, 254, 264, 273, 285, 287], "instal": [1, 2, 3, 4, 6, 8, 9, 70, 71, 122, 132, 147, 173, 184, 204, 216, 263, 264, 275, 287], "subsequ": [1, 3, 4, 5, 6, 137, 140, 146, 147, 148, 224, 233, 254, 263, 264, 287], "via": [1, 2, 3, 4, 5, 6, 40, 41, 50, 66, 71, 79, 128, 130, 144, 147, 149, 161, 163, 164, 171, 175, 189, 191, 209, 232, 233, 254, 263, 286, 287], "relev": [1, 5, 16, 21, 23, 45, 52, 63, 66, 71, 80, 83, 96, 109, 114, 137, 144, 147, 148, 158, 168, 213, 223, 232, 287], "develop": [1, 2, 3, 108, 156, 159, 160, 170, 172, 201, 223, 232, 233, 271, 272, 285, 287], "separ": [1, 5, 16, 26, 28, 30, 34, 63, 80, 89, 104, 130, 137, 139, 146, 151, 185, 189, 190, 191, 205, 206, 221, 222, 223, 233, 265, 277], "repositori": [1, 3, 4, 5, 6], "There": [1, 2, 3, 4, 6, 63, 76, 94, 96, 113, 140, 144, 147, 148, 155, 159, 212, 232, 247, 257, 258, 263, 287], "exist": [1, 2, 4, 5, 6, 11, 26, 28, 29, 45, 50, 54, 63, 71, 73, 77, 79, 80, 83, 90, 94, 129, 136, 147, 148, 158, 159, 161, 164, 168, 179, 181, 187, 189, 190, 199, 206, 210, 225, 230, 233, 254, 268, 272, 276, 287], "pycdt": 1, "question": [1, 4, 6], "our": [1, 2, 3, 4, 5, 6, 58, 223, 231, 286], "document": [1, 3, 4, 5, 6, 53, 55, 66, 110, 152, 159, 164, 171, 172, 178, 184, 189, 205, 206, 227, 229, 232, 263, 272, 276, 287], "prepar": [1, 2, 4, 6, 25, 101, 233], "2582": [1, 2], "welcom": [1, 3, 4, 5, 6, 286], "contributor": [1, 4, 6, 148, 272], "naveensrinivasan": [1, 286], "xivh": [1, 286], "yang": [1, 152, 272, 286], "ruoxi": [1, 286], "cajfish": [1, 286], "mjwen": [1, 286], "partial": [1, 12, 45, 128, 129, 147, 149, 151, 156, 160, 179, 232, 233, 248, 263, 284, 287], "boundari": [1, 4, 6, 9, 30, 40, 47, 58, 61, 62, 63, 79, 83, 132, 140, 145, 147, 173, 203, 204, 205, 233, 245, 263, 269, 270, 284, 287], "condit": [1, 4, 6, 25, 28, 29, 30, 35, 46, 47, 50, 60, 79, 80, 82, 83, 132, 140, 145, 147, 168, 179, 190, 213, 257, 269, 270, 272, 287], "2429": 1, "element": [1, 2, 3, 4, 6, 8, 9, 11, 14, 17, 25, 34, 35, 40, 41, 44, 45, 46, 47, 48, 50, 51, 55, 58, 60, 62, 64, 66, 71, 73, 76, 77, 78, 79, 80, 83, 86, 88, 89, 90, 96, 101, 103, 104, 107, 108, 109, 110, 117, 130, 132, 135, 137, 138, 139, 140, 142, 144, 145, 147, 148, 150, 152, 155, 156, 160, 161, 162, 163, 166, 168, 172, 173, 174, 175, 179, 181, 186, 188, 189, 190, 191, 195, 197, 199, 204, 213, 215, 217, 225, 226, 228, 230, 231, 232, 233, 241, 247, 248, 251, 263, 273, 276, 277, 282, 284, 285, 287], "from_nam": [1, 8, 9, 135, 144, 152], "2567": 1, "absorpt": [1, 88, 102, 103, 148, 198, 199, 232, 233, 282], "2320": 1, "enhanc": [1, 277], "lammp": [1, 8, 9, 173, 287], "xyz": [1, 4, 6, 8, 9, 147, 173, 184, 190, 204, 216, 218, 238, 239, 241, 278, 287], "2538": 1, "vertic": [1, 26, 40, 43, 47, 71, 80, 83, 89, 101, 201, 269, 284], "voltageprofileplott": [1, 9, 105, 106, 111], "get_plotly_figur": [1, 9, 105, 106, 111], "2552": 1, "acrutt": 1, "color": [1, 29, 40, 54, 63, 80, 96, 101, 111, 161, 251, 276, 282, 284], "2559": 1, "abil": [1, 189], "voronoi_distance_cutoff": [1, 28], "chemenv": [1, 8, 9, 14, 213], "2568": 1, "oxi_state_guess": [1, 8, 9, 135, 137, 139, 147], "2566": 1, "converg": [1, 8, 9, 53, 55, 79, 80, 82, 96, 132, 147, 148, 149, 156, 160, 173, 188, 189, 190, 191, 199, 205, 208, 223, 226, 228, 232, 233, 267, 285], "aimd": 1, "2571": 1, "continu": [1, 2, 3, 4, 6, 25, 26, 28, 29, 36, 90, 160, 161, 213, 255], "mode": [1, 4, 6, 9, 50, 51, 73, 82, 90, 103, 121, 130, 146, 147, 151, 156, 160, 161, 162, 164, 173, 174, 175, 176, 177, 178, 179, 181, 189, 191, 199, 201, 215, 217, 219, 221, 223, 230, 232, 233, 247, 249, 250, 251, 268, 274, 278], "2533": 1, "duplic": [1, 11, 15, 55, 63, 89, 94, 147, 149, 181, 204, 254, 269, 270], "site": [1, 2, 4, 5, 6, 8, 9, 11, 12, 14, 15, 17, 21, 22, 23, 25, 26, 28, 29, 30, 33, 34, 39, 47, 53, 55, 58, 62, 63, 71, 73, 74, 75, 78, 79, 82, 84, 89, 90, 92, 95, 96, 101, 103, 107, 117, 128, 129, 130, 134, 135, 136, 137, 138, 139, 140, 144, 147, 148, 150, 155, 156, 158, 159, 160, 161, 166, 168, 172, 173, 175, 178, 179, 185, 189, 190, 192, 195, 197, 198, 199, 204, 210, 213, 214, 219, 225, 230, 232, 233, 241, 248, 251, 252, 254, 255, 257, 260, 261, 263, 264, 265, 277, 278, 284, 285, 287], "magnet": [1, 8, 9, 14, 90, 121, 128, 129, 130, 134, 143, 147, 159, 161, 173, 175, 185, 189, 190, 192, 228, 232, 233, 254, 255, 257, 258, 259, 263], "moment": [1, 4, 5, 6, 58, 73, 74, 75, 78, 96, 129, 140, 143, 144, 147, 159, 160, 185, 189, 192, 206, 233, 254, 255, 257, 258], "hwen": 1, "aseatomsadaptor": [1, 8, 9, 173, 182], "2545": 1, "gr\u00fcneisen": 1, "paramet": [1, 5, 8, 9, 11, 12, 13, 15, 16, 17, 20, 21, 22, 23, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 113, 114, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 282, 283, 284, 285, 287], "2543": [1, 279], "comment": [1, 9, 58, 173, 174, 175, 177, 185, 186, 189, 191, 197, 199, 204, 206, 218, 228, 230, 232], "kpoint": [1, 8, 9, 113, 154, 155, 156, 161, 173, 175, 188, 189, 190, 191, 199, 212, 214, 219, 225, 228, 230, 231, 232, 233, 234, 247, 254, 255, 257], "2549": 1, "complex": [1, 3, 25, 28, 62, 76, 80, 139, 156, 161, 178, 187, 189, 204, 208, 217, 231, 232, 247, 249, 263], "2555": 1, "jacksund": 1, "equal": [1, 22, 26, 30, 34, 70, 71, 74, 76, 83, 90, 96, 137, 140, 143, 144, 147, 148, 149, 151, 155, 156, 158, 160, 163, 166, 177, 181, 189, 212, 213, 214, 232, 233, 248, 254, 264, 269, 274, 279], "__iter__": 1, "inputset": [1, 8, 9, 163, 173, 187, 205, 206, 208, 216, 233, 287], "2575": 1, "neg": [1, 34, 55, 71, 73, 75, 80, 92, 96, 128, 129, 137, 144, 149, 159, 160, 165, 192, 230, 249], "convent": [1, 3, 8, 9, 37, 47, 50, 58, 62, 69, 100, 101, 108, 128, 129, 132, 137, 143, 148, 152, 155, 172, 175, 178, 185, 190, 191, 192, 195, 210, 230, 233, 247, 249, 252, 253, 254, 255, 257, 258, 265, 283], "electron": [1, 4, 5, 6, 8, 9, 45, 58, 62, 73, 75, 96, 99, 128, 129, 130, 137, 140, 142, 144, 147, 151, 154, 156, 159, 160, 164, 173, 174, 175, 177, 179, 188, 189, 191, 198, 201, 215, 219, 223, 230, 232, 233, 250, 254, 257, 258, 263, 287], "update_charge_from_potcar": [1, 9, 173, 228, 232], "2577": 1, "ensur": [1, 3, 4, 5, 6, 51, 54, 63, 70, 83, 95, 109, 128, 138, 144, 145, 146, 148, 149, 156, 159, 163, 171, 187, 191, 199, 224, 230, 232, 233, 255, 257, 263, 264], "appli": [1, 11, 12, 13, 17, 21, 25, 29, 36, 46, 50, 51, 62, 69, 70, 71, 73, 79, 80, 83, 89, 90, 114, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 155, 156, 159, 163, 164, 165, 168, 170, 175, 177, 185, 187, 189, 199, 201, 204, 206, 223, 225, 230, 231, 233, 248, 249, 262, 263, 264, 265, 266, 277, 282, 284, 286, 287], "vasprun": [1, 4, 6, 9, 88, 104, 113, 121, 147, 150, 160, 161, 168, 173, 212, 214, 228, 231, 232, 233, 287], "xml": [1, 4, 6, 88, 113, 121, 147, 150, 152, 160, 179, 195, 212, 214, 231, 232, 233, 287], "2579": 1, "chore": 1, "permiss": [1, 258, 272], "action": [1, 4, 6, 225], "2547": 1, "2548": 1, "2561": 1, "clarif": 1, "usag": [1, 2, 3, 5, 54, 100, 130, 147, 150, 151, 156, 159, 160, 161, 171, 172, 175, 179, 205, 230, 251, 263, 282], "inputfil": [1, 8, 9, 173, 187, 205, 206, 208, 216, 221, 287], "2570": 1, "improv": [1, 3, 4, 5, 6, 114, 129, 137, 139, 142, 166, 232, 233], "messag": [1, 4, 6, 66, 86, 130, 132, 168, 191, 268], "2572": 1, "2573": 1, "2580": 1, "notic": [1, 264, 272, 287], "incorpor": [1, 3, 63, 142, 163, 232], "futur": [1, 2, 4, 6, 83, 96, 147, 148, 184, 191, 231], "geometri": [1, 26, 27, 28, 29, 39, 51, 59, 70, 76, 150, 181, 184, 190, 191, 201, 215, 221, 223, 225, 241, 285], "2521": 1, "2525": 1, "2531": [1, 279], "criteria": [1, 11, 15, 50, 62, 69, 71, 77, 99, 108, 147, 148, 168, 189, 191, 263], "get_entries_in_chemsi": [1, 287], "shyuep": 1, "sulfide_typ": [1, 8, 9, 14, 89], "sometim": [1, 2, 62, 71, 147, 161, 166, 184, 189, 225, 230, 232, 263, 287], "becaus": [1, 2, 3, 4, 5, 6, 58, 62, 64, 71, 74, 76, 90, 96, 113, 144, 148, 150, 156, 163, 168, 177, 190, 210, 217, 219, 221, 223, 224, 232, 233, 238, 254], "toler": [1, 4, 6, 8, 9, 14, 15, 17, 28, 29, 30, 34, 47, 50, 53, 55, 58, 62, 68, 69, 70, 71, 74, 76, 80, 82, 84, 86, 90, 96, 133, 136, 137, 138, 140, 143, 145, 147, 148, 149, 155, 156, 160, 161, 165, 166, 177, 185, 189, 195, 204, 216, 232, 233, 243, 244, 245, 254, 255, 256, 257, 260, 263, 265, 269, 270, 278, 279, 283, 284, 287], "2518": [1, 279], "wrong": [1, 62, 163, 181, 206, 233, 252], "orbitalwis": 1, "interact": [1, 5, 40, 53, 55, 62, 74, 129, 133, 134, 141, 142, 147, 151, 161, 191, 213, 221, 223, 233, 255, 263, 273, 286], "2520": 1, "pointgroupanalyz": [1, 8, 9, 253, 254], "rotat": [1, 8, 9, 15, 28, 29, 34, 62, 68, 70, 76, 135, 140, 143, 147, 148, 149, 159, 161, 189, 191, 241, 254, 263, 265, 284], "2522": 1, "serial": [1, 13, 37, 55, 83, 114, 140, 141, 144, 147, 149, 152, 164, 166, 177, 232, 279], "2514": 1, "qianchenqc": [1, 286], "ialgo": 1, "tag": [1, 4, 6, 9, 13, 73, 84, 148, 159, 173, 196, 197, 198, 199, 201, 229, 230, 232, 284], "algo": [1, 28, 29, 55, 63, 95, 140, 175, 184, 233, 264, 265], "recommend": [1, 2, 3, 5, 11, 47, 58, 79, 80, 89, 137, 139, 144, 171, 175, 189, 191, 204, 223, 230, 232, 233, 287], "www": [1, 4, 5, 6, 55, 99, 133, 142, 144, 156, 172, 212, 214, 232, 235, 241, 258, 272, 287], "wiki": [1, 5, 76, 143, 144, 152, 159, 229, 233, 269], "php": [1, 159, 232, 258], "2404": 1, "maximum": [1, 5, 11, 13, 17, 20, 25, 26, 28, 29, 30, 43, 44, 45, 46, 58, 62, 63, 69, 70, 71, 80, 82, 88, 89, 90, 96, 100, 107, 108, 110, 137, 142, 144, 148, 149, 156, 158, 160, 165, 175, 176, 179, 189, 191, 201, 223, 225, 232, 233, 249, 250, 251, 254, 263, 265, 274, 276], "distanc": [1, 8, 9, 11, 14, 15, 17, 18, 24, 25, 28, 29, 30, 31, 34, 45, 47, 58, 63, 71, 74, 76, 77, 79, 80, 89, 90, 96, 100, 130, 135, 136, 138, 140, 143, 145, 147, 148, 156, 161, 163, 186, 197, 204, 209, 232, 245, 251, 254, 263, 264, 265, 269, 272, 283], "group": [1, 4, 5, 6, 8, 9, 13, 26, 28, 34, 47, 58, 60, 63, 73, 76, 84, 90, 100, 130, 135, 137, 139, 140, 144, 147, 148, 149, 165, 166, 168, 176, 178, 185, 189, 190, 197, 204, 210, 224, 230, 232, 233, 251, 253, 254, 255, 257, 258, 259, 260, 265, 285, 287], "accord": [1, 15, 26, 45, 47, 50, 51, 52, 70, 71, 76, 78, 80, 81, 82, 83, 96, 103, 136, 137, 144, 147, 149, 155, 156, 161, 168, 175, 176, 177, 178, 179, 186, 189, 191, 192, 204, 217, 247, 254, 255], "2509": 1, "nmr": [1, 8, 9, 14, 63, 146, 190, 191, 232, 233], "unit": [1, 2, 8, 9, 15, 25, 29, 45, 50, 54, 55, 58, 62, 63, 68, 70, 78, 79, 80, 88, 89, 96, 101, 107, 108, 111, 130, 132, 134, 135, 138, 140, 143, 144, 145, 147, 148, 149, 155, 156, 159, 160, 161, 164, 165, 173, 174, 175, 177, 179, 180, 181, 185, 189, 191, 195, 198, 203, 205, 206, 209, 214, 215, 226, 230, 232, 233, 241, 248, 251, 254, 257, 258, 263, 264, 265, 269, 283, 284], "recent": [1, 4, 6, 71], "least": [1, 3, 4, 6, 11, 28, 34, 50, 54, 62, 63, 76, 79, 90, 95, 114, 137, 139, 144, 161, 177, 178, 179, 190, 191, 204, 208, 219, 224, 230, 232, 263], "mayb": [1, 191, 233], "even": [1, 2, 4, 5, 6, 47, 79, 108, 114, 137, 147, 168, 175, 189, 191, 192, 221, 223, 225, 230, 232, 256, 264, 265, 269, 272, 287], "fraricci": 1, "definit": [1, 16, 25, 35, 46, 47, 53, 58, 66, 71, 73, 90, 108, 114, 136, 144, 147, 148, 151, 160, 166, 181, 183, 186, 189, 206, 234, 249, 250, 254, 255, 257], "wswq": [1, 9, 173, 228, 232], "mp": [1, 26, 29, 32, 156, 163, 171, 172, 205, 225, 233, 287], "longer": [1, 136, 147, 148, 233, 254], "avoid": [1, 79, 80, 156, 158, 168, 191, 206, 263, 269], "constantli": [1, 2, 287], "rewrit": 1, "caus": [1, 2, 59, 71, 184, 191, 207, 233, 269, 272], "discharg": [1, 108, 109, 110], "convers": [1, 8, 9, 45, 50, 79, 80, 108, 109, 115, 135, 140, 149, 151, 182, 193, 202, 251, 287], "batteri": [1, 8, 9, 11, 66, 96, 105, 166, 284], "peikai": 1, "pylint": 1, "commit": [1, 3, 4, 6], "skip": [1, 26, 29, 85, 90, 140, 147, 179, 189, 204, 241, 270, 273], "reduct": [1, 15, 51, 90, 107, 140, 147, 148, 263], "structurematch": [1, 8, 9, 11, 14, 84, 90, 147, 168], "group_structur": [1, 8, 9, 14, 90], "lan496": 1, "notimpl": 1, "comparison": [1, 11, 25, 29, 62, 76, 77, 80, 90, 138, 147, 148, 161, 166, 251, 254, 256, 279], "bsplotter": [1, 2, 8, 9, 154, 161, 214], "2475": 1, "problemat": 1, "2477": 1, "emerg": [1, 142], "bugfix": [1, 4, 6], "circular": 1, "ASE": [1, 5, 54, 147, 182], "adaptor": [1, 182, 184, 202, 287], "cation": [1, 25, 28, 29, 34, 35, 71, 128, 129, 132, 144, 213, 285], "revampt": 1, "abstract": [1, 11, 22, 25, 26, 28, 33, 36, 41, 43, 53, 54, 76, 90, 108, 113, 147, 162, 163, 164, 175, 177, 179, 187, 199, 233, 256, 266], "interfac": [1, 4, 6, 8, 9, 14, 40, 55, 66, 111, 115, 128, 129, 130, 131, 132, 134, 135, 141, 144, 148, 152, 161, 163, 170, 171, 172, 177, 179, 184, 187, 216, 217, 233, 251, 254, 282, 285, 287], "center": [1, 15, 20, 28, 29, 34, 58, 71, 76, 89, 96, 128, 138, 140, 146, 147, 148, 160, 161, 175, 177, 197, 212, 230, 231, 232, 233, 241, 245, 254, 260, 263, 264, 284], "fill": [1, 80, 142, 160, 165, 176, 206, 232, 233, 265, 286], "skew": [1, 79, 160, 232], "kurtosi": [1, 160], "cleanup": 1, "2439": 1, "diagram": [1, 4, 6, 40, 41, 66, 80, 83, 96, 109, 163, 164, 167, 168, 257, 285], "2447": 1, "mattmcdermott": 1, "2434": [1, 279], "integ": [1, 14, 18, 24, 25, 34, 38, 51, 58, 62, 70, 71, 73, 80, 90, 100, 107, 113, 137, 139, 140, 142, 143, 144, 147, 148, 151, 152, 158, 161, 177, 179, 191, 197, 204, 213, 219, 222, 226, 230, 232, 234, 254, 263, 265, 272, 278], "g": [1, 2, 3, 4, 5, 6, 12, 13, 15, 17, 20, 22, 23, 25, 26, 28, 29, 40, 41, 43, 47, 48, 50, 54, 58, 59, 62, 63, 66, 71, 73, 75, 80, 83, 84, 85, 86, 89, 90, 92, 93, 94, 96, 97, 100, 101, 104, 107, 108, 109, 110, 128, 129, 130, 132, 133, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 160, 161, 163, 164, 166, 168, 172, 175, 176, 177, 179, 184, 185, 186, 187, 189, 190, 191, 197, 199, 201, 204, 205, 206, 207, 208, 212, 213, 214, 215, 216, 217, 219, 221, 222, 223, 224, 227, 229, 230, 232, 233, 247, 250, 251, 252, 254, 256, 257, 258, 263, 264, 265, 269, 270, 272, 276, 277, 278, 282, 284, 285, 287], "vector": [1, 4, 6, 15, 20, 34, 40, 45, 50, 51, 58, 62, 63, 70, 71, 76, 78, 79, 80, 83, 90, 138, 140, 143, 145, 147, 148, 149, 155, 159, 161, 175, 177, 186, 201, 210, 217, 226, 230, 232, 233, 236, 243, 244, 247, 249, 252, 254, 255, 256, 257, 259, 263, 264, 265, 269, 270, 284, 287], "cut": [1, 3, 29, 71, 179, 225, 232], "wavecar": [1, 9, 99, 173, 214, 228, 232, 233], "2410": [1, 279], "yml": 1, "linter": 1, "2440": 1, "citat": [1, 4, 6], "2448": 1, "annot": [1, 40, 43, 63, 71, 75, 80, 96, 276], "2432": 1, "apply_oper": [1, 8, 9, 135, 147], "2433": 1, "cach": [1, 80], "compat": [1, 4, 5, 6, 8, 9, 29, 54, 73, 74, 80, 83, 130, 144, 147, 148, 162, 164, 166, 168, 191, 211, 214, 215, 217, 223, 228, 230, 232, 257], "2450": 1, "previous": [1, 59, 80, 114, 163, 168], "upon": [1, 2, 66, 232, 257], "led": 1, "corrupt": 1, "mani": [1, 3, 4, 5, 6, 12, 13, 40, 47, 53, 55, 60, 73, 76, 89, 108, 120, 130, 137, 139, 140, 144, 147, 148, 161, 162, 163, 164, 167, 168, 172, 184, 186, 189, 190, 208, 215, 233, 251, 263, 264, 266, 269, 273, 282, 287], "occur": [1, 4, 6, 17, 60, 71, 155, 163, 217, 263], "dure": [1, 2, 5, 11, 59, 71, 73, 76, 80, 149, 150, 189, 190, 191, 206, 214, 225, 231, 232, 257], "jonring": [1, 286], "critic": [1, 2, 4, 5, 6, 45, 74, 80, 101, 110, 130, 134, 144, 257], "overwritten": [1, 147], "wai": [1, 2, 3, 4, 5, 6, 71, 73, 76, 90, 94, 95, 96, 100, 108, 128, 147, 148, 152, 158, 161, 171, 172, 175, 187, 189, 190, 191, 192, 206, 227, 231, 232, 233, 251, 254, 263, 272, 282, 287], "basi": [1, 34, 70, 71, 80, 90, 99, 122, 140, 148, 149, 160, 161, 164, 175, 181, 189, 190, 191, 192, 200, 201, 212, 214, 215, 221, 223, 225, 233, 255, 257, 269], "2p": [1, 142, 161, 212, 233], "Be": [1, 8, 9, 77, 135, 144, 233], "problem": [1, 47, 50, 63, 147, 191, 197, 225, 243, 244, 257, 265], "probabl": [1, 3, 5, 17, 28, 62, 71, 92, 93, 94, 101, 137, 139, 146, 156, 263], "ispin": [1, 9, 173, 228, 231, 232, 233], "complete_do": [1, 9, 161, 173, 188, 190, 198, 228, 232], "chargemol": [1, 129], "caller": [1, 28, 128], "aseatomadaptor": 1, "magmom": [1, 8, 9, 14, 58, 72, 73, 74, 134, 138, 143, 144, 145, 147, 148, 150, 154, 159, 233, 255, 257, 278], "bigfix": 1, "gzip": [1, 114, 128, 129, 130, 185], "doscar": [1, 9, 173, 211, 214], "quantumespresso": 1, "k": [1, 4, 6, 8, 9, 17, 28, 29, 40, 43, 47, 50, 62, 66, 74, 77, 79, 85, 88, 96, 97, 101, 103, 104, 134, 135, 140, 144, 146, 147, 148, 151, 155, 156, 161, 163, 164, 175, 177, 189, 190, 191, 198, 199, 204, 219, 230, 231, 232, 233, 248, 249, 254, 255, 257, 272, 279, 282, 285], "grid": [1, 25, 29, 43, 54, 79, 88, 130, 156, 160, 161, 175, 176, 177, 179, 186, 189, 191, 200, 212, 214, 217, 219, 225, 226, 230, 231, 232, 233, 234, 249, 250, 251, 254], "vorwerkc": 1, "__repr__": 1, "where": [1, 2, 5, 12, 15, 16, 17, 25, 28, 43, 45, 46, 47, 58, 59, 60, 63, 66, 71, 76, 79, 80, 85, 89, 90, 94, 95, 96, 100, 103, 128, 132, 133, 137, 144, 147, 148, 149, 155, 156, 159, 160, 161, 164, 168, 175, 176, 177, 178, 181, 184, 186, 187, 189, 191, 195, 198, 199, 200, 201, 204, 206, 212, 216, 221, 223, 230, 231, 232, 233, 234, 247, 249, 250, 254, 258, 261, 263, 264, 265, 266, 269, 273, 274, 278, 287], "final_energi": [1, 8, 9, 173, 181, 201, 219, 228, 232], "report": [1, 58, 137, 139, 152, 159, 161, 163, 179, 190, 232], "e_0_energi": [1, 232], "desir": [1, 5, 41, 45, 64, 68, 71, 80, 83, 137, 140, 145, 148, 149, 159, 168, 172, 185, 187, 189, 190, 200, 208, 223, 231, 232, 233, 265, 278, 279], "print": [1, 4, 6, 80, 108, 109, 110, 129, 140, 144, 147, 148, 151, 163, 168, 177, 178, 179, 180, 181, 189, 190, 191, 197, 199, 201, 205, 206, 207, 215, 224, 229, 230, 231, 268, 278, 287], "out": [1, 3, 4, 5, 6, 41, 45, 55, 62, 63, 71, 74, 80, 89, 108, 130, 139, 147, 148, 181, 183, 184, 185, 189, 190, 191, 193, 200, 201, 215, 216, 224, 230, 233, 236, 254, 256, 263, 272, 286, 287], "sigma": [1, 9, 14, 61, 62, 78, 104, 146, 156, 160, 161, 173, 190, 201, 219, 224, 228, 231, 232, 233, 248, 251, 263, 265], "energy_fr_energi": 1, "free": [1, 3, 4, 5, 6, 80, 83, 85, 90, 96, 163, 164, 201, 232, 248, 251, 277], "toten": [1, 232], "consist": [1, 28, 50, 62, 66, 80, 143, 148, 149, 155, 159, 161, 163, 175, 186, 189, 191, 199, 204, 206, 230, 232, 233, 236, 238, 265, 287], "attribut": [1, 4, 6, 8, 9, 14, 17, 40, 62, 63, 80, 83, 86, 96, 109, 130, 144, 147, 148, 152, 164, 179, 185, 186, 187, 189, 190, 195, 198, 201, 204, 206, 214, 216, 219, 221, 224, 225, 230, 232, 254, 265, 272], "final_energy_wo_entrp": [1, 9, 173, 228, 232], "final_fr_energi": [1, 9, 173, 228, 232], "correspond": [1, 2, 13, 15, 20, 25, 26, 28, 29, 30, 36, 37, 40, 44, 45, 46, 50, 51, 55, 58, 62, 63, 66, 70, 71, 74, 76, 77, 78, 80, 82, 83, 88, 89, 90, 96, 101, 103, 110, 128, 129, 130, 132, 137, 138, 140, 147, 148, 149, 156, 158, 160, 161, 163, 168, 176, 177, 178, 186, 187, 190, 191, 206, 214, 216, 221, 223, 225, 230, 232, 233, 234, 236, 247, 250, 251, 252, 255, 258, 263, 264, 265, 269, 272], "e_wo_entrp": [1, 232], "e_fr_energi": [1, 232], "respect": [1, 22, 28, 29, 34, 50, 54, 62, 73, 74, 76, 79, 80, 83, 85, 89, 96, 138, 144, 146, 147, 149, 156, 160, 161, 168, 177, 185, 191, 198, 201, 205, 206, 215, 232, 236, 255, 258, 272, 287], "coupl": [1, 3, 63, 74, 78, 99, 156, 179, 190, 191, 215, 221, 223, 232, 233], "cluster": [1, 4, 6, 8, 9, 47, 127, 133, 147, 173, 196, 197, 199, 204, 215, 254, 263], "multiicipl": 1, "keyword": [1, 9, 12, 43, 54, 63, 73, 80, 132, 137, 149, 160, 161, 173, 175, 176, 179, 188, 189, 191, 197, 204, 223, 228, 230, 250, 251, 257, 263, 264, 266, 276], "keep_site_properti": [1, 254], "variou": [1, 4, 5, 6, 12, 13, 41, 42, 48, 50, 54, 61, 67, 69, 71, 97, 113, 115, 127, 136, 144, 156, 163, 164, 166, 204, 206, 223, 225, 232, 233, 254, 262, 267, 281, 284, 285, 287], "keep": [1, 3, 47, 50, 63, 73, 80, 108, 140, 147, 166, 175, 177, 190, 206, 208, 232, 254, 264], "after": [1, 2, 4, 5, 6, 12, 16, 28, 53, 55, 62, 63, 73, 80, 90, 94, 104, 143, 144, 148, 156, 161, 165, 171, 185, 189, 192, 201, 206, 216, 232, 254, 263, 272, 273], "transform": [1, 2, 5, 8, 9, 10, 12, 13, 15, 25, 30, 55, 62, 68, 70, 71, 73, 76, 80, 90, 135, 140, 143, 147, 148, 149, 160, 175, 189, 191, 231, 232, 254, 258, 259, 269, 277, 278, 283], "scan": [1, 168, 171, 176, 201, 221, 223, 233], "gga": [1, 17, 28, 79, 141, 152, 163, 168, 171, 191, 223, 230, 232, 233, 265, 285], "u": [1, 4, 6, 8, 9, 50, 62, 63, 76, 77, 135, 144, 148, 163, 168, 171, 179, 181, 189, 190, 230, 232, 233, 252, 285, 286], "mix": [1, 21, 25, 41, 62, 66, 79, 163, 168, 189, 191, 265, 278, 285], "scheme": [1, 2, 28, 40, 50, 59, 74, 95, 163, 164, 168, 175, 189, 191, 199, 225, 230, 233, 276, 284, 287], "live": [1, 172], "mixing_schem": [1, 8, 9, 162], "quantumexpresso": 1, "refactor": [1, 54, 141], "No": [1, 8, 9, 11, 25, 26, 35, 37, 53, 55, 90, 107, 135, 144, 147, 170, 204, 206, 225, 230, 265, 286], "proper": [1, 55, 58, 62, 97, 132, 139, 143, 197, 219, 222, 230, 232, 233, 254, 256, 277, 278, 287], "2022": [1, 2, 4, 6, 189, 191, 272], "switch": [1, 3, 161, 171, 191, 223, 263], "back": [1, 2, 4, 6, 59, 95, 137, 139, 147, 155, 225, 232, 254, 277, 284, 287], "date": [1, 3, 4, 5, 6, 172, 225], "introduc": [1, 4, 6, 129, 147, 189, 287], "temporari": [1, 2, 128, 130, 179], "measur": [1, 8, 9, 25, 26, 28, 29, 34, 36, 63, 64, 71, 73, 76, 89, 213, 226, 267, 268], "last": [1, 4, 6, 12, 13, 37, 55, 108, 147, 161, 189, 190, 191, 201, 224, 225, 232, 240, 268], "pin": [1, 2, 4, 6], "necessari": [1, 2, 3, 5, 50, 55, 58, 79, 95, 108, 113, 137, 149, 155, 156, 185, 189, 190, 210, 221, 223, 232, 263, 287], "incompat": [1, 4, 5, 6, 144, 163, 168, 185, 232], "py37": 1, "select": [1, 3, 5, 9, 15, 17, 40, 51, 76, 140, 144, 145, 147, 155, 156, 160, 161, 163, 164, 173, 174, 175, 176, 179, 189, 191, 195, 213, 215, 223, 230, 247, 254, 263, 264, 265], "dynam": [1, 15, 89, 147, 150, 163, 195, 215, 230, 263], "transfer": [1, 108, 128, 129, 130, 143, 198, 214, 233, 252, 254, 285], "point": [1, 2, 5, 26, 28, 29, 34, 40, 45, 46, 50, 54, 55, 58, 66, 76, 79, 80, 82, 83, 85, 96, 100, 101, 109, 111, 115, 130, 133, 140, 143, 144, 145, 147, 148, 149, 155, 156, 160, 161, 175, 177, 179, 181, 186, 189, 190, 191, 198, 200, 201, 204, 206, 215, 217, 219, 223, 226, 230, 231, 232, 233, 245, 247, 248, 250, 254, 255, 256, 257, 259, 260, 263, 264, 268, 269, 276, 278, 287], "automatic_density_by_length": [1, 9, 173, 228, 230], "densiti": [1, 4, 5, 6, 8, 9, 50, 71, 73, 79, 96, 108, 117, 128, 129, 130, 135, 144, 146, 147, 160, 161, 175, 179, 186, 189, 191, 198, 212, 214, 217, 221, 223, 225, 226, 230, 232, 233, 248, 251, 285], "each": [1, 4, 5, 6, 11, 12, 13, 16, 17, 25, 26, 28, 29, 30, 34, 36, 43, 45, 46, 50, 51, 53, 55, 58, 59, 60, 62, 63, 66, 69, 70, 71, 74, 75, 76, 79, 80, 82, 83, 85, 86, 88, 89, 90, 92, 94, 96, 100, 101, 103, 104, 108, 113, 128, 134, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 150, 151, 155, 156, 158, 159, 160, 161, 163, 165, 166, 168, 172, 175, 177, 179, 181, 184, 186, 189, 190, 191, 195, 197, 200, 201, 204, 205, 206, 207, 209, 213, 214, 216, 219, 221, 222, 223, 224, 226, 230, 232, 233, 245, 247, 249, 251, 252, 254, 255, 260, 263, 264, 265, 266, 269, 270, 272, 273, 282, 284, 287], "just": [1, 4, 6, 59, 71, 80, 84, 96, 100, 108, 113, 130, 137, 138, 139, 145, 146, 147, 148, 161, 190, 204, 224, 230, 232, 233, 254, 263, 264, 271, 275, 279, 287], "entir": [1, 3, 4, 6, 13, 59, 108, 114, 140, 150, 156, 187, 212, 216, 221, 230, 257, 264, 287], "volum": [1, 4, 6, 8, 9, 14, 45, 54, 58, 71, 85, 89, 90, 95, 96, 101, 107, 108, 109, 110, 128, 130, 135, 140, 144, 147, 156, 160, 166, 173, 203, 204, 216, 225, 228, 231, 232, 233, 248, 251, 263, 265, 267, 269, 279], "c": [1, 4, 5, 6, 8, 9, 14, 15, 18, 20, 29, 31, 34, 40, 45, 47, 50, 58, 59, 60, 62, 63, 66, 68, 71, 77, 80, 84, 89, 93, 94, 96, 97, 101, 107, 129, 132, 133, 135, 136, 138, 140, 144, 145, 147, 148, 151, 152, 154, 155, 156, 160, 164, 172, 178, 179, 185, 186, 191, 204, 212, 215, 221, 223, 230, 232, 233, 241, 248, 254, 256, 257, 258, 259, 263, 264, 265, 268, 272, 278, 279, 284, 285, 286, 287], "pyx": [1, 244], "hard": [1, 75, 144, 204, 264, 265], "kwsm": 1, "robust": [1, 4, 5, 6, 28, 36, 47, 63, 76, 128, 145, 149, 189, 191, 232, 264, 285, 287], "smart": [1, 232], "fermi": [1, 96, 155, 156, 158, 160, 161, 175, 190, 198, 231, 232, 282], "2303": 1, "2291": 1, "improp": [1, 47, 58, 149, 204, 233], "hybrid": [1, 141, 142, 191, 204, 222, 223, 232], "2298": 1, "wrap": [1, 150, 178, 284], "supercel": [1, 15, 47, 62, 74, 90, 133, 140, 147, 217, 226, 233, 247, 263, 265, 269, 283, 287], "cell": [1, 9, 12, 13, 15, 17, 20, 25, 29, 45, 47, 55, 58, 62, 70, 71, 73, 79, 87, 89, 90, 101, 107, 108, 130, 132, 138, 140, 143, 145, 147, 148, 150, 155, 156, 161, 166, 173, 175, 177, 185, 188, 189, 190, 191, 195, 200, 210, 212, 214, 217, 219, 226, 230, 232, 233, 236, 241, 248, 251, 254, 255, 256, 257, 258, 263, 264, 265, 283, 284], "2300": 1, "clearer": 1, "2301": 1, "lasph": [1, 233], "true": [1, 2, 3, 11, 12, 13, 15, 16, 20, 22, 25, 26, 28, 29, 30, 34, 37, 39, 40, 43, 44, 46, 47, 50, 54, 58, 59, 60, 62, 63, 66, 68, 71, 73, 75, 76, 77, 79, 80, 81, 83, 85, 88, 90, 93, 94, 95, 96, 99, 100, 101, 107, 108, 109, 110, 111, 113, 129, 130, 132, 134, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 155, 156, 158, 159, 160, 161, 163, 165, 166, 168, 172, 175, 176, 177, 178, 179, 181, 184, 185, 186, 187, 189, 190, 191, 197, 199, 200, 201, 204, 205, 206, 210, 212, 213, 214, 217, 222, 224, 225, 230, 231, 232, 233, 235, 236, 247, 249, 250, 251, 254, 256, 257, 263, 264, 265, 266, 268, 269, 270, 273, 274, 276, 278, 279, 283, 284], "meta": [1, 141, 190, 224, 232, 233], "vdw": [1, 190, 221, 232, 233], "2297": 1, "field": [1, 9, 25, 63, 71, 73, 74, 75, 78, 79, 130, 133, 134, 144, 155, 163, 172, 173, 174, 175, 176, 189, 190, 204, 205, 206, 213, 218, 224, 225, 230, 232, 233, 241, 251, 258, 277, 285], "2315": 1, "miss": [1, 5, 59, 71, 130, 144, 147, 163, 165, 176, 225, 233, 247, 276, 286], "mpscanrelaxset": [1, 9, 168, 173, 228, 233], "pbe": [1, 4, 5, 6, 9, 152, 173, 181, 188, 189, 191, 201, 219, 230, 233], "2316": 1, "xdatacar": 1, "lattic": [1, 2, 4, 6, 8, 9, 14, 15, 28, 43, 46, 47, 55, 58, 62, 63, 68, 69, 70, 71, 79, 89, 90, 95, 101, 132, 135, 138, 145, 147, 148, 150, 154, 155, 156, 159, 161, 173, 175, 177, 185, 186, 189, 190, 204, 210, 219, 225, 226, 230, 232, 233, 240, 241, 245, 247, 249, 251, 253, 254, 255, 257, 258, 259, 263, 265, 269, 270, 277, 279, 287], "2310": [1, 233, 285], "small": [1, 3, 4, 6, 62, 71, 76, 90, 95, 149, 189, 191, 217, 232, 263, 264, 273], "cutoff": [1, 25, 30, 37, 50, 53, 55, 58, 62, 71, 74, 89, 95, 133, 140, 175, 177, 179, 189, 190, 191, 192, 219, 232, 245], "chc273": 1, "2277": 1, "2284": 1, "2287": 1, "oddli": 1, "few": [1, 2, 3, 4, 6, 71, 73, 147, 148, 190, 191, 206, 232, 287], "2285": 1, "insertionelectrod": [1, 2, 9, 105, 106, 110], "2257": 1, "accident": 1, "track": [1, 73, 108, 190], "unset": [1, 9, 96, 173, 188, 189, 233], "execut": [1, 5, 11, 124, 128, 129, 130, 131, 132, 134, 170, 189, 192, 210, 216, 273, 279], "2296": 1, "doi": [1, 4, 6, 8, 9, 17, 28, 40, 55, 66, 70, 73, 77, 78, 80, 84, 85, 88, 93, 94, 96, 104, 130, 140, 143, 148, 156, 160, 163, 164, 172, 232, 233, 252, 254, 255, 257, 267, 271, 285], "2295": [1, 233, 285], "elemental_dos_do": 1, "2293": 1, "cutoffdictnn": [1, 8, 9, 14, 71], "ltalirz": 1, "2278": 1, "phasediagram": [1, 8, 9, 14, 66, 80, 96, 109, 164, 168, 287], "serializ": [1, 20, 25, 26, 29, 30, 100, 145, 147, 155, 158, 160, 161, 181, 201, 213, 232, 248, 250, 251, 264, 287], "2276": 1, "temporarili": 1, "2239": 1, "pend": 1, "investig": [1, 28, 80, 285], "slow": [1, 79, 80, 107, 184, 232, 263], "down": [1, 8, 9, 12, 80, 90, 107, 128, 134, 154, 155, 156, 158, 159, 160, 161, 170, 185, 186, 190, 204, 214, 232, 233, 263, 284], "nearest": [1, 11, 17, 63, 71, 74, 89, 140, 145, 147, 263, 264, 265, 278], "find": [1, 2, 4, 6, 15, 17, 21, 28, 37, 46, 47, 50, 52, 55, 58, 59, 62, 63, 66, 68, 69, 71, 74, 76, 79, 80, 83, 86, 90, 93, 94, 95, 96, 140, 147, 148, 149, 156, 160, 177, 179, 184, 185, 189, 190, 191, 195, 200, 204, 206, 212, 213, 221, 222, 224, 233, 243, 244, 254, 255, 256, 257, 260, 261, 263, 264, 265, 269, 283, 285, 287], "routin": [1, 137, 149, 197, 255, 273], "doe": [1, 3, 5, 11, 26, 28, 29, 45, 47, 50, 51, 54, 55, 58, 62, 63, 71, 80, 85, 94, 96, 130, 136, 139, 144, 147, 148, 150, 151, 156, 160, 172, 176, 177, 178, 179, 181, 187, 189, 190, 192, 206, 216, 225, 230, 231, 232, 233, 254, 257, 258, 263, 272, 275, 276, 277, 278, 279, 287], "behavior": [1, 5, 47, 58, 71, 90, 96, 99, 140, 147, 148, 175, 189, 206, 221, 230, 232, 233], "blokhin": [1, 286], "pzarabadip": 1, "wuxiaohua1011": 1, "janssenhen": 1, "penicillin0": [1, 286], "remind": 1, "accur": [1, 62, 63, 73, 83, 129, 156, 163, 191, 232, 233, 263, 264], "org": [1, 4, 5, 6, 40, 58, 66, 76, 77, 84, 85, 88, 96, 104, 130, 132, 143, 144, 163, 164, 171, 172, 196, 197, 204, 226, 232, 233, 235, 241, 252, 257, 258, 269, 272, 285, 287], "html": [1, 4, 5, 6, 55, 101, 152, 178, 196, 200, 204, 229, 235, 241, 278], "so": [1, 2, 3, 4, 5, 6, 15, 25, 26, 29, 55, 62, 63, 78, 83, 86, 96, 109, 113, 114, 128, 130, 140, 141, 144, 145, 147, 148, 158, 160, 161, 163, 164, 167, 177, 186, 189, 190, 191, 197, 213, 214, 222, 224, 225, 232, 233, 257, 258, 263, 264, 277, 279, 280, 286, 287], "acknowledg": [1, 4, 6, 77, 232, 285], "appropri": [1, 5, 50, 70, 71, 84, 96, 128, 130, 138, 148, 163, 177, 180, 190, 191, 221, 223, 230, 232, 233, 278, 286, 287], "form": [1, 4, 6, 34, 40, 48, 55, 62, 63, 71, 80, 81, 82, 83, 85, 89, 93, 94, 100, 101, 109, 113, 133, 137, 140, 143, 147, 148, 149, 152, 156, 158, 160, 161, 162, 163, 164, 165, 167, 168, 175, 177, 179, 180, 181, 186, 187, 189, 191, 209, 210, 211, 214, 216, 225, 228, 231, 232, 233, 234, 245, 248, 251, 252, 255, 257, 260, 261, 263, 264, 265, 266, 269, 272, 274, 277, 278, 282, 286, 287], "basephasediagram": 1, "been": [1, 2, 3, 4, 5, 6, 12, 15, 16, 23, 26, 28, 29, 55, 71, 76, 104, 147, 148, 149, 156, 161, 168, 172, 176, 177, 189, 190, 191, 206, 217, 230, 232, 247, 249, 254, 263, 285, 286, 287], "2b9911d": 1, "2242": 1, "interface_react": [1, 8, 9, 14], "plotli": [1, 40, 66, 80, 101, 111], "2233": 1, "nomad": [1, 172], "access": [1, 3, 29, 32, 71, 130, 170, 172, 179, 184, 189, 190, 214, 215, 219, 221, 223, 224, 225, 230, 232, 256, 265, 273], "1958": [1, 276], "phase": [1, 4, 6, 40, 41, 66, 80, 83, 96, 97, 109, 129, 144, 163, 164, 167, 168, 217, 232, 233, 285], "compyrhi": 1, "2263": [1, 279], "2264": 1, "2268": 1, "appear": [1, 8, 9, 29, 45, 63, 83, 173, 185, 205, 206, 225, 232], "tabl": [1, 45, 71, 77, 89, 93, 104, 130, 132, 137, 139, 144, 176, 179, 190, 224, 232, 254, 258, 259, 276, 278], "heatmap": [1, 276], "2272": 1, "2262": [1, 279], "chemical_system": [1, 8, 9, 14, 40, 135, 137], "match": [1, 8, 9, 14, 55, 68, 69, 70, 71, 75, 76, 84, 90, 108, 133, 135, 137, 140, 147, 148, 160, 166, 168, 189, 190, 191, 192, 206, 219, 222, 224, 232, 243, 244, 256, 257, 263, 269, 270, 273], "expect": [1, 2, 3, 5, 11, 34, 62, 71, 75, 100, 128, 132, 144, 151, 159, 160, 191, 205, 225, 232, 233, 254, 257, 263, 279], "comprhi": 1, "2249": 1, "param": [1, 25, 28, 32, 34, 37, 38, 39, 50, 63, 66, 69, 70, 71, 74, 79, 83, 96, 130, 133, 136, 140, 148, 155, 156, 158, 159, 164, 181, 185, 190, 197, 200, 206, 213, 214, 217, 223, 230, 233, 251, 252, 269, 278], "respons": [1, 50, 51, 79, 88, 170, 176, 179, 221], "2244": 1, "bandoverlap": [1, 9, 173, 211, 214], "2237": 1, "moladaptor": 1, "orioncohen": 1, "2269": 1, "incorrect": [1, 257], "2273": 1, "remove_site_properti": [1, 8, 9, 135, 147], "kmu": 1, "2256": 1, "across": [1, 58, 71, 80, 108, 109, 110, 137, 139, 199, 233], "2241": 1, "2247": 1, "2261": 1, "2232": 1, "signatur": [1, 265], "consid": [1, 4, 6, 16, 20, 23, 28, 30, 34, 40, 47, 54, 66, 69, 70, 71, 75, 79, 80, 85, 89, 90, 94, 96, 101, 107, 113, 132, 136, 140, 143, 147, 148, 155, 158, 160, 161, 168, 172, 184, 191, 201, 206, 213, 231, 232, 245, 249, 254, 263, 265, 274, 284, 285], "backward": [1, 4, 6, 54, 73, 144, 147, 211, 215, 228, 230], "2238": 1, "2218": 1, "arxiv": [1, 58, 272], "2104": 1, "05986": 1, "exampl": [1, 2, 3, 5, 11, 12, 13, 17, 20, 26, 28, 37, 41, 47, 55, 58, 63, 71, 76, 80, 86, 89, 90, 92, 96, 97, 100, 107, 108, 109, 110, 113, 136, 137, 138, 139, 140, 143, 144, 146, 147, 148, 150, 151, 152, 156, 160, 161, 163, 164, 166, 175, 176, 177, 179, 186, 189, 190, 192, 199, 201, 204, 205, 206, 211, 215, 216, 219, 223, 224, 228, 230, 232, 233, 236, 251, 252, 254, 256, 259, 263, 264, 265, 269, 271, 272, 276, 277, 281, 282, 284], "cobicar": 1, "sitepotenti": [1, 9, 173, 211, 214], "madelungenergi": [1, 9, 173, 211, 214], "2228": 1, "combineddata": [1, 9, 173, 203, 204, 205, 206, 208], "htz1992213": 1, "2191": 1, "bader": [1, 122, 128, 130, 285], "2230": [1, 179], "2231": 1, "entry_id": [1, 83, 96, 164, 168, 232], "describ": [1, 8, 9, 12, 13, 20, 21, 26, 28, 29, 30, 32, 34, 37, 47, 50, 51, 54, 55, 60, 71, 73, 78, 81, 82, 89, 130, 148, 158, 163, 168, 169, 172, 179, 190, 205, 208, 213, 214, 243, 244, 252, 269], "2219": 1, "fcmeng": 1, "pwscf": [1, 8, 9, 173], "distinguish": [1, 16, 28, 89, 189, 257], "same": [1, 2, 13, 25, 29, 34, 35, 43, 47, 53, 55, 58, 62, 63, 66, 70, 71, 73, 76, 77, 79, 80, 85, 86, 89, 90, 92, 95, 96, 100, 101, 103, 104, 107, 109, 129, 130, 137, 138, 140, 145, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 161, 163, 165, 168, 177, 181, 185, 187, 189, 190, 191, 197, 201, 204, 206, 212, 215, 219, 221, 222, 223, 225, 230, 231, 232, 233, 238, 244, 247, 249, 251, 252, 254, 258, 259, 263, 264, 265, 277, 282], "might": [1, 2, 4, 5, 6, 12, 28, 29, 47, 58, 63, 75, 76, 80, 83, 89, 90, 100, 108, 109, 110, 137, 155, 159, 180, 189, 191, 213, 233, 247, 263, 265, 277], "pseudopotenti": [1, 5, 58, 128, 129, 130, 177, 179, 189, 190, 191, 215, 219, 225, 232, 233], "gmatteo": [1, 54], "netcdf4": [1, 178], "hdf5": [1, 186], "2190": 1, "symmetrizedstructur": [1, 8, 9, 185, 253, 254, 261, 265], "0d9a455": 1, "shyamd": 1, "2198": 1, "bandfillingcorrect": 1, "2193": 1, "2187": 1, "load": [1, 5, 8, 9, 114, 161, 189, 190, 204, 219, 231, 267, 271, 287], "ardunn": 1, "2186": 1, "between": [1, 4, 5, 6, 11, 12, 15, 16, 20, 23, 25, 28, 29, 34, 36, 37, 40, 45, 47, 55, 58, 62, 63, 66, 68, 70, 71, 73, 74, 76, 77, 79, 80, 82, 83, 89, 90, 92, 96, 100, 108, 114, 129, 130, 134, 136, 138, 139, 140, 144, 145, 147, 148, 150, 151, 156, 158, 161, 164, 168, 171, 182, 184, 185, 186, 189, 190, 191, 198, 202, 204, 209, 213, 232, 236, 243, 244, 250, 251, 252, 254, 255, 257, 258, 259, 263, 265, 269, 270, 272, 284, 287], "2149": 1, "crest": [1, 237, 238, 239], "arepstein": 1, "2020": [1, 28, 36, 80, 160, 163, 255, 257], "radialsitedistortiontransform": [1, 8, 9, 262, 264], "2108": 1, "2174": 1, "hkl": [1, 43, 45, 46, 47, 101, 140, 148, 263], "diffract": [1, 8, 9, 14, 144], "flaviu": [1, 286], "gostin": [1, 286], "2143": [1, 279], "2139": 1, "qcoutput": [1, 9, 173, 220, 222], "2147": 1, "2165": 1, "2135": [1, 279], "progress": [1, 3, 71, 80, 160, 163, 191, 287], "bar": [1, 66, 80, 101, 161, 163, 187, 216, 276], "2136": [1, 279], "combin": [1, 3, 5, 17, 43, 44, 46, 60, 62, 63, 69, 73, 76, 80, 90, 100, 107, 137, 139, 140, 147, 148, 150, 152, 160, 163, 172, 179, 184, 185, 189, 204, 206, 212, 213, 251, 254, 255, 257, 263, 265, 287], "id": [1, 2, 3, 4, 6, 94, 134, 164, 170, 172, 197, 199, 204, 213, 232, 258, 287], "2157": 1, "ediff": [1, 233], "dfpt": [1, 232], "2172": 1, "2144": 1, "filter_solid": [1, 83], "pourbaixdiagram": [1, 8, 9, 14, 83], "2177": 1, "precis": [1, 11, 44, 45, 46, 80, 94, 147, 148, 149, 160, 185, 189, 212, 217, 225, 232, 233, 240, 260, 263, 274], "fermido": [1, 8, 9, 154, 160], "instanc": [1, 2, 4, 6, 11, 12, 20, 26, 41, 55, 60, 62, 63, 71, 73, 78, 80, 83, 94, 95, 130, 133, 140, 144, 145, 147, 151, 152, 156, 161, 163, 168, 172, 175, 177, 178, 179, 184, 187, 189, 204, 205, 206, 208, 213, 221, 223, 230, 233, 250, 251, 254, 263, 265, 277, 279, 287], "2109": 1, "except": [1, 3, 33, 37, 51, 54, 63, 71, 79, 80, 86, 90, 94, 131, 132, 137, 139, 143, 144, 147, 151, 156, 160, 163, 171, 176, 177, 179, 181, 185, 189, 191, 197, 215, 219, 224, 225, 230, 232, 233, 254, 268], "2150": 1, "pourbaixentri": [1, 8, 9, 14, 83], "josephmontoya": [1, 286], "tri": [1, 2, 76, 232, 268, 279, 286], "2148": 1, "environ": [1, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 36, 39, 63, 71, 75, 119, 129, 142, 144, 182, 213, 216, 264], "2164": 1, "equat": [1, 50, 54, 74, 85, 96, 97, 175, 191], "lower": [1, 11, 25, 26, 28, 29, 34, 36, 40, 50, 51, 53, 62, 79, 83, 96, 138, 147, 148, 189, 200, 204, 224, 232, 249, 263, 265], "2163": [1, 279], "chi": [1, 9, 173, 196, 198, 233, 286], "kazmorita": [1, 286], "2171": 1, "mp2020": [1, 165], "2141": 1, "2140": 1, "cifwrit": [1, 8, 9, 147, 173, 185, 287], "755452800": 1, "2156": 1, "2130": 1, "anion": [1, 25, 28, 29, 34, 35, 89, 107, 128, 129, 132, 144, 163, 213, 233], "uniqu": [1, 25, 29, 43, 50, 59, 62, 63, 70, 74, 78, 80, 89, 96, 134, 137, 138, 147, 148, 149, 155, 161, 164, 168, 175, 189, 192, 197, 199, 210, 213, 230, 251, 254, 258, 263, 282], "n": [1, 3, 4, 6, 8, 9, 17, 25, 29, 37, 38, 40, 45, 46, 47, 50, 51, 55, 58, 59, 60, 62, 63, 70, 71, 74, 76, 77, 80, 83, 88, 89, 92, 94, 96, 104, 107, 129, 130, 135, 137, 140, 143, 144, 146, 149, 150, 156, 160, 170, 173, 176, 179, 181, 186, 188, 189, 190, 195, 201, 204, 205, 213, 222, 224, 228, 230, 231, 232, 233, 245, 260, 263, 268, 269, 272], "v": [1, 8, 9, 16, 40, 47, 62, 63, 71, 76, 77, 78, 79, 83, 85, 90, 93, 94, 96, 108, 129, 130, 132, 135, 137, 139, 144, 156, 170, 189, 217, 221, 223, 233, 252, 254, 263, 276], "cl": [1, 4, 6, 8, 9, 33, 59, 71, 77, 107, 135, 137, 144, 147, 164, 175, 178, 182, 233, 235, 279, 287], "br": [1, 8, 9, 77, 107, 135, 144, 168, 216, 233], "2133": 1, "custom": [1, 5, 54, 68, 69, 71, 80, 96, 100, 101, 144, 149, 155, 156, 172, 187, 206, 208, 221, 223, 233, 277, 284, 287], "radii": [1, 8, 9, 14, 47, 71, 89, 92, 95, 144, 147, 173, 186, 188, 189, 221, 223, 241, 263, 283, 284], "qcinput": [1, 9, 173, 220, 221, 223], "qchemdictset": [1, 9, 173, 220, 223], "These": [1, 4, 6, 26, 29, 47, 50, 55, 63, 70, 80, 100, 185, 189, 191, 201, 214, 217, 232, 233, 252, 286, 287], "construct": [1, 5, 15, 29, 30, 34, 36, 37, 40, 47, 50, 51, 58, 63, 67, 68, 71, 74, 80, 83, 109, 128, 130, 137, 139, 144, 147, 149, 151, 163, 164, 175, 177, 178, 181, 187, 189, 191, 206, 208, 213, 214, 216, 221, 225, 230, 231, 232, 233, 249, 259, 263, 271, 284, 287], "pcm": [1, 8, 9, 16, 173, 201, 221, 223], "caviti": [1, 221], "2123": 1, "get_conventional_standard_structur": [1, 8, 9, 253, 254], "triclin": [1, 148, 254], "2134": 1, "zopen": 1, "2132": 1, "lammpsdata": [1, 9, 173, 203, 204, 205, 206, 208], "as_str": 1, "larg": [1, 2, 3, 5, 10, 28, 55, 71, 74, 76, 79, 80, 94, 95, 101, 107, 112, 147, 155, 163, 181, 185, 186, 189, 190, 191, 204, 219, 227, 232, 233, 264, 265, 270, 286, 287], "coeff": [1, 8, 9, 14, 86, 173, 189, 201, 204, 228, 232, 269], "section": [1, 5, 9, 100, 104, 116, 140, 144, 173, 176, 177, 178, 179, 186, 188, 189, 190, 191, 197, 198, 199, 201, 204, 215, 221, 222, 223, 224, 232, 287], "as_lammpsdata": [1, 9, 173, 203, 204], "2129": 1, "slab": [1, 8, 9, 14, 15, 62, 68, 69, 96, 135, 138, 148, 233, 263, 265, 285], "2117": 1, "cube": [1, 45, 128, 140, 156, 161, 186, 189, 190, 191, 223, 263], "2121": 1, "der": [1, 144, 191, 221, 223, 233], "waal": [1, 144, 191, 221, 223, 233], "2122": 1, "materialsproject2020compat": [1, 8, 9, 162, 163, 168], "multi": [1, 25, 83, 177, 181, 191, 207, 215, 221, 223], "2128": 1, "2125": 1, "isseu": 1, "2124": 1, "zooks97": [1, 286], "2119": 1, "xdatcar": [1, 9, 150, 173, 228, 232], "nkeilbart": [1, 286], "2115": 1, "adam": [1, 104, 140, 252, 286], "kerrigan": [1, 286], "2127": 1, "sell": [1, 140], "bwjustu": 1, "1888": 1, "xp": [1, 8, 9, 14], "spectrum": [1, 8, 9, 14, 43, 56, 102, 104, 135, 160, 198, 199, 231, 250, 282], "2110": 1, "galor": [1, 104], "2106": 1, "detect": [1, 47, 63, 133, 151, 164, 185, 205, 208, 232, 254, 263], "broken": [1, 5, 59, 63, 148, 189], "2015": [1, 5, 66, 71, 170, 215, 252, 271, 285], "electrod": [1, 80, 108, 109, 110, 111], "2101": 1, "tom": [1, 286], "wood": [1, 148, 286], "2100": 1, "edg": [1, 4, 6, 9, 14, 15, 18, 20, 24, 26, 37, 38, 59, 63, 71, 74, 79, 101, 103, 130, 156, 160, 173, 196, 198, 199, 222, 232, 257, 272, 276, 282, 284], "structuregraph": [1, 8, 9, 14, 47, 63, 71, 74, 92, 130, 134], "2095": 1, "ionization_energi": [1, 8, 9, 135, 144], "electron_affin": [1, 8, 9, 135, 144], "extens": [1, 2, 4, 5, 6, 63, 101, 113, 129, 144, 145, 147, 161, 164, 167, 176, 179, 190, 200, 232, 287], "architectur": [1, 2, 3, 4, 6], "templat": [1, 3, 8, 9, 63, 147, 173, 184, 203, 205, 206, 208, 221, 279], "repo": [1, 3, 4, 5, 6, 206, 279], "ons": [1, 4, 6], "anoth": [1, 3, 4, 6, 22, 23, 29, 30, 34, 45, 63, 70, 71, 73, 86, 90, 103, 108, 126, 128, 140, 147, 151, 161, 179, 186, 189, 204, 206, 251, 254, 262, 264, 265], "move": [1, 2, 79, 96, 145, 148, 156, 175, 209, 254, 263, 264, 284], "remain": [1, 90, 148, 149, 164, 190, 223, 233], "howev": [1, 2, 4, 5, 6, 12, 13, 58, 59, 63, 71, 80, 86, 96, 109, 113, 147, 148, 161, 168, 177, 185, 199, 223, 230, 231, 232, 233, 258, 265, 272, 287], "subpackag": [1, 4, 6, 8], "full": [1, 3, 4, 5, 6, 20, 30, 41, 43, 51, 55, 69, 80, 103, 108, 130, 132, 137, 139, 143, 144, 147, 149, 156, 172, 189, 197, 201, 204, 205, 215, 217, 225, 230, 231, 232, 252, 254, 256, 258, 263, 264, 272, 274], "guid": [1, 5, 58, 287], "go": [1, 2, 3, 5, 45, 63, 80, 94, 147, 148, 171, 185, 241, 254, 258, 264, 287], "forward": [1, 3, 197], "root": [1, 2, 3, 4, 5, 6, 9, 76, 100, 114, 121, 160, 173, 174, 178, 179, 215, 249, 277], "instead": [1, 4, 5, 6, 11, 44, 47, 54, 59, 66, 71, 73, 80, 83, 90, 94, 96, 100, 113, 121, 130, 136, 137, 139, 143, 145, 147, 148, 151, 155, 156, 163, 168, 179, 186, 191, 201, 206, 213, 219, 225, 231, 232, 233, 235, 247, 251, 254, 261, 263, 274, 278, 287], "semant": [1, 2], "backport": [1, 4, 6], "main": [1, 4, 6, 8, 9, 21, 23, 26, 28, 44, 71, 76, 96, 99, 115, 116, 117, 118, 119, 120, 179, 190, 197, 221, 223, 224, 232, 258, 263, 268, 287], "onward": [1, 4, 6, 232, 233], "modular": [1, 2, 4, 6], "someth": [1, 2, 4, 6, 223], "easiest": [1, 2, 4, 5, 6, 158, 161, 287], "matproj": [1, 2, 4, 6, 8, 9, 163, 169], "Then": [1, 2, 3, 5, 74, 189, 192, 254, 271, 279], "altern": [1, 2, 5, 9, 12, 13, 26, 55, 59, 71, 79, 144, 158, 161, 165, 168, 173, 174, 176, 177, 191, 206, 215, 232, 251, 256, 263, 282], "mac": [1, 2, 4, 6], "command": [1, 2, 3, 4, 5, 6, 115, 119, 120, 122, 127, 130, 132, 134, 161, 205, 206, 209, 238, 268, 287], "xarg": [1, 2, 4, 6], "sed": [1, 2, 4, 6], "hand": [1, 2, 5, 113, 206, 225], "follow": [1, 2, 3, 4, 5, 6, 13, 15, 16, 17, 20, 26, 28, 29, 36, 44, 46, 47, 50, 54, 63, 66, 71, 79, 80, 85, 96, 97, 100, 101, 104, 128, 129, 130, 131, 134, 137, 139, 144, 147, 148, 149, 151, 152, 158, 159, 161, 165, 168, 170, 172, 179, 183, 185, 186, 187, 191, 197, 205, 206, 212, 214, 223, 230, 231, 232, 233, 241, 251, 252, 254, 264, 272, 277, 285, 287], "canon": [1, 2, 285], "symmop": [1, 2, 8, 9, 82, 135, 140, 143, 147, 149, 204, 254, 256, 259, 260], "oper": [1, 2, 5, 8, 9, 62, 63, 80, 82, 104, 126, 130, 135, 137, 140, 146, 147, 148, 149, 150, 151, 155, 156, 166, 173, 181, 185, 186, 187, 191, 204, 215, 231, 232, 254, 256, 258, 259, 260, 261, 264, 265, 273, 274, 278, 279, 287], "periodic_t": [1, 2, 8, 9, 40, 80, 135, 142, 175, 287], "periodicsit": [1, 2, 4, 6, 8, 9, 17, 22, 30, 58, 90, 135, 145, 147, 160, 225, 254, 261, 279, 287], "imolecul": [1, 2, 8, 9, 135, 147, 184, 287], "istructur": [1, 2, 8, 9, 135, 147, 193, 236, 254, 287], "arraywithunit": [1, 2, 8, 9, 135, 151], "floatwithunit": [1, 2, 8, 9, 78, 135, 144, 151], "electronic_structur": [1, 2, 8, 9, 135, 143, 144, 210, 247], "lead": [1, 2, 4, 6, 25, 29, 41, 62, 80, 83, 130, 133, 148, 168, 189, 191, 213, 263, 277], "breakag": 1, "within": [1, 2, 3, 11, 15, 25, 34, 40, 43, 44, 45, 46, 60, 62, 70, 71, 73, 79, 80, 90, 96, 108, 109, 110, 137, 140, 145, 147, 148, 149, 163, 176, 179, 189, 191, 206, 216, 221, 223, 225, 232, 241, 245, 247, 254, 257, 268, 269, 272, 287], "itself": [1, 15, 22, 28, 29, 62, 63, 96, 104, 144, 147, 189, 200, 201, 215, 221, 223, 230, 233, 254], "loadfn": 1, "get_structure_from_mp": 1, "critic2_cal": [1, 5, 8, 9, 127], "bset": 1, "eimrek": 1, "compliant": [1, 172], "2066": 1, "address": [1, 233, 285], "text": [1, 8, 9, 54, 161, 185, 190, 192, 210, 224, 227, 229, 232, 267, 271, 284], "all_cg": 1, "previou": [1, 4, 5, 6, 12, 50, 58, 59, 148, 150, 161, 187, 189, 209, 221, 233, 254, 272], "increas": [1, 2, 28, 29, 34, 55, 62, 71, 89, 95, 137, 147, 189, 223, 230, 233, 263, 272, 274, 284], "suggest": [1, 3, 5, 92, 95, 99, 137, 138, 159, 177, 179, 191, 223], "minimum": [1, 8, 9, 14, 15, 25, 26, 28, 29, 30, 40, 41, 45, 54, 55, 63, 66, 71, 79, 83, 86, 90, 96, 100, 108, 110, 130, 138, 140, 144, 147, 148, 156, 158, 160, 175, 184, 189, 201, 212, 231, 232, 243, 244, 247, 250, 251, 263, 270, 274, 276, 285], "aconvasp": [1, 2, 5], "restor": [1, 63, 163, 287], "compositionerror": [1, 8, 9, 135, 137], "2055": 1, "metal_edge_extend": [1, 8, 9, 14, 71], "local_env": [1, 8, 9, 14, 63, 74], "stringifi": [1, 8, 9, 83, 137, 139, 144, 256, 267, 278], "mixin": 1, "to_pretty_str": [1, 8, 9, 14, 83, 135, 137, 139, 144, 267, 278], "to_latex_str": [1, 8, 9, 253, 256, 267, 278], "to_unicode_str": [1, 8, 9, 267, 278], "to_html_str": [1, 8, 9, 267, 278], "2046": 1, "in_plac": [1, 145], "2060": 1, "co": [1, 8, 9, 46, 62, 63, 77, 80, 96, 103, 135, 144, 192, 197, 233, 263], "ordin": [1, 63], "finder": [1, 4, 6, 11, 15, 21, 28, 53, 71, 285], "davidwaroqui": 1, "2035": [1, 279], "gibbscomputedstructureentri": [1, 8, 9, 162, 164], "wavefunct": [1, 9, 173, 175, 189, 191, 211, 214, 232, 234], "2034": 1, "rwoodsrobinson": 1, "2044": 1, "parsr": 1, "2032": 1, "2014": [1, 85, 96, 130, 134, 156, 160, 285], "2031": 1, "2037": 1, "2033": 1, "cli": [1, 4, 6, 8, 9, 233], "script": [1, 4, 5, 6, 39, 89, 116, 117, 118, 119, 120, 130, 141, 189, 206, 215, 227, 279, 287], "isayevnn": [1, 8, 9, 14, 71], "2011": [1, 4, 6, 93, 94, 129, 163, 233, 272, 285], "2016": [1, 47, 96, 101, 129, 148, 170, 233, 257, 259, 279, 285], "2005": [1, 101, 137, 139, 144, 152, 285], "setuptool": 1, "2010": [1, 80, 129, 144, 254, 255, 257, 285], "2007": [1, 26], "insert": [1, 8, 9, 62, 63, 107, 108, 109, 110, 135, 147, 173, 188, 189, 191, 192, 212, 263, 264, 287], "1997": [1, 250], "occup": [1, 12, 17, 58, 62, 90, 138, 145, 147, 148, 150, 156, 160, 181, 185, 189, 190, 191, 232, 263, 265, 284], "2000": [1, 85, 134, 164, 191, 215], "legibl": 1, "3d": [1, 34, 40, 45, 47, 68, 70, 71, 80, 140, 142, 143, 156, 161, 184, 204, 212, 217, 232, 233, 252], "bayesfactor": 1, "1999": [1, 40, 152], "excit": [1, 8, 9, 14, 45, 173, 191, 198, 200, 201, 215], "1975": 1, "2008": [1, 77, 78, 80, 130, 131, 152, 285], "1996": [1, 85, 152, 179], "phononbandstructuresymmlin": [1, 8, 9, 217, 246, 247, 249, 251], "abinit": [1, 4, 6, 8, 9, 140, 152, 173, 250, 287], "py3": 1, "neutron": [1, 8, 9, 14, 42], "integr": [1, 2, 4, 5, 6, 50, 85, 123, 128, 130, 149, 156, 158, 160, 161, 181, 186, 189, 191, 213, 214, 215, 225, 230, 232, 248], "1967": [1, 279], "1899": 1, "ngx": [1, 233, 234], "y": [1, 8, 9, 34, 40, 43, 47, 55, 56, 66, 77, 80, 85, 96, 99, 100, 103, 104, 111, 134, 135, 137, 139, 140, 143, 144, 145, 146, 147, 149, 159, 160, 161, 186, 197, 200, 204, 213, 233, 240, 243, 244, 250, 251, 257, 268, 269, 276, 278, 282], "z": [1, 3, 8, 9, 15, 17, 46, 89, 96, 101, 104, 134, 135, 140, 143, 144, 145, 147, 148, 149, 155, 156, 159, 161, 172, 173, 174, 175, 179, 186, 197, 201, 204, 233, 240, 241, 247, 278, 285], "zf": 1, "1959": 1, "mprelaxset": [1, 9, 12, 13, 73, 163, 168, 173, 228, 233], "low": [1, 47, 64, 73, 74, 75, 134, 141, 144, 156, 175, 179, 184, 189, 191, 204, 227, 232, 263], "1976": [1, 62, 279], "mpscanset": 1, "1952": 1, "retain": [1, 11, 12, 54, 144, 147, 148, 191, 211, 228, 240, 254, 272], "1963": 1, "1979": [1, 71], "1973": 1, "energyadjust": [1, 8, 9, 162, 163, 164, 168], "1960": 1, "backend": [1, 66, 80, 204], "1936": 1, "1945": 1, "mcsq": [1, 8, 9, 133, 147, 173, 183, 263], "1942": 1, "packmolrunn": 1, "1947": 1, "computerentri": 1, "1948": 1, "1940": 1, "1937": 1, "ewaldsumm": [1, 8, 9, 14, 53, 55], "1932": 1, "seek": [1, 25], "ian496": 1, "1930": 1, "1951": 1, "1921": 1, "mpscanstaticset": [1, 9, 173, 228, 233], "1917": 1, "lobsterset": [1, 9, 173, 228, 233], "1928": 1, "9eb3ac2": 1, "jmolnn": [1, 8, 9, 14, 71], "1920": 1, "valenc": [1, 8, 9, 14, 17, 28, 29, 30, 34, 71, 73, 75, 128, 129, 130, 132, 135, 144, 161, 173, 177, 179, 188, 189, 200, 213, 232, 265], "rkurchin": 1, "1926": 1, "babelmoladaptor": [1, 8, 9, 173, 184], "smheidrich": [1, 286], "1924": 1, "gaussion": 1, "1918": 1, "cross": [1, 25, 34, 104, 116, 144, 149, 155, 161, 189, 198, 199], "platform": [1, 4, 6, 170], "jarvi": [1, 8, 9, 88, 99, 172, 173], "knc6": 1, "valid": [1, 8, 9, 14, 18, 26, 31, 37, 62, 80, 83, 90, 97, 113, 135, 137, 143, 144, 149, 151, 158, 163, 165, 168, 173, 179, 187, 188, 191, 203, 204, 208, 210, 223, 230, 232, 233, 254, 277, 287], "extrapol": [1, 160, 189, 232], "stitch": [1, 9, 14, 102, 103], "xa": [1, 8, 9, 14, 146, 201, 282], "yimingcheng": 1, "possibli": [1, 13, 26, 29, 55, 160], "verbos": [1, 9, 55, 80, 118, 121, 137, 140, 145, 147, 148, 149, 163, 168, 173, 179, 184, 188, 189, 190, 225, 232, 233, 268, 279], "get_structure_by_material_id": [1, 287], "boltztrap2": [1, 8, 9, 154], "msonabl": [1, 11, 12, 16, 20, 22, 23, 25, 26, 29, 30, 37, 40, 53, 55, 59, 63, 66, 70, 74, 76, 77, 80, 83, 86, 90, 94, 96, 97, 100, 108, 110, 113, 130, 134, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 155, 156, 158, 159, 160, 162, 163, 164, 166, 167, 175, 177, 179, 181, 185, 186, 187, 189, 195, 197, 198, 199, 200, 201, 204, 206, 207, 212, 215, 222, 225, 226, 230, 231, 232, 233, 238, 239, 247, 248, 249, 250, 252, 261, 263, 266, 269, 277, 279], "freq": [1, 89, 181, 201, 215, 223], "lint": [1, 3], "enumlib": [1, 122, 131, 147, 263, 264], "wsyxbcl": [1, 286], "mbjumar": 1, "divis": [1, 90, 175, 177, 189, 230, 233, 248], "zero": [1, 8, 9, 34, 47, 50, 51, 55, 58, 71, 73, 78, 80, 99, 100, 111, 135, 138, 143, 144, 148, 149, 156, 161, 163, 179, 201, 232, 233, 248, 254, 258, 265, 268, 282], "mfherbst": 1, "openbabel": [1, 4, 6, 59, 71, 76, 147, 184, 204, 287], "properli": [1, 62, 104, 108, 130, 137, 144, 146, 148, 171, 201, 230, 241, 254, 276], "1892": 1, "critic2cal": [1, 5, 8, 9, 71, 127, 130], "yuuukuma": 1, "cost": [1, 8, 9, 14, 55, 175, 189, 223, 230, 243, 244], "he": [1, 8, 9, 77, 135, 144, 230, 233, 247, 279, 287], "h": [1, 4, 5, 6, 8, 9, 29, 40, 43, 54, 60, 62, 66, 71, 77, 78, 79, 83, 96, 97, 101, 107, 128, 135, 137, 139, 140, 144, 148, 151, 156, 161, 175, 176, 179, 189, 204, 215, 230, 231, 233, 241, 250, 251, 256, 259, 272, 284, 285, 287], "ne": [1, 8, 9, 77, 135, 144, 179, 233], "kr": [1, 8, 9, 77, 135, 144, 233], "tc": [1, 8, 9, 77, 134, 135, 144, 172, 233], "computron": 1, "static": [1, 12, 13, 25, 45, 62, 63, 71, 74, 75, 76, 77, 79, 83, 85, 86, 89, 93, 96, 99, 100, 132, 134, 136, 137, 140, 141, 143, 144, 149, 156, 159, 160, 163, 168, 171, 175, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 193, 195, 197, 198, 199, 200, 201, 202, 212, 215, 219, 221, 222, 230, 232, 233, 234, 236, 238, 240, 241, 252, 255, 257, 259, 263, 265, 276, 277, 279, 287], "slme": [1, 8, 9, 14, 87], "spillag": [1, 8, 9, 14, 98], "mturianski": 1, "1861": [1, 279], "convert": [1, 4, 6, 15, 47, 50, 51, 55, 58, 59, 63, 68, 70, 71, 80, 86, 88, 90, 96, 113, 126, 128, 137, 140, 144, 147, 149, 150, 151, 152, 159, 160, 161, 163, 175, 176, 177, 178, 179, 181, 185, 186, 189, 190, 197, 204, 210, 215, 217, 219, 222, 224, 225, 230, 232, 252, 254, 255, 262, 269, 276, 278, 287], "wannier90": [1, 8, 9, 173, 232], "unk": [1, 8, 9, 173, 232, 234], "yimingchen95": 1, "1837": 1, "elfcar": [1, 9, 173, 228, 232], "ayushgupta": 1, "1859": 1, "label": [1, 8, 9, 14, 40, 43, 54, 63, 66, 76, 80, 83, 96, 100, 101, 111, 134, 138, 140, 154, 155, 158, 161, 173, 176, 179, 185, 189, 201, 204, 210, 211, 213, 217, 230, 232, 246, 247, 249, 250, 251, 255, 257, 258, 272, 276, 282], "1857": 1, "1850": [1, 279], "1842": 1, "dielectr": [1, 9, 88, 171, 173, 175, 215, 221, 223, 228, 231, 232, 233, 250], "1836": 1, "sq": [1, 8, 9, 71, 127, 133, 147, 263], "speedup": [1, 114, 232], "mturiansk": 1, "kt": [1, 50], "latim": [1, 255, 257], "tem": [1, 8, 9, 14, 42], "welltemperedpaprika": 1, "thefrankwan": [1, 286], "hongyi": 1, "zhao": [1, 286], "montoyjh": 1, "dongsenfo": [1, 286], "dynikon": [1, 286], "brunnernn": 1, "econnn": [1, 8, 9, 14, 71], "individu": [1, 4, 6, 83, 96, 100, 158, 161, 232, 255, 287], "angle_toler": [1, 28, 53, 62, 73, 76, 147, 177, 185, 195, 199, 254, 255, 257, 263, 265], "float": [1, 11, 12, 15, 17, 25, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 58, 62, 63, 66, 68, 69, 70, 71, 73, 74, 75, 76, 80, 81, 82, 83, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96, 97, 101, 107, 108, 109, 110, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 177, 181, 184, 185, 186, 189, 190, 191, 192, 195, 197, 199, 204, 206, 209, 212, 213, 214, 215, 216, 217, 219, 221, 223, 224, 225, 226, 230, 231, 232, 233, 236, 238, 245, 247, 250, 251, 252, 254, 255, 256, 257, 259, 260, 263, 264, 265, 268, 269, 274, 276, 278, 282, 283, 284], "float_prec": 1, "arbitrari": [1, 17, 29, 50, 60, 76, 80, 83, 96, 144, 159, 233, 269, 278, 282], "rudimentari": 1, "vaspdoc": [1, 9, 173, 228, 229], "massiv": 1, "reorgan": [1, 2], "computedentri": [1, 8, 9, 40, 80, 83, 86, 108, 109, 110, 113, 162, 163, 164, 165, 166, 168, 232, 287], "ayushsgupta": 1, "gamma": [1, 8, 9, 85, 96, 135, 140, 155, 173, 175, 177, 185, 189, 191, 212, 217, 221, 228, 230, 232, 233, 247, 249, 250, 287], "bernstei": [1, 286], "montecarlorattletransform": [1, 8, 9, 262, 263], "phonopi": [1, 8, 9, 173, 247, 249, 252], "connect": [1, 8, 9, 14, 18, 25, 47, 60, 63, 77, 79, 89, 100, 130, 143, 147, 171, 209, 221, 222, 223, 230, 255, 263, 272], "dskoda": 1, "gvallverdu": 1, "plugin": 1, "yime": [1, 286], "isym": [1, 212, 229, 231, 232, 233], "uniform": [1, 76, 147, 171, 217, 232, 233, 265], "nedso": 1, "reactiondiagram": [1, 8, 9, 14, 80], "uthpalah": 1, "lindahung": 1, "kwaters4": 1, "nishiyamat": [1, 286], "kspace": [1, 233], "incar": [1, 9, 113, 159, 173, 187, 212, 228, 229, 230, 232, 233], "grosspop": [1, 9, 173, 211, 214], "vaspinputset": [1, 2, 9, 12, 13, 173, 228, 233], "spec": [1, 9, 124, 173, 185, 228, 230, 232, 233], "sort_structur": [1, 230, 233], "wardlt": [1, 286], "big": 1, "minimumvirenn": [1, 8, 9, 14, 71], "alex": [1, 104, 286], "ganos": [1, 104, 286], "eigenv": [1, 9, 155, 156, 173, 228, 232], "compil": [1, 3, 4, 5, 6, 104, 128, 129, 130, 131, 134, 225, 232, 233, 258, 273, 275], "get_all_neighbor": [1, 8, 9, 135, 147], "nn_distanc": [1, 147], "imag": [1, 8, 9, 14, 20, 23, 29, 47, 58, 63, 71, 79, 80, 89, 100, 111, 140, 145, 147, 161, 201, 204, 218, 233, 245, 251, 263, 282, 284], "easier": [1, 5, 63, 104, 109, 137, 141, 144, 148, 152, 165, 177, 189, 191, 233, 276, 282, 287], "xcrysden": [1, 8, 9, 173], "parser": [1, 147, 170, 176, 179, 181, 189, 190, 198, 200, 201, 215, 219, 222, 232, 239, 287], "stevetorr": 1, "mid_struct": [1, 79], "interpol": [1, 8, 9, 14, 58, 79, 80, 100, 103, 135, 146, 147, 156, 160, 161, 164, 186, 230, 248, 269, 287], "irspectra": 1, "get_neighbor": [1, 8, 9, 135, 147], "written": [1, 3, 4, 6, 16, 80, 132, 137, 139, 147, 178, 186, 187, 197, 199, 204, 206, 212, 216, 223, 226, 227, 230, 231, 232, 233, 240, 241, 249, 269, 272, 285, 287], "sum": [1, 17, 25, 34, 46, 53, 55, 58, 71, 79, 82, 83, 101, 130, 136, 137, 146, 147, 149, 155, 158, 160, 161, 162, 164, 176, 186, 201, 213, 221, 223, 232, 233, 247, 248, 264, 265, 284, 287], "subtract": [1, 137, 151, 161, 189, 269], "servic": [1, 3, 272], "well": [1, 2, 3, 4, 5, 6, 13, 22, 26, 34, 68, 71, 76, 79, 96, 139, 144, 147, 148, 155, 161, 164, 165, 168, 175, 186, 188, 189, 190, 191, 204, 206, 208, 223, 230, 232, 233, 254, 268, 287], "circleci": 1, "especi": [1, 2, 3, 5, 28, 63, 156, 189, 190, 219, 231, 232, 287], "pycodestyl": [1, 3], "pydocstyl": 1, "mypi": 1, "henchforth": 1, "enforc": [1, 71, 149, 189, 190, 224, 232, 254, 265], "supplement": 1, "incar_paramet": 1, "fast": [1, 4, 6, 28, 36, 55, 76, 80, 128, 184, 189, 191, 233, 285, 287], "pourbaix": [1, 4, 6, 83, 163], "fragment": [1, 8, 9, 14, 16, 63, 76, 221, 223], "nathan": [1, 286], "diodan": [1, 286], "hook": [1, 3], "git": [1, 3, 5], "style": [1, 3, 9, 41, 54, 71, 113, 161, 173, 189, 204, 228, 230, 232, 284], "must": [1, 3, 5, 11, 15, 16, 40, 43, 46, 47, 54, 55, 60, 63, 76, 77, 80, 82, 86, 89, 90, 94, 96, 100, 104, 107, 108, 110, 113, 128, 137, 139, 142, 144, 146, 147, 148, 151, 156, 160, 161, 162, 163, 164, 168, 175, 177, 179, 181, 187, 189, 190, 191, 200, 201, 204, 206, 210, 221, 223, 226, 230, 232, 233, 251, 255, 257, 263, 264, 265, 269, 270, 272, 282], "chemsi": [1, 8, 9, 41, 162, 166], "fragmet": 1, "igraph": [1, 74], "perturbstructuretransform": [1, 8, 9, 262, 265], "ree": [1, 286], "adsorbatesitefind": [1, 8, 9, 14, 15, 263], "cubicsupercelltransform": [1, 8, 9, 262, 263], "perturbedsupercellstransform": 1, "shengbt": [1, 8, 9, 173], "vampir": [1, 134], "ncfrei": 1, "sthartman": 1, "dwinston": 1, "heisenberg": [1, 8, 9, 14, 63, 72], "exchang": [1, 63, 73, 74, 134, 141, 143, 152, 172, 175, 181, 189, 191, 199, 215], "indic": [1, 3, 12, 13, 15, 26, 28, 29, 30, 34, 37, 43, 45, 47, 50, 51, 55, 60, 62, 63, 69, 70, 71, 76, 79, 80, 83, 89, 90, 96, 101, 103, 128, 130, 136, 137, 138, 140, 143, 145, 147, 148, 149, 155, 156, 158, 159, 160, 161, 166, 175, 185, 192, 197, 201, 204, 212, 213, 225, 230, 232, 233, 247, 251, 254, 256, 257, 258, 263, 264, 266, 269, 270, 274, 277, 282], "grain": [1, 8, 9, 14, 61, 233, 263, 287], "rester": 1, "tinaatucsd": [1, 286], "oxana": [1, 286], "waved": [1, 9, 173, 228, 231, 232, 233], "jrsuckert": 1, "darnoceloc": 1, "atat": [1, 8, 9, 133, 173, 263], "prismat": [1, 8, 9, 147, 173], "sivonxai": [1, 286], "kylebystrom": [1, 286], "slabgener": [1, 8, 9, 135, 148], "piezotensor": [1, 8, 9, 14, 81], "mhsiron": 1, "clegaspi": 1, "simonward86": 1, "linear": [1, 47, 50, 51, 62, 76, 79, 140, 144, 147, 148, 175, 179, 186, 209, 215, 230, 231, 243, 244, 254, 257, 263, 269], "scale": [1, 8, 9, 10, 12, 15, 17, 28, 29, 36, 38, 43, 44, 45, 46, 50, 78, 90, 95, 96, 133, 135, 140, 144, 147, 148, 149, 151, 158, 161, 164, 166, 173, 175, 185, 186, 189, 191, 210, 217, 225, 230, 232, 233, 263, 265, 276, 284], "100": [1, 25, 43, 44, 46, 50, 79, 83, 85, 114, 141, 148, 149, 152, 156, 161, 179, 184, 186, 189, 199, 212, 217, 223, 233, 263, 287], "strict": [1, 3, 63, 137, 144, 168, 177, 189, 191, 225, 254, 272, 287], "covalentbondnn": [1, 8, 9, 14, 71], "shuaishuaiyuan": 1, "dbroberg": 1, "ai": 1, "symmeter": [1, 82], "boltztrap": [1, 8, 9, 154, 161, 233], "nonscf": [1, 233], "gulp_cal": [1, 5, 8, 9, 127], "fatband": [1, 9, 161, 173, 211, 212, 214], "get_ir_mesh": 1, "plasma": 1, "frequenc": [1, 8, 9, 17, 50, 88, 89, 173, 175, 181, 201, 215, 217, 223, 231, 232, 233, 247, 248, 249, 250, 251, 276], "miscellan": 1, "mimimumdistancenn": 1, "ismear": [1, 9, 173, 212, 228, 231, 233], "nsw": [1, 233], "orderdisordercompar": 1, "mpnonscfset": [1, 9, 173, 228, 233], "dyllamt": 1, "app": [1, 4, 6, 8, 9, 163, 287], "mpsocset": [1, 9, 173, 228, 233], "arkel": [1, 276], "ketelaar": [1, 276], "triangl": [1, 34, 71, 80, 101, 161, 251, 276, 284], "agent": 1, "streamlin": 1, "abandon": [1, 172], "vaspinput": [1, 9, 173, 228, 230, 233], "run_vasp": [1, 9, 173, 228, 230], "runnabl": 1, "simpl": [1, 4, 6, 16, 25, 26, 37, 53, 60, 63, 71, 74, 80, 137, 147, 160, 175, 177, 186, 187, 189, 191, 204, 206, 208, 227, 230, 232, 233, 249, 264, 265, 285], "custodian": [1, 4, 6, 189], "queue": 1, "vasp_cmd": [1, 230], "mpirun": 1, "machinefil": 1, "pbs_nodefil": 1, "def": [1, 151, 156, 252], "mpr": [1, 171], "get_structur": [1, 8, 9, 14, 18, 24, 28, 135, 150, 169, 172, 173, 182, 185, 202, 226, 267, 279, 287], "li2o": [1, 4, 6, 80, 86, 90, 137, 279, 287], "k_den": 1, "200": [1, 45, 80, 141, 149, 184, 191, 200, 217, 223, 232, 233], "400": [1, 70, 164, 215, 233], "800": [1, 111], "vi": [1, 5, 8, 9, 39, 137, 139, 144, 215], "user_kpoints_set": [1, 233], "reciprocal_dens": [1, 212, 226, 233], "get_vasp_input": [1, 8, 9, 10, 12, 173, 228, 233], "kpt": [1, 175, 189, 225, 230], "d": [1, 8, 9, 12, 14, 15, 18, 20, 23, 25, 28, 29, 31, 34, 36, 37, 40, 45, 47, 50, 51, 55, 62, 63, 66, 74, 76, 77, 80, 83, 84, 85, 86, 90, 94, 96, 97, 101, 110, 129, 132, 135, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 152, 154, 155, 156, 158, 159, 160, 161, 164, 167, 170, 175, 177, 179, 181, 189, 190, 197, 198, 200, 201, 204, 207, 210, 212, 215, 217, 219, 221, 222, 224, 230, 232, 233, 248, 250, 252, 254, 258, 261, 269, 277, 278, 285, 286, 287], "f": [1, 4, 6, 8, 9, 29, 36, 45, 46, 50, 58, 59, 71, 77, 97, 103, 107, 109, 130, 134, 135, 137, 144, 154, 159, 160, 161, 179, 186, 222, 230, 232, 233, 241, 257, 258, 278, 279, 285, 286, 287], "li2o_kpoints_": 1, "final_structur": [1, 8, 9, 89, 161, 173, 181, 201], "__name__": [1, 287], "__main__": 1, "pathlib": 1, "entryset": [1, 8, 9, 162, 166], "easi": [1, 4, 6, 171, 177, 189, 236, 265, 287], "manipul": [1, 4, 6, 52, 55, 65, 68, 138, 149, 166, 189, 195, 197, 221, 230, 231, 232, 269, 270, 287], "grab": [1, 190], "subset": [1, 29, 55, 60, 74, 90, 95, 108, 109, 110, 166, 263, 269, 270], "ground": [1, 66, 69, 74, 134, 144, 163, 166, 168, 177], "sub": [1, 3, 9, 14, 49, 50, 55, 68, 76, 96, 100, 109, 130, 156, 166, 179, 189, 222, 278], "exphp": [1, 286], "icohpcollect": [1, 8, 9, 154, 158, 173, 211, 214], "completecohp": [1, 8, 9, 154, 158, 213], "get_vector_along_lattice_direct": [1, 8, 9, 135, 140], "blondgeek": 1, "local": [1, 3, 4, 5, 6, 23, 28, 29, 40, 59, 71, 74, 79, 96, 100, 126, 144, 156, 168, 175, 179, 184, 189, 190, 191, 213, 214, 216, 221, 223, 232, 233], "vesta": [1, 63, 71, 140, 214, 233, 252], "emul": [1, 71], "py27": 1, "2019": [1, 47, 66], "parchg": [1, 232], "simplif": 1, "iupac": [1, 26, 137, 139, 144], "catch": [1, 222], "jmmshen": 1, "hanmeitang": 1, "xu": [1, 96, 101, 148, 285, 286], "procar": [1, 9, 173, 228, 232], "dkorotin": 1, "pmg_mapi_endpoint": 1, "endpoint": [1, 58, 79, 80, 147, 172, 233], "rest": [1, 4, 6, 41, 163, 171, 189, 199, 210, 212, 233, 285], "bulk": [1, 15, 50, 54, 62, 83, 96, 144, 148, 233, 263, 265], "mvlrelax52set": [1, 9, 173, 228, 233], "eph": 1, "scaletorelaxedtransform": [1, 8, 9, 262, 265], "dimension": [1, 8, 9, 14, 40, 80, 140], "consolid": 1, "dopant": [1, 15, 92, 263], "predictor": [1, 230, 268], "built": [1, 4, 6, 63, 66, 71, 80, 137, 142, 287], "tamuhei": 1, "ionic": [1, 47, 58, 59, 71, 93, 94, 95, 144, 190, 191, 232, 241, 250, 263, 276, 284, 285], "radiu": [1, 8, 9, 14, 15, 17, 38, 43, 44, 46, 47, 48, 53, 55, 58, 71, 77, 89, 95, 96, 101, 136, 140, 144, 147, 179, 186, 189, 191, 197, 199, 221, 223, 241, 245, 265, 283, 284], "interfacialreact": [1, 8, 9, 14, 66], "dissoci": [1, 16], "ieee": [1, 69, 149], "summari": [1, 3, 4, 6, 8, 9, 54, 63, 85, 108, 109, 110, 127, 128, 129, 149, 173, 174, 179, 189, 197, 279, 287], "certain": [1, 4, 5, 6, 11, 12, 15, 45, 55, 60, 71, 90, 136, 147, 148, 149, 156, 158, 161, 164, 186, 189, 213, 233, 254, 263, 264, 275, 284, 287], "voronoinn": [1, 8, 9, 14, 71, 89, 148], "scipi": [1, 4, 5, 6, 83, 100, 101, 268, 269], "crash": [1, 181], "electrostat": [1, 11, 53, 55, 96, 128, 129, 223, 287], "enumlibadaptor": [1, 147, 263], "involv": [1, 4, 6, 30, 63, 66, 71, 148, 175, 184], "stoichiometri": [1, 96, 148], "1286": 1, "finit": [1, 36, 50, 73, 225, 231, 263, 268], "implicit": [1, 223], "hydrogen": [1, 60, 83, 130, 137, 139, 144, 184], "gbgener": 1, "ucsdlxg": 1, "pretti": [1, 79, 83, 137, 139, 144, 147, 148, 168, 179, 191, 197, 230, 278], "along": [1, 15, 47, 58, 62, 66, 79, 80, 89, 96, 100, 108, 110, 138, 140, 148, 149, 155, 156, 159, 161, 175, 177, 186, 189, 190, 191, 195, 217, 219, 225, 226, 230, 232, 233, 247, 251, 255, 257, 263, 269, 270, 272, 284], "against": [1, 84, 96, 136, 163, 189, 230], "aflow": [1, 84, 113, 172], "crystallograph": [1, 63, 84, 140, 147, 148, 178, 258], "prototyp": [1, 8, 9, 14, 137, 147, 263], "chgcar": [1, 5, 9, 71, 79, 128, 129, 130, 147, 173, 186, 228, 232, 233], "dict": [1, 11, 12, 15, 16, 20, 23, 25, 26, 29, 30, 36, 37, 40, 41, 43, 45, 47, 48, 50, 53, 54, 55, 58, 59, 60, 62, 63, 71, 73, 74, 75, 76, 77, 80, 83, 84, 85, 86, 89, 90, 92, 94, 96, 97, 100, 101, 107, 108, 109, 110, 113, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 143, 144, 145, 147, 148, 149, 150, 151, 155, 156, 158, 160, 161, 162, 163, 164, 165, 166, 167, 170, 172, 175, 176, 177, 179, 181, 185, 186, 187, 189, 190, 191, 192, 197, 198, 199, 200, 201, 204, 205, 206, 207, 212, 213, 214, 215, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 238, 247, 248, 249, 250, 251, 252, 254, 261, 263, 264, 265, 272, 276, 277, 279, 282, 284, 287], "molecularorbit": [1, 8, 9, 135, 142], "uncompress": 1, "ajjackson": 1, "conda": [1, 4, 6], "bsdosplott": [1, 8, 9, 154, 161], "correctli": [1, 5, 47, 128, 137, 156, 158, 187, 232, 233], "part": [1, 2, 3, 5, 26, 29, 46, 71, 80, 83, 84, 96, 113, 129, 141, 144, 148, 149, 152, 156, 175, 179, 189, 190, 191, 195, 214, 224, 231, 232, 250, 259, 271, 287], "bibtex": [1, 8, 9, 41, 185, 267, 271, 277], "extract": [1, 5, 12, 29, 62, 63, 73, 74, 138, 147, 148, 156, 176, 179, 189, 217, 230, 232, 251, 263, 287], "icsd": [1, 17, 32, 94, 95, 137, 139, 144, 277], "suit": [1, 4, 5, 6, 107, 258], "gb": [1, 8, 9, 14, 148, 151, 233, 263, 265], "adengz": [1, 286], "grainboundarytransform": [1, 8, 9, 262, 263], "xiangguo": [1, 286], "li": [1, 4, 6, 8, 9, 11, 29, 40, 58, 59, 62, 66, 71, 77, 80, 86, 90, 94, 96, 107, 109, 110, 135, 137, 138, 144, 145, 147, 148, 150, 166, 179, 204, 230, 232, 233, 264, 265, 279, 284, 285, 286, 287], "defecttransform": 1, "get_fermi_interextrapol": [1, 8, 9, 154, 160], "wider": 1, "rang": [1, 2, 43, 44, 46, 71, 79, 80, 83, 96, 97, 110, 129, 133, 144, 148, 156, 160, 161, 172, 177, 189, 191, 212, 217, 221, 226, 233, 250, 251, 254, 263, 274, 276], "dope": [1, 15, 92, 96, 148, 156, 160, 161, 263], "albalu": [1, 286], "conform": [1, 60, 184, 221, 241], "qi": [1, 286], "max": [1, 15, 25, 34, 36, 40, 45, 47, 54, 62, 70, 71, 80, 85, 89, 90, 96, 103, 107, 108, 146, 147, 148, 156, 160, 161, 175, 184, 190, 191, 214, 225, 226, 232, 233, 263, 274, 286], "deseri": [1, 279], "computedstructureentri": [1, 8, 9, 83, 96, 110, 113, 162, 163, 164, 166, 168, 225, 232, 287], "hhi": [1, 8, 9, 14], "dash": [1, 4, 6, 63, 83, 96, 137, 161, 190, 224, 232, 282], "offlin": [1, 4, 6, 172], "anubhav": [1, 4, 6, 137, 286], "jain": [1, 4, 6, 71, 80, 93, 94, 137, 163, 233, 285, 286], "elast": [1, 8, 9, 14, 20, 69, 79, 149, 232, 233], "joseph": [1, 286], "montoya": [1, 96, 286], "nwchem": [1, 8, 9, 173, 181, 200], "tddft": [1, 215], "b": [1, 4, 6, 8, 9, 14, 15, 18, 28, 29, 31, 34, 36, 40, 43, 54, 58, 62, 63, 70, 71, 77, 80, 83, 85, 89, 96, 97, 101, 131, 133, 135, 138, 140, 144, 145, 147, 148, 151, 154, 155, 156, 160, 161, 163, 173, 176, 179, 185, 186, 189, 190, 221, 222, 228, 230, 232, 233, 246, 247, 250, 251, 252, 256, 257, 258, 259, 263, 265, 268, 277, 278, 279, 284, 285, 287], "ddb": 1, "diffraciton": 1, "yuta": [1, 286], "electroneg": [1, 62, 71, 90, 137, 138, 139, 142, 144, 147, 148, 223, 233, 276], "nan": [1, 144, 160, 164, 168, 286], "infin": [1, 25, 96], "cap": [1, 26, 28, 274], "found": [1, 4, 5, 6, 26, 29, 30, 47, 50, 55, 63, 66, 71, 76, 79, 80, 84, 90, 93, 95, 96, 116, 137, 140, 145, 147, 148, 152, 160, 175, 176, 179, 181, 184, 189, 190, 191, 200, 204, 205, 206, 217, 225, 226, 230, 232, 241, 247, 252, 254, 255, 265, 269, 283, 286], "gpretto": 1, "shyam": [1, 78, 286], "chargedensityanalyz": 1, "interstiti": [1, 198], "hanmei": [1, 286], "deby": [1, 44, 45, 46, 50, 54, 85, 249], "temperatur": [1, 9, 44, 45, 46, 50, 66, 74, 85, 88, 97, 133, 134, 144, 151, 156, 160, 161, 163, 164, 167, 173, 191, 205, 206, 208, 221, 226, 227, 228, 230, 233, 248, 249, 251, 252, 263], "formul": [1, 85], "joei": [1, 85], "bandgap": [1, 88, 160, 232, 233], "scissor": [1, 155, 156, 160, 175], "alireza": 1, "faghaninia": 1, "nil": [1, 286], "magorderingtransform": [1, 5, 8, 9, 73, 262, 263], "bond_ord": [1, 8, 9, 63, 136, 147, 173, 201], "hillari": [1, 286], "pan": [1, 286], "richard": [1, 4, 6, 55, 66, 265, 285, 286], "bud": 1, "david": [1, 28, 104, 286], "waroqui": [1, 28, 36, 156, 286], "interfaci": [1, 66], "term": [1, 3, 20, 34, 44, 53, 55, 58, 63, 66, 71, 80, 96, 101, 140, 144, 145, 147, 175, 186, 221, 232, 287], "weik": 1, "ye": [1, 4, 5, 6, 287], "timeout": [1, 156, 172, 216, 263], "horton": [1, 28, 163, 286], "guido": [1, 249, 250, 286], "petretto": [1, 249, 250, 286], "voronoi": [1, 9, 14, 18, 24, 25, 26, 29, 71, 89, 241], "tang": [1, 286], "marco": [1, 28], "ester": 1, "shannon": [1, 92, 144], "magom": 1, "lanthanid": [1, 137, 139, 144, 276], "ewald": [1, 3, 8, 9, 14, 53, 263, 264, 265, 287], "summat": [1, 3, 50, 55, 96, 149, 186, 232], "logan": 1, "ward": 1, "matteo": [1, 250, 286], "coeffici": [1, 9, 14, 18, 31, 34, 45, 50, 52, 79, 83, 86, 88, 96, 101, 144, 149, 155, 156, 161, 173, 188, 189, 191, 201, 204, 221, 223, 232, 247, 249, 269], "plot_element_profil": [1, 8, 9, 14, 80], "2018": [1, 104, 129, 164, 233], "legaci": [1, 71, 163, 171], "veloc": [1, 9, 144, 173, 204, 228, 230], "macro": 1, "pyhul": 1, "kink": [1, 66], "reactant": [1, 8, 9, 14, 66, 86], "locpot": [1, 9, 96, 147, 173, 186, 228, 232], "hamilton": [1, 158, 161], "popul": [1, 8, 9, 109, 110, 129, 135, 149, 158, 161, 163, 187, 190, 222, 223, 232], "marcoest": [1, 286], "enumlib_cal": [1, 5, 8, 9, 127, 147, 263], "enumer": [1, 5, 15, 53, 73, 74, 96, 109, 131, 141, 263, 265, 274], "carri": [1, 108, 109, 110, 147, 148, 184, 204, 263], "account": [1, 3, 26, 45, 46, 71, 73, 96, 140, 142, 147, 148, 155, 156, 191, 206, 232, 247, 249, 254, 269, 270], "too": [1, 11, 62, 76, 79, 80, 95, 136, 147, 185, 189, 191, 197, 232, 254, 263, 264], "discretizeoccupanciestransform": [1, 8, 9, 262, 265], "zhi": [1, 216], "deng": [1, 233], "bypass": 1, "get_symmetry_oper": [1, 8, 9, 253, 254], "autom": [1, 199, 205, 208, 233], "op": [1, 71, 140], "made": [1, 2, 12, 47, 50, 54, 71, 147, 171, 184, 189, 224, 263, 265, 276], "procedur": [1, 21, 34, 71, 82, 132, 149, 178, 232, 263, 287], "zimmermann": [1, 71, 286], "molecular": [1, 15, 47, 76, 85, 89, 96, 129, 137, 142, 150, 170, 181, 189, 191, 197, 201, 204, 215, 221, 223, 284], "maxwel": [1, 230, 286], "dylla": [1, 286], "matthew": [1, 286], "critic2": [1, 5, 71, 130], "topolog": [1, 5, 8, 9, 14, 69, 71, 76, 89, 130], "m": [1, 17, 28, 34, 40, 47, 50, 51, 55, 58, 71, 78, 80, 84, 85, 88, 96, 101, 104, 130, 134, 144, 147, 149, 150, 151, 156, 159, 160, 161, 163, 164, 170, 177, 232, 233, 241, 249, 256, 258, 272, 285, 286, 287], "coord_util": 1, "coord": [1, 4, 6, 8, 9, 18, 24, 28, 29, 34, 58, 62, 63, 71, 76, 80, 89, 101, 130, 135, 138, 140, 145, 147, 148, 150, 155, 161, 173, 186, 188, 189, 197, 201, 216, 217, 224, 247, 249, 254, 259, 264, 267, 270, 284, 287], "gibb": [1, 80, 83, 85, 96, 156, 161, 163, 164, 201, 286], "domain": [1, 8, 9, 14, 40, 83, 94, 277], "mvlnptmdset": [1, 9, 173, 228, 233], "pdanalyz": 1, "defunct": 1, "get_e_above_hul": [1, 8, 9, 14, 80], "oppos": [1, 15, 145, 148, 149], "structure_predict": [1, 8, 9, 14], "plotter": [1, 8, 9, 83, 105, 106, 154, 215, 246, 250, 281, 287], "spectrumplott": [1, 8, 9, 215, 281, 282], "gen_scfman": [1, 223], "brandon": [1, 286], "gw": [1, 175, 200, 230, 233], "bse": [1, 175, 200, 232, 233], "zhenbin": [1, 286], "wang": [1, 66, 80, 152, 163, 233, 252, 285, 286], "hui": 1, "zheng": 1, "haven": [1, 55], "ratio": [1, 14, 18, 25, 26, 31, 36, 50, 54, 62, 66, 70, 77, 79, 85, 144, 161, 252, 263, 276], "iek": 1, "heng": 1, "chu": [1, 233], "kiran": [1, 286], "guess": [1, 58, 59, 73, 95, 137, 139, 147, 189, 191, 204, 233, 265, 268, 287], "zimmerman": 1, "periodic_table_heatmap": [1, 8, 9, 267, 276], "tasker": [1, 96, 148], "reconstruct": [1, 20, 23, 25, 26, 29, 30, 96, 147, 148, 149, 150, 155, 231, 232], "yihan": [1, 286], "xiao": [1, 66, 286], "mcocdawc": 1, "quasiharmonicdebyeapprox": [1, 8, 9, 14, 85], "anharmon": [1, 85, 215], "analys": [1, 4, 5, 6, 17, 42, 61, 71, 89, 129, 154, 162, 164, 213, 287], "baderanalysi": [1, 5, 8, 9, 127, 128, 129], "soc": [1, 71, 99, 156, 179, 233], "eu3": [1, 233], "eu2": [1, 233], "boltztrapanalyz": [1, 8, 9, 154, 156, 161], "seebeck": [1, 156, 161], "mass": [1, 8, 9, 108, 109, 135, 144, 147, 148, 151, 156, 161, 173, 201, 203, 204, 217, 226, 228, 232, 247, 254, 287], "factor": [1, 8, 9, 17, 28, 29, 30, 38, 44, 45, 46, 54, 70, 71, 83, 86, 101, 133, 137, 139, 140, 147, 148, 149, 151, 156, 161, 164, 186, 210, 217, 232, 233, 246, 251, 263, 265, 284], "j": [1, 4, 5, 6, 9, 28, 29, 40, 46, 47, 53, 55, 63, 66, 70, 71, 74, 80, 84, 85, 89, 96, 104, 129, 130, 131, 132, 134, 140, 145, 147, 148, 156, 160, 164, 170, 173, 189, 201, 204, 228, 230, 232, 233, 241, 243, 244, 248, 252, 254, 255, 257, 258, 269, 276, 285, 286], "montaya": 1, "decreas": [1, 17, 34, 55, 84, 133, 189, 263, 274, 284], "symprec": [1, 8, 9, 11, 14, 28, 44, 45, 46, 53, 62, 73, 94, 96, 101, 140, 147, 148, 149, 156, 177, 185, 195, 199, 212, 217, 254, 255, 257, 265], "01": [1, 3, 4, 6, 15, 58, 62, 70, 73, 76, 77, 80, 84, 100, 138, 140, 143, 147, 148, 149, 155, 158, 160, 161, 177, 179, 189, 199, 201, 204, 212, 217, 232, 233, 254, 255, 257, 263, 265, 269, 285], "applic": [1, 3, 5, 40, 90, 105, 106, 110, 111, 131, 146, 172, 179, 184, 191, 257, 277, 285, 287], "pickl": [1, 90, 279, 287], "lpead": 1, "lepsilon": [1, 9, 173, 228, 232, 233], "extern": [1, 2, 3, 4, 5, 6, 122, 230, 231, 238, 277], "until": [1, 84, 147, 148, 149, 156, 189, 190, 224, 232, 263, 272, 280], "john": [1, 55, 70, 78, 101, 233, 277], "hopkin": 1, "mueller": [1, 233, 285], "effici": [1, 71, 76, 87, 88, 90, 94, 129, 140, 143, 147, 148, 155, 176, 177, 189, 191, 233, 256, 272, 285, 287], "servelet": 1, "ii": [1, 34, 71, 90, 140, 144, 145, 147, 148, 263, 286], "crystallographi": [1, 4, 6, 45, 46, 140, 148, 170, 172, 254, 257, 258, 259], "open": [1, 4, 5, 6, 16, 59, 66, 80, 104, 160, 170, 176, 178, 179, 184, 233, 287], "download": [1, 4, 5, 6, 128, 131, 134, 164, 172, 216, 241], "p": [1, 5, 8, 9, 17, 34, 40, 46, 47, 58, 62, 76, 77, 80, 85, 92, 94, 96, 101, 132, 134, 135, 137, 138, 140, 144, 145, 147, 148, 150, 154, 156, 159, 160, 161, 163, 166, 170, 179, 189, 198, 201, 205, 222, 230, 232, 233, 252, 253, 258, 259, 278, 279, 285, 287], "ong": [1, 4, 6, 46, 80, 96, 101, 148, 163, 232, 233, 256, 285, 286], "onlin": [1, 161], "sourc": [1, 4, 5, 6, 9, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 282, 283, 284], "pmg": [1, 4, 5, 6, 8, 9, 115, 121, 122, 123, 124, 125, 126, 190, 191, 230, 287], "get_dimension": [1, 2], "viet": [1, 286], "anh": [1, 286], "xiaohui": [1, 78, 286], "qu": [1, 78, 286], "length": [1, 8, 9, 15, 20, 26, 28, 40, 43, 44, 46, 47, 51, 58, 62, 63, 70, 71, 76, 77, 84, 88, 89, 90, 95, 96, 100, 101, 130, 135, 136, 138, 140, 147, 148, 149, 150, 151, 158, 159, 161, 166, 171, 175, 177, 178, 185, 204, 221, 223, 230, 232, 233, 236, 255, 263, 264, 270, 277, 287], "trigon": [1, 71, 148, 254, 258], "hex": [1, 8, 9, 62, 253, 257], "seriou": 1, "assign": [1, 15, 25, 50, 63, 71, 73, 96, 107, 128, 130, 133, 137, 138, 144, 148, 151, 155, 163, 187, 189, 204, 226, 230, 232, 243, 244, 263, 272, 276], "retriev": [1, 63, 71, 172, 179, 189, 190, 222, 225, 232], "multixyz": 1, "ferroelectr": [1, 8, 9, 14, 140], "tess": [1, 286], "magsymmop": [1, 8, 9, 135, 143, 259], "sympi": [1, 5, 50, 96], "wyckoff": [1, 74, 185, 254, 261], "mitrelaxset": [1, 9, 173, 228, 233], "Will": [1, 55, 63, 73, 75, 148, 163, 186, 187, 189, 190, 191, 197, 208, 212, 213, 214, 249, 251, 252, 263, 265, 278], "pathfind": [1, 79], "adsorpt": [1, 8, 9, 14, 96, 148], "npt": [1, 150, 206, 233], "ensembl": [1, 15, 89, 191, 230, 233], "get_set": [1, 256], "eo": [1, 8, 9, 14, 85], "bandstructur": [1, 4, 6, 8, 9, 154, 156, 161, 190, 195, 214, 230, 232, 233, 246, 251, 253, 287], "user_incar_set": [1, 233], "argcomplet": [1, 4, 6], "bolztrap": 1, "prefix": [1, 8, 9, 141, 169, 172, 272], "pmg_": 1, "classifi": [1, 62, 71, 75, 147, 163, 258], "opt": [1, 59, 201, 221, 223], "torsion": [1, 184, 221, 223], "constraint": [1, 5, 9, 82, 83, 173, 174, 175, 189, 191, 221, 223, 238, 263], "bharat": [1, 286], "intran": [1, 156], "win": 1, "64": [1, 5, 77, 141, 233], "py35": 1, "appveyor": 1, "motif": [1, 71, 73, 75, 263], "saddle_point": [1, 100], "slope": [1, 58, 100, 217, 268], "intens": [1, 43, 44, 45, 46, 56, 103, 104, 146, 186, 201], "germain": [1, 161, 286], "salvato": [1, 161, 286], "vallverdu": [1, 161, 286], "choic": [1, 3, 5, 25, 58, 140, 144, 145, 161, 168, 189, 195, 206, 223, 256, 258, 259, 287], "pmg_default_funct": [1, 5, 230], "pbe_52": [1, 5, 230, 233], "hse": [1, 191, 232, 233], "startup": 1, "collect": [1, 4, 6, 50, 80, 147, 170, 178, 186, 189, 199, 204, 254], "mvlslabset": [1, 9, 173, 228, 233], "fewer": [1, 5, 109, 113, 168, 233, 263], "marker": [1, 80, 96, 161, 207, 251], "enum34": 1, "window": [1, 2, 4, 6, 15, 80, 284], "substitutionprob": [1, 9, 14, 91, 93, 94, 263], "mathew": [1, 286], "slice": [1, 40, 150, 186], "sequenc": [1, 4, 6, 12, 13, 20, 50, 51, 56, 58, 62, 68, 71, 80, 90, 96, 103, 108, 109, 133, 138, 140, 147, 148, 149, 150, 151, 158, 160, 161, 163, 166, 167, 168, 171, 179, 186, 189, 204, 207, 212, 219, 230, 232, 233, 234, 248, 254, 256, 261, 263, 269, 274, 276, 277, 278, 284, 287], "magic": [1, 233], "int": [1, 13, 15, 16, 22, 25, 29, 38, 40, 43, 45, 47, 50, 54, 55, 58, 59, 60, 62, 63, 66, 68, 69, 70, 71, 73, 80, 82, 83, 89, 90, 92, 96, 100, 103, 114, 121, 129, 130, 133, 134, 137, 138, 139, 140, 143, 144, 145, 147, 148, 149, 150, 155, 156, 158, 160, 161, 164, 168, 170, 171, 172, 179, 181, 184, 185, 186, 189, 190, 191, 192, 197, 198, 199, 200, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 217, 219, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 238, 240, 247, 251, 252, 254, 256, 258, 261, 263, 264, 265, 266, 272, 276, 278, 284], "fe": [1, 4, 6, 8, 9, 58, 62, 63, 71, 77, 80, 83, 89, 96, 109, 135, 137, 138, 139, 144, 145, 147, 148, 150, 163, 166, 179, 212, 232, 233, 263, 264, 265, 276, 278, 279, 284, 285, 287], "mn": [1, 8, 9, 40, 58, 62, 66, 77, 80, 135, 137, 138, 139, 144, 145, 147, 148, 150, 219, 232, 233, 263, 265, 285, 287], "fe0": [1, 137, 145], "5co0": 1, "intern": [1, 2, 20, 25, 26, 29, 45, 47, 71, 82, 85, 114, 137, 141, 147, 159, 168, 179, 181, 192, 201, 232, 233, 247, 248, 251, 254, 256, 258, 259], "represent": [1, 4, 6, 11, 12, 20, 25, 26, 29, 30, 36, 43, 50, 52, 53, 55, 60, 62, 63, 66, 76, 77, 80, 83, 86, 89, 90, 94, 97, 100, 106, 108, 109, 110, 113, 137, 139, 140, 141, 143, 144, 145, 147, 148, 149, 155, 156, 158, 159, 160, 161, 164, 167, 175, 177, 179, 181, 185, 186, 187, 189, 190, 193, 197, 198, 200, 201, 204, 206, 207, 208, 210, 212, 213, 215, 216, 219, 221, 222, 230, 232, 236, 241, 247, 248, 249, 250, 258, 261, 264, 272, 277, 278, 285, 287], "memori": [1, 2, 5, 8, 9, 135, 151, 155, 181, 191, 215, 232], "ration": [1, 36, 62], "upgrad": [1, 2, 4, 6, 191], "monti": [1, 178, 190, 219, 232, 287], "ziqe": 1, "rong": [1, 79, 285], "monkhorst": [1, 9, 173, 174, 175, 177, 189, 228, 230, 233], "mesh": [1, 15, 40, 50, 175, 177, 179, 199, 217, 230, 232, 233, 254], "simplifi": [1, 96, 158, 177, 191], "global": [1, 4, 6, 9, 159, 173, 177, 184, 188, 189, 190, 191, 263], "vasp_psp_dir": [1, 5], "mapi_kei": 1, "store": [1, 12, 13, 23, 26, 28, 29, 30, 32, 55, 63, 65, 68, 71, 74, 80, 85, 89, 90, 110, 128, 130, 133, 138, 139, 142, 144, 147, 148, 149, 152, 155, 156, 158, 161, 162, 164, 165, 172, 175, 176, 177, 178, 185, 186, 192, 195, 200, 201, 206, 213, 214, 223, 231, 232, 247, 249, 251, 252, 263, 264, 265, 266, 273], "environment": [1, 5], "right": [1, 4, 6, 34, 62, 80, 140, 142, 148, 149, 151, 163, 193, 219, 224, 232, 254, 263, 264, 265, 268, 272, 276, 279, 284], "easili": [1, 2, 148, 175, 212, 230, 252], "transit": [1, 11, 75, 100, 144, 155, 163, 171, 191, 201, 215, 223, 227], "greater": [1, 4, 6, 11, 71, 114, 137, 139, 147, 165, 233, 248], "transmut": [1, 8, 9, 10, 11, 12, 263, 264, 265, 266, 287], "beta": [1, 8, 9, 113, 135, 140, 161, 185, 189, 190, 201, 246, 252, 254, 257, 265, 287], "from_dict": [1, 8, 9, 10, 11, 12, 14, 18, 19, 20, 23, 24, 25, 26, 29, 30, 31, 36, 37, 53, 55, 61, 62, 63, 72, 74, 76, 77, 80, 83, 86, 90, 91, 94, 96, 97, 105, 112, 113, 135, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 152, 154, 155, 156, 158, 160, 162, 164, 167, 173, 174, 175, 177, 179, 181, 187, 188, 189, 196, 197, 200, 201, 203, 204, 207, 210, 211, 212, 215, 219, 226, 228, 230, 233, 246, 247, 248, 249, 250, 253, 261, 267, 277], "dopingtransform": [1, 8, 9, 262, 263], "strategi": [1, 25, 28, 29, 32, 63, 64, 71, 73, 74, 130, 191, 213], "mic": 1, "reciproc": [1, 8, 9, 45, 46, 53, 55, 71, 140, 148, 155, 156, 161, 173, 175, 189, 199, 226, 228, 230, 232, 233, 247, 249, 251, 257, 267, 268], "sulfid": [1, 89, 163], "piezoelectr": [1, 81, 82], "togo": [1, 254, 285], "websit": [1, 66], "bundl": 1, "born": [1, 45, 82, 226], "derivedinputset": 1, "deriv": [1, 5, 50, 54, 58, 71, 84, 108, 131, 148, 149, 151, 156, 181, 201, 215, 217, 230, 232, 233, 258, 263, 268, 272], "previuo": 1, "shayam": 1, "expens": [1, 55, 80, 186, 189, 231, 232, 263, 265], "10x": [1, 191], "get_primitive_standard": 1, "rhombohedr": [1, 8, 9, 62, 135, 140, 177, 254, 256, 259, 263], "step": [1, 3, 4, 6, 8, 9, 30, 50, 59, 76, 79, 80, 85, 89, 107, 108, 109, 110, 111, 134, 147, 148, 150, 156, 160, 163, 173, 175, 184, 189, 190, 191, 201, 205, 206, 207, 208, 217, 226, 230, 231, 232, 233, 251, 265, 272, 277, 287], "100x": 1, "seen": [1, 40, 79, 232, 272], "similar": [1, 4, 5, 6, 47, 55, 63, 73, 76, 83, 90, 94, 95, 126, 137, 139, 143, 147, 151, 155, 160, 161, 166, 189, 212, 214, 218, 230, 232, 233, 247, 252, 254, 264, 265, 272, 287], "gap": [1, 8, 9, 68, 71, 135, 138, 155, 156, 160, 161, 189, 190, 191, 232, 233], "enum": [1, 5, 62, 73, 122, 130, 131, 141, 144, 147, 159, 171, 175, 177, 230, 263], "multienum": 1, "failur": 1, "smooth": [1, 9, 14, 57, 58, 71, 79, 161, 217], "splrep": 1, "diffusionanalyz": [1, 4, 6], "get_framework_rms_plot": 1, "ndarrai": [1, 40, 45, 47, 50, 51, 52, 62, 68, 73, 76, 78, 80, 81, 82, 90, 104, 138, 140, 143, 145, 146, 147, 148, 149, 150, 151, 155, 159, 160, 178, 198, 214, 217, 231, 232, 234, 245, 247, 254, 256, 259, 276], "orderparamet": 1, "constant": [1, 17, 36, 44, 50, 71, 78, 79, 82, 85, 88, 96, 148, 150, 151, 156, 161, 163, 164, 190, 191, 201, 215, 217, 223, 226, 230, 232, 233, 248, 251], "actual": [1, 11, 55, 58, 59, 62, 63, 71, 80, 83, 107, 138, 140, 144, 145, 147, 148, 150, 164, 186, 189, 191, 197, 200, 205, 206, 208, 219, 224, 230, 232, 254, 264, 265, 266, 279, 287], "creation": [1, 90, 137, 144, 148, 151, 171, 189, 191, 285], "slightli": [1, 93, 159, 232], "slower": [1, 244, 287], "far": [1, 3, 95, 114, 175, 213, 214, 230, 232], "boost": 1, "syntax": [1, 155, 200, 287], "simpli": [1, 3, 4, 5, 6, 46, 58, 63, 80, 128, 134, 136, 137, 138, 140, 147, 148, 151, 161, 177, 184, 189, 190, 191, 206, 211, 228, 233, 282, 287], "zeo": [1, 8, 9, 173], "mitmdvaspinputset": 1, "dim": [1, 8, 9, 14, 50, 76, 79, 80, 83, 143, 186, 245], "hull": [1, 41, 66, 80, 83, 101, 108, 109, 110, 165, 166, 168], "gulp": [1, 5, 53, 55, 132, 236, 241], "physic": [1, 50, 63, 70, 73, 79, 85, 99, 108, 130, 140, 144, 148, 155, 156, 164, 191, 232, 233, 247, 249, 263, 285, 286], "convexhul": [1, 80, 101], "sulfur": [1, 60], "adf": [1, 8, 9, 173], "xin": [1, 160, 215, 286], "chen": [1, 47, 215, 272, 285, 286], "subgroup": [1, 256, 258], "limit": [1, 15, 28, 30, 40, 43, 44, 46, 54, 55, 66, 70, 73, 80, 83, 85, 88, 136, 148, 156, 158, 160, 161, 191, 213, 214, 223, 225, 233, 249, 250, 251, 272, 282], "qchem4": 1, "batch": [1, 13, 233], "mapi": 1, "unconverg": [1, 79, 232], "cartesian": [1, 4, 6, 9, 15, 28, 58, 62, 63, 79, 90, 130, 132, 138, 140, 143, 145, 147, 148, 155, 161, 173, 189, 195, 201, 215, 228, 230, 232, 240, 245, 247, 249, 252, 254, 257, 264, 265, 269, 287], "forc": [1, 4, 6, 8, 9, 14, 55, 76, 79, 82, 92, 94, 96, 100, 138, 147, 148, 181, 189, 190, 191, 201, 204, 205, 206, 215, 217, 223, 226, 230, 232, 233, 263], "aiida": [1, 172], "andriu": [1, 286], "merki": [1, 170, 286], "special": [1, 5, 25, 60, 128, 139, 144, 159, 161, 168, 189, 204, 205, 233, 263, 272], "bsvasprun": [1, 9, 173, 228, 232], "3x": [1, 143, 147, 160], "togeth": [1, 4, 6, 11, 29, 34, 71, 73, 80, 84, 140, 147, 148, 150, 161, 176, 185, 206, 230, 232, 233, 249, 254, 257, 263], "power": [1, 4, 5, 6, 25, 151, 156, 161, 204, 268, 287], "prettyt": 1, "mitnebvaspinputset": 1, "abinitio": 1, "setten": 1, "nwoutput": [1, 8, 9, 173, 215], "td": [1, 201], "ce": [1, 8, 9, 14, 18, 19, 22, 29, 77, 135, 144, 233, 263], "eu": [1, 8, 9, 77, 135, 144, 172, 233], "empti": [1, 63, 71, 137, 139, 155, 158, 161, 177, 206, 210, 222, 223, 225, 269, 273, 284], "multilin": [1, 190, 224, 232], "get_entri": [1, 8, 9, 14, 41], "ylim": [1, 96, 161, 213, 250, 251, 282], "dielectricfunct": [1, 231], "miguel": [1, 232, 286], "dia": [1, 232, 286], "costa": [1, 232, 286], "put": [1, 3, 5, 15, 59, 90, 137, 147, 148, 158, 161, 176, 191, 206, 225, 232, 265, 268], "vaspio": 1, "vasp_": 1, "suffix": [1, 84, 128, 130, 230], "But": [1, 4, 6, 62, 191, 206, 241, 254, 263, 264, 287], "stub": [1, 271], "pl": 1, "migrat": [1, 4, 6, 285], "anonymized_formula": [1, 8, 9, 135, 137, 139], "truli": 1, "chemistri": [1, 3, 16, 64, 66, 93, 94, 137, 138, 139, 144, 156, 161, 163, 164, 181, 233, 276, 286], "independ": [1, 50, 51, 70, 80, 96, 148, 155, 175, 181, 201, 215, 232], "a2b2": 1, "peroxid": [1, 89, 139, 163], "a2": [1, 25, 62, 201, 254, 263], "diatom": [1, 168], "gass": 1, "data_": [1, 185], "header": [1, 5, 9, 173, 176, 178, 179, 185, 186, 190, 196, 197, 198, 199, 206, 210, 218, 222, 224, 230, 232, 236, 278], "normalizatino": 1, "dockerfil": 1, "vec": [1, 62, 149], "orthogon": [1, 34, 50, 62, 71, 147, 148, 149, 191, 204, 263, 265, 284], "tool": [1, 2, 4, 5, 6, 28, 36, 80, 96, 99, 108, 120, 146, 151, 154, 162, 176, 225, 241, 253, 254, 257, 281, 285, 287], "grep": [1, 190, 219, 224, 232, 233], "pwscfinput": 1, "05": [1, 15, 17, 28, 30, 34, 43, 77, 80, 82, 88, 96, 100, 101, 140, 145, 147, 148, 149, 151, 156, 161, 176, 179, 189, 201, 221, 232, 233, 247, 250, 254, 255, 256, 257, 268, 279, 284, 285], "per": [1, 15, 41, 58, 66, 73, 80, 83, 90, 96, 101, 108, 111, 128, 133, 148, 156, 161, 162, 164, 166, 177, 180, 189, 191, 213, 230, 232, 233, 263, 265, 270, 276, 284, 287], "get_materials_id_refer": 1, "helper": [1, 13, 15, 23, 34, 50, 63, 71, 88, 89, 96, 99, 101, 114, 133, 137, 148, 149, 189, 192, 197, 206, 219, 229, 230, 250, 276], "mp_decod": 1, "decod": 1, "robustli": 1, "identifi": [1, 3, 22, 25, 26, 28, 29, 47, 50, 59, 60, 62, 69, 71, 74, 76, 93, 96, 101, 134, 141, 156, 164, 185, 189, 190, 197, 199, 213, 223, 230, 247, 250, 254, 256, 285], "bit": [1, 5, 232, 272, 287], "ly": [1, 34, 148, 206, 287], "materialsapi": [1, 287], "schema": [1, 287], "na": [1, 4, 6, 8, 9, 11, 77, 83, 96, 135, 137, 144, 147, 233, 264, 265, 279], "parse_criteria": 1, "notebook": [1, 4, 6, 229, 283, 287], "polar": [1, 8, 9, 14, 44, 46, 50, 57, 71, 73, 140, 143, 148, 149, 155, 156, 158, 160, 173, 175, 177, 186, 188, 189, 190, 191, 213, 214, 219, 232, 233], "ioanni": [1, 273, 286], "petousi": [1, 273, 286], "significantli": [1, 110, 130, 149, 263, 275], "prettyplotlib": 1, "py3k": 1, "revamp": 1, "symmetryfind": 1, "pointgroup": [1, 8, 9, 253, 254, 256], "rewritten": 1, "constructor": [1, 13, 16, 20, 21, 22, 23, 25, 26, 28, 29, 30, 36, 50, 51, 52, 59, 63, 71, 76, 78, 80, 81, 82, 85, 100, 109, 128, 137, 140, 143, 147, 148, 149, 150, 156, 164, 165, 175, 182, 186, 189, 191, 204, 206, 207, 213, 217, 226, 230, 232], "batteryanalyz": [1, 9, 105, 106, 107], "intercal": [1, 47, 90, 107, 110], "structure_match": [1, 2, 8, 9, 11, 14, 147, 168, 287], "moab": 1, "qadapt": 1, "liam": [1, 286], "damewood": 1, "fine": [1, 5, 79, 144, 161, 185, 189, 198, 230, 232, 233, 251, 254, 282, 287], "statist": [1, 25, 28, 29, 63, 71, 89, 137, 139, 232], "nicola": [1, 58], "dardenn": 1, "invert": [1, 15, 50, 74, 99, 161], "sq_disp_ion": 1, "intuit": [1, 55, 80, 227], "throughout": [1, 108], "cifio": 1, "pure": [1, 26, 28, 71, 144, 231, 278], "courtesi": 1, "william": [1, 4, 6, 70], "davidson": [1, 4, 6, 9, 173, 188, 189], "pycifrw": 1, "try": [1, 2, 5, 12, 37, 50, 59, 63, 73, 74, 130, 156, 160, 179, 225, 230, 232, 263, 284], "50": [1, 40, 93, 94, 96, 114, 141, 156, 160, 184, 189, 191, 199, 230, 233, 279, 285], "linearassign": [1, 8, 9, 242, 243, 244], "guidelin": [1, 4, 5, 6], "matgeni": 1, "breviti": 1, "structure_modifi": 1, "protocol": [1, 179, 233, 279], "to_dict": [1, 9, 173, 174, 176, 287], "np1": 1, "deploy": 1, "simpler": [1, 113, 148], "explan": [1, 62, 137, 161, 163, 164, 287], "conv": [1, 268], "make_movi": [1, 8, 9, 281, 284], "wild": [1, 287], "card": [1, 287], "outlin": [1, 3, 40, 71, 254, 257, 285, 287], "vastli": [1, 232], "celementtre": [1, 232], "twice": [1, 107, 128, 130], "half": [1, 90, 138, 148, 192, 201], "vast": [1, 191], "extrem": [1, 4, 6, 55, 95, 147, 161, 186, 191, 232, 233, 251, 256, 264, 265, 282, 287], "particularli": [1, 47, 71, 159, 274, 287], "consumpt": 1, "transpar": [1, 8, 9, 14, 96, 101, 151, 156, 161], "get_sorted_structur": [1, 8, 9, 14, 61, 62, 135, 138, 147, 148], "pyyaml": [1, 287], "highli": [1, 3, 4, 6, 80, 83, 160, 175, 186, 191, 230, 232, 264, 287], "libyaml": 1, "bind": [1, 5, 17, 96, 104, 184, 191, 241, 265, 287], "urgent": 1, "geoffroi": [1, 4, 6, 28, 286], "hautier": [1, 4, 6, 28, 80, 93, 94, 156, 233, 285, 286], "oszicar": [1, 9, 113, 121, 173, 228, 232], "get_xrd_plot": [1, 8, 9, 115, 123], "xrd": [1, 8, 9, 14, 42, 43, 44, 45, 123, 146], "theta": [1, 43, 45, 46, 71, 85, 147], "unequ": 1, "size": [1, 3, 15, 20, 29, 30, 34, 40, 45, 47, 63, 71, 73, 79, 80, 83, 89, 90, 96, 101, 107, 111, 134, 147, 148, 150, 161, 171, 179, 181, 214, 216, 226, 231, 232, 233, 234, 251, 256, 263, 264, 265, 268, 269, 272, 276], "ag": [1, 5, 8, 9, 77, 135, 144, 233], "radiat": [1, 44, 46], "xrdcalcul": [1, 9, 14, 42, 44, 46], "pattern": [1, 8, 9, 43, 44, 45, 46, 146, 173, 190, 192, 219, 224, 232], "deilectr": 1, "solut": [1, 2, 25, 41, 80, 86, 96, 175, 177, 243, 244, 264, 265], "sanit": [1, 62, 74, 147, 148, 233], "1d": [1, 47, 50, 96, 189, 201, 232, 269], "essenti": [1, 13, 15, 59, 80, 83, 108, 109, 137, 140, 145, 146, 147, 151, 160, 177, 186, 189, 204, 215, 230, 240, 254, 287], "lowest": [1, 25, 29, 37, 41, 50, 55, 69, 74, 80, 86, 96, 108, 142, 144, 158, 166, 168, 175, 263, 264, 265, 266], "matcher": [1, 11, 62, 76, 126], "grand": [1, 66, 80, 96, 285], "maker": 1, "sai": [1, 150, 189, 191, 272, 287], "directori": [1, 3, 4, 5, 6, 8, 9, 12, 13, 71, 100, 113, 114, 118, 121, 122, 124, 127, 128, 129, 130, 133, 156, 165, 176, 177, 179, 187, 190, 192, 199, 206, 208, 212, 216, 230, 231, 232, 233, 238, 239, 263, 279, 287], "accuraci": [1, 55, 156, 177, 179, 189, 191, 223, 233, 241, 264, 265], "medasani": [1, 286], "transformedstructur": [1, 8, 9, 10, 12, 13, 94, 279, 287], "substitutor": [1, 8, 9, 14, 91], "bvanalyz": [1, 8, 9, 14, 17, 95], "had": [1, 2, 55, 144, 156], "quick_start": 1, "giantomassi": [1, 250, 286], "qchemio": 1, "substitut": [1, 8, 9, 12, 15, 50, 55, 63, 90, 92, 93, 94, 135, 137, 147, 204, 206, 217, 232, 263, 264, 265, 272], "readabl": [1, 164, 172, 179, 189, 205, 208, 224, 276, 287], "shyue": [1, 4, 6, 46, 100, 206, 232, 256, 279, 286], "ping": [1, 4, 6, 46, 100, 232, 256, 286], "jayaraman": 1, "dump": [1, 8, 9, 166, 191, 206, 207, 267, 271, 287], "particular": [1, 3, 11, 15, 71, 80, 84, 86, 96, 109, 128, 129, 136, 137, 144, 146, 147, 148, 149, 158, 160, 163, 166, 168, 176, 186, 187, 190, 215, 232, 233, 236, 248, 254, 256, 261, 265, 269, 272, 285, 287], "ascii": [1, 144, 179, 225], "_cgraph": 1, "prior": [1, 3, 15, 90, 163, 166, 168, 216, 263, 265, 272], "nwchemio": 1, "cosmo": [1, 215], "esp": [1, 17, 190, 215, 219, 232, 265], "nav": 1, "rajput": 1, "manag": [1, 2, 4, 6, 114, 161, 171], "typic": [1, 4, 5, 6, 20, 40, 46, 50, 59, 63, 71, 80, 89, 96, 100, 109, 113, 114, 128, 130, 136, 144, 147, 148, 149, 151, 155, 156, 158, 161, 162, 163, 164, 167, 168, 186, 187, 213, 214, 215, 225, 230, 232, 233, 251, 261, 263, 264, 282, 287], "demonstr": [1, 4, 5, 6, 287], "hous": 1, "vaspio_set": 1, "prevent": [1, 2, 63, 95, 177, 179, 204, 265], "earlier": [1, 252, 287], "termin": [1, 4, 5, 6, 68, 79, 80, 100, 138, 148, 181, 189, 190, 191, 201, 209, 219, 224, 232, 263], "friendli": [1, 130, 175, 215, 287], "softwar": [1, 3, 4, 5, 6, 104, 122, 150, 156, 161, 216, 221, 258, 272, 286], "throughput": [1, 4, 6, 13, 96, 156, 168, 191, 233, 241, 254, 257, 285], "porou": [1, 71, 241, 285], "void": [1, 241], "maciejharanczyk": 1, "zeopp": [1, 8, 9, 173], "distribut": [1, 5, 30, 79, 89, 133, 147, 160, 163, 230, 263, 265, 272], "34": [1, 17, 141, 144, 287], "vtk": [1, 4, 6, 281, 284], "visual": [1, 4, 5, 6, 13, 14, 15, 18, 25, 31, 39, 40, 63, 80, 96, 130, 150, 161, 176, 186, 233, 252, 281, 282, 283, 284], "instruct": [1, 3, 4, 5, 6, 128, 130, 131, 134, 148, 187, 216, 221, 223, 241], "preliminari": [1, 148], "jayaratnam": 1, "sw": 1, "moleculematch": [1, 8, 9, 14, 76], "rm": [1, 5, 58, 90, 179, 232], "lei": 1, "cheng": 1, "rare": [1, 2, 47, 144, 148, 233, 254], "mutabl": [1, 147, 287], "port": 1, "over": [1, 4, 6, 17, 28, 40, 45, 68, 90, 114, 138, 144, 147, 148, 149, 155, 156, 160, 161, 190, 191, 212, 231, 232, 258, 265, 270, 287], "awkward": 1, "__hash__": 1, "believ": [1, 286], "given": [1, 3, 4, 5, 6, 11, 15, 16, 17, 20, 21, 22, 23, 25, 26, 28, 29, 30, 34, 36, 38, 40, 41, 44, 46, 47, 50, 53, 55, 58, 59, 62, 63, 66, 68, 69, 70, 71, 73, 75, 76, 79, 80, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96, 100, 101, 107, 108, 110, 128, 130, 136, 137, 140, 143, 144, 145, 147, 148, 149, 150, 151, 155, 156, 158, 159, 160, 161, 163, 165, 166, 172, 175, 176, 177, 179, 181, 186, 189, 190, 191, 192, 197, 201, 204, 205, 206, 208, 212, 213, 221, 222, 223, 226, 230, 232, 233, 234, 241, 243, 244, 247, 249, 251, 252, 254, 255, 257, 259, 263, 264, 265, 269, 272, 274, 278, 282, 285, 287], "exactli": [1, 3, 62, 90, 148, 156, 175, 189, 213, 230, 231, 265], "read_structur": [1, 9, 173, 174, 178], "write_structur": 1, "read_mol": 1, "write_mol": 1, "analogu": 1, "excel": [1, 76, 128, 131, 177, 254, 285], "materialsprojectvaspinputset": [1, 285], "mpvaspinputset": [1, 163], "mpstatic": 1, "mpnonscf": 1, "mitmd": 1, "mit": [1, 4, 6, 163, 233, 285], "diffusionanalysi": 1, "revis": [1, 189], "feffio": [1, 199], "credit": [1, 54, 286], "alan": [1, 285, 286], "dozier": [1, 285, 286], "expand": [1, 3, 4, 5, 6, 62, 191, 263], "take": [1, 4, 6, 15, 40, 45, 46, 50, 58, 60, 62, 71, 73, 74, 78, 79, 80, 89, 95, 96, 128, 129, 137, 138, 140, 144, 145, 146, 147, 148, 149, 150, 152, 155, 156, 158, 159, 160, 162, 164, 167, 179, 185, 187, 189, 190, 191, 206, 219, 224, 232, 233, 247, 254, 259, 263, 265, 269, 270, 287], "qhull": [1, 30, 89], "command_lin": [1, 5, 8, 9, 147], "henkelmann": [1, 5, 128, 285], "et": [1, 5, 36, 47, 64, 71, 73, 77, 85, 89, 128, 152, 156, 160, 161, 163, 164, 172, 195, 232, 255, 285], "al": [1, 5, 8, 9, 36, 47, 64, 71, 73, 77, 85, 89, 128, 135, 137, 144, 152, 156, 160, 161, 163, 164, 172, 232, 233, 255, 285], "titl": [1, 3, 8, 9, 29, 43, 54, 83, 161, 173, 176, 179, 181, 189, 194, 195, 197, 201, 215, 225, 250, 251], "__rmul__": 1, "delete_snl": 1, "collabor": [1, 4, 6, 170], "get_stabl": 1, "grandpotentialphasediagram": [1, 8, 9, 14, 66, 80], "stol": [1, 90, 166], "redefin": [1, 241], "rms_dist": 1, "repres": [1, 15, 20, 25, 26, 29, 41, 47, 50, 51, 52, 55, 60, 62, 63, 66, 71, 76, 78, 80, 81, 82, 86, 89, 93, 96, 103, 104, 108, 109, 110, 135, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 158, 160, 161, 166, 178, 179, 186, 187, 189, 190, 195, 199, 201, 204, 206, 207, 213, 215, 216, 217, 221, 223, 230, 232, 233, 234, 238, 240, 241, 247, 248, 251, 254, 256, 261, 277, 278, 284, 287], "framework": [1, 5, 9, 20, 71, 90, 96, 105, 106, 108, 109, 163, 166, 284, 287], "strain": [1, 8, 9, 14, 49, 50, 67, 68, 69, 70, 73, 82, 147, 149, 184, 232], "structureeditor": 1, "session": [1, 114, 171], "pool": [1, 13, 171, 264, 266], "simplic": [1, 8, 9, 14, 45, 80, 101], "context": [1, 159, 171], "ru": [1, 8, 9, 77, 135, 144, 233, 263], "wigner": [1, 89, 130, 140, 161, 230], "seitz": [1, 89, 130, 140, 161], "brillouin": [1, 140, 155, 156, 161, 177, 199, 247, 251, 254, 255, 257], "zone": [1, 45, 140, 155, 156, 161, 177, 199, 247, 251, 254, 255, 257], "varieti": [1, 130, 287], "structurenl": [1, 8, 9, 12, 172, 267, 277], "structurenotationallanguag": 1, "lda": [1, 17, 28, 141, 144, 152, 168, 171, 230, 232, 233, 265], "structurenotationlanguag": 1, "markup": 1, "metadata": [1, 69, 141, 172, 189, 230, 277], "ipython": [1, 229, 287], "shell": [1, 48, 71, 90, 147, 189, 197, 236, 263], "primit": [1, 12, 13, 62, 73, 75, 90, 96, 113, 147, 148, 166, 177, 181, 185, 195, 210, 212, 217, 232, 233, 254, 255, 257, 263, 265, 287], "use_external_qhul": 1, "alchemi": [1, 8, 9, 264, 265, 266, 279], "transformedmateri": 1, "undo": [1, 12, 13, 287], "redo_last_transform": 1, "distance_and_image_old": 1, "struct": [1, 47, 71, 79, 82, 90, 138, 156, 161, 185, 197, 260, 287], "structurefitt": 1, "magnitud": [1, 58, 73, 75, 139, 140, 147, 148, 232, 257, 263, 278, 287], "primitivecelltransform": [1, 8, 9, 262, 265], "advantag": [1, 4, 6], "heavi": [1, 5, 287], "cleaner": 1, "incorrectli": 1, "axi": [1, 15, 40, 45, 54, 62, 68, 76, 78, 96, 100, 138, 140, 143, 147, 148, 159, 161, 175, 176, 177, 186, 226, 232, 241, 251, 254, 255, 257, 258, 263, 265, 269, 270, 276, 282, 284], "reverse_readlin": 1, "bzip": [1, 185], "strucutur": 1, "lossi": 1, "impli": [1, 13, 89, 90, 140, 145, 147, 166, 272], "usual": [1, 4, 5, 6, 26, 55, 63, 71, 109, 130, 138, 145, 147, 148, 152, 156, 158, 161, 164, 177, 190, 206, 225, 230, 232, 233, 251, 254, 263, 265, 282], "easy_instal": [1, 5], "taken": [1, 5, 26, 34, 41, 45, 63, 73, 142, 144, 147, 148, 160, 162, 164, 167, 176, 189, 247, 249, 254, 257, 279], "care": [1, 5, 63, 141, 149, 213, 232, 257, 265], "otherwis": [1, 4, 5, 6, 22, 25, 29, 34, 44, 45, 46, 54, 63, 71, 73, 79, 89, 90, 96, 103, 108, 137, 139, 140, 144, 145, 147, 148, 155, 156, 158, 160, 161, 175, 177, 178, 181, 186, 189, 190, 200, 201, 204, 205, 212, 213, 223, 226, 230, 232, 233, 236, 247, 252, 255, 263, 264, 266, 269, 270, 272, 276], "pypi": [1, 4, 6], "brand": 1, "posteriori": [1, 17], "mine": [1, 47, 93, 94, 95], "fitter": [1, 166], "entry_tool": [1, 8, 9, 162], "revers": [1, 2, 4, 6, 62, 63, 90, 100, 138, 143, 147, 148, 175, 176, 179, 185, 190, 197, 219, 225, 232, 257, 258, 264, 287], "hexagon": [1, 8, 9, 62, 71, 101, 135, 140, 148, 175, 177, 230, 233, 254, 256, 258, 259, 263], "relaxationanalyz": [1, 8, 9, 14, 89], "unittest": [1, 3, 4, 5, 6, 279], "smartio": 1, "intellig": [1, 4, 6, 232], "spglib_adaptor": 1, "solari": 1, "pep8": 1, "complianc": [1, 50], "cssr": [1, 4, 6, 8, 9, 147, 173, 236, 241], "compoundpd": 1, "gu": [1, 5, 131, 264], "hart": [1, 5, 84, 131, 264], "lll": [1, 140, 147, 148, 233, 263, 270], "fit": [1, 8, 9, 14, 34, 46, 50, 54, 58, 60, 74, 76, 80, 85, 90, 100, 134, 149, 155, 156, 161, 165, 166, 189, 191, 215, 217, 233, 249, 263, 268, 272, 276], "mg": [1, 4, 6, 8, 9, 59, 63, 71, 77, 135, 137, 144, 230, 232, 233, 263, 265], "si": [1, 4, 6, 8, 9, 50, 77, 135, 137, 144, 147, 151, 155, 175, 179, 212, 232, 233, 265, 279, 287], "fe2o3": [1, 4, 6, 83, 97, 137, 142, 163, 278, 287], "comp": [1, 4, 6, 17, 41, 80, 86, 109, 131, 137], "cscl": [1, 4, 6, 148, 279, 287], "cubic": [1, 4, 6, 8, 9, 62, 71, 100, 135, 140, 147, 148, 161, 225, 253, 254, 257, 263], "encod": [1, 30, 176, 179, 287], "almost": [1, 137, 189, 232, 264, 279, 287], "borg": [1, 8, 9, 105, 163], "complete_ord": 1, "partialremovespecietransform": [1, 8, 9, 262, 264, 265], "long": [1, 3, 43, 77, 144, 177, 189, 190, 224, 232, 245, 254, 263, 287], "gaussianinput": [1, 8, 9, 173, 201, 215, 287], "assimil": [1, 9, 105, 112, 113, 114, 163, 190], "locat": [1, 5, 40, 51, 71, 100, 130, 148, 161, 177, 189, 192, 216, 230, 238, 279, 287], "academ": 2, "research": [2, 4, 6, 79, 100, 156, 170, 233, 272, 285, 286], "activ": [2, 4, 5, 6, 8, 9, 75, 101, 107, 159, 189, 191, 267, 271, 276], "commun": [2, 3, 5, 130, 144, 156, 164, 285, 286], "peopl": [2, 161, 233, 251, 282], "As": [2, 4, 5, 6, 8, 9, 29, 58, 63, 71, 77, 95, 96, 135, 144, 189, 191, 225, 232, 233, 263, 287], "frequent": [2, 58, 83, 168], "substant": 2, "kept": [2, 11, 79, 148, 150, 161, 189, 206, 217], "despit": [2, 5], "calendar": 2, "yyyi": 2, "mm": [2, 34, 45], "dd": [2, 25, 26, 29, 36], "4": [2, 4, 6, 17, 20, 22, 25, 26, 28, 32, 34, 35, 36, 37, 43, 50, 54, 55, 58, 62, 63, 71, 77, 80, 83, 85, 86, 95, 96, 99, 107, 129, 132, 133, 134, 137, 139, 140, 141, 143, 144, 147, 148, 150, 152, 156, 159, 160, 161, 164, 166, 172, 175, 176, 177, 179, 185, 191, 195, 197, 199, 204, 206, 210, 212, 213, 214, 219, 221, 223, 230, 231, 232, 233, 250, 251, 254, 256, 257, 258, 259, 263, 264, 265, 269, 270, 274, 276, 278, 279, 284, 287], "v2019": 2, "13": [2, 25, 71, 141, 152, 159, 161, 175, 179, 213, 243, 279], "species_and_occu": [2, 8, 9, 135, 147, 254], "deprec": [2, 4, 6, 7, 144, 147, 163], "schedul": [2, 4, 6], "9": [2, 4, 5, 6, 15, 17, 45, 71, 77, 140, 141, 144, 152, 159, 161, 164, 179, 197, 221, 223, 232, 233, 263, 269, 276, 279, 287], "month": 2, "cannot": [2, 3, 4, 6, 17, 30, 60, 70, 76, 85, 89, 90, 128, 137, 139, 144, 160, 168, 176, 189, 190, 192, 204, 206, 221, 223, 231, 252, 263, 269, 270], "compromis": [2, 184], "adopt": [2, 3, 4, 6, 216, 232], "5": [2, 4, 5, 6, 7, 11, 15, 20, 22, 25, 26, 28, 32, 34, 36, 47, 50, 53, 54, 58, 62, 66, 71, 73, 77, 80, 84, 85, 89, 90, 92, 93, 95, 96, 99, 100, 101, 129, 133, 137, 138, 139, 140, 141, 144, 145, 147, 148, 149, 150, 152, 156, 159, 160, 161, 163, 166, 172, 175, 176, 177, 179, 184, 185, 189, 191, 195, 197, 199, 200, 206, 209, 212, 213, 214, 219, 221, 223, 230, 232, 233, 254, 255, 256, 257, 259, 263, 264, 265, 269, 270, 276, 278, 279, 284, 287], "2021": [2, 4, 6, 40, 163, 172, 271], "deal": [2, 25, 73, 96, 147, 161, 189, 190, 191, 192, 214], "jan": [2, 161, 272, 286], "succinctli": 2, "conserv": [2, 177, 179, 191], "approach": [2, 25, 63, 71, 80, 94, 100, 156, 175, 177, 225, 230, 233, 265, 285], "alwai": [2, 3, 4, 6, 34, 63, 75, 76, 83, 89, 90, 96, 108, 144, 147, 148, 156, 159, 163, 168, 189, 190, 191, 204, 206, 215, 230, 232, 254, 255, 268, 287], "unnecessari": [2, 44, 147], "conflict": [2, 3], "thumb": 2, "whatev": [2, 5, 147, 191, 192, 233], "28": [2, 5, 54, 66, 71, 77, 141, 151, 179, 233], "2666": 2, "defect_transform": 2, "pointdefectcompar": 2, "2405": 2, "plane": [2, 14, 15, 18, 26, 28, 31, 34, 45, 46, 47, 62, 68, 69, 70, 71, 83, 96, 101, 138, 140, 143, 147, 148, 189, 215, 232, 263], "orthonormal_vectors_old": 2, "elastictensor": [2, 9, 14, 49, 50, 69], "debye_temperature_from_sound_veloc": 2, "all_input": [2, 9, 173, 196, 199], "2397": 2, "structure_analyz": [2, 8, 9, 14], "conversionelectrod": [2, 9, 105, 106, 109], "as_dict_summari": 2, "from_lengths_and_angl": 2, "lengths_and_angl": 2, "7": [2, 5, 26, 55, 62, 71, 77, 79, 80, 83, 85, 129, 136, 137, 140, 141, 144, 152, 159, 161, 175, 179, 191, 199, 210, 221, 223, 232, 233, 255, 257, 263, 265, 269, 270, 276, 279, 285], "d00945": 2, "61ec51c": 2, "The": [2, 3, 4, 5, 6, 7, 11, 12, 13, 15, 17, 20, 25, 26, 28, 29, 30, 34, 36, 37, 40, 43, 44, 45, 46, 47, 50, 53, 54, 55, 58, 59, 60, 62, 63, 64, 66, 70, 71, 76, 77, 79, 80, 81, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 96, 97, 99, 100, 101, 103, 104, 108, 109, 110, 111, 112, 113, 114, 128, 130, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 163, 164, 168, 170, 171, 175, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 219, 221, 223, 224, 225, 226, 230, 231, 232, 233, 234, 241, 243, 244, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 262, 263, 264, 265, 267, 272, 273, 274, 276, 277, 278, 281, 282, 284, 285, 286], "6": [2, 5, 20, 22, 25, 26, 36, 43, 50, 51, 58, 63, 71, 77, 79, 80, 83, 85, 89, 104, 107, 111, 129, 137, 138, 140, 141, 144, 150, 159, 161, 176, 179, 189, 191, 199, 200, 201, 204, 213, 214, 215, 219, 221, 223, 232, 233, 240, 254, 255, 257, 265, 269, 270, 279], "exclus": [2, 152, 164, 206], "manual": [2, 3, 4, 5, 6, 15, 63, 100, 130, 160, 164, 181, 189, 190, 216, 221, 223, 227, 230, 232, 233, 263], "although": [2, 76, 79], "reli": [2, 4, 5, 6, 94, 95, 179, 187, 221, 223, 225, 258], "either": [3, 4, 6, 13, 16, 30, 34, 46, 47, 58, 60, 62, 63, 71, 73, 83, 93, 95, 96, 103, 111, 117, 137, 138, 139, 144, 145, 147, 148, 150, 151, 156, 158, 159, 160, 164, 171, 175, 179, 181, 187, 189, 190, 195, 197, 201, 204, 206, 212, 215, 216, 221, 224, 225, 230, 232, 233, 250, 263, 264, 265, 266, 273, 276, 277, 278, 287], "its": [3, 4, 6, 15, 26, 29, 34, 40, 45, 54, 59, 62, 66, 71, 74, 89, 96, 103, 107, 134, 144, 147, 148, 149, 156, 161, 175, 177, 191, 204, 206, 221, 223, 230, 233, 247, 254, 256, 258, 259, 263, 265, 272, 274, 277, 287], "broad": [3, 250], "interest": [3, 5, 47, 60, 79, 96, 107, 113, 147, 158, 190, 224, 232, 287], "scientist": [3, 4, 6, 285], "best": [3, 4, 5, 6, 41, 55, 62, 71, 76, 95, 140, 147, 148, 156, 161, 176, 191, 230, 244, 259, 263, 268, 280, 287], "technolog": [3, 286], "quantum": [3, 16, 58, 159, 160, 161, 181, 189, 214], "understand": [3, 66, 130, 232], "clear": [3, 12, 13, 29], "propos": [3, 70, 71, 94, 140], "feedback": [3, 159], "broader": 3, "gain": [3, 128, 129, 286], "traction": 3, "don": [3, 132, 176, 177, 191, 257], "alreadi": [3, 4, 5, 6, 12, 13, 23, 26, 28, 29, 34, 47, 55, 76, 80, 86, 94, 96, 108, 134, 137, 138, 148, 151, 168, 177, 187, 189, 190, 206, 231, 254, 263, 287], "ssh": 3, "fork": [3, 4, 6, 88], "click": [3, 5], "clone": [3, 4, 5, 6], "publish": [3, 47, 64, 256], "chang": [3, 5, 12, 13, 34, 44, 47, 54, 58, 63, 66, 73, 79, 80, 83, 89, 90, 94, 96, 108, 143, 148, 150, 156, 160, 163, 168, 172, 175, 177, 179, 185, 189, 190, 191, 204, 205, 206, 217, 219, 224, 232, 233, 241, 259, 276, 280, 286, 287], "readi": [3, 172], "yournam": 3, "fairli": [3, 4, 6, 63, 191, 231, 254, 284], "presenc": [3, 66], "absolut": [3, 4, 6, 29, 30, 34, 40, 43, 44, 46, 73, 80, 108, 137, 143, 148, 149, 150, 151, 160, 179, 198, 221, 223, 232, 233, 254, 255, 257, 269, 274, 279], "rigor": [3, 4, 6, 71], "plan": [3, 4, 6, 147, 167], "minim": [3, 40, 55, 58, 76, 85, 90, 148, 149, 156, 158, 160, 179, 181, 189, 191, 205, 206, 210, 215, 216, 245], "dev": [3, 146, 160, 248], "hpc": 3, "seri": [3, 12, 13, 36, 137, 139, 156, 204, 233, 265, 268, 287], "depth": [3, 59, 80, 130, 272], "1": [3, 4, 6, 11, 12, 15, 17, 20, 22, 25, 26, 28, 29, 32, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 50, 53, 55, 58, 59, 62, 63, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 94, 95, 96, 100, 101, 103, 104, 107, 111, 114, 128, 129, 130, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 171, 172, 175, 176, 177, 179, 184, 185, 186, 189, 190, 191, 197, 198, 199, 201, 204, 206, 209, 212, 213, 214, 215, 216, 217, 219, 221, 222, 223, 224, 226, 230, 231, 232, 233, 234, 238, 241, 245, 249, 251, 252, 254, 256, 258, 259, 260, 263, 264, 265, 269, 270, 272, 274, 276, 278, 279, 283, 284, 285, 287], "tree": [3, 113, 114, 118, 160, 176, 179, 264], "cd": [3, 5, 8, 9, 77, 135, 144, 233], "2": [3, 4, 6, 15, 17, 20, 22, 25, 26, 28, 29, 30, 34, 35, 36, 37, 38, 40, 43, 44, 45, 46, 47, 50, 53, 54, 55, 58, 62, 63, 66, 68, 70, 71, 73, 76, 77, 78, 80, 82, 83, 84, 85, 86, 88, 89, 90, 93, 94, 95, 96, 101, 103, 107, 111, 113, 128, 129, 130, 133, 136, 137, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 155, 156, 158, 159, 160, 161, 163, 166, 172, 175, 176, 177, 179, 185, 186, 189, 190, 191, 197, 199, 200, 201, 204, 206, 212, 213, 214, 215, 216, 217, 219, 221, 222, 223, 224, 230, 231, 232, 233, 234, 245, 247, 249, 251, 252, 254, 255, 257, 258, 259, 263, 264, 265, 268, 269, 270, 271, 272, 274, 276, 278, 279, 283, 284, 287], "25": [3, 4, 6, 34, 71, 79, 85, 134, 137, 141, 147, 148, 161, 177, 184, 191, 221, 223, 232, 233, 264, 265, 279], "2023": 3, "spars": [3, 189, 243, 244], "checkout": 3, "uncom": [3, 232], "next": [3, 63, 137, 147, 191, 233, 258, 264, 265], "cone": 3, "below": [3, 4, 5, 6, 16, 40, 50, 58, 62, 73, 80, 88, 130, 148, 149, 150, 151, 155, 158, 161, 165, 175, 189, 204, 223, 226, 231, 232, 263, 276, 287], "sparsecheckout": 3, "echo": 3, "earli": [3, 113, 201], "remot": 3, "let": [3, 5, 161, 177, 191, 230, 251, 273, 286, 287], "upstream": 3, "uncommit": 3, "branch": [3, 13, 58, 94, 155, 156, 161, 191, 232, 247, 251], "stash": 3, "rememb": [3, 233], "fetch": [3, 225, 230], "assum": [3, 4, 5, 6, 11, 50, 54, 58, 59, 71, 76, 89, 96, 100, 103, 113, 128, 129, 140, 143, 145, 147, 148, 150, 156, 158, 159, 163, 168, 175, 176, 177, 178, 179, 190, 191, 198, 206, 230, 232, 233, 239, 254, 265, 287], "rel": [3, 4, 6, 15, 29, 30, 50, 55, 62, 70, 71, 73, 79, 80, 136, 137, 147, 148, 149, 150, 151, 159, 160, 165, 176, 189, 191, 198, 213, 214, 225, 236, 279], "bring": [3, 4, 6, 148], "everyth": [3, 155, 190, 192, 287], "cleanli": 3, "further": [3, 4, 5, 6, 51, 71, 130, 167, 184, 199, 212, 223, 233, 254, 263, 287], "ok": [3, 107, 147, 189, 263], "push": [3, 192], "origin": [3, 15, 29, 34, 40, 54, 55, 63, 66, 71, 76, 79, 80, 90, 92, 95, 100, 104, 138, 140, 143, 147, 148, 149, 161, 163, 168, 185, 186, 189, 190, 197, 204, 213, 232, 233, 250, 251, 254, 256, 258, 259, 261, 263, 264, 265, 269, 271, 279], "encourag": [3, 4, 6, 130], "happi": 3, "review": [3, 4, 6, 64, 66, 144, 191], "wip": 3, "ask": [3, 4, 6], "meant": [3, 26, 144, 147, 189, 191, 232, 233, 277], "doubt": 3, "consult": [3, 4, 5, 6, 63, 130, 171, 184, 189, 286, 287], "benefit": [3, 4, 6, 287], "control": [3, 8, 9, 34, 43, 54, 80, 90, 114, 121, 123, 145, 161, 173, 175, 176, 179, 189, 191, 197, 199, 215, 219, 223, 225, 226, 231, 238, 250, 251, 287], "recognit": 3, "onc": [3, 128, 130, 184, 191, 204, 232], "clue": 3, "kind": [3, 4, 6, 9, 34, 63, 71, 80, 108, 113, 136, 141, 147, 148, 173, 175, 188, 189, 190, 191, 213, 215, 233, 258, 278, 282, 287], "suitabl": [3, 40, 69, 73, 278], "those": [3, 5, 11, 15, 16, 51, 55, 59, 63, 71, 73, 76, 80, 82, 90, 94, 100, 130, 149, 150, 161, 175, 179, 189, 191, 192, 201, 204, 205, 230, 232, 233, 245, 251, 263, 264, 287], "superconductor": 3, "solar": [3, 8, 9, 14], "categori": [3, 62, 137, 210], "To": [3, 4, 6, 40, 58, 62, 76, 80, 96, 109, 130, 132, 139, 147, 159, 161, 163, 171, 172, 176, 199, 200, 206, 210, 221, 223, 230, 232, 233, 248, 256, 258, 263, 272, 287], "real": [3, 25, 29, 53, 55, 71, 79, 88, 89, 156, 175, 189, 214, 226, 230, 231, 232, 250, 255, 257], "world": [3, 4, 6, 170], "attempt": [3, 4, 6, 16, 50, 55, 59, 60, 63, 71, 73, 75, 82, 84, 90, 100, 134, 139, 140, 144, 147, 148, 149, 163, 164, 172, 185, 189, 225, 230, 255, 263, 265], "therefor": [3, 70, 96, 148, 152, 163, 189, 217, 232, 272], "expans": [3, 50, 144, 149, 191], "scope": 3, "loosen": 3, "tight": [3, 96, 201, 287], "bottleneck": 3, "visibl": [3, 4, 6, 201], "feel": [3, 5], "satisfi": [3, 50, 108, 111, 145, 155, 168, 172, 189, 263, 269], "accept": [3, 13, 140, 159, 160, 175, 177, 178, 179, 189, 191, 204, 206, 208, 232, 251, 263, 264, 265, 269, 276], "regress": 3, "reject": [3, 147], "pep": 3, "8": [3, 4, 5, 6, 15, 20, 25, 26, 29, 53, 54, 71, 77, 89, 101, 111, 129, 133, 137, 141, 144, 147, 149, 151, 156, 158, 159, 160, 161, 172, 176, 179, 185, 191, 204, 210, 232, 233, 263, 268, 269, 276, 279], "justifi": 3, "capit": [3, 137, 224], "observ": [3, 40, 93, 148], "aid": 3, "At": [3, 4, 6, 8, 9, 77, 89, 96, 135, 144, 191, 209, 233], "prefer": [3, 62, 71, 75, 95, 100, 130, 133, 145, 147, 159, 168, 175, 177, 191, 192, 232, 233, 258, 263], "public": [3, 4, 6, 47, 84, 148, 233, 276, 285], "pycharm": [3, 4, 6], "turn": [3, 5, 17, 71, 96, 128, 161, 189, 191, 192, 215, 232, 233, 265], "reformat": 3, "genom": [4, 6, 285], "cm": [4, 5, 6, 8, 9, 45, 58, 77, 88, 128, 135, 144, 147, 151, 156, 159, 160, 201, 233, 251], "mpi": [4, 6, 159, 176, 191, 233], "univi": [4, 6, 159], "ac": [4, 5, 6, 8, 9, 14, 18, 24, 25, 28, 29, 30, 66, 73, 77, 88, 134, 135, 144, 159, 233], "stack": [4, 6, 161, 176, 215, 251, 282], "similarli": [4, 6, 80, 163, 189, 287], "folder": [4, 6, 128, 130, 200, 214], "zeal": [4, 6], "docset": [4, 6], "unrel": [4, 6], "discours": [4, 6], "matgenb": [4, 6], "jupyt": [4, 6, 283], "twitter": [4, 6], "tip": [4, 6], "mightier": [4, 6], "pen": [4, 6], "respond": [4, 6], "becom": [4, 6, 40, 63, 76, 86, 137, 139, 141, 160, 187, 192, 216, 278], "web": [4, 6, 287], "advanc": [4, 5, 6, 130, 159, 163, 171, 172, 263, 285, 286, 287], "One": [4, 6, 34, 47, 108, 147, 161, 175, 190, 222, 230, 232, 241, 251, 254, 263], "graphic": [4, 6, 80, 161], "top": [4, 6, 15, 62, 68, 144, 148, 176, 177, 178, 179, 254, 263], "left": [4, 6, 43, 54, 80, 143, 149, 160, 161, 168, 176, 179, 250, 251, 268, 276, 284], "bottom": [4, 6, 62, 148, 190], "commerci": [4, 6], "offer": [4, 5, 6, 100], "thousand": [4, 6], "produc": [4, 6, 51, 55, 63, 66, 71, 73, 96, 107, 137, 139, 149, 175, 176, 186, 190, 217, 225, 232, 247, 251, 255, 257, 263], "surviv": [4, 6], "scrutini": [4, 6], "everi": [4, 6, 12, 45, 89, 130, 140, 156, 214, 232, 249, 287], "dai": [4, 6], "tend": [4, 6, 17, 148, 149, 189, 265, 287], "quickli": [4, 6, 62, 80, 147, 172, 184, 215, 263, 264], "comprehens": [4, 6, 129, 177, 287], "grip": [4, 6], "impact": [4, 6, 90], "fact": [4, 6, 71, 76, 155, 247, 287], "around": [4, 6, 53, 58, 63, 71, 76, 89, 143, 147, 149, 156, 160, 185, 197, 217, 254, 264], "pet": [4, 6], "establish": [4, 6, 168, 280], "grow": [4, 6], "ecosystem": [4, 6], "forg": [4, 5, 6], "channel": [4, 5, 6, 158, 160, 161, 189, 190, 213, 232], "gcc": [4, 5, 6], "regularli": [4, 6], "bleed": [4, 6], "development": [4, 6], "buggi": [4, 6], "extras_requir": [4, 6], "share": [4, 6, 20, 71, 82, 89, 108, 145, 155, 159, 233, 256, 260], "xsede": [4, 6], "nersc": [4, 6], "wget": [4, 6], "continuum": [4, 6, 221], "miniconda": [4, 5, 6], "miniconda3": [4, 5, 6, 279], "x86_64": [4, 5, 6], "sh": [4, 5, 6], "bash": [4, 5, 6], "reload": [4, 6, 287], "profil": [4, 6, 80, 109, 111], "home": [4, 6, 216], "bashrc": [4, 6], "bash_profil": [4, 5, 6], "pydata": [4, 5, 6], "overview": [4, 6, 189, 287], "principl": [4, 6, 16, 54, 76, 78, 80, 156, 163, 168, 189, 233, 285], "atomic_mass": [4, 6, 8, 9, 135, 144], "0855": [4, 6], "melting_point": [4, 6, 8, 9, 135, 144], "1687": [4, 6], "159": [4, 6, 89, 141], "6882": [4, 6], "treat": [4, 6, 63, 96, 137, 148, 168, 177, 179, 189, 265], "get_atomic_fract": [4, 6, 8, 9, 135, 137], "74": [4, 6, 20, 141, 279], "088000000000008": [4, 6], "0000": [4, 6, 179, 279, 286], "from_spacegroup": [4, 6, 8, 9, 135, 147], "fm": [4, 6, 8, 9, 14, 72, 73, 74, 135, 144, 147, 148, 179, 199, 225, 256], "3m": [4, 6, 58, 147, 148, 225, 256], "get_space_group_symbol": [4, 6, 8, 9, 253, 254], "pm": [4, 6, 8, 9, 77, 135, 144, 233], "filenma": [4, 6], "methan": [4, 6, 287], "mol": [4, 6, 41, 66, 76, 184, 200, 201, 204, 215, 240, 241, 248, 251, 254, 287], "gjf": [4, 6, 147, 287], "edit": [4, 5, 6, 147, 233, 238, 276], "v2": [4, 6, 76, 171, 179, 254, 269], "cs1": [4, 6], "f1": [4, 6, 8, 9, 34, 154, 159, 161, 258], "csf": [4, 6], "abc": [4, 6, 8, 9, 43, 54, 108, 135, 140, 161, 176, 179, 197, 250, 251, 264, 265, 279], "200000": [4, 6], "angl": [4, 6, 8, 9, 18, 24, 25, 26, 28, 29, 30, 33, 34, 43, 45, 53, 62, 70, 71, 76, 84, 89, 90, 135, 140, 143, 147, 166, 185, 195, 197, 199, 204, 236, 252, 254, 255, 257, 263, 265, 269, 279, 284, 287], "90": [4, 6, 20, 43, 44, 46, 54, 71, 85, 137, 140, 141, 147, 197, 263, 279, 284, 287], "000000": [4, 6, 111, 287], "500000": [4, 6], "51": [4, 6, 77, 141, 144, 287], "cl1": [4, 6], "510000": [4, 6], "k1": [4, 6, 96], "kcl": [4, 6], "k0": [4, 6], "5na0": [4, 6], "na0": [4, 6], "5cl1": [4, 6], "209000": [4, 6], "sp": [4, 6, 201, 219, 223, 287], "500": [4, 6, 34, 103, 141, 147, 164, 184, 216, 250, 287], "ch4": [4, 6], "01a": [4, 6], "illustr": [4, 6], "strongli": [4, 6, 79, 130, 233], "toc": [4, 6], "founder": [4, 6], "conduct": [4, 6, 85, 144, 148, 156, 161, 200, 215, 226, 232, 249], "workshop": [4, 6], "firework": [4, 6], "slide": [4, 6], "discuss": [4, 6, 143], "versatil": [4, 6, 233], "plotdo": [4, 6], "plotchgint": [4, 6], "symm": [4, 6, 15, 101, 161], "view": [4, 6, 15, 101, 120, 137, 161, 233, 251, 282, 284], "additional_argu": [4, 6], "subcommand": [4, 6], "v4": [4, 6], "eval": [4, 6, 232], "regist": [4, 6, 152, 164, 171, 287], "displai": [4, 6, 43, 45, 54, 80, 83, 101, 161, 163, 176, 179, 184, 229, 250, 251, 278, 284], "save": [4, 6, 9, 14, 18, 29, 31, 32, 43, 54, 74, 80, 105, 106, 111, 114, 121, 134, 161, 165, 172, 176, 179, 181, 187, 191, 201, 204, 214, 233, 250, 251, 282, 284, 287], "vasp_data": [4, 6], "reus": [4, 6, 148, 252, 287], "input_filenam": [4, 6, 189, 209], "output_filenam": [4, 6, 239, 284], "angstrom": [4, 6, 11, 15, 17, 44, 45, 46, 47, 58, 62, 71, 74, 78, 89, 96, 130, 132, 133, 136, 138, 140, 144, 147, 148, 156, 158, 160, 166, 181, 184, 189, 191, 197, 199, 215, 221, 225, 226, 230, 241, 254, 263, 265, 287], "filename1": [4, 6], "filename2": [4, 6], "li_sv": [4, 6, 230, 233], "todai": [4, 6, 114, 286, 287], "db": [4, 6, 8, 9, 85, 135, 144], "jit": [4, 6, 8, 9, 267, 275], "volunt": [4, 6], "start": [4, 5, 6, 12, 20, 28, 68, 71, 77, 79, 93, 94, 100, 107, 109, 114, 134, 143, 147, 150, 156, 158, 175, 176, 177, 178, 179, 189, 190, 197, 200, 205, 206, 209, 212, 215, 222, 223, 225, 230, 232, 233, 252, 263, 284, 287], "compris": [4, 6, 64, 187], "lawrenc": [4, 6, 286], "berkelei": [4, 6, 285, 286], "nation": [4, 6, 286], "laboratori": [4, 6, 286], "staff": [4, 6, 286], "toolkit": [4, 6], "anyon": [4, 6], "could": [4, 6, 26, 29, 45, 137, 150, 156, 206, 225, 271], "greatli": [4, 6, 166], "appreci": [4, 6, 159], "who": [4, 6, 40, 62, 148, 204, 233, 286, 287], "overflow": [4, 6], "answer": [4, 6, 95, 107], "michael": [4, 6, 28, 44, 46, 286], "kocher": [4, 6], "shreya": [4, 6, 286], "cholia": [4, 6, 285, 286], "dan": [4, 6, 272], "gunter": [4, 6, 285], "vincent": [4, 6], "chevrier": [4, 6], "kristin": [4, 6], "persson": [4, 6, 28, 40, 96, 101, 148, 163, 233, 285], "gerbrand": [4, 6, 79], "ceder": [4, 6, 66, 79, 80, 93, 94, 96, 148, 156, 163, 233, 285, 287], "2013": [4, 6, 64, 130, 148, 156, 258, 285], "68": [4, 6, 141], "314": [4, 6], "319": [4, 6], "10": [4, 5, 6, 15, 17, 25, 26, 28, 30, 32, 36, 40, 45, 50, 54, 55, 58, 66, 70, 71, 73, 76, 77, 78, 79, 80, 82, 84, 85, 88, 89, 93, 94, 96, 104, 130, 138, 140, 141, 143, 144, 147, 148, 156, 159, 160, 161, 163, 164, 172, 175, 176, 177, 179, 189, 199, 200, 213, 215, 217, 232, 233, 252, 254, 255, 257, 263, 264, 265, 269, 276, 279, 285, 287], "1016": [4, 6, 55, 80, 84, 85, 96, 104, 130, 148, 233, 254, 255, 257, 285], "commatsci": [4, 6, 84, 85, 233, 254, 255, 257, 285], "2012": [4, 6, 70, 78, 129, 131, 163, 170, 241, 285], "028": [4, 6], "subproject": [4, 6], "thu": [4, 6, 29, 96, 107, 130, 161, 179, 191, 233, 272, 273], "entireti": [4, 6], "person": [4, 6], "institut": [4, 6, 286], "want": [4, 6, 12, 15, 29, 43, 44, 46, 54, 62, 68, 80, 96, 113, 114, 128, 129, 130, 147, 148, 149, 155, 156, 158, 161, 163, 166, 177, 187, 189, 191, 199, 206, 230, 232, 233, 247, 251, 254, 263, 264, 282, 287], "record": [4, 6, 176, 216], "adapt": [5, 54, 73, 96, 205, 208, 213, 215, 249, 250, 276], "aseio": 5, "fysik": [5, 152], "dtu": [5, 152], "dk": [5, 152], "babelio": 5, "obmol": [5, 76, 184], "networkx": [5, 20, 23, 37, 47, 63, 71, 272], "pygraphviz": 5, "Not": [5, 20, 25, 80, 144, 147, 172, 175, 185, 191, 192, 204, 206, 263], "numba": [5, 8, 9, 70, 267], "evalu": [5, 14, 18, 31, 34, 36, 50, 55, 71, 83, 85, 181, 189, 192, 213, 214, 215, 223, 231, 232, 233, 249, 275], "incurr": 5, "slowdown": 5, "dramat": [5, 231], "place": [5, 15, 50, 63, 73, 80, 90, 132, 139, 140, 147, 148, 149, 160, 163, 164, 168, 177, 186, 187, 189, 206, 208, 232, 264, 278, 284], "good": [5, 59, 63, 79, 90, 94, 143, 148, 172, 176, 189, 191, 230, 233, 271, 272, 287], "ffmpeg": [5, 284], "movi": [5, 284], "structure_vtk": [5, 8, 9, 281], "advanced_transform": [5, 8, 9, 262], "makestr": [5, 131], "msg": [5, 33, 86, 131, 132, 147, 268], "byu": [5, 131, 258], "bader_cal": [5, 8, 9, 127, 130], "utexa": [5, 128], "edu": [5, 47, 55, 128, 133, 215, 232, 258, 272], "empir": [5, 77, 137, 144, 189], "aconvasp_cal": 5, "zeoplusplu": [5, 241], "aoterodelaroza": [5, 130], "graphviz": [5, 63], "os": 5, "box": [5, 28, 134, 147, 148, 150, 204, 206, 207, 214, 216, 287], "doubl": [5, 26, 60, 107, 161, 177, 179, 189, 215, 223, 232, 245], "ex": [5, 60, 142, 155, 192, 200, 221, 223, 247], "macosx": 5, "my_pymatgen": 5, "anaconda": 5, "cloud": 5, "somewher": 5, "know": [5, 17, 62, 80, 159, 172, 175, 179, 230, 233, 263, 286, 287], "licens": [5, 233, 271], "extracted_vasp_potcar": 5, "my_psp": 5, "pot_gga_paw_pb": [5, 230], "ac_": 5, "potpaw_pb": 5, "psp_resourc": 5, "pot_gga_paw_pw91": [5, 230], "pmg_vasp_psp_dir": 5, "pot_gga_paw_pbe_52": [5, 230], "lda_52": [5, 230, 233], "pw91": [5, 152, 230, 233], "histor": [5, 144, 189], "overridden": [5, 54, 137, 264, 266, 278, 282], "total": [5, 12, 41, 54, 55, 58, 63, 66, 69, 74, 76, 83, 96, 101, 128, 130, 137, 147, 148, 150, 156, 159, 160, 161, 163, 164, 175, 176, 185, 186, 189, 190, 191, 198, 199, 207, 209, 214, 215, 219, 221, 223, 232, 233, 248, 249, 251, 282], "caveat": 5, "usabl": [5, 175, 230, 287], "difficult": [5, 29, 63, 90, 148, 189, 191, 206], "advic": 5, "advis": [5, 263, 272], "unpredict": 5, "hot": 5, "spot": [5, 155, 286], "microsoft": [5, 286], "studio": 5, "By": [5, 11, 12, 13, 37, 45, 58, 62, 63, 66, 80, 83, 86, 113, 130, 138, 147, 148, 156, 160, 161, 179, 190, 191, 206, 221, 230, 232, 254, 263, 278, 279], "xcode": 5, "afterward": 5, "gfortran": [5, 122], "gnu": 5, "gfortranbinari": 5, "maco": 5, "lf": 5, "privileg": 5, "subdirectori": [5, 13, 114, 233, 287], "tricki": [5, 47], "unfamiliar": 5, "send": 5, "cmake": 5, "mkdir": [5, 200], "ccmake": 5, "manner": [5, 145, 187, 206, 264, 265, 287], "press": [5, 44, 85, 144, 206, 258], "toggl": [5, 85, 284], "python_vers": 5, "vtk_wrap_python": 5, "ON": [5, 272], "build_shared_lib": 5, "cmakecach": 5, "shown": [5, 20, 29, 80, 83, 100, 161, 231, 232, 259, 276, 283], "python_execut": 5, "filepath": [5, 9, 173, 174, 177, 179, 226, 232, 233], "usernam": 5, "bin": [5, 160, 186, 201, 209], "python3": [5, 279], "python_include_dir": 5, "5m": 5, "python_librari": 5, "lib": [5, 132, 279], "libpython3": 5, "dylib": 5, "vtk_install_python_module_dir": 5, "vtk_python_vers": 5, "again": [5, 163, 277], "sudo": 5, "luck": 5, "wrapper": [5, 50, 53, 54, 63, 80, 127, 143, 149, 158, 160, 178, 184, 185, 209, 248, 275], "took": [5, 287], "pcre": 5, "33": [5, 141, 179], "ftp": 5, "csx": 5, "cam": 5, "uk": [5, 134, 189, 191, 286], "pub": 5, "tar": 5, "pkg": 5, "macport": 5, "pkgconfig": 5, "freedesktop": 5, "swig": 5, "prdownload": 5, "sourceforg": [5, 129, 254, 285], "net": [5, 11, 73, 129, 139, 147, 172, 199, 232, 254, 285], "eigen": [5, 232, 254], "bitbucket": [5, 226], "zxvf": 5, "eigen3": 5, "src": [5, 226], "mv": [5, 62, 263], "ob": [5, 161], "cpp": 5, "cmakelist": 5, "jump": [5, 58], "eigen2_defin": 5, "eigen_defin": 5, "dpython_bind": 5, "drun_swig": 5, "deigen3_include_dir": 5, "tee": 5, "proceed": 5, "libpython2": 5, "maverick": 5, "encount": [5, 59, 71, 225, 277], "tr1": 5, "cmake_cxx_flag": 5, "stdlib": 5, "libstdc": 5, "j2": 5, "effort": [5, 63, 172], "seem": [5, 79], "usr": 5, "pythonpath": 5, "submodul": [8, 18, 105], "abstractstructurefilt": [8, 9, 10, 11, 12], "chargebalancefilt": [8, 9, 10, 11], "containsspeciefilt": [8, 9, 10, 11], "removeduplicatesfilt": [8, 9, 10, 11], "removeexistingfilt": [8, 9, 10, 11], "specieproximityfilt": [8, 9, 10, 11], "speciesmaxdistfilt": [8, 9, 10, 11], "append_filt": [8, 9, 10, 12], "append_transform": [8, 9, 10, 12, 13], "extend_transform": [8, 9, 10, 12, 13], "from_cif_str": [8, 9, 10, 12], "from_poscar_str": [8, 9, 10, 12], "from_snl": [8, 9, 10, 12], "redo_next_chang": [8, 9, 10, 12, 13], "set_paramet": [8, 9, 10, 12, 13], "to_snl": [8, 9, 10, 12], "undo_last_chang": [8, 9, 10, 12, 13], "was_modifi": [8, 9, 10, 12], "write_vasp_input": [8, 9, 10, 12, 13], "ciftransmut": [8, 9, 10, 12, 13, 287], "from_filenam": [8, 9, 10, 13, 287], "poscartransmut": [8, 9, 10, 13], "standardtransmut": [8, 9, 10, 13, 287], "add_tag": [8, 9, 10, 13], "append_transformed_structur": [8, 9, 10, 13], "apply_filt": [8, 9, 10, 13], "from_structur": [8, 9, 10, 13, 135, 150, 173, 203, 204, 226, 267, 277], "batch_write_vasp_input": [8, 9, 10, 13], "content": [8, 9, 14, 76, 149, 156, 173, 179, 183, 187, 190, 192, 201, 206, 216, 225, 240, 241], "coordination_environ": [8, 9, 14, 18, 19, 22, 213], "stress": [8, 9, 14, 49, 50, 51, 147, 149, 190, 191, 232, 233], "coherent_interfac": [8, 9, 14, 67], "substrate_analyz": [8, 9, 14, 67], "zsl": [8, 9, 14, 67, 69], "jahntel": [8, 9, 14, 72], "dopant_predictor": [8, 9, 14, 91], "substitution_prob": [8, 9, 14, 91], "volume_predictor": [8, 9, 14, 91], "add_adsorb": [8, 9, 14, 15], "adsorb_both_surfac": [8, 9, 14, 15], "assign_selective_dynam": [8, 9, 14, 15], "assign_site_properti": [8, 9, 14, 15], "ensemble_cent": [8, 9, 14, 15], "find_adsorption_sit": [8, 9, 14, 15, 263], "find_surface_sites_by_height": [8, 9, 14, 15], "from_bulk_and_mil": [8, 9, 14, 15], "generate_adsorption_structur": [8, 9, 14, 15], "generate_substitution_structur": [8, 9, 14, 15], "get_extended_surface_mesh": [8, 9, 14, 15], "near_reduc": [8, 9, 14, 15], "subsurface_sit": [8, 9, 14, 15], "surface_sit": [8, 9, 14, 15], "symm_reduc": [8, 9, 14, 15], "get_mi_vec": [8, 9, 14, 15], "get_rot": [8, 9, 14, 15], "plot_slab": [8, 9, 14, 15], "put_coord_insid": [8, 9, 14, 15], "reorient_z": [8, 9, 14, 15], "bond_dissoci": [8, 9, 14], "bonddissociationenergi": [8, 9, 14, 16], "build_new_entri": [8, 9, 14, 16], "filter_fragment_entri": [8, 9, 14, 16], "fragment_and_process": [8, 9, 14, 16], "search_fragment_entri": [8, 9, 14, 16], "bond_val": [8, 9, 14], "charge_neutrality_toler": [8, 9, 14, 17], "get_oxi_state_decorated_structur": [8, 9, 14, 17], "get_val": [8, 9, 14, 17], "add_oxidation_state_by_site_fract": [8, 9, 14, 17], "calculate_bv_sum": [8, 9, 14, 17], "calculate_bv_sum_unord": [8, 9, 14, 17], "get_z_ordered_elmap": [8, 9, 14, 17], "chempot_diagram": [8, 9, 14, 80], "border_hyperplan": [8, 9, 14, 40], "el_ref": [8, 9, 14, 40, 80], "entry_dict": [8, 9, 14, 40], "hyperplane_entri": [8, 9, 14, 40], "hyperplan": [8, 9, 14, 40, 83], "lim": [8, 9, 14, 40], "get_2d_orthonormal_vector": [8, 9, 14, 40], "get_centroid_2d": [8, 9, 14, 40], "simple_pca": [8, 9, 14, 40], "costanalyz": [8, 9, 14, 41], "get_cost_per_kg": [8, 9, 14, 41], "get_cost_per_mol": [8, 9, 14, 41], "get_lowest_decomposit": [8, 9, 14, 41], "costdb": [8, 9, 14, 41], "costdbcsv": [8, 9, 14, 41], "costentri": [8, 9, 14, 41], "calculate_dimensionality_of_sit": [8, 9, 14, 47], "find_clust": [8, 9, 14, 47], "find_connected_atom": [8, 9, 14, 47], "get_dimensionality_cheon": [8, 9, 14, 47], "get_dimensionality_gorai": [8, 9, 14, 47], "get_dimensionality_larsen": [8, 9, 14, 47], "get_structure_compon": [8, 9, 14, 47], "zero_d_graph_to_molecule_graph": [8, 9, 14, 47], "get_warren_cowley_paramet": [8, 9, 14, 48], "energy_model": [8, 9, 14, 263], "energymodel": [8, 9, 14, 53], "get_energi": [8, 9, 14, 53, 115, 118, 121, 127, 132, 135, 137], "ewaldelectrostaticmodel": [8, 9, 14, 53], "isingmodel": [8, 9, 14, 53], "nsitesmodel": [8, 9, 14, 53], "symmetrymodel": [8, 9, 14, 53, 263], "birch": [8, 9, 14, 54, 85], "birchmurnaghan": [8, 9, 14, 54], "deltafactor": [8, 9, 14, 54, 85], "eosbas": [8, 9, 14, 54], "b0": [8, 9, 14, 54], "b0_gpa": [8, 9, 14, 54], "b1": [8, 9, 14, 54], "e0": [8, 9, 14, 54, 83, 232], "func": [8, 9, 14, 54, 146, 275, 276], "plot_ax": [8, 9, 14, 54], "v0": [8, 9, 14, 54, 279], "eoserror": [8, 9, 14, 54], "murnaghan": [8, 9, 14, 54, 85], "numericaleo": [8, 9, 14, 54], "polynomialeo": [8, 9, 14, 54], "pouriertarantola": [8, 9, 14, 54], "vinet": [8, 9, 14, 54, 85], "ewaldminim": [8, 9, 14, 55], "algo_best_first": [8, 9, 14, 55, 262, 264, 265], "algo_complet": [8, 9, 14, 55, 262, 264, 265], "algo_fast": [8, 9, 14, 55, 262, 264, 265], "algo_time_limit": [8, 9, 14, 55], "add_m_list": [8, 9, 14, 55], "best_cas": [8, 9, 14, 55], "best_m_list": [8, 9, 14, 55], "get_next_index": [8, 9, 14, 55], "minimize_matrix": [8, 9, 14, 55], "minimized_sum": [8, 9, 14, 55], "output_list": [8, 9, 14, 55], "conv_fact": [8, 9, 14, 55], "compute_partial_energi": [8, 9, 14, 55], "compute_sub_structur": [8, 9, 14, 55], "eta": [8, 9, 14, 53, 55, 78, 156, 232], "get_site_energi": [8, 9, 14, 55], "point_energi": [8, 9, 14, 55], "point_energy_matrix": [8, 9, 14, 55], "real_space_energi": [8, 9, 14, 55], "real_space_energy_matrix": [8, 9, 14, 55], "reciprocal_space_energi": [8, 9, 14, 55], "reciprocal_space_energy_matrix": [8, 9, 14, 55], "total_energi": [8, 9, 14, 55, 67, 69], "total_energy_matrix": [8, 9, 14, 55], "compute_average_oxidation_st": [8, 9, 14, 55], "excitationspectrum": [8, 9, 14, 56, 215], "xlabel": [8, 9, 14, 42, 43, 56, 102, 103, 104, 135, 146, 154, 160, 276], "ylabel": [8, 9, 14, 42, 43, 56, 102, 103, 104, 135, 146, 154, 160, 276], "open_r": [8, 9, 14, 59], "functional_group": [8, 9, 14], "functionalgroupextractor": [8, 9, 14, 60], "categorize_functional_group": [8, 9, 14, 60], "get_all_functional_group": [8, 9, 14, 60], "get_basic_functional_group": [8, 9, 14, 60], "get_heteroatom": [8, 9, 14, 60], "get_special_carbon": [8, 9, 14, 60], "link_marked_atom": [8, 9, 14, 60], "connectedsit": [8, 9, 14, 63], "dist": [8, 9, 14, 63, 74, 136, 140, 147, 156], "jimag": [8, 9, 14, 63, 140, 145, 147], "molgraphspliterror": [8, 9, 14, 63], "add_edg": [8, 9, 14, 63, 281, 284], "alter_edg": [8, 9, 14, 63], "break_edg": [8, 9, 14, 63], "build_unique_frag": [8, 9, 14, 63], "diff": [8, 9, 14, 63, 120, 173, 186, 196, 197, 211, 212, 225, 228, 230, 232], "draw_graph_to_fil": [8, 9, 14, 63], "edge_weight_nam": [8, 9, 14, 63], "edge_weight_unit": [8, 9, 14, 63], "find_r": [8, 9, 14, 63], "get_connected_sit": [8, 9, 14, 63], "get_coordination_of_sit": [8, 9, 14, 63], "get_disconnected_frag": [8, 9, 14, 63], "insert_nod": [8, 9, 14, 63], "isomorphic_to": [8, 9, 14, 63], "remove_nod": [8, 9, 14, 63], "replace_group": [8, 9, 14, 63], "set_node_attribut": [8, 9, 14, 63], "split_molecule_subgraph": [8, 9, 14, 63], "substitute_group": [8, 9, 14, 63], "with_edg": [8, 9, 14, 63], "with_empty_graph": [8, 9, 14, 63], "with_local_env_strategi": [8, 9, 14, 63], "get_subgraphs_as_molecul": [8, 9, 14, 63], "types_and_weights_of_connect": [8, 9, 14, 63], "types_of_coordination_environ": [8, 9, 14, 63], "weight_statist": [8, 9, 14, 63], "grandpotentialinterfacialreact": [8, 9, 14, 66], "get_no_mixing_energi": [8, 9, 14, 66], "ev_to_kj_per_mol": [8, 9, 14, 66], "get_chempot_correct": [8, 9, 14, 66], "get_critical_original_kink_ratio": [8, 9, 14, 66], "get_datafram": [8, 9, 14, 66, 173, 174, 176], "get_kink": [8, 9, 14, 66], "product": [8, 9, 14, 26, 34, 66, 80, 83, 86, 94, 96, 109, 140, 149, 160, 233, 272], "brunnernn_r": [8, 9, 14, 71], "get_nn_info": [8, 9, 14, 71, 173, 211, 213], "molecules_allow": [8, 9, 14, 71, 173, 211, 213], "structures_allow": [8, 9, 14, 71, 173, 211, 213], "brunnernn_reciproc": [8, 9, 14, 71], "brunnernn_rel": [8, 9, 14, 71], "extend_structure_molecul": [8, 9, 14, 71], "get_nn_shell_info": [8, 9, 14, 71], "critic2nn": [8, 9, 14, 71], "nndata": [8, 9, 14, 71], "get_cn_dict": [8, 9, 14, 71], "get_nn_data": [8, 9, 14, 71], "transform_to_length": [8, 9, 14, 71], "from_preset": [8, 9, 14, 71], "get_all_nn_info": [8, 9, 14, 71], "get_max_bond_dist": [8, 9, 14, 71], "localstructorderparam": [8, 9, 14, 71], "compute_trigonometric_term": [8, 9, 14, 71], "get_order_paramet": [8, 9, 14, 71], "get_paramet": [8, 9, 14, 71], "get_q2": [8, 9, 14, 71], "get_q4": [8, 9, 14, 71], "get_q6": [8, 9, 14, 71], "get_typ": [8, 9, 14, 71], "last_nneigh": [8, 9, 14, 71], "num_op": [8, 9, 14, 71], "minimumdistancenn": [8, 9, 14, 71, 74], "minimumokeeffenn": [8, 9, 14, 71], "get_local_order_paramet": [8, 9, 14, 71], "get_nn": [8, 9, 14, 71], "get_nn_imag": [8, 9, 14, 71], "get_weights_of_nn_sit": [8, 9, 14, 71], "openbabelnn": [8, 9, 14, 71, 222], "valenceionicradiusevalu": [8, 9, 14, 71], "get_all_voronoi_polyhedra": [8, 9, 14, 71], "get_voronoi_polyhedra": [8, 9, 14, 71], "get_neighbors_of_site_with_index": [8, 9, 14, 71], "get_okeeffe_distance_predict": [8, 9, 14, 71], "get_okeeffe_param": [8, 9, 14, 71], "gramschmidt": [8, 9, 14, 71], "oxygen_edge_extend": [8, 9, 14, 71], "site_is_of_motif_typ": [8, 9, 14, 71], "solid_angl": [8, 9, 14, 18, 24, 26, 71, 89], "vol_tetra": [8, 9, 14, 71], "molecule_match": [8, 9, 14, 77], "abstractmolatommapp": [8, 9, 14, 76], "get_molecule_hash": [8, 9, 14, 76], "uniform_label": [8, 9, 14, 76], "bruteforceordermatch": [8, 9, 14, 76], "permut": [8, 9, 14, 17, 18, 24, 26, 28, 29, 43, 55, 76, 90, 149, 213, 254, 265], "geneticordermatch": [8, 9, 14, 76], "hungarianordermatch": [8, 9, 14, 76], "get_principal_axi": [8, 9, 14, 76], "rotation_matrix_vector": [8, 9, 14, 76], "inchimolatommapp": [8, 9, 14, 76], "isomorphismmolatommapp": [8, 9, 14, 76], "kabschmatch": [8, 9, 14, 76], "kabsch": [8, 9, 14, 76], "get_rmsd": [8, 9, 14, 76], "group_molecul": [8, 9, 14, 76], "molecule_structure_compar": [8, 9, 14, 76], "covalentradiu": [8, 9, 14, 77], "moleculestructurecompar": [8, 9, 14, 77], "are_equ": [8, 9, 14, 77, 90], "get_13_bond": [8, 9, 14, 77], "halogen_list": [8, 9, 14, 77], "ionic_element_list": [8, 9, 14, 77], "chemicalshield": [8, 9, 14, 78], "haeberlennot": [8, 9, 14, 78], "marylandnot": [8, 9, 14, 78], "mehringnot": [8, 9, 14, 78], "from_maryland_not": [8, 9, 14, 78], "haeberlen_valu": [8, 9, 14, 78], "maryland_valu": [8, 9, 14, 78], "mehring_valu": [8, 9, 14, 78], "principal_axis_system": [8, 9, 14, 78], "electricfieldgradi": [8, 9, 14, 78], "v_xx": [8, 9, 14, 78], "v_yi": [8, 9, 14, 78], "v_zz": [8, 9, 14, 78], "asymmetri": [8, 9, 14, 78, 104], "coupling_const": [8, 9, 14, 78], "path_find": [8, 9, 14], "chgcarpotenti": [8, 9, 14, 79], "freevolumepotenti": [8, 9, 14, 79], "mixedpotenti": [8, 9, 14, 79], "nebpathfind": [8, 9, 14, 79], "plot_imag": [8, 9, 14, 79], "string_relax": [8, 9, 14, 79], "staticpotenti": [8, 9, 14, 79], "gaussian_smear": [8, 9, 14, 79], "get_v": [8, 9, 14, 79], "rescale_field": [8, 9, 14, 79], "phase_diagram": [8, 9, 14, 40, 287], "compoundphasediagram": [8, 9, 14, 80], "amount_tol": [8, 9, 14, 80], "transform_entri": [8, 9, 14, 80], "grandpotpdentri": [8, 9, 14, 80], "chemical_energi": [8, 9, 14, 80], "pdentri": [8, 9, 14, 40, 41, 80, 83, 109, 110, 162, 166, 167], "get_chempot_range_map_plot": [8, 9, 14, 80], "get_contour_pd_plot": [8, 9, 14, 80], "pd_plot_data": [8, 9, 14, 80], "plot_chempot_range_map": [8, 9, 14, 80], "show": [8, 9, 14, 26, 43, 54, 80, 83, 96, 101, 105, 106, 111, 151, 154, 161, 176, 179, 190, 213, 246, 250, 251, 276, 281, 282, 284, 287], "write_imag": [8, 9, 14, 80, 281, 284], "patchedphasediagram": [8, 9, 14, 80], "all_entri": [8, 9, 14, 80, 83, 86], "min_entri": [8, 9, 14, 80], "get_all_chempot": [8, 9, 14, 80], "get_chempot_range_map": [8, 9, 14, 80, 96], "get_chempot_range_stability_phas": [8, 9, 14, 80], "get_composition_chempot": [8, 9, 14, 80], "get_critical_composit": [8, 9, 14, 80], "get_decomp_and_e_above_hul": [8, 9, 14, 80], "get_decomposit": [8, 9, 14, 80], "get_element_profil": [8, 9, 14, 80], "get_equilibrium_reaction_energi": [8, 9, 14, 80], "get_pd_for_entri": [8, 9, 14, 80], "get_transition_chempot": [8, 9, 14, 80], "getmu_vertices_stability_phas": [8, 9, 14, 80], "qhull_entri": [8, 9, 14, 80], "qhull_data": [8, 9, 14, 80], "facet": [8, 9, 14, 28, 34, 43, 46, 66, 69, 71, 80, 89, 96, 101, 140, 269], "all_entries_hulldata": [8, 9, 14, 80], "formation_energy_tol": [8, 9, 14, 80], "get_decomp_and_hull_energy_per_atom": [8, 9, 14, 80], "get_decomp_and_phase_separation_energi": [8, 9, 14, 80], "get_form_energi": [8, 9, 14, 80], "get_form_energy_per_atom": [8, 9, 14, 80], "get_hull_energi": [8, 9, 14, 80, 83], "get_hull_energy_per_atom": [8, 9, 14, 80], "get_phase_separation_energi": [8, 9, 14, 80], "get_reference_energy_per_atom": [8, 9, 14, 80], "numerical_tol": [8, 9, 14, 80, 140, 147], "pd_coord": [8, 9, 14, 80], "stable_entri": [8, 9, 14, 80, 83, 105, 106, 110], "unstable_entri": [8, 9, 14, 80, 83, 105, 106, 110], "phasediagramerror": [8, 9, 14, 80], "get_compound_pd": [8, 9, 14, 80], "transformedpdentri": [8, 9, 14, 80], "transformedpdentryerror": [8, 9, 14, 80], "get_facet": [8, 9, 14, 80], "order_phase_diagram": [8, 9, 14, 80], "tet_coord": [8, 9, 14, 80], "triangular_coord": [8, 9, 14, 80], "uniquelin": [8, 9, 14, 80], "piezo": [8, 9, 14, 82, 149, 232], "from_vasp_voigt": [8, 9, 14, 81], "piezo_sensit": [8, 9, 14], "borneffectivecharg": [8, 9, 14, 82], "get_bec_oper": [8, 9, 14, 82], "get_rand_bec": [8, 9, 14, 82], "forceconstantmatrix": [8, 9, 14, 82], "get_fcm_oper": [8, 9, 14, 82], "get_asum_fcm": [8, 9, 14, 82], "get_rand_fcm": [8, 9, 14, 82], "get_stable_fcm": [8, 9, 14, 82], "get_symmetrized_fcm": [8, 9, 14, 82], "get_unstable_fcm": [8, 9, 14, 82], "internalstraintensor": [8, 9, 14, 82], "get_ist_oper": [8, 9, 14, 82], "get_rand_ist": [8, 9, 14, 82], "get_piezo": [8, 9, 14, 82], "rand_piezo": [8, 9, 14, 82], "pourbaix_diagram": [8, 9, 14], "ionentri": [8, 9, 14, 83], "multientri": [8, 9, 14, 83], "find_stable_entri": [8, 9, 14, 83], "get_decomposition_energi": [8, 9, 14, 83], "get_pourbaix_domain": [8, 9, 14, 83], "get_stable_entri": [8, 9, 14, 83, 105, 106, 110], "process_multientri": [8, 9, 14, 83], "unprocessed_entri": [8, 9, 14, 83, 287], "conc_term": [8, 9, 14, 83], "energy_at_condit": [8, 9, 14, 83], "energy_per_atom": [8, 9, 14, 80, 83, 162], "get_element_fract": [8, 9, 14, 83], "nh2o": [8, 9, 14, 83, 163], "nphi": [8, 9, 14, 83], "normalization_factor": [8, 9, 14, 83], "normalized_energi": [8, 9, 14, 83], "normalized_energy_at_condit": [8, 9, 14, 83], "nph": [8, 9, 14, 83], "num_atom": [8, 9, 14, 83, 90, 135, 137, 139], "pourbaixplott": [8, 9, 14, 83], "domain_vertic": [8, 9, 14, 83], "get_pourbaix_plot": [8, 9, 14, 83], "plot_entry_st": [8, 9, 14, 83], "generate_entry_label": [8, 9, 14, 83], "ion_or_solid_comp_object": [8, 9, 14, 83], "aflowprototypematch": [8, 9, 14, 84], "get_prototyp": [8, 9, 14, 84], "quasiharmon": [8, 9, 14, 54], "debye_integr": [8, 9, 14, 85], "debye_temperatur": [8, 9, 14, 49, 50, 85], "get_summary_dict": [8, 9, 14, 85, 105, 106, 108, 109, 110], "gruneisen_paramet": [8, 9, 14, 85], "optimize_gibbs_free_energi": [8, 9, 14, 85], "thermal_conduct": [8, 9, 14, 85, 135, 144], "vibrational_free_energi": [8, 9, 14, 85], "vibrational_internal_energi": [8, 9, 14, 85], "reaction_calcul": [8, 9, 14, 66, 287], "balancedreact": [8, 9, 14, 86, 109], "all_comp": [8, 9, 14, 86], "as_entri": [8, 9, 14, 86], "calculate_energi": [8, 9, 14, 86], "get_coeff": [8, 9, 14, 86], "get_el_amount": [8, 9, 14, 86], "normalize_to": [8, 9, 14, 86], "normalize_to_el": [8, 9, 14, 86], "normalized_repr": [8, 9, 14, 86], "normalized_repr_and_factor": [8, 9, 14, 86], "computedreact": [8, 9, 14, 86, 287], "calculated_reaction_energi": [8, 9, 14, 86, 287], "calculated_reaction_energy_uncertainti": [8, 9, 14, 86], "reactionerror": [8, 9, 14, 86], "oxidetyp": [8, 9, 14, 89], "parse_oxid": [8, 9, 14, 89], "get_percentage_bond_dist_chang": [8, 9, 14, 89], "get_percentage_lattice_parameter_chang": [8, 9, 14, 89], "get_percentage_volume_chang": [8, 9, 14, 89], "voronoianalyz": [8, 9, 14, 89], "analyze_structur": [8, 9, 14, 89, 115, 126], "plot_vor_analysi": [8, 9, 14, 89], "voronoiconnect": [8, 9, 14, 89], "connectivity_arrai": [8, 9, 14, 89], "get_connect": [8, 9, 14, 89], "get_sitej": [8, 9, 14, 89], "max_connect": [8, 9, 14, 89], "average_coordination_numb": [8, 9, 14, 89], "contains_peroxid": [8, 9, 14, 89], "get_max_bond_length": [8, 9, 14, 89], "oxide_typ": [8, 9, 14, 89], "abstractcompar": [8, 9, 14, 90], "get_hash": [8, 9, 14, 90, 173, 188, 189], "elementcompar": [8, 9, 14, 90], "frameworkcompar": [8, 9, 14, 90], "occupancycompar": [8, 9, 14, 90], "orderdisorderelementcompar": [8, 9, 14, 90], "speciescompar": [8, 9, 14, 90, 166], "spincompar": [8, 9, 14, 90], "fit_anonym": [8, 9, 14, 90], "get_all_anonymous_map": [8, 9, 14, 90], "get_best_electronegativity_anonymous_map": [8, 9, 14, 90], "get_map": [8, 9, 14, 90], "get_rms_anonym": [8, 9, 14, 90], "get_rms_dist": [8, 9, 14, 90], "get_s2_like_s1": [8, 9, 14, 90], "get_supercell_matrix": [8, 9, 14, 90], "get_transform": [8, 9, 14, 90], "surface_analysi": [8, 9, 14], "nanoscalest": [8, 9, 14, 96], "se_analyz": [8, 9, 14, 96], "bulk_gform": [8, 9, 14, 96], "plot_all_stability_map": [8, 9, 14, 96], "plot_one_stability_map": [8, 9, 14, 96], "scaled_wulff": [8, 9, 14, 96], "solve_equilibrium_point": [8, 9, 14, 96], "wulff_gform_and_r": [8, 9, 14, 96], "slabentri": [8, 9, 14, 96], "miller_index": [8, 9, 14, 15, 96, 135, 140, 148, 263], "adsorb": [8, 9, 14, 15, 96, 138, 148, 263], "nads_in_slab": [8, 9, 14, 96], "nsurfs_ads_in_slab": [8, 9, 14, 96], "cleaned_up_slab": [8, 9, 14, 96], "create_slab_label": [8, 9, 14, 96], "from_computed_structure_entri": [8, 9, 14, 96], "get_monolay": [8, 9, 14, 96], "get_unit_primitive_area": [8, 9, 14, 96], "gibbs_binding_energi": [8, 9, 14, 96], "surface_area": [8, 9, 14, 96, 101, 135, 148], "surface_energi": [8, 9, 14, 96], "surfaceenergyplott": [8, 9, 14, 96], "all_slab_entri": [8, 9, 14, 96], "ucell_entri": [8, 9, 14, 96], "ref_entri": [8, 9, 14, 96], "color_dict": [8, 9, 14, 96], "be_vs_clean_s": [8, 9, 14, 96], "area_frac_vs_chempot_plot": [8, 9, 14, 96], "chempot_plot_addon": [8, 9, 14, 96], "chempot_vs_gamma": [8, 9, 14, 96], "chempot_vs_gamma_plot_on": [8, 9, 14, 96], "color_palette_dict": [8, 9, 14, 96], "get_stable_entry_at_u": [8, 9, 14, 96], "get_surface_equilibrium": [8, 9, 14, 96], "monolayer_vs_b": [8, 9, 14, 96], "set_all_vari": [8, 9, 14, 96], "stable_u_range_dict": [8, 9, 14, 96], "surface_chempot_range_map": [8, 9, 14, 96], "wulff_from_chempot": [8, 9, 14, 96], "workfunctionanalyz": [8, 9, 14, 96], "efermi": [8, 9, 14, 96, 154, 155, 156, 158, 160, 161, 173, 214, 228, 231, 232], "locpot_along_c": [8, 9, 14, 96], "vacuum_locpot": [8, 9, 14, 96], "work_funct": [8, 9, 14, 96], "along_c": [8, 9, 14, 96], "ave_locpot": [8, 9, 14, 96], "sorted_sit": [8, 9, 14, 96], "ave_bulk_p": [8, 9, 14, 96], "get_label": [8, 9, 14, 96], "get_locpot_along_slab_plot": [8, 9, 14, 96], "is_converg": [8, 9, 14, 96], "entry_dict_from_list": [8, 9, 14, 96], "sub_chempot": [8, 9, 14, 96], "thermochemistri": [8, 9, 14], "thermodata": [8, 9, 14, 97, 167], "transition_st": [8, 9, 14], "nebanalysi": [8, 9, 14, 100], "from_dir": [8, 9, 14, 100, 173, 174, 179], "from_outcar": [8, 9, 14, 100], "get_extrema": [8, 9, 14, 100], "setup_splin": [8, 9, 14, 100], "combine_neb_plot": [8, 9, 14, 100], "wulfffacet": [8, 9, 14, 101], "debug": [8, 9, 14, 63, 101, 130, 273], "alpha": [8, 9, 14, 15, 25, 36, 38, 62, 93, 94, 96, 101, 135, 140, 147, 148, 161, 185, 189, 190, 200, 201, 232, 257, 263, 265, 287], "color_set": [8, 9, 14, 101], "grid_off": [8, 9, 14, 101], "axis_off": [8, 9, 14, 101], "show_area": [8, 9, 14, 101], "off_color": [8, 9, 14, 101], "miller_list": [8, 9, 14, 101, 148], "hkl_list": [8, 9, 14, 101], "e_surf_list": [8, 9, 14, 101], "dual_cv_simp": [8, 9, 14, 101], "wulff_pt_list": [8, 9, 14, 101], "wulff_cv_simp": [8, 9, 14, 101], "on_wulff": [8, 9, 14, 101], "color_area": [8, 9, 14, 101], "miller_area": [8, 9, 14, 101], "anisotropi": [8, 9, 14, 50, 101], "area_fraction_dict": [8, 9, 14, 101], "effective_radiu": [8, 9, 14, 101], "get_line_in_facet": [8, 9, 14, 101], "get_plotli": [8, 9, 14, 101], "miller_area_dict": [8, 9, 14, 101], "miller_energy_dict": [8, 9, 14, 101], "shape_factor": [8, 9, 14, 101], "tot_corner_sit": [8, 9, 14, 101], "tot_edg": [8, 9, 14, 101], "total_surface_energi": [8, 9, 14, 101], "weighted_surface_energi": [8, 9, 14, 101], "get_tri_area": [8, 9, 14, 101], "hkl_tuple_to_str": [8, 9, 14, 101], "from_do": [8, 9, 14, 104], "battery_abc": [8, 9, 105, 106, 110], "conversion_batteri": [8, 9, 105, 106], "insertion_batteri": [8, 9, 105, 106], "hive": [8, 9, 105, 112, 114, 287], "queen": [8, 9, 105, 112, 287], "feff_plot_cross_sect": [8, 9, 115], "feff_plot_do": [8, 9, 115], "gaussian_analyz": [8, 9, 115], "get_environ": [8, 9, 115], "diff_incar": [8, 9, 115, 120], "parse_view": [8, 9, 115, 120], "pmg_analyz": [8, 9, 115], "get_magnet": [8, 9, 115, 121], "pmg_config": [8, 9, 115], "add_config_var": [8, 9, 115, 122], "build_bad": [8, 9, 115, 122], "build_enum": [8, 9, 115, 122], "configure_pmg": [8, 9, 115, 122], "install_softwar": [8, 9, 115, 122], "setup_cp2k_data": [8, 9, 115, 122], "setup_potcar": [8, 9, 115, 122], "pmg_plot": [8, 9, 115], "get_chgint_plot": [8, 9, 115, 123], "get_dos_plot": [8, 9, 115, 123], "pmg_potcar": [8, 9, 115], "gen_potcar": [8, 9, 115, 124], "generate_potcar": [8, 9, 115, 124, 233], "proc_dir": [8, 9, 115, 124], "pmg_queri": [8, 9, 115], "do_queri": [8, 9, 115, 125], "pmg_structur": [8, 9, 115, 217], "analyze_localenv": [8, 9, 115, 126], "analyze_symmetri": [8, 9, 115, 126], "compare_structur": [8, 9, 115, 126], "convert_fmt": [8, 9, 115, 126], "from_path": [8, 9, 127, 128, 130], "get_charg": [8, 9, 127, 128, 129], "get_charge_decorated_structur": [8, 9, 127, 128], "get_charge_transf": [8, 9, 127, 128, 129], "get_decorated_structur": [8, 9, 127, 128], "get_oxidation_state_decorated_structur": [8, 9, 127, 128], "get_partial_charg": [8, 9, 127, 128, 129], "bader_analysis_from_object": [8, 9, 127, 128], "bader_analysis_from_path": [8, 9, 127, 128], "chargemol_cal": [8, 9, 127], "chargemolanalysi": [8, 9, 127, 129], "get_bond_ord": [8, 9, 127, 129, 135, 136], "get_property_decorated_structur": [8, 9, 127, 129], "critic2analysi": [8, 9, 127, 130], "get_critical_point_for_sit": [8, 9, 127, 130], "get_volume_and_charge_for_sit": [8, 9, 127, 130], "structure_graph": [8, 9, 47, 127, 130], "from_chgcar": [8, 9, 127, 130], "criticalpoint": [8, 9, 127, 130], "ellipt": [8, 9, 127, 130], "laplacian": [8, 9, 127, 130], "criticalpointtyp": [8, 9, 127, 130], "cage": [8, 9, 127, 130], "nnattr": [8, 9, 127, 130], "nucleu": [8, 9, 101, 127, 130], "ring": [8, 9, 16, 59, 60, 63, 127, 130, 184], "get_filepath": [8, 9, 127, 130], "enumerror": [8, 9, 127, 131], "buckinghampotenti": [8, 9, 127, 132], "gulpcal": [8, 9, 127, 132], "gulpconvergenceerror": [8, 9, 127, 132], "gulperror": [8, 9, 127, 132], "gulpio": [8, 9, 127, 132], "buckingham_input": [8, 9, 127, 132], "buckingham_potenti": [8, 9, 127, 132], "get_relaxed_structur": [8, 9, 127, 132], "keyword_lin": [8, 9, 127, 132], "library_lin": [8, 9, 127, 132], "specie_potential_lin": [8, 9, 127, 132], "structure_lin": [8, 9, 127, 132], "tersoff_input": [8, 9, 127, 132], "tersoff_potenti": [8, 9, 127, 132], "tersoffpotenti": [8, 9, 127, 132], "get_energy_buckingham": [8, 9, 127, 132], "get_energy_relax_structure_buckingham": [8, 9, 127, 132], "get_energy_tersoff": [8, 9, 127, 132], "mcsqs_caller": [8, 9, 127, 147], "allsq": [8, 9, 127, 133], "bestsq": [8, 9, 127, 133, 183], "objective_funct": [8, 9, 127, 133], "run_mcsq": [8, 9, 127, 133, 147], "vampire_cal": [8, 9, 127], "vampirecal": [8, 9, 127, 134], "parse_stdout": [8, 9, 127, 134], "vampireoutput": [8, 9, 127, 134], "covalentbond": [8, 9, 71, 135, 136, 147], "is_bond": [8, 9, 135, 136, 147], "get_bond_length": [8, 9, 135, 136], "obtain_all_bond_length": [8, 9, 135, 136], "chemicalpotenti": [8, 9, 135, 137], "add_charges_from_oxi_state_guess": [8, 9, 135, 137], "almost_equ": [8, 9, 135, 137], "alphabetical_formula": [8, 9, 135, 137, 139], "amount_toler": [8, 9, 135, 137], "average_electroneg": [8, 9, 135, 137], "contains_element_typ": [8, 9, 135, 137], "element_composit": [8, 9, 135, 137], "fractional_composit": [8, 9, 90, 135, 137], "from_weight_dict": [8, 9, 135, 137], "get_el_amt_dict": [8, 9, 135, 137], "get_integer_formula_and_factor": [8, 9, 135, 137], "get_reduced_composition_and_factor": [8, 9, 135, 137], "get_reduced_formula_and_factor": [8, 9, 135, 137, 139], "get_wt_fract": [8, 9, 135, 137], "hill_formula": [8, 9, 135, 137], "is_el": [8, 9, 135, 137, 162], "iupac_formula": [8, 9, 135, 137], "oxi_prob": [8, 9, 135, 137], "ranked_compositions_from_indeterminate_formula": [8, 9, 135, 137], "reduced_composit": [8, 9, 135, 137], "reduced_formula": [8, 9, 135, 137, 139, 162, 164, 168, 287], "remove_charg": [8, 9, 135, 137], "special_formula": [8, 9, 135, 137], "to_data_dict": [8, 9, 135, 137], "to_reduced_dict": [8, 9, 135, 137, 139], "to_weight_dict": [8, 9, 135, 137], "total_electron": [8, 9, 135, 137], "reduce_formula": [8, 9, 135, 137], "film": [8, 9, 68, 69, 70, 135, 138], "film_indic": [8, 9, 135, 138], "film_lay": [8, 9, 135, 138], "film_sit": [8, 9, 135, 138], "film_termin": [8, 9, 135, 138], "from_slab": [8, 9, 135, 138], "get_shifts_based_on_adsorbate_sit": [8, 9, 135, 138], "in_plane_offset": [8, 9, 135, 138], "substrate_indic": [8, 9, 135, 138], "substrate_lay": [8, 9, 135, 138], "substrate_sit": [8, 9, 135, 138], "substrate_termin": [8, 9, 135, 138], "vacuum_over_film": [8, 9, 68, 135, 138], "count_lay": [8, 9, 135, 138], "label_termin": [8, 9, 135, 138], "from_formula": [8, 9, 135, 139], "d_hkl": [8, 9, 43, 135, 140], "dot": [8, 9, 63, 96, 135, 140, 149, 160, 161, 217, 250, 276], "find_all_map": [8, 9, 135, 140], "find_map": [8, 9, 135, 140], "from_paramet": [8, 9, 135, 140, 287], "get_all_dist": [8, 9, 135, 140], "get_brillouin_zon": [8, 9, 135, 140], "get_cartesian_coord": [8, 9, 135, 140], "get_distance_and_imag": [8, 9, 135, 140], "get_frac_coords_from_ll": [8, 9, 135, 140], "get_fractional_coord": [8, 9, 135, 140], "get_lll_frac_coord": [8, 9, 135, 140], "get_lll_reduced_lattic": [8, 9, 135, 140], "get_miller_index_from_coord": [8, 9, 135, 140], "get_niggli_reduced_lattic": [8, 9, 135, 140], "get_points_in_spher": [8, 9, 135, 140], "get_points_in_sphere_old": [8, 9, 135, 140], "get_points_in_sphere_pi": [8, 9, 135, 140], "get_recp_symmetry_oper": [8, 9, 135, 140], "get_wigner_seitz_cel": [8, 9, 135, 140], "inv_matrix": [8, 9, 135, 140], "is_3d_period": [8, 9, 135, 140, 147], "is_hexagon": [8, 9, 135, 140], "is_orthogon": [8, 9, 135, 140], "lll_invers": [8, 9, 135, 140], "lll_map": [8, 9, 135, 140], "lll_matrix": [8, 9, 135, 140], "metric_tensor": [8, 9, 135, 140], "monoclin": [8, 9, 135, 140, 148, 233, 254, 258], "norm": [8, 9, 66, 70, 71, 73, 130, 135, 140, 177, 179, 233, 254], "orthorhomb": [8, 9, 62, 135, 140, 147, 148, 254, 263], "reciprocal_lattic": [8, 9, 135, 140, 161], "reciprocal_lattice_crystallograph": [8, 9, 135, 140], "selling_dist": [8, 9, 135, 140], "selling_vector": [8, 9, 135, 140], "tetragon": [8, 9, 62, 97, 135, 140, 148, 254, 263], "find_neighbor": [8, 9, 135, 140], "get_integer_index": [8, 9, 135, 140], "libxcfunc": [8, 9, 135, 152], "gga_c_am05": [8, 9, 135, 141, 152], "gga_c_apb": [8, 9, 135, 141], "gga_c_bgcp": [8, 9, 135, 141], "gga_c_ft97": [8, 9, 135, 141], "gga_c_gam": [8, 9, 135, 141], "gga_c_hcth_a": [8, 9, 135, 141], "gga_c_lm": [8, 9, 135, 141], "gga_c_lyp": [8, 9, 135, 141, 152], "gga_c_n12": [8, 9, 135, 141], "gga_c_n12_sx": [8, 9, 135, 141], "gga_c_optc": [8, 9, 135, 141], "gga_c_op_b88": [8, 9, 135, 141], "gga_c_op_g96": [8, 9, 135, 141], "gga_c_op_pb": [8, 9, 135, 141], "gga_c_op_pw91": [8, 9, 135, 141], "gga_c_op_xalpha": [8, 9, 135, 141], "gga_c_p86": [8, 9, 135, 141], "gga_c_pb": [8, 9, 135, 141, 152], "gga_c_pbef": [8, 9, 135, 141], "gga_c_pbeint": [8, 9, 135, 141], "gga_c_pbeloc": [8, 9, 135, 141], "gga_c_pbe_jrgx": [8, 9, 135, 141], "gga_c_pbe_sol": [8, 9, 135, 141, 152], "gga_c_pw91": [8, 9, 135, 141, 152], "gga_c_q2d": [8, 9, 135, 141], "gga_c_regtpss": [8, 9, 135, 141], "gga_c_revtca": [8, 9, 135, 141], "gga_c_rge2": [8, 9, 135, 141], "gga_c_sogga11": [8, 9, 135, 141], "gga_c_sogga11_x": [8, 9, 135, 141], "gga_c_spb": [8, 9, 135, 141], "gga_c_tca": [8, 9, 135, 141], "gga_c_wi": [8, 9, 135, 141], "gga_c_wi0": [8, 9, 135, 141], "gga_c_wl": [8, 9, 135, 141], "gga_c_xpb": [8, 9, 135, 141], "gga_c_zpbeint": [8, 9, 135, 141], "gga_c_zpbesol": [8, 9, 135, 141], "gga_k_absp1": [8, 9, 135, 141], "gga_k_absp2": [8, 9, 135, 141], "gga_k_apb": [8, 9, 135, 141], "gga_k_apbeint": [8, 9, 135, 141], "gga_k_baltin": [8, 9, 135, 141], "gga_k_dk": [8, 9, 135, 141], "gga_k_ernzerhof": [8, 9, 135, 141], "gga_k_fr_b88": [8, 9, 135, 141], "gga_k_fr_pw86": [8, 9, 135, 141], "gga_k_ge2": [8, 9, 135, 141], "gga_k_golden": [8, 9, 135, 141], "gga_k_gp85": [8, 9, 135, 141], "gga_k_gr": [8, 9, 135, 141], "gga_k_lc94": [8, 9, 135, 141], "gga_k_lieb": [8, 9, 135, 141], "gga_k_llp": [8, 9, 135, 141], "gga_k_ludena": [8, 9, 135, 141], "gga_k_mey": [8, 9, 135, 141], "gga_k_ol1": [8, 9, 135, 141], "gga_k_ol2": [8, 9, 135, 141], "gga_k_pearson": [8, 9, 135, 141], "gga_k_perdew": [8, 9, 135, 141], "gga_k_revapb": [8, 9, 135, 141], "gga_k_revapbeint": [8, 9, 135, 141], "gga_k_tfvw": [8, 9, 135, 141], "gga_k_thakkar": [8, 9, 135, 141], "gga_k_tw1": [8, 9, 135, 141], "gga_k_tw2": [8, 9, 135, 141], "gga_k_tw3": [8, 9, 135, 141], "gga_k_tw4": [8, 9, 135, 141], "gga_k_vjk": [8, 9, 135, 141], "gga_k_vsk": [8, 9, 135, 141], "gga_k_vw": [8, 9, 135, 141], "gga_k_yt65": [8, 9, 135, 141], "gga_xc_b97_d": [8, 9, 135, 141], "gga_xc_b97_gga1": [8, 9, 135, 141], "gga_xc_edf1": [8, 9, 135, 141], "gga_xc_hcth_120": [8, 9, 135, 141], "gga_xc_hcth_147": [8, 9, 135, 141], "gga_xc_hcth_407": [8, 9, 135, 141], "gga_xc_hcth_407p": [8, 9, 135, 141], "gga_xc_hcth_93": [8, 9, 135, 141], "gga_xc_hcth_p14": [8, 9, 135, 141], "gga_xc_hcth_p76": [8, 9, 135, 141], "gga_xc_kt2": [8, 9, 135, 141], "gga_xc_mohlyp": [8, 9, 135, 141], "gga_xc_mohlyp2": [8, 9, 135, 141], "gga_xc_mpwlyp1w": [8, 9, 135, 141], "gga_xc_oblyp_d": [8, 9, 135, 141], "gga_xc_opbe_d": [8, 9, 135, 141], "gga_xc_opwlyp_d": [8, 9, 135, 141], "gga_xc_pbe1w": [8, 9, 135, 141], "gga_xc_pbelyp1w": [8, 9, 135, 141], "gga_xc_th1": [8, 9, 135, 141], "gga_xc_th2": [8, 9, 135, 141], "gga_xc_th3": [8, 9, 135, 141], "gga_xc_th4": [8, 9, 135, 141], "gga_xc_th_fc": [8, 9, 135, 141], "gga_xc_th_fcfo": [8, 9, 135, 141], "gga_xc_th_fco": [8, 9, 135, 141], "gga_xc_th_fl": [8, 9, 135, 141], "gga_xc_vv10": [8, 9, 135, 141], "gga_xc_xlyp": [8, 9, 135, 141], "gga_x_2d_b86": [8, 9, 135, 141], "gga_x_2d_b86_mgc": [8, 9, 135, 141], "gga_x_2d_b88": [8, 9, 135, 141], "gga_x_2d_pb": [8, 9, 135, 141], "gga_x_airi": [8, 9, 135, 141], "gga_x_ak13": [8, 9, 135, 141], "gga_x_am05": [8, 9, 135, 141, 152], "gga_x_apb": [8, 9, 135, 141], "gga_x_b86": [8, 9, 135, 141], "gga_x_b86_mgc": [8, 9, 135, 141], "gga_x_b86_r": [8, 9, 135, 141], "gga_x_b88": [8, 9, 135, 141, 152], "gga_x_bayesian": [8, 9, 135, 141], "gga_x_bgcp": [8, 9, 135, 141], "gga_x_bpccac": [8, 9, 135, 141], "gga_x_c09x": [8, 9, 135, 141], "gga_x_cap": [8, 9, 135, 141], "gga_x_dk87_r1": [8, 9, 135, 141], "gga_x_dk87_r2": [8, 9, 135, 141], "gga_x_ev93": [8, 9, 135, 141], "gga_x_ft97_a": [8, 9, 135, 141], "gga_x_ft97_b": [8, 9, 135, 141], "gga_x_g96": [8, 9, 135, 141], "gga_x_gam": [8, 9, 135, 141], "gga_x_hcth_a": [8, 9, 135, 141], "gga_x_herman": [8, 9, 135, 141], "gga_x_hjs_b88": [8, 9, 135, 141], "gga_x_hjs_b88_v2": [8, 9, 135, 141], "gga_x_hjs_b97x": [8, 9, 135, 141], "gga_x_hjs_pb": [8, 9, 135, 141], "gga_x_hjs_pbe_sol": [8, 9, 135, 141], "gga_x_htb": [8, 9, 135, 141], "gga_x_ityh": [8, 9, 135, 141], "gga_x_kt1": [8, 9, 135, 141], "gga_x_lag": [8, 9, 135, 141], "gga_x_lambda_ch_n": [8, 9, 135, 141], "gga_x_lambda_lo_n": [8, 9, 135, 141], "gga_x_lambda_oc2_n": [8, 9, 135, 141], "gga_x_lb": [8, 9, 135, 141], "gga_x_lbm": [8, 9, 135, 141], "gga_x_lg93": [8, 9, 135, 141], "gga_x_lv_rpw86": [8, 9, 135, 141], "gga_x_mb88": [8, 9, 135, 141], "gga_x_mpb": [8, 9, 135, 141], "gga_x_mpw91": [8, 9, 135, 141], "gga_x_n12": [8, 9, 135, 141], "gga_x_ol2": [8, 9, 135, 141], "gga_x_optb88_vdw": [8, 9, 135, 141], "gga_x_optpbe_vdw": [8, 9, 135, 141], "gga_x_optx": [8, 9, 135, 141], "gga_x_pb": [8, 9, 135, 141, 152], "gga_x_pbea": [8, 9, 135, 141], "gga_x_pbef": [8, 9, 135, 141], "gga_x_pbeint": [8, 9, 135, 141], "gga_x_pbek1_vdw": [8, 9, 135, 141], "gga_x_pbe_jsjr": [8, 9, 135, 141], "gga_x_pbe_mol": [8, 9, 135, 141], "gga_x_pbe_r": [8, 9, 135, 141, 152], "gga_x_pbe_sol": [8, 9, 135, 141, 152], "gga_x_pbe_tca": [8, 9, 135, 141], "gga_x_pw86": [8, 9, 135, 141], "gga_x_pw91": [8, 9, 135, 141, 152], "gga_x_q2d": [8, 9, 135, 141], "gga_x_rge2": [8, 9, 135, 141], "gga_x_rpb": [8, 9, 135, 141, 152], "gga_x_rpw86": [8, 9, 135, 141], "gga_x_sfat": [8, 9, 135, 141], "gga_x_sogga": [8, 9, 135, 141], "gga_x_sogga11": [8, 9, 135, 141], "gga_x_ssb": [8, 9, 135, 141], "gga_x_ssb_d": [8, 9, 135, 141], "gga_x_ssb_sw": [8, 9, 135, 141], "gga_x_vmt84_g": [8, 9, 135, 141], "gga_x_vmt84_pb": [8, 9, 135, 141], "gga_x_vmt_g": [8, 9, 135, 141], "gga_x_vmt_pb": [8, 9, 135, 141], "gga_x_wc": [8, 9, 135, 141], "gga_x_wpbeh": [8, 9, 135, 141], "gga_x_xpb": [8, 9, 135, 141], "hyb_gga_xc_b1lyp": [8, 9, 135, 141], "hyb_gga_xc_b1pw91": [8, 9, 135, 141], "hyb_gga_xc_b1wc": [8, 9, 135, 141], "hyb_gga_xc_b3lyp": [8, 9, 135, 141], "hyb_gga_xc_b3lyp5": [8, 9, 135, 141], "hyb_gga_xc_b3p86": [8, 9, 135, 141], "hyb_gga_xc_b3pw91": [8, 9, 135, 141], "hyb_gga_xc_b97": [8, 9, 135, 141], "hyb_gga_xc_b97_1": [8, 9, 135, 141], "hyb_gga_xc_b97_1p": [8, 9, 135, 141], "hyb_gga_xc_b97_2": [8, 9, 135, 141], "hyb_gga_xc_b97_3": [8, 9, 135, 141], "hyb_gga_xc_b97_k": [8, 9, 135, 141], "hyb_gga_xc_bhandh": [8, 9, 135, 141], "hyb_gga_xc_bhandhlyp": [8, 9, 135, 141], "hyb_gga_xc_camy_b3lyp": [8, 9, 135, 141], "hyb_gga_xc_camy_blyp": [8, 9, 135, 141], "hyb_gga_xc_cam_b3lyp": [8, 9, 135, 141], "hyb_gga_xc_cap0": [8, 9, 135, 141], "hyb_gga_xc_edf2": [8, 9, 135, 141], "hyb_gga_xc_hjs_b88": [8, 9, 135, 141], "hyb_gga_xc_hjs_b97x": [8, 9, 135, 141], "hyb_gga_xc_hjs_pb": [8, 9, 135, 141], "hyb_gga_xc_hjs_pbe_sol": [8, 9, 135, 141], "hyb_gga_xc_hpbeint": [8, 9, 135, 141], "hyb_gga_xc_hse03": [8, 9, 135, 141], "hyb_gga_xc_hse06": [8, 9, 135, 141], "hyb_gga_xc_lcy_blyp": [8, 9, 135, 141], "hyb_gga_xc_lcy_pb": [8, 9, 135, 141], "hyb_gga_xc_lc_vv10": [8, 9, 135, 141], "hyb_gga_xc_lrc_wpb": [8, 9, 135, 141], "hyb_gga_xc_lrc_wpbeh": [8, 9, 135, 141], "hyb_gga_xc_mb3lyp_rc04": [8, 9, 135, 141], "hyb_gga_xc_mpw3lyp": [8, 9, 135, 141], "hyb_gga_xc_mpw3pw": [8, 9, 135, 141], "hyb_gga_xc_mpwlyp1m": [8, 9, 135, 141], "hyb_gga_xc_o3lyp": [8, 9, 135, 141], "hyb_gga_xc_pbe0_13": [8, 9, 135, 141], "hyb_gga_xc_pbeh": [8, 9, 135, 141], "hyb_gga_xc_revb3lyp": [8, 9, 135, 141], "hyb_gga_xc_sb98_1a": [8, 9, 135, 141], "hyb_gga_xc_sb98_1b": [8, 9, 135, 141], "hyb_gga_xc_sb98_1c": [8, 9, 135, 141], "hyb_gga_xc_sb98_2a": [8, 9, 135, 141], "hyb_gga_xc_sb98_2b": [8, 9, 135, 141], "hyb_gga_xc_sb98_2c": [8, 9, 135, 141], "hyb_gga_xc_tuned_cam_b3lyp": [8, 9, 135, 141], "hyb_gga_xc_wb97": [8, 9, 135, 141], "hyb_gga_xc_wb97x": [8, 9, 135, 141], "hyb_gga_xc_wb97x_d": [8, 9, 135, 141], "hyb_gga_xc_wb97x_v": [8, 9, 135, 141], "hyb_gga_xc_x3lyp": [8, 9, 135, 141], "hyb_gga_xc_mpw1k": [8, 9, 135, 141], "hyb_gga_xc_mpw1pw": [8, 9, 135, 141], "hyb_gga_x_n12_sx": [8, 9, 135, 141], "hyb_gga_x_sogga11_x": [8, 9, 135, 141], "hyb_mgga_xc_b86b95": [8, 9, 135, 141], "hyb_mgga_xc_b88b95": [8, 9, 135, 141], "hyb_mgga_xc_bb1k": [8, 9, 135, 141], "hyb_mgga_xc_m05": [8, 9, 135, 141], "hyb_mgga_xc_m05_2x": [8, 9, 135, 141], "hyb_mgga_xc_m06": [8, 9, 135, 141], "hyb_mgga_xc_m06_2x": [8, 9, 135, 141], "hyb_mgga_xc_m06_hf": [8, 9, 135, 141], "hyb_mgga_xc_m08_hx": [8, 9, 135, 141], "hyb_mgga_xc_m08_so": [8, 9, 135, 141], "hyb_mgga_xc_m11": [8, 9, 135, 141], "hyb_mgga_xc_mpw1b95": [8, 9, 135, 141], "hyb_mgga_xc_mpwb1k": [8, 9, 135, 141], "hyb_mgga_xc_pw6b95": [8, 9, 135, 141], "hyb_mgga_xc_pw86b95": [8, 9, 135, 141], "hyb_mgga_xc_pwb6k": [8, 9, 135, 141], "hyb_mgga_xc_revtpssh": [8, 9, 135, 141], "hyb_mgga_xc_tpssh": [8, 9, 135, 141], "hyb_mgga_xc_wb97m_v": [8, 9, 135, 141], "hyb_mgga_xc_x1b95": [8, 9, 135, 141], "hyb_mgga_xc_xb1k": [8, 9, 135, 141], "hyb_mgga_x_dldf": [8, 9, 135, 141], "hyb_mgga_x_mn12_sx": [8, 9, 135, 141], "hyb_mgga_x_mn15": [8, 9, 135, 141], "hyb_mgga_x_ms2h": [8, 9, 135, 141], "hyb_mgga_x_mvsh": [8, 9, 135, 141], "hyb_mgga_x_scan0": [8, 9, 135, 141], "lda_c_1d_csc": [8, 9, 135, 141], "lda_c_1d_loo": [8, 9, 135, 141], "lda_c_2d_amgb": [8, 9, 135, 141], "lda_c_2d_prm": [8, 9, 135, 141], "lda_c_gl": [8, 9, 135, 141, 152], "lda_c_gomba": [8, 9, 135, 141], "lda_c_hl": [8, 9, 135, 141, 152], "lda_c_ml1": [8, 9, 135, 141], "lda_c_ml2": [8, 9, 135, 141], "lda_c_ob_pw": [8, 9, 135, 141], "lda_c_ob_pz": [8, 9, 135, 141], "lda_c_pw": [8, 9, 135, 141, 152], "lda_c_pw_mod": [8, 9, 135, 141, 152], "lda_c_pw_rpa": [8, 9, 135, 141], "lda_c_pz": [8, 9, 135, 141, 152], "lda_c_pz_mod": [8, 9, 135, 141], "lda_c_rc04": [8, 9, 135, 141], "lda_c_rpa": [8, 9, 135, 141], "lda_c_vwn": [8, 9, 135, 141, 152], "lda_c_vwn_1": [8, 9, 135, 141], "lda_c_vwn_2": [8, 9, 135, 141], "lda_c_vwn_3": [8, 9, 135, 141], "lda_c_vwn_4": [8, 9, 135, 141], "lda_c_vwn_rpa": [8, 9, 135, 141], "lda_c_wign": [8, 9, 135, 141, 152], "lda_c_xalpha": [8, 9, 135, 141], "lda_c_vbh": [8, 9, 135, 141], "lda_k_lp": [8, 9, 135, 141], "lda_k_tf": [8, 9, 135, 141], "lda_x": [8, 9, 135, 141, 152], "lda_xc_ksdt": [8, 9, 135, 141], "lda_xc_teter93": [8, 9, 135, 141, 152], "lda_xc_zlp": [8, 9, 135, 141], "lda_x_1d": [8, 9, 135, 141], "lda_x_2d": [8, 9, 135, 141], "mgga_c_bc95": [8, 9, 135, 141], "mgga_c_cc06": [8, 9, 135, 141], "mgga_c_c": [8, 9, 135, 141], "mgga_c_dldf": [8, 9, 135, 141], "mgga_c_m05": [8, 9, 135, 141], "mgga_c_m05_2x": [8, 9, 135, 141], "mgga_c_m06": [8, 9, 135, 141], "mgga_c_m06_2x": [8, 9, 135, 141], "mgga_c_m06_hf": [8, 9, 135, 141], "mgga_c_m06_l": [8, 9, 135, 141], "mgga_c_m08_hx": [8, 9, 135, 141], "mgga_c_m08_so": [8, 9, 135, 141], "mgga_c_m11": [8, 9, 135, 141], "mgga_c_m11_l": [8, 9, 135, 141], "mgga_c_mn12_l": [8, 9, 135, 141], "mgga_c_mn12_sx": [8, 9, 135, 141], "mgga_c_mn15": [8, 9, 135, 141], "mgga_c_mn15_l": [8, 9, 135, 141], "mgga_c_pkzb": [8, 9, 135, 141], "mgga_c_revtpss": [8, 9, 135, 141], "mgga_c_scan": [8, 9, 135, 141], "mgga_c_tpss": [8, 9, 135, 141], "mgga_c_tpssloc": [8, 9, 135, 141], "mgga_c_vsxc": [8, 9, 135, 141], "mgga_xc_b97m_v": [8, 9, 135, 141], "mgga_xc_otpss_d": [8, 9, 135, 141], "mgga_xc_tpsslyp1w": [8, 9, 135, 141], "mgga_xc_zlp": [8, 9, 135, 141], "mgga_x_2d_prhg07": [8, 9, 135, 141], "mgga_x_2d_prhg07_prp10": [8, 9, 135, 141], "mgga_x_bj06": [8, 9, 135, 141], "mgga_x_bloc": [8, 9, 135, 141], "mgga_x_br89": [8, 9, 135, 141], "mgga_x_gvt4": [8, 9, 135, 141], "mgga_x_lta": [8, 9, 135, 141], "mgga_x_m05": [8, 9, 135, 141], "mgga_x_m05_2x": [8, 9, 135, 141], "mgga_x_m06": [8, 9, 135, 141], "mgga_x_m06_2x": [8, 9, 135, 141], "mgga_x_m06_hf": [8, 9, 135, 141], "mgga_x_m06_l": [8, 9, 135, 141], "mgga_x_m08_hx": [8, 9, 135, 141], "mgga_x_m08_so": [8, 9, 135, 141], "mgga_x_m11": [8, 9, 135, 141], "mgga_x_m11_l": [8, 9, 135, 141], "mgga_x_mbeef": [8, 9, 135, 141], "mgga_x_mbeefvdw": [8, 9, 135, 141], "mgga_x_mk00": [8, 9, 135, 141], "mgga_x_mk00b": [8, 9, 135, 141], "mgga_x_mn12_l": [8, 9, 135, 141], "mgga_x_mn15_l": [8, 9, 135, 141], "mgga_x_modtpss": [8, 9, 135, 141], "mgga_x_ms0": [8, 9, 135, 141], "mgga_x_ms1": [8, 9, 135, 141], "mgga_x_ms2": [8, 9, 135, 141], "mgga_x_mv": [8, 9, 135, 141], "mgga_x_pkzb": [8, 9, 135, 141], "mgga_x_revtpss": [8, 9, 135, 141], "mgga_x_rpp09": [8, 9, 135, 141], "mgga_x_scan": [8, 9, 135, 141], "mgga_x_tau_hcth": [8, 9, 135, 141], "mgga_x_tb09": [8, 9, 135, 141], "mgga_x_tpss": [8, 9, 135, 141], "all_famili": [8, 9, 135, 141], "all_kind": [8, 9, 135, 141], "info_dict": [8, 9, 29, 135, 141], "is_c_kind": [8, 9, 135, 141], "is_gga_famili": [8, 9, 135, 141], "is_hyb_gga_famili": [8, 9, 135, 141], "is_hyb_mgga_famili": [8, 9, 135, 141], "is_k_kind": [8, 9, 135, 141], "is_lda_famili": [8, 9, 135, 141], "is_mgga_famili": [8, 9, 135, 141], "is_x_kind": [8, 9, 135, 141], "is_xc_kind": [8, 9, 135, 141], "to_json": [8, 9, 135, 141], "molecular_orbit": [8, 9, 135, 173, 201], "elec_neg": [8, 9, 135, 142], "ao": [8, 9, 135, 142, 201, 232], "band_edg": [8, 9, 135, 142], "aos_as_list": [8, 9, 135, 142], "max_electroneg": [8, 9, 135, 142], "obtain_band_edg": [8, 9, 135, 142], "as_xyzt_str": [8, 9, 135, 143], "from_rotation_and_translation_and_time_revers": [8, 9, 135, 143], "from_symmop": [8, 9, 135, 143], "from_xyzt_str": [8, 9, 135, 143], "operate_magmom": [8, 9, 135, 143], "affine_matrix": [8, 9, 135, 143], "apply_rotation_onli": [8, 9, 135, 143], "are_symmetrically_rel": [8, 9, 135, 143], "are_symmetrically_related_vector": [8, 9, 135, 143], "as_xyz_str": [8, 9, 135, 143], "from_axis_angle_and_transl": [8, 9, 135, 143], "from_origin_axis_angl": [8, 9, 135, 143], "from_rotation_and_transl": [8, 9, 135, 140, 143], "from_xyz_str": [8, 9, 135, 143], "invers": [8, 9, 15, 25, 36, 38, 45, 50, 58, 71, 80, 90, 135, 140, 143, 148, 149, 189, 230, 253, 254, 259, 262, 263, 264, 265, 266], "operate_multi": [8, 9, 135, 140, 143], "reflect": [8, 9, 63, 135, 143, 144, 204], "rotation_matrix": [8, 9, 29, 135, 140, 143], "rotoreflect": [8, 9, 135, 143], "transform_tensor": [8, 9, 135, 143], "translation_vector": [8, 9, 135, 143, 264], "oxi_st": [8, 9, 17, 135, 144, 189, 192], "long_nam": [8, 9, 135, 144], "atomic_radius_calcul": [8, 9, 135, 144], "van_der_waals_radiu": [8, 9, 135, 144], "mendeleev_no": [8, 9, 135, 144], "electrical_resist": [8, 9, 135, 144], "velocity_of_sound": [8, 9, 135, 144], "refractive_index": [8, 9, 135, 144], "poissons_ratio": [8, 9, 135, 144], "molar_volum": [8, 9, 135, 144], "atomic_orbit": [8, 9, 135, 144], "boiling_point": [8, 9, 135, 144], "critical_temperatur": [8, 9, 135, 144], "superconduction_temperatur": [8, 9, 135, 144], "liquid_rang": [8, 9, 135, 144], "bulk_modulu": [8, 9, 135, 144], "youngs_modulu": [8, 9, 135, 144], "brinell_hard": [8, 9, 135, 144], "rigidity_modulu": [8, 9, 135, 144], "mineral_hard": [8, 9, 135, 144], "vickers_hard": [8, 9, 135, 144], "density_of_solid": [8, 9, 135, 144], "coefficient_of_linear_thermal_expans": [8, 9, 135, 144], "ground_level": [8, 9, 135, 144], "am": [8, 9, 71, 77, 135, 144, 230, 233], "au": [8, 9, 77, 135, 144, 215, 233], "ba": [8, 9, 20, 77, 135, 144, 233], "bh": [8, 9, 135, 144], "bi": [8, 9, 77, 135, 144, 233, 279], "bk": [8, 9, 135, 144], "ca": [8, 9, 71, 77, 135, 139, 144, 230, 233], "cf": [8, 9, 71, 135, 144, 233], "cn": [8, 9, 14, 18, 24, 25, 26, 28, 29, 71, 135, 144, 213, 215], "cr": [8, 9, 77, 135, 144, 233, 263], "cu": [8, 9, 44, 46, 77, 96, 135, 137, 144, 155, 161, 233], "dy": [8, 9, 77, 135, 144, 201, 233, 268], "er": [8, 9, 77, 135, 144, 233], "fl": [8, 9, 135, 144], "fr": [8, 9, 77, 135, 144, 161, 200, 233], "ga": [8, 9, 66, 77, 83, 97, 135, 144, 163, 198, 233], "gd": [8, 9, 77, 135, 144, 233], "ge": [8, 9, 77, 135, 144, 147, 233, 263, 264, 265, 279], "hf": [8, 9, 77, 135, 144, 190, 191, 201, 232, 233], "hg": [8, 9, 77, 135, 144, 233], "ho": [8, 9, 77, 135, 137, 139, 144, 233], "ir": [8, 9, 77, 135, 144, 189, 201, 233, 250], "la": [8, 9, 77, 130, 135, 144, 233], "lr": [8, 9, 135, 144], "lu": [8, 9, 77, 135, 144, 233, 287], "lv": [8, 9, 135, 144], "mc": [8, 9, 134, 135, 144], "mo": [8, 9, 48, 63, 77, 96, 135, 142, 144, 190, 191, 201, 223, 233, 265], "mt": [8, 9, 135, 144, 286], "nb": [8, 9, 77, 135, 144, 156, 173, 228, 232, 233, 254, 263], "nd": [8, 9, 44, 77, 81, 135, 144, 232, 233, 256, 284], "nh": [8, 9, 83, 135, 144], "og": [8, 9, 135, 144, 258], "pa": [8, 9, 66, 77, 135, 144, 233], "pb": [8, 9, 77, 135, 144, 230, 233, 279], "po": [8, 9, 20, 77, 135, 144, 190, 210, 233], "pt": [8, 9, 77, 101, 135, 144, 145, 147, 160, 233], "pu": [8, 9, 77, 135, 144, 233], "ra": [8, 9, 26, 77, 135, 144, 233, 286], "rb": [8, 9, 77, 135, 144, 233], "rf": [8, 9, 135, 144], "rg": [8, 9, 135, 144], "rh": [8, 9, 77, 135, 144, 233], "rn": [8, 9, 77, 135, 144, 233], "sb": [8, 9, 77, 135, 144, 233], "sc": [8, 9, 77, 135, 144, 179, 232, 233, 265], "se": [8, 9, 28, 77, 85, 107, 135, 144, 172, 233, 279, 287], "sg": [8, 9, 20, 63, 135, 144, 147, 170], "sm": [8, 9, 77, 135, 144, 233], "sn": [8, 9, 77, 135, 144, 233, 279], "sr": [8, 9, 77, 135, 142, 144, 173, 188, 189, 233], "ta": [8, 9, 71, 77, 135, 144, 233, 263], "tb": [8, 9, 77, 135, 144, 151, 233], "te": [8, 9, 77, 107, 135, 144, 233], "th": [8, 9, 37, 77, 135, 144, 206, 233, 272], "tl": [8, 9, 77, 135, 144, 233, 279], "tm": [8, 9, 77, 135, 144, 179, 233], "xe": [8, 9, 77, 135, 144, 199, 233], "zn": [8, 9, 71, 77, 135, 144, 233], "zr": [8, 9, 77, 135, 139, 144, 233, 279], "atomic_radiu": [8, 9, 135, 144], "average_anionic_radiu": [8, 9, 135, 144], "average_cationic_radiu": [8, 9, 135, 144], "average_ionic_radiu": [8, 9, 135, 144], "block": [8, 9, 135, 137, 144, 181, 185, 189, 204, 205, 206, 232], "common_oxidation_st": [8, 9, 135, 137, 139, 144], "from_z": [8, 9, 135, 144], "from_row_and_group": [8, 9, 135, 144], "full_electronic_structur": [8, 9, 135, 144], "ground_state_term_symbol": [8, 9, 135, 144], "icsd_oxidation_st": [8, 9, 135, 137, 139, 144], "ionic_radii": [8, 9, 135, 144], "is_actinoid": [8, 9, 135, 144], "is_alkali": [8, 9, 135, 144], "is_alkalin": [8, 9, 135, 144], "is_chalcogen": [8, 9, 135, 144], "is_halogen": [8, 9, 135, 144], "is_lanthanoid": [8, 9, 135, 144], "is_met": [8, 9, 71, 135, 144, 154, 155, 161, 173, 188, 190, 233], "is_metalloid": [8, 9, 135, 144], "is_noble_ga": [8, 9, 135, 144], "is_post_transition_met": [8, 9, 135, 144], "is_quadrupolar": [8, 9, 135, 144], "is_rare_earth_met": [8, 9, 135, 144], "is_transition_met": [8, 9, 135, 144], "is_valid_symbol": [8, 9, 135, 144], "iupac_ord": [8, 9, 135, 137, 139, 144], "max_oxidation_st": [8, 9, 135, 144], "metallic_radiu": [8, 9, 135, 144], "min_oxidation_st": [8, 9, 135, 144], "nmr_quadrupole_mo": [8, 9, 135, 144], "oxidation_st": [8, 9, 17, 135, 144, 147, 163, 263, 265], "print_periodic_t": [8, 9, 135, 144], "row": [8, 9, 55, 58, 62, 74, 80, 88, 135, 137, 138, 139, 140, 144, 147, 148, 149, 168, 179, 190, 224, 232, 269, 270, 276], "term_symbol": [8, 9, 135, 144], "string_mod": [8, 9, 135, 144, 267, 278], "get_crystal_field_spin": [8, 9, 135, 144], "get_nmr_quadrupole_mo": [8, 9, 135, 144], "get_shannon_radiu": [8, 9, 135, 144], "ionic_radiu": [8, 9, 135, 144], "distance_and_imag": [8, 9, 135, 145], "distance_and_image_from_frac_coord": [8, 9, 135, 145], "frac_coord": [8, 9, 62, 130, 135, 140, 145, 147, 148, 154, 155, 217, 247, 249, 252, 269, 270], "is_periodic_imag": [8, 9, 135, 145], "to_unit_cel": [8, 9, 58, 135, 138, 145, 147, 148, 155, 284], "distance_from_point": [8, 9, 135, 145], "is_ord": [8, 9, 135, 145, 147], "position_atol": [8, 9, 135, 145], "species_str": [8, 9, 135, 144, 145, 204], "get_interpolated_valu": [8, 9, 135, 146, 154, 158, 160, 246, 248], "smear": [8, 9, 79, 104, 135, 146, 160, 161, 173, 174, 175, 177, 188, 189, 190, 191, 215, 231, 233, 248, 251], "lorentzian": [8, 9, 135, 146], "break_bond": [8, 9, 135, 147], "center_of_mass": [8, 9, 135, 147, 148], "from_sit": [8, 9, 135, 147, 252], "get_boxed_structur": [8, 9, 135, 147], "get_centered_molecul": [8, 9, 135, 147], "get_covalent_bond": [8, 9, 135, 147], "get_dist": [8, 9, 135, 147], "get_neighbors_in_shel": [8, 9, 135, 147], "get_sites_in_spher": [8, 9, 135, 147], "get_zmatrix": [8, 9, 135, 147, 173, 201], "nelectron": [8, 9, 135, 147, 173, 228, 230], "spin_multipl": [8, 9, 135, 147, 150, 173, 201, 215], "as_datafram": [8, 9, 135, 147, 173, 240], "distance_matrix": [8, 9, 135, 147, 186, 232], "from_magnetic_spacegroup": [8, 9, 135, 147, 258], "get_all_neighbors_old": [8, 9, 135, 147], "get_all_neighbors_pi": [8, 9, 135, 147], "get_miller_index_from_site_index": [8, 9, 135, 147], "get_neighbor_list": [8, 9, 135, 147], "get_neighbors_old": [8, 9, 135, 147], "get_ord": [8, 9, 135, 147], "get_primitive_structur": [8, 9, 135, 147, 287], "get_reduced_structur": [8, 9, 135, 147], "get_space_group_info": [8, 9, 135, 147], "get_symmetric_neighbor_list": [8, 9, 135, 147], "unset_charg": [8, 9, 135, 147], "append": [8, 9, 12, 13, 94, 111, 135, 139, 147, 150, 173, 174, 177, 188, 189, 190, 203, 206, 272, 287], "perturb": [8, 9, 50, 51, 135, 147, 215, 222, 263, 264, 265], "remove_sit": [8, 9, 63, 135, 147], "remove_speci": [8, 9, 135, 147], "rotate_sit": [8, 9, 135, 147], "set_charge_and_spin": [8, 9, 135, 147], "translate_sit": [8, 9, 135, 147], "periodicneighbor": [8, 9, 135, 147], "distance_toler": [8, 9, 135, 147], "add_oxidation_state_by_el": [8, 9, 135, 147], "add_oxidation_state_by_guess": [8, 9, 135, 147], "add_oxidation_state_by_sit": [8, 9, 135, 147], "add_site_properti": [8, 9, 135, 147, 233], "add_spin_by_el": [8, 9, 135, 147, 233], "add_spin_by_sit": [8, 9, 135, 147], "atomic_numb": [8, 9, 135, 147], "cart_coord": [8, 9, 135, 140, 147, 154, 155, 201], "extract_clust": [8, 9, 135, 147], "get_angl": [8, 9, 135, 147, 267, 269], "get_dihedr": [8, 9, 135, 147], "group_by_typ": [8, 9, 135, 147], "indices_from_symbol": [8, 9, 135, 147], "is_valid": [8, 9, 135, 147], "ntypesp": [8, 9, 135, 147], "num_sit": [8, 9, 90, 135, 147, 168], "remove_oxidation_st": [8, 9, 135, 147], "remove_spin": [8, 9, 135, 147], "replace_speci": [8, 9, 135, 147], "site_properti": [8, 9, 15, 58, 62, 63, 135, 138, 147, 148, 150, 178, 217, 264], "symbol_set": [8, 9, 135, 147], "types_of_speci": [8, 9, 73, 135, 147, 175], "apply_strain": [8, 9, 135, 147], "from_prototyp": [8, 9, 135, 147], "make_supercel": [8, 9, 135, 147, 283, 287], "merge_sit": [8, 9, 135, 147], "scale_lattic": [8, 9, 135, 147], "set_charg": [8, 9, 135, 147, 173, 188, 191], "structureerror": [8, 9, 135, 147], "reconstructiongener": [8, 9, 135, 148], "slabgen_param": [8, 9, 135, 148], "build_slab": [8, 9, 135, 148], "get_unreconstructed_slab": [8, 9, 135, 148], "scale_factor": [8, 9, 17, 135, 148, 149, 186], "shift": [8, 9, 62, 63, 96, 135, 138, 148, 155, 161, 175, 177, 191, 204, 219, 230, 231, 232, 233, 254, 259, 263, 282], "add_adsorbate_atom": [8, 9, 135, 148], "get_orthogonal_c_slab": [8, 9, 135, 148], "get_surface_sit": [8, 9, 135, 148], "get_symmetric_sit": [8, 9, 135, 148], "get_tasker2_slab": [8, 9, 135, 148], "is_polar": [8, 9, 135, 148], "is_symmetr": [8, 9, 135, 148, 149], "symmetrically_add_atom": [8, 9, 135, 148], "symmetrically_remove_atom": [8, 9, 135, 148], "oriented_unit_cel": [8, 9, 62, 135, 148], "parent": [8, 9, 80, 109, 110, 113, 135, 148, 233, 256, 258, 263, 284, 286], "lll_reduc": [8, 9, 135, 148, 263], "center_slab": [8, 9, 15, 135, 138, 148, 263], "slab_scale_factor": [8, 9, 135, 148], "min_slab_s": [8, 9, 15, 47, 135, 148, 263], "min_vac_s": [8, 9, 135, 148, 263], "get_slab": [8, 9, 135, 148], "move_to_other_sid": [8, 9, 135, 148], "nonstoichiometric_symmetrized_slab": [8, 9, 135, 148], "repair_broken_bond": [8, 9, 135, 148], "generate_all_slab": [8, 9, 135, 148], "get_d": [8, 9, 135, 148], "get_slab_region": [8, 9, 135, 148], "get_symmetrically_distinct_miller_indic": [8, 9, 135, 148], "get_symmetrically_equivalent_miller_indic": [8, 9, 135, 148], "hkl_transform": [8, 9, 135, 148], "is_already_analyz": [8, 9, 135, 148], "miller_index_from_sit": [8, 9, 135, 148], "squaretensor": [8, 9, 51, 52, 78, 135, 149], "det": [8, 9, 90, 135, 149], "get_scal": [8, 9, 135, 149], "inv": [8, 9, 135, 149], "is_rot": [8, 9, 135, 149], "polar_decomposit": [8, 9, 135, 149], "principal_invari": [8, 9, 135, 149], "refine_rot": [8, 9, 135, 149], "tran": [8, 9, 77, 96, 101, 135, 148, 149, 285, 286, 287], "average_over_unit_spher": [8, 9, 135, 149], "convert_to_iee": [8, 9, 135, 149], "einsum_sequ": [8, 9, 135, 149], "fit_to_structur": [8, 9, 135, 149], "from_values_indic": [8, 9, 135, 149], "from_voigt": [8, 9, 135, 149], "get_grouped_indic": [8, 9, 135, 149], "get_ieee_rot": [8, 9, 135, 149], "get_symbol_dict": [8, 9, 135, 149], "get_voigt_dict": [8, 9, 135, 149], "is_fit_to_structur": [8, 9, 135, 149], "is_voigt_symmetr": [8, 9, 135, 149], "structure_transform": [8, 9, 135, 149], "voigt": [8, 9, 50, 51, 78, 81, 135, 143, 149, 232], "voigt_symmetr": [8, 9, 135, 149], "tensorcollect": [8, 9, 50, 135, 149], "rank": [8, 9, 17, 50, 53, 135, 137, 143, 149, 176, 232, 263, 264, 266], "tensormap": [8, 9, 135, 149], "item": [8, 9, 34, 55, 90, 96, 135, 148, 149, 160, 176, 179, 180, 189, 190, 204, 210, 219, 224, 232], "get_uvec": [8, 9, 135, 149], "symmetry_reduc": [8, 9, 135, 149], "from_molecul": [8, 9, 135, 150, 173, 215], "get_molecul": [8, 9, 135, 150, 173, 182], "to_displac": [8, 9, 135, 150], "to_posit": [8, 9, 135, 150], "write_xdatcar": [8, 9, 135, 150], "as_base_unit": [8, 9, 135, 151], "supported_unit": [8, 9, 135, 151], "unit_typ": [8, 9, 135, 151], "temp": [8, 9, 66, 133, 134, 135, 151, 156, 161, 164, 263], "get_conversion_factor": [8, 9, 135, 151], "uniterror": [8, 9, 135, 151], "kb": [8, 9, 135, 151, 156, 232], "obj_with_unit": [8, 9, 135, 151], "xcfunc": [8, 9, 135, 141, 178], "abinitixc_to_libxc": [8, 9, 135, 152], "asxc": [8, 9, 135, 152], "defined_alias": [8, 9, 135, 152], "from_abinit_ixc": [8, 9, 135, 152], "from_type_nam": [8, 9, 135, 152], "lattice_rec": [8, 9, 154, 155], "is_spin_polar": [8, 9, 154, 155, 158, 173, 186, 211, 214], "nb_band": [8, 9, 154, 155, 161], "from_old_dict": [8, 9, 154, 155], "get_band_gap": [8, 9, 154, 155], "get_cbm": [8, 9, 154, 155], "get_direct_band_gap": [8, 9, 154, 155], "get_direct_band_gap_dict": [8, 9, 154, 155], "get_kpoint_degeneraci": [8, 9, 154, 155], "get_projection_on_el": [8, 9, 154, 155, 173, 228, 232], "get_projections_on_elements_and_orbit": [8, 9, 154, 155], "get_sym_eq_kpoint": [8, 9, 154, 155], "get_vbm": [8, 9, 154, 155], "bandstructuresymmlin": [8, 9, 154, 155, 156, 161, 232, 255], "apply_scissor": [8, 9, 154, 155], "get_branch": [8, 9, 154, 155, 246, 247], "get_equivalent_kpoint": [8, 9, 154, 155], "lobsterbandstructuresymmlin": [8, 9, 154, 155, 161, 214], "get_reconstructed_band_structur": [8, 9, 154, 155], "check_acc_bzt_band": [8, 9, 154, 156], "get_average_eff_mass": [8, 9, 154, 156], "get_carrier_concentr": [8, 9, 154, 156], "get_complete_do": [8, 9, 104, 154, 156], "get_complexity_factor": [8, 9, 154, 156], "get_conduct": [8, 9, 154, 156], "get_extrem": [8, 9, 154, 156], "get_hall_carrier_concentr": [8, 9, 154, 156], "get_mu_bound": [8, 9, 154, 156], "get_power_factor": [8, 9, 154, 156], "get_seebeck": [8, 9, 154, 156], "get_seebeck_eff_mass": [8, 9, 154, 156], "get_symm_band": [8, 9, 154, 156], "get_thermal_conduct": [8, 9, 154, 156], "get_zt": [8, 9, 154, 156], "parse_cond_and_hal": [8, 9, 154, 156], "parse_intran": [8, 9, 154, 156], "parse_outputtran": [8, 9, 154, 156], "parse_struct": [8, 9, 154, 156], "parse_transdo": [8, 9, 154, 156], "boltztraperror": [8, 9, 154, 156], "boltztraprunn": [8, 9, 154, 156, 161], "nelec": [8, 9, 154, 156, 160], "write_def": [8, 9, 154, 156], "write_energi": [8, 9, 154, 156], "write_input": [8, 9, 154, 156, 173, 187, 196, 199, 203, 206, 228, 230, 233, 287], "write_intran": [8, 9, 154, 156], "write_proj": [8, 9, 154, 156], "write_struct": [8, 9, 154, 156], "compare_sym_band": [8, 9, 154, 156], "eta_from_seebeck": [8, 9, 154, 156], "read_cube_fil": [8, 9, 154, 156, 161], "seebeck_eff_mass_from_carr": [8, 9, 154, 156], "seebeck_eff_mass_from_seebeck_carr": [8, 9, 154, 156], "seebeck_spb": [8, 9, 154, 156], "get_cohp": [8, 9, 154, 158], "get_icohp": [8, 9, 154, 158], "has_antibnd_states_below_efermi": [8, 9, 154, 158], "get_cohp_by_label": [8, 9, 154, 158], "get_orbital_resolved_cohp": [8, 9, 154, 158], "get_summed_cohp_by_label_and_orbital_list": [8, 9, 154, 158], "get_summed_cohp_by_label_list": [8, 9, 154, 158], "are_coop": [8, 9, 154, 158, 161, 213, 214], "are_cobi": [8, 9, 154, 158, 161, 214], "extremum_icohpvalu": [8, 9, 154, 158], "get_icohp_by_label": [8, 9, 154, 158], "get_icohp_dict_by_bondlength": [8, 9, 154, 158], "get_icohp_dict_of_sit": [8, 9, 154, 158], "get_summed_icohp_by_label_list": [8, 9, 154, 158], "icohpvalu": [8, 9, 154, 158], "num_bond": [8, 9, 154, 158], "icohp": [8, 9, 154, 158, 161, 213, 214], "icohpvalue_orbit": [8, 9, 154, 158], "summed_icohp": [8, 9, 154, 158], "summed_orbital_icohp": [8, 9, 154, 158], "get_integrated_cohp_in_energy_rang": [8, 9, 154, 158], "are_collinear": [8, 9, 154, 159], "from_global_moment_and_saxi": [8, 9, 154, 159], "from_moment_relative_to_crystal_ax": [8, 9, 154, 159], "get_00t_magmom_with_xyz_saxi": [8, 9, 154, 159], "get_consistent_set_and_saxi": [8, 9, 154, 159], "get_moment": [8, 9, 154, 159], "get_moment_relative_to_crystal_ax": [8, 9, 154, 159], "get_suggested_saxi": [8, 9, 154, 159], "get_xyz_magmom_with_001_saxi": [8, 9, 154, 159], "global_mo": [8, 9, 154, 159], "have_consistent_saxi": [8, 9, 154, 159], "dx2": [8, 9, 154, 159, 161], "dxy": [8, 9, 154, 159, 161, 232], "dxz": [8, 9, 154, 159, 161], "dyz": [8, 9, 154, 159, 161], "dz2": [8, 9, 154, 159, 161], "f0": [8, 9, 154, 159, 160, 161], "f2": [8, 9, 34, 66, 137, 154, 159, 161, 168, 233, 279], "f3": [8, 9, 154, 159, 161], "f_1": [8, 9, 154, 159, 161], "f_2": [8, 9, 154, 159, 161], "f_3": [8, 9, 154, 159, 161], "orbital_typ": [8, 9, 154, 159], "px": [8, 9, 111, 154, 159, 161, 190, 232], "pz": [8, 9, 152, 154, 159, 161], "orbitaltyp": [8, 9, 154, 159, 160], "pdo": [8, 9, 142, 154, 160, 173, 188, 189, 190, 191, 211, 214, 228, 232, 246, 248], "fp_to_dict": [8, 9, 154, 160], "get_band_cent": [8, 9, 154, 160], "get_band_fil": [8, 9, 154, 160], "get_band_kurtosi": [8, 9, 154, 160], "get_band_skew": [8, 9, 154, 160], "get_band_width": [8, 9, 154, 160], "get_dos_fp": [8, 9, 154, 160], "get_dos_fp_similar": [8, 9, 154, 160], "get_element_do": [8, 9, 154, 160, 161, 246, 248, 251], "get_element_spd_do": [8, 9, 154, 160], "get_hilbert_transform": [8, 9, 154, 160], "get_n_moment": [8, 9, 154, 160], "get_norm": [8, 9, 154, 160], "get_site_do": [8, 9, 154, 160, 246, 248], "get_site_orbital_do": [8, 9, 154, 160], "get_site_spd_do": [8, 9, 154, 160], "get_site_t2g_eg_resolved_do": [8, 9, 154, 160], "get_spd_do": [8, 9, 154, 160, 161], "get_upper_band_edg": [8, 9, 154, 160], "get_cbm_vbm": [8, 9, 154, 160], "get_gap": [8, 9, 154, 160], "get_interpolated_gap": [8, 9, 154, 160], "get_dens": [8, 9, 154, 160], "get_smeared_dens": [8, 9, 154, 160, 246, 248], "get_dop": [8, 9, 154, 160], "get_fermi": [8, 9, 154, 160], "lobstercompletedo": [8, 9, 154, 160, 214], "add_dens": [8, 9, 154, 160], "add_b": [8, 9, 154, 161], "bs_plot_data": [8, 9, 154, 161, 246, 251], "get_tick": [8, 9, 154, 161, 246, 251], "get_ticks_old": [8, 9, 154, 161], "plot_brillouin": [8, 9, 154, 161, 246, 251], "plot_compar": [8, 9, 154, 161, 246, 251], "save_plot": [8, 9, 154, 161, 246, 251, 281, 282], "bsplotterproject": [8, 9, 154, 161], "get_elt_projected_plot": [8, 9, 154, 161], "get_projected_plots_dot": [8, 9, 154, 161], "get_projected_plots_dots_patom_pmorb": [8, 9, 154, 161], "boltztrapplott": [8, 9, 154, 161], "plot_carri": [8, 9, 154, 161], "plot_complexity_factor_mu": [8, 9, 154, 161], "plot_conductivity_dop": [8, 9, 154, 161], "plot_conductivity_mu": [8, 9, 154, 161], "plot_conductivity_temp": [8, 9, 154, 161], "plot_do": [8, 9, 154, 161], "plot_eff_mass_dop": [8, 9, 154, 161], "plot_eff_mass_temp": [8, 9, 154, 161], "plot_hall_carri": [8, 9, 154, 161], "plot_power_factor_dop": [8, 9, 154, 161], "plot_power_factor_mu": [8, 9, 154, 161], "plot_power_factor_temp": [8, 9, 154, 161], "plot_seebeck_dop": [8, 9, 154, 161], "plot_seebeck_eff_mass_mu": [8, 9, 154, 161], "plot_seebeck_mu": [8, 9, 154, 161], "plot_seebeck_temp": [8, 9, 154, 161], "plot_zt_dop": [8, 9, 154, 161], "plot_zt_mu": [8, 9, 154, 161], "plot_zt_temp": [8, 9, 154, 161], "cohpplott": [8, 9, 154, 161], "add_cohp": [8, 9, 154, 161], "add_cohp_dict": [8, 9, 154, 161], "get_cohp_dict": [8, 9, 154, 161], "add_do": [8, 9, 154, 161, 246, 251], "add_dos_dict": [8, 9, 154, 161, 246, 251], "get_dos_dict": [8, 9, 154, 161, 246, 251], "fold_point": [8, 9, 154, 161], "plot_brillouin_zon": [8, 9, 154, 161], "plot_brillouin_zone_from_kpath": [8, 9, 154, 161], "plot_ellipsoid": [8, 9, 154, 161], "plot_fermi_surfac": [8, 9, 154, 161], "plot_label": [8, 9, 154, 161], "plot_lattice_vector": [8, 9, 154, 161], "plot_path": [8, 9, 154, 161], "plot_point": [8, 9, 154, 161], "plot_wigner_seitz": [8, 9, 154, 161], "anioncorrect": [8, 9, 162, 163], "aqueouscorrect": [8, 9, 162, 163], "get_adjust": [8, 9, 162, 163, 168], "process_entri": [8, 9, 162, 163, 168, 287], "compatibilityerror": [8, 9, 162, 163, 168], "correct_entri": [8, 9, 162, 163], "get_correct": [8, 9, 162, 163], "correctionslist": [8, 9, 162, 163], "get_corrections_dict": [8, 9, 162, 163], "get_explanation_dict": [8, 9, 162, 163], "gascorrect": [8, 9, 162, 163], "mitaqueouscompat": [8, 9, 162, 163], "mitcompat": [8, 9, 162, 163], "materialsprojectaqueouscompat": [8, 9, 162, 163], "potcarcorrect": [8, 9, 162, 163], "ucorrect": [8, 9, 162, 163], "computed_entri": [8, 9, 162, 163, 168, 287], "compositionenergyadjust": [8, 9, 162, 164], "correction_per_atom": [8, 9, 162, 164], "correction_uncertainti": [8, 9, 162, 163, 164], "correction_uncertainty_per_atom": [8, 9, 162, 164], "uncorrected_energi": [8, 9, 162, 163, 164], "uncorrected_energy_per_atom": [8, 9, 162, 164], "constantenergyadjust": [8, 9, 162, 164], "from_entri": [8, 9, 105, 106, 110, 162, 164], "from_pd": [8, 9, 162, 164], "gf_sisso": [8, 9, 162, 164], "manualenergyadjust": [8, 9, 162, 164], "temperatureenergyadjust": [8, 9, 162, 164], "correction_calcul": [8, 9, 162], "correctioncalcul": [8, 9, 162, 165], "exp_compound": [8, 9, 162, 165], "calc_compound": [8, 9, 162, 165], "corrections_std_error": [8, 9, 162, 165], "corrections_dict": [8, 9, 162, 165], "compute_correct": [8, 9, 162, 165], "compute_from_fil": [8, 9, 162, 165], "graph_residual_error": [8, 9, 162, 165], "graph_residual_error_per_speci": [8, 9, 162, 165], "make_yaml": [8, 9, 162, 165], "discard": [8, 9, 88, 130, 162, 166, 236, 245], "from_csv": [8, 9, 162, 166], "get_subset_in_chemsi": [8, 9, 162, 166], "ground_stat": [8, 9, 162, 166], "is_ground_st": [8, 9, 162, 166], "remove_non_ground_st": [8, 9, 162, 166], "to_csv": [8, 9, 162, 166, 173, 174, 176], "group_entries_by_composit": [8, 9, 162, 166], "group_entries_by_structur": [8, 9, 162, 166], "exp_entri": [8, 9, 162, 165], "expentri": [8, 9, 162, 167], "materialsprojectdftmixingschem": [8, 9, 162, 168], "display_entri": [8, 9, 162, 168], "get_mixing_state_data": [8, 9, 162, 168], "cod": [8, 9, 169, 172], "get_cod_id": [8, 9, 169, 170], "get_structure_by_formula": [8, 9, 169, 170], "get_structure_by_id": [8, 9, 169, 170], "mpresterror": [8, 9, 169, 171], "tasktyp": [8, 9, 169, 171], "ggau_def": [8, 9, 169, 171], "ggau_lin": [8, 9, 169, 171], "ggau_opt": [8, 9, 169, 171], "ggau_stat": [8, 9, 169, 171], "ggau_static_diel": [8, 9, 169, 171], "ggau_uniform": [8, 9, 169, 171], "gga_def": [8, 9, 169, 171], "gga_lin": [8, 9, 169, 171], "gga_opt": [8, 9, 169, 171], "gga_stat": [8, 9, 169, 171], "gga_static_diel": [8, 9, 169, 171], "gga_uniform": [8, 9, 169, 171], "lda_static_diel": [8, 9, 169, 171], "scan_opt": [8, 9, 169, 171], "get_chunk": [8, 9, 169, 171], "get_snl": [8, 9, 169, 172], "get_snls_with_filt": [8, 9, 169, 172], "get_structures_with_filt": [8, 9, 169, 172], "mandatory_response_field": [8, 9, 169, 172], "refresh_alias": [8, 9, 169, 172], "base_url": [8, 9, 169, 172], "descript": [8, 9, 14, 18, 19, 20, 24, 25, 96, 129, 148, 150, 164, 169, 172, 181, 189, 215, 226, 267, 277], "homepag": [8, 9, 169, 172], "abiobject": [8, 9, 173, 174], "abitim": [8, 9, 173, 174], "netcdf": [8, 9, 147, 173, 174], "lobsterenv": [8, 9, 173, 211], "xtb": [8, 9, 147, 173], "adfinput": [8, 9, 173, 181], "write_fil": [8, 9, 173, 181, 184, 185, 187, 188, 189, 193, 194, 195, 196, 197, 200, 201, 203, 204, 206, 210, 211, 214, 215, 219, 228, 230, 232, 234, 236, 240, 287], "adfinputerror": [8, 9, 173, 181], "adfkei": [8, 9, 173, 181], "add_opt": [8, 9, 173, 181], "add_subkei": [8, 9, 173, 181], "block_kei": [8, 9, 173, 181], "has_opt": [8, 9, 173, 181], "has_subkei": [8, 9, 173, 181], "is_block_kei": [8, 9, 173, 181], "remove_opt": [8, 9, 173, 181], "remove_subkei": [8, 9, 173, 181], "sub_kei": [8, 9, 173, 181], "adfoutput": [8, 9, 173, 181], "adfoutputerror": [8, 9, 173, 181], "adftask": [8, 9, 173, 181], "get_default_basis_set": [8, 9, 173, 181], "get_default_geo": [8, 9, 173, 181], "get_default_scf": [8, 9, 173, 181], "get_default_unit": [8, 9, 173, 181], "get_default_xc": [8, 9, 173, 181], "is_numer": [8, 9, 173, 181], "iterlin": [8, 9, 173, 181], "get_atom": [8, 9, 173, 182, 202], "structure_from_str": [8, 9, 173, 183, 225], "to_str": [8, 9, 173, 174, 177, 179, 183, 201, 218, 235], "babel": [8, 9, 173], "add_hydrogen": [8, 9, 173, 184], "confab_conform": [8, 9, 173, 184], "from_molecule_graph": [8, 9, 173, 184], "gen3d_conform": [8, 9, 173, 184], "localopt": [8, 9, 173, 184], "make3d": [8, 9, 173, 184], "openbabel_mol": [8, 9, 173, 184], "pybel_mol": [8, 9, 173, 184], "pymatgen_mol": [8, 9, 173, 184], "remove_bond": [8, 9, 173, 184], "rotor_conform": [8, 9, 173, 184], "cifblock": [8, 9, 173, 185], "maxlen": [8, 9, 173, 185], "ciffil": [8, 9, 173, 185], "get_bibtex_str": [8, 9, 173, 185], "get_lattic": [8, 9, 173, 185], "get_lattice_no_except": [8, 9, 173, 185], "get_magsymop": [8, 9, 173, 185], "get_symop": [8, 9, 173, 185], "has_error": [8, 9, 173, 185], "parse_magmom": [8, 9, 173, 185], "parse_oxi_st": [8, 9, 173, 185], "str2float": [8, 9, 173, 185], "ngridpt": [8, 9, 173, 186], "from_cub": [8, 9, 173, 186], "from_hdf5": [8, 9, 173, 186], "get_average_along_axi": [8, 9, 173, 186], "get_axis_grid": [8, 9, 173, 186], "get_integrated_diff": [8, 9, 173, 186], "linear_add": [8, 9, 173, 186], "linear_slic": [8, 9, 173, 186], "spin_data": [8, 9, 173, 186], "to_hdf5": [8, 9, 173, 186], "value_at": [8, 9, 173, 186], "get_str": [8, 9, 150, 173, 187, 188, 189, 196, 197, 203, 204, 206, 210, 220, 221, 228, 230, 232], "inputgener": [8, 9, 173, 187, 205, 206, 208, 216, 227, 287], "get_input_set": [8, 9, 173, 187, 203, 205, 206, 216, 227, 287], "from_directori": [8, 9, 173, 187, 196, 199, 203, 208, 216, 228, 230, 231, 287], "fiesta": [8, 9, 173], "bseoutput": [8, 9, 173, 200], "basissetread": [8, 9, 173, 200], "infos_on_basis_set": [8, 9, 173, 200], "set_n_nlmo": [8, 9, 173, 200], "fiestainput": [8, 9, 173, 200], "dump_bse_data_in_gw_run": [8, 9, 173, 200], "dump_tddft_data_in_gw_run": [8, 9, 173, 200], "infos_on_system": [8, 9, 173, 200], "make_full_bse_densities_fold": [8, 9, 173, 200], "set_bse_opt": [8, 9, 173, 200], "set_gw_opt": [8, 9, 173, 200], "set_auxiliary_basis_set": [8, 9, 173, 200], "fiestaoutput": [8, 9, 173, 200], "fiestarun": [8, 9, 173, 200], "bse_run": [8, 9, 173, 200], "nwchem2fiesta": [8, 9, 173, 200], "get_cart_coord": [8, 9, 173, 201], "structures_input_orient": [8, 9, 173, 201], "opt_structur": [8, 9, 173, 201], "mo_coeffici": [8, 9, 173, 201], "cart_forc": [8, 9, 173, 201], "properly_termin": [8, 9, 173, 201], "is_pcm": [8, 9, 173, 201], "is_spin": [8, 9, 173, 201, 228, 232], "stationary_typ": [8, 9, 173, 201], "basis_set": [8, 9, 173, 181, 189, 191, 201, 215, 223], "dieze_tag": [8, 9, 173, 201], "link0": [8, 9, 173, 201], "num_basis_func": [8, 9, 173, 201], "mulliken_charg": [8, 9, 173, 201], "eigenvector": [8, 9, 40, 50, 173, 201, 217, 247, 254], "atom_basis_label": [8, 9, 173, 201], "resum": [8, 9, 173, 201], "standard_orient": [8, 9, 173, 201], "read_scan": [8, 9, 173, 201, 220, 221], "get_scan_plot": [8, 9, 173, 201], "save_scan_plot": [8, 9, 173, 201], "get_spectre_plot": [8, 9, 173, 201], "read_excitation_energi": [8, 9, 173, 201], "save_spectre_plot": [8, 9, 173, 201], "to_input": [8, 9, 173, 201], "read_route_lin": [8, 9, 173, 201], "jarvisatomsadaptor": [8, 9, 173, 202], "lmto": [8, 9, 158, 173], "lmtocopl": [8, 9, 173, 210], "lmtoctrl": [8, 9, 173, 210], "nwinput": [8, 9, 173, 215], "nwinputerror": [8, 9, 173, 215], "get_excitation_spectrum": [8, 9, 173, 215], "parse_tddft": [8, 9, 173, 215], "nwtask": [8, 9, 173, 215], "dft_task": [8, 9, 173, 215], "esp_task": [8, 9, 173, 215], "packmol": [8, 9, 173, 204, 287], "packmolboxgen": [8, 9, 173, 216, 287], "eigvec_to_eigdispl": [8, 9, 173, 217], "get_complete_ph_do": [8, 9, 173, 217], "get_displaced_structur": [8, 9, 173, 217], "get_gruneisen_ph_bs_symm_lin": [8, 9, 173, 217], "get_gruneisenparamet": [8, 9, 173, 217], "get_gs_ph_bs_symm_line_from_dict": [8, 9, 173, 217], "get_ph_bs_symm_lin": [8, 9, 173, 217], "get_ph_bs_symm_line_from_dict": [8, 9, 173, 217], "get_ph_do": [8, 9, 173, 217], "get_phonon_band_structure_from_fc": [8, 9, 173, 217], "get_phonon_band_structure_symm_line_from_fc": [8, 9, 173, 217], "get_phonon_dos_from_fc": [8, 9, 173, 217], "get_phonopy_structur": [8, 9, 173, 217], "get_pmg_structur": [8, 9, 173, 217], "get_structure_from_dict": [8, 9, 173, 217], "get_thermal_displacement_matric": [8, 9, 173, 217], "pwinput": [8, 9, 173, 219], "proc_val": [8, 9, 173, 196, 197, 219, 228, 230], "pwinputerror": [8, 9, 173, 219], "pwoutput": [8, 9, 173, 219], "get_celldm": [8, 9, 173, 219], "lattice_typ": [8, 9, 173, 185, 219], "read_pattern": [8, 9, 173, 188, 190, 219, 220, 224, 228, 232], "get_airss_vers": [8, 9, 173, 225], "get_castep_vers": [8, 9, 173, 225], "get_cut_grid_gmax_fsbc": [8, 9, 173, 225], "get_func_rel_disp": [8, 9, 173, 225], "get_mpgrid_offset_nkpts_spac": [8, 9, 173, 225], "get_pspot": [8, 9, 173, 225], "get_run_start_info": [8, 9, 173, 225], "integrated_absolute_spin_dens": [8, 9, 173, 225], "integrated_spin_dens": [8, 9, 173, 225], "pressur": [8, 9, 54, 66, 85, 173, 225], "seed": [8, 9, 130, 173, 216, 225, 263], "spacegroup_label": [8, 9, 173, 225], "parseerror": [8, 9, 173, 225], "reserror": [8, 9, 173, 225], "resio": [8, 9, 173, 225], "entry_from_fil": [8, 9, 173, 225], "entry_from_str": [8, 9, 173, 225], "entry_to_fil": [8, 9, 173, 225], "entry_to_str": [8, 9, 173, 225], "structure_from_fil": [8, 9, 173, 225], "structure_to_fil": [8, 9, 173, 225], "structure_to_str": [8, 9, 173, 225], "resprovid": [8, 9, 173, 225], "rem": [8, 9, 173, 221, 223, 225], "reswrit": [8, 9, 173, 225], "allocations_kei": [8, 9, 173, 226], "crystal_kei": [8, 9, 173, 226], "data_kei": [8, 9, 173, 226], "flags_kei": [8, 9, 173, 226], "params_kei": [8, 9, 173, 226], "required_param": [8, 9, 173, 226], "to_fil": [8, 9, 173, 203, 204, 226], "templateinputgen": [8, 9, 173, 206, 227], "ik": [8, 9, 173, 234], "is_noncollinear": [8, 9, 173, 234], "nbnd": [8, 9, 173, 234], "ng": [8, 9, 173, 200, 234], "xsf": [8, 9, 147, 173, 235], "xr": [8, 9, 173], "all_molecul": [8, 9, 173, 240], "zeocssr": [8, 9, 173, 241], "zeovoronoixyz": [8, 9, 173, 241], "get_free_sphere_param": [8, 9, 173, 241], "get_high_accuracy_voronoi_nod": [8, 9, 173, 241], "get_voronoi_nod": [8, 9, 173, 241], "linear_assign": [8, 9, 242, 244], "linear_assignment_numpi": [8, 9, 242], "min_cost": [8, 9, 242, 244], "phononbandstructur": [8, 9, 217, 246, 247, 249], "asr_break": [8, 9, 246, 247], "get_nac_eigendisplacements_along_dir": [8, 9, 246, 247], "get_nac_frequencies_along_dir": [8, 9, 246, 247], "has_eigendisplac": [8, 9, 246, 247], "has_imaginary_freq": [8, 9, 246, 247], "has_nac": [8, 9, 217, 246, 247], "min_freq": [8, 9, 246, 247], "as_phononwebsit": [8, 9, 246, 247], "band_reord": [8, 9, 246, 247], "get_equivalent_qpoint": [8, 9, 246, 247], "write_phononwebsit": [8, 9, 246, 247], "eigenvectors_from_displac": [8, 9, 246, 247], "estimate_band_connect": [8, 9, 246, 247], "get_reasonable_repetit": [8, 9, 246, 247], "completephonondo": [8, 9, 161, 217, 246, 248, 251], "phonondo": [8, 9, 217, 246, 248, 249, 251], "cv": [8, 9, 50, 246, 248], "entropi": [8, 9, 97, 163, 164, 232, 246, 248], "helmholtz_free_energi": [8, 9, 246, 248], "ind_zero_freq": [8, 9, 246, 248], "internal_energi": [8, 9, 246, 248], "zero_point_energi": [8, 9, 246, 248], "coth": [8, 9, 246, 248], "gruneisen": [8, 9, 50, 85, 217, 246, 251], "gruneisenparamet": [8, 9, 217, 246, 249, 251], "acoustic_debye_temp": [8, 9, 246, 249], "average_gruneisen": [8, 9, 246, 249], "debye_temp_limit": [8, 9, 246, 249], "debye_temp_phonopi": [8, 9, 246, 249], "phdo": [8, 9, 246, 249], "tdo": [8, 9, 160, 173, 211, 214, 228, 232, 246, 249], "thermal_conductivity_slack": [8, 9, 246, 249], "gruneisenphononbandstructur": [8, 9, 217, 246, 249], "gruneisenphononbandstructuresymmlin": [8, 9, 217, 246, 249, 251], "ir_spectra": [8, 9, 246], "irdielectrictensor": [8, 9, 246, 250], "get_ir_spectra": [8, 9, 246, 250], "get_plott": [8, 9, 246, 250], "get_spectrum": [8, 9, 246, 250], "max_phfreq": [8, 9, 246, 250], "nph_freq": [8, 9, 246, 250], "write_json": [8, 9, 130, 246, 250], "frequnit": [8, 9, 246, 251], "gruneisenphononbsplott": [8, 9, 246, 251], "get_plot_g": [8, 9, 246, 251], "plot_compare_g": [8, 9, 246, 251], "save_plot_g": [8, 9, 246, 251], "show_g": [8, 9, 246, 251], "gruneisenplott": [8, 9, 246, 251], "phononbsplott": [8, 9, 246, 251], "get_proj_plot": [8, 9, 246, 251], "show_proj": [8, 9, 246, 251], "phonondosplott": [8, 9, 161, 246, 251], "thermoplott": [8, 9, 246, 251], "plot_cv": [8, 9, 246, 251], "plot_entropi": [8, 9, 246, 251], "plot_helmholtz_free_energi": [8, 9, 246, 251], "plot_internal_energi": [8, 9, 246, 251], "plot_thermodynamic_properti": [8, 9, 246, 251], "freq_unit": [8, 9, 246, 251], "thermal_displac": [8, 9, 246], "u1u2u3": [8, 9, 246, 252], "ucif": [8, 9, 246, 252], "ustar": [8, 9, 246, 252], "compute_directionality_quality_criterion": [8, 9, 246, 252], "from_ucif": [8, 9, 246, 252], "from_cif_p1": [8, 9, 246, 252], "from_structure_with_site_properties_ucif": [8, 9, 246, 252], "get_full_matrix": [8, 9, 246, 252], "get_reduced_matrix": [8, 9, 246, 252], "ratio_prol": [8, 9, 246, 252], "to_structure_with_site_properties_ucif": [8, 9, 246, 252], "visualize_directionality_quality_criterion": [8, 9, 246, 252], "write_cif": [8, 9, 233, 246, 252], "get_equivalent_atom": [8, 9, 253, 254], "get_pointgroup": [8, 9, 253, 254], "get_rotational_symmetry_numb": [8, 9, 253, 254], "inversion_op": [8, 9, 253, 254], "is_valid_op": [8, 9, 253, 254], "symmetrize_molecul": [8, 9, 253, 254], "pointgroupoper": [8, 9, 253, 254], "sch_symbol": [8, 9, 253, 254], "find_primit": [8, 9, 253, 254], "get_conventional_to_primitive_transformation_matrix": [8, 9, 253, 254], "get_crystal_system": [8, 9, 253, 254], "get_hal": [8, 9, 253, 254], "get_ir_reciprocal_mesh": [8, 9, 253, 254], "get_ir_reciprocal_mesh_map": [8, 9, 253, 254], "get_kpoint_weight": [8, 9, 253, 254], "get_lattice_typ": [8, 9, 253, 254], "get_point_group_oper": [8, 9, 253, 254], "get_point_group_symbol": [8, 9, 253, 254], "get_primitive_standard_structur": [8, 9, 253, 254, 255, 257], "get_refined_structur": [8, 9, 185, 253, 254], "get_space_group_numb": [8, 9, 253, 254], "get_space_group_oper": [8, 9, 253, 254], "get_symmetry_dataset": [8, 9, 253, 254], "is_lau": [8, 9, 253, 254], "spacegroupoper": [8, 9, 253, 254, 261], "are_symmetrically_equival": [8, 9, 253, 254], "cluster_sit": [8, 9, 253, 254], "generate_full_symmop": [8, 9, 253, 254], "iterative_symmetr": [8, 9, 253, 254], "highsymmkpath": [8, 9, 161, 195, 230, 253, 255], "equiv_label": [8, 9, 253, 255], "get_continuous_path": [8, 9, 253, 255], "label_index": [8, 9, 253, 255], "path_length": [8, 9, 253, 255], "path_typ": [8, 9, 253, 255], "symmetry_op": [8, 9, 147, 253, 256], "int_numb": [8, 9, 253, 254, 256], "symmetrygroup": [8, 9, 253, 256, 278], "is_subgroup": [8, 9, 253, 256], "is_supergroup": [8, 9, 253, 256], "in_array_list": [8, 9, 253, 256], "sg_symbol_from_int_numb": [8, 9, 253, 256], "kpath": [8, 9, 161, 212, 253, 255], "kpathbas": [8, 9, 253, 255, 257], "get_kpoint": [8, 9, 233, 253, 255, 257], "rec_lattic": [8, 9, 253, 257], "kpathlatimermunro": [8, 9, 253, 257], "labelpoint": [8, 9, 253, 257], "labelsymbol": [8, 9, 253, 257], "mag_typ": [8, 9, 253, 257], "kpathseek": [8, 9, 253, 257], "kpathsetyawancurtarolo": [8, 9, 253, 257], "bcc": [8, 9, 62, 71, 89, 177, 253, 257], "bctet1": [8, 9, 253, 257], "bctet2": [8, 9, 253, 257], "fcc": [8, 9, 62, 71, 96, 177, 253, 257], "mcl": [8, 9, 253, 257], "mclc1": [8, 9, 253, 257], "mclc2": [8, 9, 253, 257], "mclc3": [8, 9, 253, 257], "mclc4": [8, 9, 253, 257], "mclc5": [8, 9, 253, 257], "orc": [8, 9, 253, 257], "orcc": [8, 9, 253, 257], "orcf1": [8, 9, 253, 257], "orcf2": [8, 9, 253, 257], "orcf3": [8, 9, 253, 257], "orci": [8, 9, 253, 257], "prim": [8, 9, 253, 257], "prim_rec": [8, 9, 253, 257], "rhl1": [8, 9, 253, 257], "rhl2": [8, 9, 253, 257], "tet": [8, 9, 71, 75, 144, 253, 257], "tria": [8, 9, 253, 257], "trib": [8, 9, 253, 257], "maggroup": [8, 9, 147, 253], "magneticspacegroup": [8, 9, 147, 253, 258], "jonesfaithfultransform": [8, 9, 253, 259], "from_origin_shift": [8, 9, 253, 259], "from_transformation_str": [8, 9, 253, 259], "parse_transformation_str": [8, 9, 253, 259], "transform_coord": [8, 9, 253, 259], "transform_lattic": [8, 9, 253, 259], "transform_symmop": [8, 9, 253, 259], "transformation_str": [8, 9, 253, 259], "site_symmetri": [8, 9, 253], "get_shared_symmetry_oper": [8, 9, 253, 260], "get_site_symmetri": [8, 9, 253, 260], "find_equivalent_sit": [8, 9, 253, 261], "addadsorbatetransform": [8, 9, 262, 263], "apply_transform": [8, 9, 262, 263, 264, 265, 266, 287], "is_one_to_mani": [8, 9, 262, 263, 264, 265, 266], "chargebalancetransform": [8, 9, 262, 263], "disorderorderedtransform": [8, 9, 262, 263], "magorderparameterconstraint": [8, 9, 262, 263], "satisfies_constraint": [8, 9, 262, 263], "determine_min_cel": [8, 9, 262, 263], "multiplesubstitutiontransform": [8, 9, 262, 263], "slabtransform": [8, 9, 262, 263], "substitutesurfacesitetransform": [8, 9, 262, 263], "substitutionpredictortransform": [8, 9, 262, 263], "supertransform": [8, 9, 262, 263], "site_transform": [8, 9, 262, 265], "addsitepropertytransform": [8, 9, 262, 264], "insertsitestransform": [8, 9, 262, 264], "partialremovesitestransform": [8, 9, 262, 264, 265], "algo_enumer": [8, 9, 262, 264, 265], "use_multiprocess": [8, 9, 262, 264, 266], "removesitestransform": [8, 9, 262, 264], "replacesitespeciestransform": [8, 9, 262, 264], "translatesitestransform": [8, 9, 262, 264], "standard_transform": [8, 9, 262, 287], "autooxistatedecorationtransform": [8, 9, 94, 262, 265], "chargedcelltransform": [8, 9, 262, 265], "conventionalcelltransform": [8, 9, 262, 265], "deformstructuretransform": [8, 9, 262, 265], "orderdisorderedstructuretransform": [8, 9, 262, 265], "lowest_energy_structur": [8, 9, 262, 265], "oxidationstatedecorationtransform": [8, 9, 262, 265], "oxidationstateremovaltransform": [8, 9, 262, 265], "removespeciestransform": [8, 9, 262, 265, 287], "rotationtransform": [8, 9, 262, 265], "substitutiontransform": [8, 9, 262, 265, 287], "supercelltransform": [8, 9, 262, 265], "from_scaling_factor": [8, 9, 262, 265], "transformation_abc": [8, 9, 262], "abstracttransform": [8, 9, 12, 262, 263, 264, 265, 266], "splineinputerror": [8, 9, 267, 268], "determine_converg": [8, 9, 267, 268], "exponenti": [8, 9, 267, 268], "extrapolate_reciproc": [8, 9, 267, 268], "extrapolate_simple_reciproc": [8, 9, 267, 268], "get_deriv": [8, 9, 267, 268], "get_weight": [8, 9, 267, 268], "id_gener": [8, 9, 267, 268], "multi_curve_fit": [8, 9, 267, 268], "multi_reciprocal_extra": [8, 9, 267, 268], "p0_exponenti": [8, 9, 267, 268], "p0_reciproc": [8, 9, 267, 268], "p0_simple_2reciproc": [8, 9, 267, 268], "p0_simple_4reciproc": [8, 9, 267, 268], "p0_simple_5reciproc": [8, 9, 267, 268], "p0_simple_reciproc": [8, 9, 267, 268], "p0_single_reciproc": [8, 9, 267, 268], "print_and_raise_error": [8, 9, 267, 268], "print_plot_lin": [8, 9, 267, 268], "simple_2reciproc": [8, 9, 267, 268], "simple_4reciproc": [8, 9, 267, 268], "simple_5reciproc": [8, 9, 267, 268], "simple_reciproc": [8, 9, 267, 268], "single_reciproc": [8, 9, 267, 268], "simplex": [8, 9, 80, 267, 269], "bary_coord": [8, 9, 267, 269], "in_simplex": [8, 9, 267, 269], "line_intersect": [8, 9, 267, 269], "point_from_bary_coord": [8, 9, 267, 269], "all_dist": [8, 9, 267, 269], "barycentric_coord": [8, 9, 267, 269], "coord_list_map": [8, 9, 267, 269], "coord_list_mapping_pbc": [8, 9, 267, 269, 270], "find_in_coord_list": [8, 9, 267, 269], "find_in_coord_list_pbc": [8, 9, 267, 269], "get_linear_interpolated_valu": [8, 9, 267, 269], "in_coord_list": [8, 9, 267, 269], "in_coord_list_pbc": [8, 9, 15, 267, 269], "is_coord_subset": [8, 9, 267, 269], "is_coord_subset_pbc": [8, 9, 267, 269, 270], "lattice_points_in_supercel": [8, 9, 267, 269], "pbc_diff": [8, 9, 140, 267, 269], "coord_cython": [8, 9, 267], "inactiveduecreditcollector": [8, 9, 267, 271], "cite": [8, 9, 28, 40, 66, 79, 84, 96, 101, 104, 128, 129, 130, 131, 134, 148, 170, 241, 250, 267, 271, 285], "dcite": [8, 9, 267, 271], "graph_hash": [8, 9, 267], "weisfeiler_lehman_graph_hash": [8, 9, 267, 272], "weisfeiler_lehman_subgraph_hash": [8, 9, 267, 272], "clean_lin": [8, 9, 267, 273], "micro_pyawk": [8, 9, 267, 273], "num": [8, 9, 134, 141, 158, 204, 267], "abs_cap": [8, 9, 267, 274], "make_symmetric_matrix_from_upper_tri": [8, 9, 267, 274], "maxloc": [8, 9, 267, 274], "min_max_index": [8, 9, 267, 274], "minloc": [8, 9, 267, 274], "monoton": [8, 9, 267, 274], "non_decreas": [8, 9, 267, 274], "non_increas": [8, 9, 267, 274], "round_to_sigfig": [8, 9, 267, 274], "strictly_decreas": [8, 9, 267, 274], "strictly_increas": [8, 9, 267, 274], "njit": [8, 9, 267, 275], "add_fig_kwarg": [8, 9, 161, 267, 276], "format_formula": [8, 9, 267, 276], "get_ax3d_fig_plt": [8, 9, 267, 276], "get_ax_fig_plt": [8, 9, 267, 276], "get_axarray_fig_plt": [8, 9, 267, 276], "pretty_plot": [8, 9, 267, 276], "pretty_plot_two_axi": [8, 9, 267, 276], "pretty_polyfit_plot": [8, 9, 267, 276], "van_arkel_triangl": [8, 9, 267, 276], "proven": [8, 9, 70, 267], "email": [8, 9, 47, 267, 277], "parse_author": [8, 9, 267, 277], "historynod": [8, 9, 267, 277], "parse_history_nod": [8, 9, 267, 277], "is_valid_bibtex": [8, 9, 267, 277], "charge_str": [8, 9, 267, 278], "disordered_formula": [8, 9, 267, 278], "formula_double_format": [8, 9, 267, 278], "htmlifi": [8, 9, 267, 278], "latexifi": [8, 9, 267, 278], "latexify_spacegroup": [8, 9, 267, 278], "str_delimit": [8, 9, 267, 278], "stream_has_colour": [8, 9, 267, 278], "transformation_to_str": [8, 9, 267, 278], "unicodeifi": [8, 9, 267, 278], "unicodeify_spacegroup": [8, 9, 267, 278], "unicodeify_speci": [8, 9, 267, 278], "module_dir": [8, 9, 267, 279], "structures_dir": [8, 9, 267, 279], "test_files_dir": [8, 9, 267, 279], "test_structur": [8, 9, 267, 279], "assert_all_clos": [8, 9, 267, 279], "assert_mson": [8, 9, 267, 279], "assert_str_content_equ": [8, 9, 267, 279], "fn": [8, 9, 189, 191, 267, 279], "serialize_with_pickl": [8, 9, 267, 279], "add_spectra": [8, 9, 281, 282], "add_spectrum": [8, 9, 281, 282], "structure_chemview": [8, 9, 281], "quick_view": [8, 9, 281, 283], "multistructuresinteractorstyl": [8, 9, 281, 284], "keypressev": [8, 9, 281, 284], "multistructuresvi": [8, 9, 281, 284], "default_animated_movie_opt": [8, 9, 281, 284], "apply_tag": [8, 9, 281, 284], "display_help": [8, 9, 281, 284], "display_info": [8, 9, 281, 284], "display_warn": [8, 9, 281, 284], "erase_info": [8, 9, 281, 284], "erase_warn": [8, 9, 281, 284], "set_animated_movie_opt": [8, 9, 281, 284], "set_structur": [8, 9, 14, 18, 24, 28, 173, 174, 177, 281, 284], "structureinteractorstyl": [8, 9, 281, 284], "leftbuttonpressev": [8, 9, 281, 284], "leftbuttonreleaseev": [8, 9, 281, 284], "mousemoveev": [8, 9, 281, 284], "structurevi": [8, 9, 281, 284], "add_bond": [8, 9, 14, 18, 19, 23, 281, 284], "add_fac": [8, 9, 281, 284], "add_lin": [8, 9, 281, 284], "add_partial_spher": [8, 9, 281, 284], "add_pick": [8, 9, 281, 284], "add_picker_fix": [8, 9, 281, 284], "add_polyhedron": [8, 9, 281, 284], "add_sit": [8, 9, 14, 18, 19, 23, 281, 284], "add_text": [8, 9, 281, 284], "add_triangl": [8, 9, 281, 284], "orthongonalize_structur": [8, 9, 281, 284], "redraw": [8, 9, 281, 284], "rotate_view": [8, 9, 281, 284], "zoom": [8, 9, 39, 281, 284], "dao": [8, 9], "connected_compon": [9, 14, 18, 19], "connectivity_find": [9, 14, 18, 19], "environment_nod": [9, 14, 18, 19], "structure_connect": [9, 14, 18, 19], "coordination_geometries_fil": [9, 14, 18, 24], "chemenv_strategi": [9, 14, 18, 24, 28], "coordination_geometri": [9, 14, 18, 24, 28], "coordination_geometry_find": [9, 14, 18, 24], "structure_environ": [9, 14, 18, 24, 25], "chemenv_config": [9, 14, 18, 31], "chemenv_error": [9, 14, 18, 31], "coordination_geometry_util": [9, 14, 18, 31], "defs_util": [9, 14, 18, 25, 29, 30, 31], "func_util": [9, 14, 18, 31], "graph_util": [9, 14, 18, 31], "math_util": [9, 14, 18, 31], "scripts_util": [9, 14, 18, 31], "abstractdiffractionpatterncalcul": [9, 14, 42, 43, 44, 45, 46], "scaled_intensity_tol": [9, 14, 42, 43], "two_theta_tol": [9, 14, 42, 43], "get_pattern": [9, 14, 42, 43, 44, 45, 46], "plot_structur": [9, 14, 42, 43], "show_plot": [9, 14, 42, 43, 276], "diffractionpattern": [9, 14, 42, 43], "get_unique_famili": [9, 14, 42, 43], "ndcalcul": [9, 14, 42, 44], "bragg_angl": [9, 14, 42, 45], "cell_intens": [9, 14, 42, 45], "cell_scattering_factor": [9, 14, 42, 45], "electron_scattering_factor": [9, 14, 42, 45], "generate_point": [9, 14, 42, 45], "get_first_point": [9, 14, 42, 45], "get_interplanar_angl": [9, 14, 42, 45], "get_interplanar_spac": [9, 14, 42, 45], "get_plot_2d": [9, 14, 42, 45], "get_plot_2d_concis": [9, 14, 42, 45], "get_plot_coeff": [9, 14, 42, 45], "get_posit": [9, 14, 42, 45], "get_s2": [9, 14, 42, 45], "is_parallel": [9, 14, 42, 45], "normalized_cell_intens": [9, 14, 42, 45], "tem_dot": [9, 14, 42, 45], "wavelength_rel": [9, 14, 42, 45], "x_ray_factor": [9, 14, 42, 45], "zone_axis_filt": [9, 14, 42, 45], "available_radi": [9, 14, 42, 46], "compliancetensor": [9, 14, 49, 50], "cahill_thermalcond": [9, 14, 49, 50], "clarke_thermalcond": [9, 14, 49, 50], "compliance_tensor": [9, 14, 49, 50], "directional_elastic_mod": [9, 14, 49, 50], "directional_poisson_ratio": [9, 14, 49, 50], "from_independent_strain": [9, 14, 49, 50], "from_pseudoinvers": [9, 14, 49, 50], "g_reuss": [9, 14, 49, 50], "g_voigt": [9, 14, 49, 50], "g_vrh": [9, 14, 49, 50], "get_structure_property_dict": [9, 14, 49, 50], "green_kristoffel": [9, 14, 49, 50], "homogeneous_poisson": [9, 14, 49, 50], "k_reuss": [9, 14, 49, 50], "k_voigt": [9, 14, 49, 50], "k_vrh": [9, 14, 49, 50], "long_v": [9, 14, 49, 50], "property_dict": [9, 14, 49, 50], "snyder_ac": [9, 14, 49, 50], "snyder_opt": [9, 14, 49, 50], "snyder_tot": [9, 14, 49, 50], "trans_v": [9, 14, 49, 50], "universal_anisotropi": [9, 14, 49, 50], "y_mod": [9, 14, 49, 50], "elastictensorexpans": [9, 14, 49, 50], "calculate_stress": [9, 14, 49, 50], "energy_dens": [9, 14, 49, 50], "from_diff_fit": [9, 14, 49, 50], "get_compliance_expans": [9, 14, 49, 50], "get_effective_ec": [9, 14, 49, 50], "get_ggt": [9, 14, 49, 50], "get_gruneisen_paramet": [9, 14, 49, 50], "get_heat_capac": [9, 14, 49, 50], "get_stability_criteria": [9, 14, 49, 50], "get_strain_from_stress": [9, 14, 49, 50], "get_symmetric_wallace_tensor": [9, 14, 49, 50], "get_tgt": [9, 14, 49, 50], "get_wallace_tensor": [9, 14, 49, 50], "get_yield_stress": [9, 14, 49, 50], "omega": [9, 14, 49, 50, 58, 78, 191], "thermal_expansion_coeff": [9, 14, 49, 50], "nthorderelastictensor": [9, 14, 49, 50], "gpa_to_ev_a3": [9, 14, 49, 50], "diff_fit": [9, 14, 49, 50], "find_eq_stress": [9, 14, 49, 50], "generate_pseudo": [9, 14, 49, 50], "get_diff_coeff": [9, 14, 49, 50], "get_strain_state_dict": [9, 14, 49, 50], "get_symbol_list": [9, 14, 49, 50], "raise_error_if_unphys": [9, 14, 49, 50], "deform": [9, 14, 49, 51, 52, 72, 73, 171, 265], "apply_to_structur": [9, 14, 49, 51], "from_index_amount": [9, 14, 49, 51], "get_perturbed_indic": [9, 14, 49, 51], "green_lagrange_strain": [9, 14, 49, 51], "is_independ": [9, 14, 49, 51], "deformedstructureset": [9, 14, 49, 51], "from_deform": [9, 14, 49, 51], "get_deformation_matrix": [9, 14, 49, 51], "von_mises_strain": [9, 14, 49, 51, 67, 69], "convert_strain_to_deform": [9, 14, 49, 51], "dev_principal_invari": [9, 14, 49, 52], "deviator_stress": [9, 14, 49, 52], "mean_stress": [9, 14, 49, 52], "piola_kirchoff_1": [9, 14, 49, 52], "piola_kirchoff_2": [9, 14, 49, 52], "von_mis": [9, 14, 49, 52], "energytrend": [9, 14, 57, 58], "endpoints_minima": [9, 14, 57, 58], "max_spline_jump": [9, 14, 57, 58], "spline": [9, 14, 34, 57, 58, 100, 161, 217, 268], "from_outcars_and_structur": [9, 14, 57, 58], "get_lattice_quanta": [9, 14, 57, 58], "get_pelecs_and_pion": [9, 14, 57, 58], "get_polarization_chang": [9, 14, 57, 58], "get_polarization_change_norm": [9, 14, 57, 58], "get_same_branch_polarization_data": [9, 14, 57, 58], "same_branch_splin": [9, 14, 57, 58], "polarizationlattic": [9, 14, 57, 58], "get_nearest_sit": [9, 14, 57, 58], "calc_ion": [9, 14, 57, 58], "get_total_ionic_dipol": [9, 14, 57, 58], "zval_dict_from_potcar": [9, 14, 57, 58], "grainboundari": [9, 14, 61, 62], "bottom_grain": [9, 14, 61, 62], "coincid": [9, 14, 61, 62, 70, 147, 263], "sigma_from_site_prop": [9, 14, 61, 62], "top_grain": [9, 14, 61, 62], "grainboundarygener": [9, 14, 61, 62], "enum_possible_plane_cub": [9, 14, 61, 62], "enum_sigma_cub": [9, 14, 61, 62], "enum_sigma_hex": [9, 14, 61, 62], "enum_sigma_ort": [9, 14, 61, 62], "enum_sigma_rho": [9, 14, 61, 62], "enum_sigma_tet": [9, 14, 61, 62], "gb_from_paramet": [9, 14, 61, 62], "get_ratio": [9, 14, 61, 62], "get_rotation_angle_from_sigma": [9, 14, 61, 62, 263], "get_trans_mat": [9, 14, 61, 62], "reduce_mat": [9, 14, 61, 62], "slab_from_csl": [9, 14, 61, 62], "vec_to_surfac": [9, 14, 61, 62], "fix_pbc": [9, 14, 61, 62], "symm_group_cub": [9, 14, 61, 62], "coherentinterfacebuild": [9, 14, 67, 68], "get_interfac": [9, 14, 67, 68], "from_2d_to_3d": [9, 14, 67, 68], "get_2d_transform": [9, 14, 67, 68], "get_rot_3d_for_2d": [9, 14, 67, 68], "generate_surface_vector": [9, 14, 67, 69], "substratematch": [9, 14, 67, 69], "elastic_energi": [9, 14, 67, 69], "film_mil": [9, 14, 67, 68, 69], "from_zsl": [9, 14, 67, 69], "ground_state_energi": [9, 14, 67, 69], "substrate_mil": [9, 14, 67, 68, 69], "generate_sl_transformation_set": [9, 14, 67, 70], "get_equiv_transform": [9, 14, 67, 70], "zslmatch": [9, 14, 67, 69, 70], "film_sl_vector": [9, 14, 67, 69, 70], "film_transform": [9, 14, 67, 69, 70], "film_vector": [9, 14, 67, 69, 70], "match_area": [9, 14, 67, 70], "match_transform": [9, 14, 67, 70], "substrate_sl_vector": [9, 14, 67, 69, 70], "substrate_transform": [9, 14, 67, 69, 70], "substrate_vector": [9, 14, 67, 69, 70], "fast_norm": [9, 14, 67, 70], "get_factor": [9, 14, 67, 70], "is_same_vector": [9, 14, 67, 70], "reduce_vector": [9, 14, 67, 70], "rel_angl": [9, 14, 67, 70], "rel_strain": [9, 14, 67, 70], "vec_angl": [9, 14, 67, 70], "vec_area": [9, 14, 67, 70], "collinearmagneticstructureanalyz": [9, 14, 72, 73], "get_exchange_group_info": [9, 14, 72, 73], "get_ferromagnetic_structur": [9, 14, 72, 73], "get_nonmagnetic_structur": [9, 14, 72, 73], "get_structure_with_only_magnetic_atom": [9, 14, 72, 73], "get_structure_with_spin": [9, 14, 72, 73], "is_magnet": [9, 14, 72, 73], "magnetic_species_and_magmom": [9, 14, 72, 73], "matches_ord": [9, 14, 72, 73], "number_of_magnetic_sit": [9, 14, 72, 73], "number_of_unique_magnetic_sit": [9, 14, 72, 73], "types_of_magnetic_speci": [9, 14, 72, 73], "magneticdeform": [9, 14, 72, 73], "magneticstructureenumer": [9, 14, 72, 73], "available_strategi": [9, 14, 72, 73], "afm": [9, 14, 72, 73, 74, 175, 177], "fim": [9, 14, 72, 73], "nm": [9, 14, 72, 73, 96, 134, 201, 226], "unknown": [9, 14, 29, 72, 73, 75, 95], "overwritemagmommod": [9, 14, 72, 73], "replace_al": [9, 14, 72, 73], "respect_sign": [9, 14, 72, 73], "respect_zero": [9, 14, 72, 73], "magnetic_deform": [9, 14, 72, 73], "heisenbergmapp": [9, 14, 72, 74], "estimate_exchang": [9, 14, 72, 74], "get_exchang": [9, 14, 72, 74], "get_heisenberg_model": [9, 14, 72, 74], "get_interaction_graph": [9, 14, 72, 74], "get_low_energy_ord": [9, 14, 72, 74], "get_mft_temperatur": [9, 14, 72, 74], "heisenbergmodel": [9, 14, 72, 74, 134], "heisenbergscreen": [9, 14, 72, 74], "screened_structur": [9, 14, 72, 74], "screened_energi": [9, 14, 72, 74], "jahntelleranalyz": [9, 14, 72, 75], "get_analysi": [9, 14, 72, 75], "get_analysis_and_structur": [9, 14, 72, 75], "get_magnitude_of_effect_from_speci": [9, 14, 72, 75], "get_magnitude_of_effect_from_spin_config": [9, 14, 72, 75], "is_jahn_teller_act": [9, 14, 72, 75], "mu_so": [9, 14, 72, 75], "tag_structur": [9, 14, 72, 75], "absorption_coeffici": [9, 14, 87, 88], "get_dir_indir_gap": [9, 14, 87, 88], "matrix_eigv": [9, 14, 87, 88], "parse_dielectric_data": [9, 14, 87, 88], "to_matrix": [9, 14, 87, 88], "get_dopants_from_shannon_radii": [9, 14, 91, 92], "get_dopants_from_substitution_prob": [9, 14, 91, 92], "substitutionpredictor": [9, 14, 91, 93], "composition_predict": [9, 14, 91, 93], "list_predict": [9, 14, 91, 93], "get_allowed_speci": [9, 14, 91, 94], "pred_from_comp": [9, 14, 91, 94], "pred_from_list": [9, 14, 91, 94], "pred_from_structur": [9, 14, 91, 94], "dlsvolumepredictor": [9, 14, 91, 95], "get_predicted_structur": [9, 14, 91, 95], "rlsvolumepredictor": [9, 14, 91, 95], "socspillag": [9, 14, 98, 99], "isclos": [9, 14, 98, 99, 149], "orth": [9, 14, 98, 99], "overlap_so_spinpol": [9, 14, 98, 99], "site_weighted_spectrum": [9, 14, 102, 103], "all_nninfo": [9, 14, 71], "cn_nninfo": [9, 14, 71], "cn_weight": [9, 14, 25, 71], "delta_sigma_iso": [9, 14, 78], "sigma_iso": [9, 14, 78], "zeta": [9, 14, 78], "kappa": [9, 14, 78, 156], "sigma_11": [9, 14, 78], "sigma_22": [9, 14, 78], "sigma_33": [9, 14, 78], "get_max_capgrav": [9, 105, 106, 107], "get_max_capvol": [9, 105, 106, 107], "get_removals_int_oxid": [9, 105, 106, 107], "max_ion_insert": [9, 105, 106, 107], "max_ion_remov": [9, 105, 106, 107], "is_redox_active_intercal": [9, 105, 106, 107], "abstractelectrod": [9, 105, 106, 108, 109, 110, 111], "voltage_pair": [9, 105, 106, 108, 109, 110], "working_ion": [9, 105, 106, 107, 108], "working_ion_entri": [9, 105, 106, 108, 109, 110], "framework_formula": [9, 105, 106, 108, 109, 110], "get_average_voltag": [9, 105, 106, 108], "get_capacity_grav": [9, 105, 106, 108], "get_capacity_vol": [9, 105, 106, 108], "get_energy_dens": [9, 105, 106, 108], "get_specific_energi": [9, 105, 106, 108], "get_sub_electrod": [9, 105, 106, 108, 109, 110], "max_delta_volum": [9, 105, 106, 108], "max_voltag": [9, 105, 106, 108, 110], "max_voltage_step": [9, 105, 106, 108], "min_voltag": [9, 105, 106, 108, 110], "normalization_mass": [9, 105, 106, 108], "normalization_volum": [9, 105, 106, 108], "num_step": [9, 105, 106, 108], "x_charg": [9, 105, 106, 108], "x_discharg": [9, 105, 106, 108], "abstractvoltagepair": [9, 105, 106, 108, 109, 110], "voltag": [9, 45, 80, 83, 88, 105, 106, 108, 109, 110, 111], "mah": [9, 105, 106, 107, 108, 109, 110], "mass_charg": [9, 105, 106, 108, 109, 110], "mass_discharg": [9, 105, 106, 108, 109, 110], "vol_charg": [9, 105, 106, 108, 109, 110], "vol_discharg": [9, 105, 106, 108, 109, 110], "frac_charg": [9, 105, 106, 108, 109, 110], "frac_discharg": [9, 105, 106, 108, 109, 110], "from_composition_and_entri": [9, 105, 106, 109], "from_composition_and_pd": [9, 105, 106, 109], "initial_comp": [9, 105, 106, 109], "initial_comp_formula": [9, 105, 106, 109], "is_super_electrod": [9, 105, 106, 109], "conversionvoltagepair": [9, 105, 106, 109], "entries_charg": [9, 105, 106, 109], "entries_discharg": [9, 105, 106, 109], "from_step": [9, 105, 106, 109], "as_dict_legaci": [9, 105, 106, 110], "from_dict_legaci": [9, 105, 106, 110], "fully_charged_entri": [9, 105, 106, 110], "fully_discharged_entri": [9, 105, 106, 110], "get_all_entri": [9, 105, 106, 110], "get_max_inst": [9, 105, 106, 110], "get_max_muo2": [9, 105, 106, 110], "get_min_inst": [9, 105, 106, 110], "get_min_muo2": [9, 105, 106, 110], "get_unstable_entri": [9, 105, 106, 110], "insertionvoltagepair": [9, 105, 106, 110], "entry_charg": [9, 105, 106, 110], "entry_discharg": [9, 105, 106, 110], "add_electrod": [9, 105, 106, 111], "get_plot_data": [9, 105, 106, 111], "abstractdron": [9, 105, 112, 113, 114], "get_valid_path": [9, 105, 112, 113], "gaussiantocomputedentrydron": [9, 105, 112, 113], "simplevasptocomputedentrydron": [9, 105, 112, 113], "vasptocomputedentrydron": [9, 105, 112, 113, 287], "borgqueen": [9, 105, 112, 114, 287], "get_data": [9, 105, 112, 114, 287], "load_data": [9, 105, 112, 114, 287], "parallel_assimil": [9, 105, 112, 114], "save_data": [9, 105, 112, 114, 287], "serial_assimil": [9, 105, 112, 114], "order_assimil": [9, 105, 112, 114], "abivar": [9, 140, 147, 173, 174, 175, 177], "to_abivar": [9, 173, 174, 175], "nspden": [9, 173, 174, 175], "nspinor": [9, 173, 174, 175], "nsppol": [9, 173, 174, 175], "electronsalgorithm": [9, 173, 174, 175], "exchamiltonian": [9, 173, 174, 175], "inclvkb": [9, 173, 174, 175], "use_cg": [9, 173, 174, 175], "use_direct_diago": [9, 173, 174, 175], "use_haydock": [9, 173, 174, 175], "hilberttransform": [9, 173, 174, 175], "ksampl": [9, 173, 174, 175], "automatic_dens": [9, 173, 174, 175, 228, 230], "explicit_path": [9, 173, 174, 175], "gamma_cent": [9, 173, 174, 175], "gamma_onli": [9, 173, 174, 175], "is_homogen": [9, 173, 174, 175], "monkhorst_automat": [9, 173, 174, 175, 228, 230], "path_from_structur": [9, 173, 174, 175], "ksamplingmod": [9, 173, 174, 175], "modeldielectricfunct": [9, 173, 174, 175], "ppmodel": [9, 173, 174, 175], "as_ppmodel": [9, 173, 174, 175], "get_noppmodel": [9, 173, 174, 175], "ppmodelmod": [9, 173, 174, 175], "farid": [9, 173, 174, 175], "godbi": [9, 173, 174, 175], "hybersten": [9, 173, 174, 175], "linden": [9, 173, 174, 175], "noppmodel": [9, 173, 174, 175], "relaxationmethod": [9, 173, 174, 175], "ionmov_default": [9, 173, 174, 175], "optcell_default": [9, 173, 174, 175], "atoms_and_cel": [9, 173, 174, 175], "atoms_onli": [9, 173, 174, 175], "move_atom": [9, 173, 174, 175], "move_cel": [9, 173, 174, 175], "screen": [9, 53, 55, 74, 173, 174, 175, 191], "use_hilbert": [9, 173, 174, 175], "selfenergi": [9, 173, 174, 175], "gwcalctyp": [9, 173, 174, 175], "symsigma": [9, 173, 174, 175], "use_ppmodel": [9, 173, 174, 175], "as_smear": [9, 173, 174, 175], "nosmear": [9, 173, 174, 175], "spinmod": [9, 173, 174, 175, 177], "as_spinmod": [9, 173, 174, 175], "contract": [9, 173, 174, 175, 188, 189, 215, 266, 272, 279], "lattice_from_abivar": [9, 173, 174, 175], "species_by_znucl": [9, 173, 174, 175], "structure_from_abivar": [9, 147, 173, 174, 175], "structure_to_abivar": [9, 173, 174, 175], "abinittim": [9, 173, 174, 176], "cpuwall_histogram": [9, 173, 174, 176], "get_sect": [9, 173, 174, 176, 188, 189], "get_valu": [9, 173, 174, 176, 180], "names_and_valu": [9, 173, 174, 176], "ncpu": [9, 166, 173, 174, 176], "order_sect": [9, 173, 174, 176], "pie": [9, 173, 174, 176], "scatter_hist": [9, 173, 174, 176], "sum_sect": [9, 173, 174, 176], "to_tabl": [9, 173, 174, 176, 179], "totabl": [9, 173, 174, 176], "abinittimerpars": [9, 173, 174, 176], "begin_tag": [9, 173, 174, 176], "end_tag": [9, 173, 174, 176], "peffici": [9, 173, 174, 176], "plot_al": [9, 173, 174, 176], "plot_effici": [9, 173, 174, 176], "plot_pi": [9, 173, 174, 176], "plot_stacked_hist": [9, 173, 174, 176], "section_nam": [9, 173, 174, 176], "summar": [9, 29, 50, 63, 173, 174, 176, 179], "timer": [9, 173, 174, 176], "walk": [9, 113, 173, 174, 176, 209], "abinittimerparsererror": [9, 173, 174, 176], "abinittimersect": [9, 173, 174, 176], "numeric_field": [9, 173, 174, 176], "str_field": [9, 173, 174, 176], "fake": [9, 173, 174, 176], "to_csvlin": [9, 173, 174, 176], "to_tupl": [9, 173, 174, 176], "paralleleffici": [9, 173, 174, 176], "bad_sect": [9, 173, 174, 176], "good_sect": [9, 173, 174, 176], "abstractinput": [9, 173, 174, 177], "pop_var": [9, 173, 174, 177], "remove_var": [9, 173, 174, 177], "set_var": [9, 173, 174, 177], "set_vars_ifnotin": [9, 173, 174, 177], "var": [9, 173, 174, 177, 192], "basicabinitinput": [9, 173, 174, 177], "add_abiobject": [9, 173, 174, 177], "isnc": [9, 173, 174, 177, 179], "ispaw": [9, 173, 174, 177, 179], "new_with_var": [9, 173, 174, 177], "pop_irdvar": [9, 173, 174, 177], "pop_toler": [9, 173, 174, 177], "set_com": [9, 173, 174, 177], "set_gamma_sampl": [9, 173, 174, 177], "set_kmesh": [9, 173, 174, 177], "set_kpath": [9, 173, 174, 177], "set_spin_mod": [9, 173, 174, 177], "basicabinitinputerror": [9, 173, 174, 177], "basicmultidataset": [9, 173, 174, 177], "addnew_from": [9, 173, 174, 177], "from_input": [9, 173, 174, 177], "has_same_structur": [9, 173, 174, 177], "ndtset": [9, 173, 174, 177], "replicate_input": [9, 173, 174, 177], "split_dataset": [9, 173, 174, 177], "shiftmod": [9, 173, 174, 177], "gammacent": [9, 173, 174, 177], "monkhorstpack": [9, 173, 174, 177], "onesymmetr": [9, 173, 174, 177], "from_object": [9, 173, 174, 177], "as_structur": [9, 173, 174, 177], "calc_shiftk": [9, 173, 174, 177], "ebands_input": [9, 173, 174, 177], "gs_input": [9, 173, 174, 177], "ion_ioncell_relax_input": [9, 173, 174, 177], "num_valence_electron": [9, 173, 174, 177], "etsf_read": [9, 173, 174, 178], "chemical_symbol": [9, 173, 174, 178], "read_abinit_hdr": [9, 173, 174, 178], "read_abinit_xcfunc": [9, 173, 174, 178], "typeidx_from_symbol": [9, 173, 174, 178], "no_default": [9, 173, 174, 178], "netcdfread": [9, 173, 174, 178], "print_tre": [9, 173, 174, 178], "read_dimvalu": [9, 173, 174, 178], "read_kei": [9, 173, 174, 178], "read_valu": [9, 173, 174, 178], "read_vari": [9, 173, 174, 178], "read_varnam": [9, 173, 174, 178], "walk_tre": [9, 173, 174, 178], "as_etsfread": [9, 173, 174, 178], "as_ncread": [9, 173, 174, 178], "structure_from_ncdata": [9, 173, 174, 178], "abinithead": [9, 173, 174, 178, 179], "abinitpseudo": [9, 173, 174, 179], "z_val": [9, 173, 174, 179], "l_local": [9, 173, 174, 179], "l_max": [9, 173, 174, 179], "supports_soc": [9, 173, 174, 179], "ncabinithead": [9, 173, 174, 179], "fhi_head": [9, 173, 174, 179], "gth_header": [9, 173, 174, 179], "hgh_header": [9, 173, 174, 179], "oncvpsp_head": [9, 173, 174, 179], "tm_header": [9, 173, 174, 179], "ncabinitpseudo": [9, 173, 174, 179], "nlcc_radiu": [9, 173, 174, 179], "ncpseudo": [9, 173, 174, 179], "has_nlcc": [9, 173, 174, 179], "rcore": [9, 173, 174, 179, 230], "pawabinithead": [9, 173, 174, 179], "paw_head": [9, 173, 174, 179], "pawabinitpseudo": [9, 173, 174, 179], "paw_radiu": [9, 173, 174, 179], "pawpseudo": [9, 173, 174, 179], "pawxmlsetup": [9, 173, 174, 179], "ae_core_dens": [9, 173, 174, 179], "ae_partial_wav": [9, 173, 174, 179], "plot_dens": [9, 173, 174, 179], "plot_projector": [9, 173, 174, 179], "plot_wav": [9, 173, 174, 179], "projector_funct": [9, 173, 174, 179], "pseudo_core_dens": [9, 173, 174, 179], "pseudo_partial_wav": [9, 173, 174, 179], "yield_fig": [9, 173, 174, 179], "as_pseudo": [9, 173, 174, 179], "as_tmpfil": [9, 173, 174, 179], "basenam": [9, 173, 174, 179, 180], "compute_md5": [9, 173, 174, 179], "djrepo_path": [9, 173, 174, 179], "has_dojo_report": [9, 173, 174, 179], "has_hint": [9, 173, 174, 179], "hint_for_accuraci": [9, 173, 174, 179], "md5": [9, 173, 174, 179, 230], "open_pspsfil": [9, 173, 174, 179], "pseudopars": [9, 173, 174, 179], "read_ppdesc": [9, 173, 174, 179], "scan_directori": [9, 173, 174, 179], "pseudoparsererror": [9, 173, 174, 179], "pseudot": [9, 173, 174, 177, 179], "all_combinations_for_el": [9, 173, 174, 179], "allnc": [9, 173, 174, 179], "allpaw": [9, 173, 174, 179], "as_tabl": [9, 173, 174, 179], "get_pseudos_for_structur": [9, 173, 174, 179], "is_complet": [9, 173, 174, 179], "print_tabl": [9, 173, 174, 179], "pseudo_with_symbol": [9, 173, 174, 179], "pseudos_with_symbol": [9, 173, 174, 179], "select_famili": [9, 173, 174, 179], "select_row": [9, 173, 174, 179], "select_symbol": [9, 173, 174, 179], "sort_by_z": [9, 173, 174, 179], "with_dojo_report": [9, 173, 174, 179], "zlist": [9, 173, 174, 179], "radialfunct": [9, 173, 174, 179], "l2str": [9, 173, 174, 179], "str2l": [9, 173, 174, 179], "straceback": [9, 173, 174, 179], "inputvari": [9, 173, 174, 180], "format_list": [9, 173, 174, 180], "format_list2d": [9, 173, 174, 180], "format_scalar": [9, 173, 174, 180], "atomicmetadata": [9, 173, 188, 189], "alias_nam": [9, 173, 188, 189], "softmatch": [9, 173, 188, 189], "band_structur": [9, 173, 188, 189, 190, 232], "from_kpoint": [9, 173, 188, 189], "basisfil": [9, 173, 188, 189], "basisinfo": [9, 173, 188, 189], "cc": [9, 107, 108, 173, 188, 189], "pc": [9, 173, 188, 189], "molopt": [9, 173, 188, 189, 191], "admm": [9, 173, 188, 189, 191], "lri": [9, 173, 188, 189], "xc": [9, 141, 152, 173, 181, 188, 189, 191, 215], "brokensymmetri": [9, 173, 188, 189], "from_el": [9, 173, 188, 189], "cp2kinput": [9, 173, 188, 189, 191], "from_lin": [9, 173, 188, 189], "datafil": [9, 75, 173, 188, 189], "dftplusu": [9, 173, 188, 189], "diagon": [9, 55, 58, 78, 130, 156, 161, 173, 175, 188, 189, 191, 263], "e_density_cub": [9, 173, 188, 189], "forceev": [9, 173, 188, 189], "gaussiantypeorbitalbasisset": [9, 173, 188, 189], "nset": [9, 173, 188, 189], "lmax": [9, 173, 179, 188, 189], "lmin": [9, 173, 188, 189], "nshell": [9, 173, 188, 189], "expon": [9, 25, 71, 133, 156, 173, 188, 189, 263], "get_keyword": [9, 173, 188, 189], "nexp": [9, 173, 188, 189], "gthpotenti": [9, 173, 188, 189], "n_elec": [9, 173, 188, 189], "r_loc": [9, 173, 188, 189], "nexp_ppl": [9, 173, 188, 189], "c_exp_ppl": [9, 173, 188, 189], "nprj": [9, 173, 188, 189], "nprj_ppnl": [9, 173, 188, 189], "hprj_ppnl": [9, 173, 188, 189], "from_sect": [9, 173, 188, 189], "keywordlist": [9, 173, 188, 189], "kpoint_set": [9, 173, 188, 189], "ldo": [9, 173, 188, 189, 190, 191, 196, 198, 199], "mo_cub": [9, 173, 188, 189], "mgrid": [9, 173, 188, 189], "orbitaltransform": [9, 173, 188, 189], "potentialfil": [9, 173, 188, 189], "potentialinfo": [9, 173, 188, 189], "potential_typ": [9, 173, 188, 189, 191, 228, 230], "nlcc": [9, 173, 179, 188, 189], "scf": [9, 173, 175, 177, 181, 188, 189, 190, 191, 199, 201, 215, 219, 223, 233, 287], "by_path": [9, 173, 188, 189], "inc": [9, 173, 188, 189, 286], "safeset": [9, 173, 188, 189], "setitem": [9, 173, 188, 189], "sectionlist": [9, 173, 188, 189], "subsi": [9, 173, 188, 189], "v_hartree_cub": [9, 173, 188, 189], "xc_function": [9, 152, 173, 188, 189, 191], "calculation_typ": [9, 173, 188, 190], "cp2k_version": [9, 173, 188, 190, 191], "is_hubbard": [9, 173, 188, 190, 228, 232], "is_molecul": [9, 173, 188, 190], "num_warn": [9, 173, 188, 190], "parse_atomic_kind_info": [9, 173, 188, 190], "parse_bandstructur": [9, 173, 188, 190], "parse_cell_param": [9, 173, 188, 190], "parse_chi_tensor": [9, 173, 188, 190], "parse_cp2k_param": [9, 173, 188, 190], "parse_dft_param": [9, 173, 188, 190], "parse_do": [9, 173, 188, 190, 232, 233], "parse_energi": [9, 173, 188, 190], "parse_fil": [9, 173, 188, 190, 228, 232], "parse_forc": [9, 173, 188, 190], "parse_global_param": [9, 173, 188, 190], "parse_gtensor": [9, 173, 188, 190], "parse_hirshfeld": [9, 173, 188, 190], "parse_homo_lumo": [9, 173, 188, 190], "parse_hyperfin": [9, 173, 188, 190], "parse_initial_structur": [9, 173, 188, 190], "parse_input": [9, 173, 188, 190], "parse_ionic_step": [9, 173, 188, 190], "parse_mo_eigenvalu": [9, 173, 188, 190], "parse_mulliken": [9, 173, 188, 190], "parse_nmr_shift": [9, 173, 188, 190], "parse_opt_step": [9, 173, 188, 190], "parse_overlap_condit": [9, 173, 188, 190], "parse_plus_u_param": [9, 173, 188, 190], "parse_qs_param": [9, 173, 188, 190], "parse_raman": [9, 173, 188, 190], "parse_scf_opt": [9, 173, 188, 190], "parse_scf_param": [9, 173, 188, 190], "parse_stress": [9, 173, 188, 190], "parse_structur": [9, 173, 188, 190], "parse_tddfpt": [9, 173, 188, 190], "parse_tim": [9, 173, 188, 190], "parse_total_numb": [9, 173, 188, 190], "project_nam": [9, 173, 188, 189, 190, 191], "ran_successfulli": [9, 173, 188, 190], "read_table_pattern": [9, 173, 188, 190, 220, 224, 228, 232], "run_typ": [9, 156, 168, 173, 181, 188, 189, 190, 228, 232], "parse_energy_fil": [9, 173, 188, 190], "parse_pdo": [9, 173, 188, 190], "celloptset": [9, 173, 188, 191], "cp2kvalidationerror": [9, 173, 188, 191], "dftset": [9, 173, 188, 191], "activate_epr": [9, 173, 188, 191], "activate_fast_minim": [9, 173, 188, 191], "activate_hybrid": [9, 173, 188, 191], "activate_hyperfin": [9, 173, 188, 191], "activate_loc": [9, 173, 188, 191], "activate_mot": [9, 173, 188, 191], "activate_nmr": [9, 173, 188, 191], "activate_nonperiod": [9, 173, 188, 191], "activate_polar": [9, 173, 188, 191], "activate_robust_minim": [9, 173, 188, 191], "activate_spinspin": [9, 173, 188, 191], "activate_tddfpt": [9, 173, 188, 191], "activate_vdw_potenti": [9, 173, 188, 191], "activate_very_strict_minim": [9, 173, 188, 191], "create_subsi": [9, 173, 188, 191], "get_basis_and_potenti": [9, 173, 188, 191], "get_cutoff_from_basi": [9, 173, 188, 191], "get_xc_funct": [9, 173, 188, 191], "modify_dft_print_it": [9, 173, 188, 191], "print_bandstructur": [9, 173, 188, 191], "print_do": [9, 173, 188, 191], "print_e_dens": [9, 173, 188, 191], "print_forc": [9, 173, 188, 191], "print_hirshfeld": [9, 173, 188, 191], "print_ldo": [9, 173, 188, 191], "print_mo": [9, 173, 188, 191], "print_mo_cub": [9, 173, 188, 191], "print_mulliken": [9, 173, 188, 191], "print_pdo": [9, 173, 188, 191], "print_v_hartre": [9, 173, 188, 191], "write_basis_set_fil": [9, 173, 188, 191], "write_potential_fil": [9, 173, 188, 191], "hybridcelloptset": [9, 173, 188, 191], "hybridrelaxset": [9, 173, 188, 191], "hybridstaticset": [9, 173, 188, 191], "relaxset": [9, 173, 188, 191], "staticset": [9, 173, 188, 191], "chunk": [9, 171, 173, 188, 192], "get_truncated_coulomb_cutoff": [9, 173, 188, 192], "get_unique_site_indic": [9, 173, 188, 192], "natural_kei": [9, 173, 188, 192], "postprocessor": [9, 173, 188, 189, 192], "preprocessor": [9, 173, 188, 192], "excitinginput": [9, 173, 194, 195], "lockxyz": [9, 173, 194, 195], "bohr2ang": [9, 173, 194, 195], "write_etre": [9, 173, 194, 195], "write_str": [9, 173, 194, 195], "atoms_string_from_fil": [9, 173, 196, 197], "cluster_from_fil": [9, 173, 196, 197], "get_lin": [9, 173, 196, 197], "feffparsererror": [9, 173, 196, 197], "from_cif_fil": [9, 173, 196, 197], "header_string_from_fil": [9, 173, 196, 197], "structure_symmetri": [9, 173, 196, 197], "pot_dict_from_str": [9, 173, 196, 197], "pot_string_from_fil": [9, 173, 196, 197], "get_absorbing_atom_symbol_index": [9, 173, 196, 197], "get_atom_map": [9, 173, 196, 197], "eel": [9, 173, 196, 198, 199], "atomic_background": [9, 173, 196, 198], "fine_structur": [9, 173, 196, 198], "total_spectrum": [9, 173, 196, 198], "charge_transfer_from_fil": [9, 173, 196, 198], "charge_transfer_to_str": [9, 173, 196, 198], "xmu": [9, 116, 173, 196, 198], "calc": [9, 156, 173, 189, 191, 196, 198, 233, 287], "e_fermi": [9, 158, 173, 196, 198], "material_formula": [9, 173, 196, 198], "mu": [9, 62, 80, 103, 156, 173, 196, 198, 263], "mu0": [9, 173, 196, 198], "relative_energi": [9, 173, 196, 198], "wavenumb": [9, 103, 173, 196, 198], "abstractfeffinputset": [9, 173, 196, 199], "feffdictset": [9, 173, 196, 199], "mpeelsdictset": [9, 173, 196, 199], "mpelnesset": [9, 173, 196, 199], "mpexafsset": [9, 173, 196, 199], "mpexelfsset": [9, 173, 196, 199], "mpxanesset": [9, 173, 196, 199], "disassembl": [9, 173, 203, 204], "from_ff_and_topologi": [9, 173, 203, 204], "from_lammpsdata": [9, 173, 203, 204], "parse_xyz": [9, 173, 203, 204], "forcefield": [9, 173, 184, 203, 204], "force_field": [9, 173, 203, 204, 205, 206], "lammpsbox": [9, 173, 203, 204, 207], "get_box_shift": [9, 173, 203, 204], "to_lattic": [9, 173, 203, 204], "set_charge_atom": [9, 173, 203, 204], "set_charge_atom_typ": [9, 173, 203, 204], "topologi": [9, 76, 173, 203, 204, 206, 208], "from_bond": [9, 173, 203, 204], "lattice_2_lmpbox": [9, 173, 203, 204], "baselammpsgener": [9, 173, 203, 205], "calc_typ": [9, 173, 203, 205, 208], "keep_stag": [9, 173, 203, 205, 206, 208], "lammpsminim": [9, 173, 203, 205], "atom_styl": [9, 173, 203, 204, 205], "read_data": [9, 173, 203, 204, 205, 206], "lammpsinputfil": [9, 173, 203, 206, 208], "add_command": [9, 173, 203, 206], "add_stag": [9, 173, 203, 206], "contains_command": [9, 173, 203, 206], "get_arg": [9, 173, 203, 206], "merge_stag": [9, 173, 203, 206], "ncomment": [9, 173, 203, 206], "nstage": [9, 173, 203, 206], "remove_command": [9, 173, 203, 206], "remove_stag": [9, 173, 203, 206], "rename_stag": [9, 173, 203, 206], "set_arg": [9, 173, 203, 206], "stages_nam": [9, 173, 203, 206], "lammpsrun": [9, 173, 203, 206], "template_dir": [9, 173, 203, 206], "lammpstemplategen": [9, 173, 203, 206], "lammpsdump": [9, 173, 203, 207], "parse_lammps_dump": [9, 173, 203, 207], "parse_lammps_log": [9, 173, 203, 207], "lammpsinputset": [9, 173, 203, 205, 208], "lammpsrunn": [9, 173, 203, 209], "polym": [9, 173, 203, 209], "availablekeyword": [9, 173, 211, 212], "boolean_keyword": [9, 173, 211, 212], "float_keyword": [9, 173, 211, 212], "listkeyword": [9, 173, 211, 212], "string_keyword": [9, 173, 211, 212], "get_all_possible_basis_funct": [9, 173, 211, 212], "get_basi": [9, 173, 211, 212], "standard_calculations_from_vasp_fil": [9, 173, 211, 212], "write_incar": [9, 173, 211, 212], "write_kpoint": [9, 173, 211, 212], "write_poscar_with_standard_primit": [9, 173, 211, 212], "write_lobsterin": [9, 173, 211, 212], "get_all_possible_basis_combin": [9, 173, 211, 212], "icohpneighborsinfo": [9, 173, 211, 213], "central_isit": [9, 173, 211, 213], "list_icohp": [9, 158, 173, 211, 213], "n_bond": [9, 173, 211, 213], "total_icohp": [9, 173, 211, 213], "lobsterlightstructureenviron": [9, 173, 211, 213], "from_lobst": [9, 173, 211, 213], "uniquely_determines_coordination_environ": [9, 14, 18, 24, 25, 29, 173, 211, 213], "lobsterneighbor": [9, 173, 211, 213], "anion_typ": [9, 173, 211, 213], "get_anion_typ": [9, 173, 211, 213], "get_info_cohps_to_neighbor": [9, 173, 211, 213], "get_info_icohps_between_neighbor": [9, 173, 211, 213], "get_info_icohps_to_neighbor": [9, 173, 211, 213], "get_light_structure_environ": [9, 173, 211, 213], "plot_cohps_of_neighbor": [9, 173, 211, 213], "has_good_quality_check_occupied_band": [9, 173, 211, 214], "has_good_quality_maxdevi": [9, 173, 211, 214], "get_structure_with_charg": [9, 173, 211, 214], "cohpcar": [9, 158, 160, 173, 211, 213, 214], "tdensiti": [9, 173, 211, 214], "itdens": [9, 173, 211, 214], "get_bandstructur": [9, 173, 211, 214], "get_structure_with_total_grosspop": [9, 173, 211, 214], "lobsterout": [9, 173, 211, 214], "get_doc": [9, 173, 211, 214], "get_structure_with_site_potenti": [9, 173, 211, 214], "get_volumetricdata_dens": [9, 173, 211, 214], "get_volumetricdata_imaginari": [9, 173, 211, 214], "get_volumetricdata_r": [9, 173, 211, 214], "set_volumetric_data": [9, 173, 211, 214], "get_orb_from_str": [9, 173, 211, 214], "almo_templ": [9, 173, 220, 221], "cdft_templat": [9, 173, 220, 221], "find_sect": [9, 173, 220, 221], "from_multi_jobs_fil": [9, 173, 220, 221], "geom_opt_templ": [9, 173, 220, 221], "molecule_templ": [9, 173, 220, 221], "multi_job_str": [9, 173, 220, 221], "nbo_templ": [9, 173, 220, 221], "opt_templ": [9, 173, 220, 221], "pcm_nonels_templ": [9, 173, 220, 221], "pcm_templat": [9, 173, 220, 221], "plots_templ": [9, 173, 220, 221], "read_almo": [9, 173, 220, 221], "read_cdft": [9, 173, 220, 221], "read_geom_opt": [9, 173, 220, 221], "read_molecul": [9, 173, 220, 221], "read_nbo": [9, 173, 220, 221], "read_opt": [9, 173, 220, 221], "read_pcm": [9, 173, 220, 221], "read_pcm_nonel": [9, 173, 220, 221], "read_plot": [9, 173, 220, 221], "read_rem": [9, 173, 220, 221], "read_smx": [9, 173, 220, 221], "read_solv": [9, 173, 220, 221], "read_svp": [9, 173, 220, 221], "read_vdw": [9, 173, 220, 221], "rem_templ": [9, 173, 220, 221], "scan_templ": [9, 173, 220, 221], "smx_templat": [9, 173, 220, 221], "solvent_templ": [9, 173, 220, 221], "svp_templat": [9, 173, 220, 221], "van_der_waals_templ": [9, 173, 220, 221], "write_multi_job_fil": [9, 173, 220, 221], "multiple_outputs_from_fil": [9, 173, 220, 222], "check_for_structure_chang": [9, 173, 220, 222], "get_percentag": [9, 173, 220, 222], "jump_to_head": [9, 173, 220, 222], "nbo_pars": [9, 173, 220, 222], "parse_hybridization_charact": [9, 173, 220, 222], "parse_hyperbond": [9, 173, 220, 222], "parse_natural_popul": [9, 173, 220, 222], "parse_perturbation_energi": [9, 173, 220, 222], "z_int": [9, 173, 220, 222], "forceset": [9, 173, 220, 223], "freqset": [9, 173, 220, 223], "optset": [9, 173, 220, 223], "pesscanset": [9, 173, 220, 223], "singlepointset": [9, 173, 220, 223], "transitionstateset": [9, 173, 220, 223], "lower_and_check_uniqu": [9, 173, 220, 224], "process_parsed_hess": [9, 173, 220, 224], "process_parsed_coord": [9, 173, 220, 224], "process_parsed_fock_matrix": [9, 173, 220, 224], "read_matrix_pattern": [9, 173, 220, 224], "get_help": [9, 173, 228, 229], "get_incar_tag": [9, 173, 228, 229], "print_help": [9, 173, 228, 229], "print_jupyter_help": [9, 173, 228, 229], "badincarwarn": [9, 173, 228, 230], "check_param": [9, 173, 228, 230], "automatic_density_by_vol": [9, 173, 228, 230], "automatic_gamma_dens": [9, 173, 228, 230], "automatic_linemod": [9, 173, 228, 230], "gamma_automat": [9, 173, 228, 230], "supported_mod": [9, 173, 228, 230, 233], "kpoints_supported_mod": [9, 173, 228, 230], "line_mod": [9, 173, 212, 228, 230, 232], "l": [9, 29, 40, 43, 62, 66, 71, 80, 96, 101, 108, 131, 134, 140, 144, 147, 148, 159, 161, 164, 170, 173, 179, 189, 191, 204, 228, 230, 252, 254, 285, 286], "occ": [9, 173, 228, 230], "orbitaldescript": [9, 173, 228, 230], "rcut": [9, 173, 228, 230], "rcut2": [9, 173, 228, 230], "type2": [9, 173, 228, 230], "true_nam": [9, 173, 228, 230], "predictor_corrector": [9, 173, 228, 230], "predictor_corrector_preambl": [9, 173, 228, 230], "natom": [9, 173, 175, 207, 226, 228, 230, 232], "set_temperatur": [9, 173, 228, 230], "site_symbol": [9, 173, 228, 230, 232], "functional_choic": [9, 173, 228, 230], "set_symbol": [9, 173, 228, 230], "potcarsingl": [9, 173, 228, 230], "atomic_no": [9, 173, 228, 230], "electron_configur": [9, 173, 228, 230], "from_symbol_and_funct": [9, 173, 228, 230], "functional_class": [9, 173, 228, 230], "functional_dir": [9, 173, 228, 230], "functional_tag": [9, 173, 228, 230], "get_potcar_file_hash": [9, 173, 228, 230], "get_potcar_hash": [9, 173, 228, 230], "get_sha256_file_hash": [9, 173, 228, 230], "identify_potcar": [9, 173, 228, 230], "parse_funct": [9, 173, 228, 230], "verify_potcar": [9, 173, 228, 230], "unknownpotcarwarn": [9, 173, 228, 230], "dielectricfunctioncalcul": [9, 173, 228, 231], "cder": [9, 173, 228, 231, 232], "cder_imag": [9, 173, 228, 231, 232], "cder_real": [9, 173, 228, 231, 232], "cshift": [9, 173, 228, 231], "delta": [9, 23, 34, 37, 54, 71, 140, 173, 175, 221, 228, 231], "eig": [9, 156, 161, 173, 228, 231, 232], "from_vasp_object": [9, 173, 228, 231], "get_epsilon": [9, 173, 228, 231], "kweight": [9, 173, 228, 231], "nedo": [9, 173, 228, 231, 233], "plot_weighted_transition_data": [9, 173, 228, 231], "delta_func": [9, 173, 228, 231], "delta_methfessel_paxton": [9, 173, 228, 231], "epsilon_imag": [9, 173, 228, 231], "get_delta": [9, 14, 18, 31, 37, 173, 228, 231], "get_step": [9, 173, 228, 231], "kramers_kronig": [9, 173, 228, 231], "step_func": [9, 173, 228, 231], "step_methfessel_paxton": [9, 173, 228, 231], "net_magnet": [9, 173, 228, 232], "dynmat": [9, 173, 228, 232], "get_phonon_frequ": [9, 173, 228, 232], "ndisp": [9, 173, 228, 232], "nspec": [9, 173, 228, 232], "occu_tol": [9, 173, 228, 232], "nelect": [9, 128, 129, 173, 228, 232, 233], "nkpt": [9, 173, 199, 219, 228, 232], "kpoints_weight": [9, 173, 228, 232], "eigenvalue_band_properti": [9, 173, 228, 232], "get_alpha": [9, 173, 228, 232], "electronic_step": [9, 173, 228, 232], "all_energi": [9, 173, 228, 232], "chemical_shield": [9, 173, 228, 232], "unsym_cs_tensor": [9, 173, 228, 232], "cs_g0_contribut": [9, 173, 228, 232], "cs_core_contribut": [9, 173, 228, 232], "efg": [9, 173, 190, 224, 228, 232, 233], "is_stop": [9, 173, 228, 232], "run_stat": [9, 173, 228, 232], "elastic_tensor": [9, 173, 228, 232], "drift": [9, 173, 228, 230, 232], "ngf": [9, 173, 228, 232], "has_onsite_density_matric": [9, 173, 228, 232], "lcalcpol": [9, 173, 228, 232, 233], "total_mag": [9, 173, 228, 232], "read_avg_core_poten": [9, 173, 228, 232], "read_chemical_shield": [9, 173, 228, 232], "read_core_state_eigen": [9, 173, 228, 232], "read_correct": [9, 173, 228, 232], "read_cs_core_contribut": [9, 173, 228, 232], "read_cs_g0_contribut": [9, 173, 228, 232], "read_cs_raw_symmetrized_tensor": [9, 173, 228, 232], "read_elastic_tensor": [9, 173, 228, 232], "read_electrostatic_potenti": [9, 173, 228, 232], "read_fermi_contact_shift": [9, 173, 228, 232], "read_freq_dielectr": [9, 173, 228, 232], "read_igpar": [9, 173, 228, 232], "read_internal_strain_tensor": [9, 173, 228, 232], "read_lcalcpol": [9, 173, 228, 232], "read_lepsilon": [9, 173, 228, 232], "read_lepsilon_ion": [9, 173, 228, 232], "read_neb": [9, 173, 228, 232], "read_nmr_efg": [9, 173, 228, 232], "read_nmr_efg_tensor": [9, 173, 228, 232], "read_onsite_density_matric": [9, 173, 228, 232], "read_piezo_tensor": [9, 173, 228, 232], "read_pseudo_zv": [9, 173, 228, 232], "get_occup": [9, 173, 228, 232], "unconvergedvaspwarn": [9, 173, 228, 232], "vaspparsererror": [9, 173, 228, 232], "ionic_step": [9, 173, 228, 232], "ido": [9, 173, 228, 232], "projected_eigenvalu": [9, 173, 228, 232], "projected_magnetis": [9, 173, 228, 232], "other_dielectr": [9, 173, 228, 232], "nionic_step": [9, 173, 228, 232], "force_const": [9, 173, 217, 228, 232, 238], "normalmode_eigenv": [9, 173, 228, 232], "normalmode_eigenvec": [9, 173, 228, 232], "md_data": [9, 173, 228, 232], "actual_kpoint": [9, 173, 228, 232], "actual_kpoints_weight": [9, 173, 228, 232], "atomic_symbol": [9, 173, 228, 232], "potcar_symbol": [9, 163, 173, 212, 228, 232, 233], "calculate_efermi": [9, 173, 228, 232], "complete_dos_norm": [9, 173, 228, 232], "converged_electron": [9, 173, 228, 232], "converged_ion": [9, 173, 228, 232], "epsilon_ion": [9, 173, 228, 232], "epsilon_stat": [9, 173, 228, 232], "epsilon_static_wolf": [9, 173, 228, 232], "get_band_structur": [9, 173, 228, 232], "get_computed_entri": [9, 173, 228, 232], "get_potcar": [9, 173, 228, 232], "get_trajectori": [9, 173, 228, 232], "hubbard": [9, 163, 173, 190, 228, 232, 233, 287], "optical_absorption_coeff": [9, 173, 228, 232], "update_potcar_spec": [9, 173, 228, 232], "nspin": [9, 173, 228, 231, 232], "nkpoint": [9, 173, 228, 231, 232], "me_real": [9, 173, 228, 232], "me_imag": [9, 173, 228, 232], "vasp_typ": [9, 173, 228, 232], "nk": [9, 173, 228, 232], "encut": [9, 173, 228, 230, 232, 233], "vol": [9, 26, 54, 90, 107, 108, 156, 173, 228, 232, 259], "band_energi": [9, 173, 228, 232], "gpoint": [9, 173, 228, 232], "evaluate_wavefunc": [9, 173, 228, 232], "fft_mesh": [9, 173, 228, 232], "get_parchg": [9, 173, 228, 232], "write_unk": [9, 173, 228, 232], "from_binari": [9, 173, 228, 232], "from_format": [9, 173, 228, 232], "get_orbital_derivative_between_st": [9, 173, 228, 232], "concaten": [9, 173, 176, 190, 221, 228, 232, 272], "get_adjusted_fermi_level": [9, 173, 228, 232], "get_band_structure_from_vasp_multiple_branch": [9, 173, 228, 232], "badinputsetwarn": [9, 173, 228, 233], "calculate_ng": [9, 173, 228, 233], "estimate_nband": [9, 173, 228, 233], "potcar_funct": [9, 173, 228, 230, 233], "mitmdset": [9, 173, 228, 233], "mitnebset": [9, 173, 228, 233], "mpabsorptionset": [9, 173, 228, 233], "from_prev_calc": [9, 173, 228, 233], "override_from_prev_calc": [9, 173, 228, 233], "mphsebsset": [9, 173, 228, 233], "mphserelaxset": [9, 173, 228, 233], "mpmdset": [9, 173, 228, 233], "mpmetalrelaxset": [9, 173, 228, 233], "mpnmrset": [9, 173, 228, 233], "mpstaticset": [9, 173, 228, 233], "mvlelasticset": [9, 173, 228, 233], "mvlgbset": [9, 173, 228, 233], "mvlgwset": [9, 173, 228, 233], "mvlscanrelaxset": [9, 173, 228, 233], "batch_write_input": [9, 173, 228, 233], "get_structure_from_prev_run": [9, 173, 228, 233], "get_valid_magmom_struct": [9, 173, 228, 233], "get_vasprun_outcar": [9, 173, 228, 233], "next_num_with_prime_factor": [9, 173, 228, 233], "primes_less_than": [9, 173, 228, 233], "standardize_structur": [9, 173, 228, 233], "crestinput": [9, 173, 237, 238], "constrains_templ": [9, 173, 237, 238], "write_input_fil": [9, 173, 237, 238], "crestoutput": [9, 173, 237, 239], "balanc": [11, 55, 86, 93, 94, 107, 108, 137, 139, 263], "decor": [11, 17, 71, 73, 75, 92, 94, 128, 137, 147, 148, 151, 161, 233, 263, 264, 265, 276], "neutral": [11, 17, 132, 144, 204, 263], "strict_compar": 11, "AND": [11, 144, 148, 191, 232, 233, 272], "exclud": [11, 28, 80, 82, 147, 148, 163, 165, 168, 177, 179, 209, 230, 233, 276, 284], "classmethod": [11, 12, 15, 20, 23, 25, 26, 28, 29, 30, 32, 34, 36, 37, 50, 51, 53, 55, 58, 62, 63, 66, 69, 74, 76, 77, 78, 80, 81, 83, 86, 90, 94, 96, 97, 100, 104, 109, 110, 113, 128, 130, 137, 138, 139, 140, 143, 144, 145, 147, 148, 149, 150, 151, 152, 155, 158, 159, 160, 164, 166, 167, 175, 176, 177, 179, 181, 185, 186, 187, 189, 200, 201, 204, 206, 207, 208, 210, 212, 213, 215, 216, 219, 221, 225, 226, 229, 230, 231, 232, 233, 235, 247, 248, 249, 250, 256, 259, 261, 277, 279], "dct": [11, 25, 26, 30, 53, 63, 77, 80, 96, 113, 145, 155, 158, 247, 249, 261, 287], "exact": [11, 76, 77, 90, 147, 148, 166, 191, 230, 233, 256], "1e": [11, 15, 17, 29, 30, 43, 50, 51, 62, 71, 73, 80, 82, 83, 86, 96, 99, 101, 133, 137, 140, 145, 147, 148, 149, 156, 161, 185, 189, 191, 232, 233, 243, 244, 247, 254, 255, 256, 257, 263, 269, 274, 278], "existing_structur": 11, "specie_and_min_dist_dict": 11, "awai": [11, 71, 79, 140, 145, 147, 279], "sp1": [11, 90, 136], "sp2": [11, 90, 136], "max_dist": [11, 29, 30], "predefin": [11, 23, 179], "second": [11, 13, 26, 29, 34, 37, 45, 50, 52, 62, 63, 70, 71, 76, 77, 78, 80, 89, 90, 96, 100, 128, 130, 136, 140, 143, 144, 147, 149, 150, 155, 156, 158, 160, 161, 168, 172, 176, 177, 181, 186, 199, 201, 215, 216, 217, 231, 232, 247, 249, 254, 265, 269, 270, 284], "undergo": [12, 50, 51], "histori": [12, 13, 264, 265, 266, 277], "other_paramet": [12, 13], "structure_filt": [12, 13], "structurefilt": [12, 13], "tell": [12, 62, 148, 155, 156, 158, 214], "return_altern": 12, "clear_redo": [12, 13], "stipul": [12, 89, 170], "boolean": [12, 13, 45, 71, 75, 76, 80, 89, 90, 136, 140, 144, 155, 158, 161, 166, 179, 185, 195, 200, 213, 214, 230, 232, 233, 269, 277], "redo": [12, 13], "cif_str": [12, 13, 185], "occupancy_toler": [12, 185], "poscar_str": [12, 13], "snl": [12, 84, 277], "vasp_input_set": [12, 13, 233], "undon": [12, 13, 163], "indexerror": [12, 13], "oldest": [12, 13], "alter": [12, 13, 63, 204, 233, 255], "isn": 12, "output_dir": [12, 13, 156, 189, 199, 206, 230, 233], "create_directori": [12, 13], "extend_collect": 13, "transformedstructurecollect": 13, "__init__": [13, 50, 51, 52, 62, 78, 81, 82, 104, 146, 147, 148, 149, 163, 170, 187, 221, 226, 233], "poscar_filenam": [13, 96], "transformed_structur": [13, 287], "ncore": [13, 233], "multiprocess": [13, 90, 113, 114], "my": 13, "awesom": 13, "tstructs_or_transmut": 13, "overload": [13, 187, 208, 264, 265], "subfold": [13, 233], "callabl": [13, 63, 124, 144, 146, 147, 190, 219, 224, 232, 233, 263, 273], "include_cif": [13, 233], "lambda": [13, 45, 46, 62, 93, 144, 156, 161, 179, 201, 287], "program": [13, 71, 127, 128, 129, 189, 190, 197, 232, 233, 273, 285], "connectedcompon": [14, 18, 19, 20], "compute_period": [14, 18, 19, 20], "compute_periodicity_all_simple_paths_algorithm": [14, 18, 19, 20], "compute_periodicity_cycle_basi": [14, 18, 19, 20], "coordination_sequ": [14, 18, 19, 20], "elastic_centered_graph": [14, 18, 19, 20], "from_graph": [14, 18, 19, 20], "is_0d": [14, 18, 19, 20], "is_1d": [14, 18, 19, 20], "is_2d": [14, 18, 19, 20], "is_3d": [14, 18, 19, 20], "is_period": [14, 18, 19, 20], "make_supergraph": [14, 18, 19, 20], "periodicity_vector": [14, 18, 19, 20], "show_graph": [14, 18, 19, 20], "draw_network": [14, 18, 19, 20], "connectivityfind": [14, 18, 19, 21], "get_structure_connect": [14, 18, 19, 21], "setup_paramet": [14, 18, 19, 21, 24, 28, 31, 36], "abstractenvironmentnod": [14, 18, 19, 22], "ce_nnbces_nbces_ligand": [14, 18, 19, 22], "default_extens": [14, 18, 19, 22], "ligands_arrang": [14, 18, 19, 22], "neighboring_c": [14, 18, 19, 22], "neighboring_coordination_environ": [14, 18, 19, 22], "neighbors_ligands_arrang": [14, 18, 19, 22], "number_of_ligands_for_each_neighboring_c": [14, 18, 19, 22], "number_of_ligands_for_each_neighboring_coordination_environ": [14, 18, 19, 22], "number_of_neighboring_c": [14, 18, 19, 22], "number_of_neighboring_coordination_environ": [14, 18, 19, 22], "atom_symbol": [14, 18, 19, 22, 29, 197, 235], "ce_symbol": [14, 18, 19, 22, 24, 26, 29], "everything_equ": [14, 18, 19, 22], "isit": [14, 18, 19, 22, 23, 25, 28, 29, 30, 213], "mp_symbol": [14, 18, 19, 22, 24, 26, 28, 29], "environmentnod": [14, 18, 19, 22], "get_environment_nod": [14, 18, 19, 22], "structureconnect": [14, 18, 19, 21, 23], "environment_subgraph": [14, 18, 19, 23], "get_connected_compon": [14, 18, 19, 23], "print_link": [14, 18, 19, 23], "setup_atom_environment_subgraph": [14, 18, 19, 23], "setup_atom_environments_subgraph": [14, 18, 19, 23], "setup_connectivity_descript": [14, 18, 19, 23], "setup_environment_subgraph": [14, 18, 19, 23], "setup_environments_subgraph": [14, 18, 19, 23], "get_delta_imag": [14, 18, 19, 23], "abstractchemenvstrategi": [14, 18, 24, 25], "default_symmetry_measure_typ": [14, 18, 24, 25], "strategy_descript": [14, 18, 24, 25], "strategy_info_field": [14, 18, 24, 25], "strategy_opt": [14, 18, 24, 25, 32], "equivalent_site_index_and_transform": [14, 18, 24, 25], "get_site_ce_fractions_and_neighbor": [14, 18, 24, 25], "get_site_coordination_environ": [14, 18, 24, 25], "get_site_coordination_environments_fract": [14, 18, 24, 25], "get_site_neighbor": [14, 18, 24, 25], "prepare_symmetri": [14, 18, 24, 25], "set_opt": [14, 18, 24, 25], "set_structure_environ": [14, 18, 24, 25], "setup_opt": [14, 18, 24, 25], "symmetry_measure_typ": [14, 18, 24, 25, 29, 39], "additionalconditionint": [14, 18, 24, 25], "allowed_valu": [14, 18, 24, 25], "anglecutofffloat": [14, 18, 24, 25], "anglenbsetweight": [14, 18, 24, 25], "short_nam": [14, 18, 24, 25], "angle_sum": [14, 18, 24, 25], "angle_sumn": [14, 18, 24, 25], "angleplateaunbsetweight": [14, 18, 24, 25], "cnbiasnbsetweight": [14, 18, 24, 25], "explicit": [14, 18, 24, 25, 26, 28, 144, 175, 184, 185, 230, 232], "from_descript": [14, 18, 24, 25], "geometrically_equidist": [14, 18, 24, 25], "linearly_equidist": [14, 18, 24, 25], "csmfloat": [14, 18, 24, 25], "deltacsmnbsetweight": [14, 18, 24, 25], "default_effective_csm_estim": [14, 18, 24, 25], "default_weight_estim": [14, 18, 24, 25], "delta_cn_specif": [14, 18, 24, 25], "deltadistancenbsetweight": [14, 18, 24, 25], "distanceangleareanbsetweight": [14, 18, 24, 25], "default_surface_definit": [14, 18, 24, 25], "rectangle_crosses_area": [14, 18, 24, 25], "w_area_has_intersect": [14, 18, 24, 25], "w_area_has_intersection_smoothstep": [14, 18, 24, 25], "w_area_intersection_nbsfh_fbs_onb0": [14, 18, 24, 25], "distancecutofffloat": [14, 18, 24, 25], "distancenbsetweight": [14, 18, 24, 25], "distanceplateaunbsetweight": [14, 18, 24, 25], "multiweightschemenvstrategi": [14, 18, 24, 25, 28], "default_ce_estim": [14, 18, 24, 25], "stats_article_weights_paramet": [14, 18, 24, 25], "nbsetweight": [14, 18, 24, 25], "normalizedangledistancenbsetweight": [14, 18, 24, 25], "ang": [14, 18, 24, 25, 54, 58, 62, 85, 96, 138, 144, 147, 148, 151, 189, 263], "anginvdist": [14, 18, 24, 25], "anginvndist": [14, 18, 24, 25], "angn": [14, 18, 24, 25], "angninvdist": [14, 18, 24, 25], "angninvndist": [14, 18, 24, 25], "aweight": [14, 18, 24, 25], "gweight": [14, 18, 24, 25], "invdist": [14, 18, 24, 25], "invndist": [14, 18, 24, 25], "selfcsmnbsetweight": [14, 18, 24, 25], "simpleabundancechemenvstrategi": [14, 18, 24, 25], "default_additional_condit": [14, 18, 24, 25], "default_max_dist": [14, 18, 24, 25], "simplestchemenvstrategi": [14, 18, 24, 25, 32], "default_angle_cutoff": [14, 18, 24, 25], "default_continuous_symmetry_measure_cutoff": [14, 18, 24, 25], "default_distance_cutoff": [14, 18, 24, 25], "add_strategy_visualization_to_subplot": [14, 18, 24, 25], "additional_condit": [14, 18, 24, 25, 28, 29, 30, 32, 213], "angle_cutoff": [14, 18, 24, 25, 32], "continuous_symmetry_measure_cutoff": [14, 18, 24, 25, 32], "distance_cutoff": [14, 18, 24, 25, 32, 71], "strategyopt": [14, 18, 24, 25], "targettedpenaltiedabundancechemenvstrategi": [14, 18, 24, 25], "default_target_environ": [14, 18, 24, 25], "weightednbsetchemenvstrategi": [14, 18, 24, 25], "get_effective_csm": [14, 18, 24, 25], "set_info": [14, 18, 24, 25], "abstractchemenvalgorithm": [14, 18, 24, 26], "algorithm_typ": [14, 18, 24, 26], "allcoordinationgeometri": [14, 18, 24, 26], "get_geometri": [14, 18, 24, 26], "get_geometry_from_iucr_symbol": [14, 18, 24, 26], "get_geometry_from_iupac_symbol": [14, 18, 24, 26], "get_geometry_from_mp_symbol": [14, 18, 24, 26], "get_geometry_from_nam": [14, 18, 24, 26], "get_implemented_geometri": [14, 18, 24, 26], "get_not_implemented_geometri": [14, 18, 24, 26], "get_symbol_cn_map": [14, 18, 24, 26], "get_symbol_name_map": [14, 18, 24, 26], "is_a_valid_coordination_geometri": [14, 18, 24, 26], "pretty_print": [14, 18, 24, 26], "coordinationgeometri": [14, 18, 24, 26], "csm_skip_separation_plane_algo": [14, 18, 24, 26], "iucr_symbol": [14, 18, 24, 26], "iucr_symbol_str": [14, 18, 24, 26], "iupac_symbol": [14, 18, 24, 26], "iupac_symbol_str": [14, 18, 24, 26], "neighborssetshint": [14, 18, 24, 26], "coordination_numb": [14, 18, 24, 26, 28], "distfactor_max": [14, 18, 24, 26], "face": [14, 15, 18, 24, 26, 69, 71, 89, 241, 284], "get_central_sit": [14, 18, 24, 26], "get_coordination_numb": [14, 18, 24, 26], "get_nam": [14, 18, 24, 26], "get_pmesh": [14, 18, 24, 26], "is_impl": [14, 18, 24, 26], "number_of_permut": [14, 18, 24, 26], "pauling_stability_ratio": [14, 18, 24, 26], "ref_permut": [14, 18, 24, 26], "set_permutations_safe_overrid": [14, 18, 24, 26], "explicitpermutationsalgorithm": [14, 18, 24, 26], "separationplan": [14, 18, 24, 26], "argsorted_ref_separation_perm": [14, 18, 24, 26], "ref_separation_perm": [14, 18, 24, 26], "safe_separation_permut": [14, 18, 24, 26], "abstractgeometri": [14, 18, 24, 28], "from_cg": [14, 18, 24, 28], "points_wcs_csc": [14, 18, 24, 28], "points_wcs_ctwcc": [14, 18, 24, 28], "points_wcs_ctwocc": [14, 18, 24, 28], "points_wocs_csc": [14, 18, 24, 28], "points_wocs_ctwcc": [14, 18, 24, 28], "points_wocs_ctwocc": [14, 18, 24, 28], "localgeometryfind": [14, 18, 24, 28], "bva_distance_scale_factor": [14, 18, 24, 28], "default_bva_distance_scale_factor": [14, 18, 24, 28], "default_spg_analyzer_opt": [14, 18, 24, 28], "default_strategi": [14, 18, 24, 28, 32], "preset": [14, 18, 24, 28, 71], "structure_refinement_non": [14, 18, 24, 28], "structure_refinement_refin": [14, 18, 24, 28], "structure_refinement_symmetr": [14, 18, 24, 28], "compute_coordination_environ": [14, 18, 24, 28], "compute_structure_environ": [14, 18, 24, 28], "coordination_geometry_symmetry_measur": [14, 18, 24, 28], "coordination_geometry_symmetry_measures_fallback_random": [14, 18, 24, 28], "coordination_geometry_symmetry_measures_separation_plan": [14, 18, 24, 28], "coordination_geometry_symmetry_measures_separation_plane_optim": [14, 18, 24, 28], "coordination_geometry_symmetry_measures_sepplane_optim": [14, 18, 24, 28], "coordination_geometry_symmetry_measures_standard": [14, 18, 24, 28], "get_coordination_symmetry_measur": [14, 18, 24, 28], "get_coordination_symmetry_measures_optim": [14, 18, 24, 28], "setup_explicit_indices_local_geometri": [14, 18, 24, 28], "setup_local_geometri": [14, 18, 24, 28], "setup_ordered_indices_local_geometri": [14, 18, 24, 28], "setup_random_indices_local_geometri": [14, 18, 24, 28], "setup_random_structur": [14, 18, 24, 28], "setup_structur": [14, 18, 24, 28], "setup_test_perfect_environ": [14, 18, 24, 28], "update_nb_set_environ": [14, 18, 24, 28], "find_rot": [14, 18, 24, 28], "find_scaling_factor": [14, 18, 24, 28], "symmetry_measur": [14, 18, 24, 28, 29], "chemicalenviron": [14, 18, 24, 29], "add_coord_geom": [14, 18, 24, 29], "is_close_to": [14, 18, 24, 29, 30], "minimum_geometri": [14, 18, 24, 29], "default_statistics_field": [14, 18, 24, 29], "delta_max_oxidation_st": [14, 18, 24, 29], "neighborsset": [14, 18, 24, 25, 29], "clear_environ": [14, 18, 24, 29], "contains_only_one_anion": [14, 18, 24, 29], "contains_only_one_anion_atom": [14, 18, 24, 29], "environments_identifi": [14, 18, 24, 29], "get_site_info_for_specie_allc": [14, 18, 24, 29], "get_site_info_for_specie_c": [14, 18, 24, 29], "get_statist": [14, 18, 24, 29], "setup_statistic_list": [14, 18, 24, 29], "site_contains_environ": [14, 18, 24, 29], "site_has_clear_environ": [14, 18, 24, 29], "structure_contains_atom_environ": [14, 18, 24, 29], "structure_has_clear_environ": [14, 18, 24, 29], "structureenviron": [14, 18, 24, 25, 28, 29], "add_neighbors_set": [14, 18, 24, 29], "differences_wrt": [14, 18, 24, 29], "get_coordination_environ": [14, 18, 24, 29], "get_csm": [14, 18, 24, 29], "get_csm_and_map": [14, 18, 24, 29], "get_environments_figur": [14, 18, 24, 29], "init_neighbors_set": [14, 18, 24, 29], "plot_csm_and_map": [14, 18, 24, 29], "plot_environ": [14, 18, 24, 29], "save_environments_figur": [14, 18, 24, 29], "update_coordination_environ": [14, 18, 24, 29], "update_site_info": [14, 18, 24, 29], "detailedvoronoicontain": [14, 18, 24, 29, 30], "default_normalized_angle_toler": [14, 18, 24, 30], "default_normalized_distance_toler": [14, 18, 24, 30], "default_voronoi_cutoff": [14, 18, 24, 30], "get_rdf_figur": [14, 18, 24, 30], "get_sadf_figur": [14, 18, 24, 30], "maps_and_surfac": [14, 18, 24, 30], "maps_and_surfaces_bound": [14, 18, 24, 30], "neighbors_surfac": [14, 18, 24, 30], "neighbors_surfaces_bound": [14, 18, 24, 30], "setup_neighbors_distances_and_angl": [14, 18, 24, 30], "setup_voronoi_list": [14, 18, 24, 30], "to_bson_voronoi_list2": [14, 18, 24, 30], "voronoi_parameters_bounds_and_limit": [14, 18, 24, 30], "from_bson_voronoi_list2": [14, 18, 24, 30], "chemenvconfig": [14, 18, 31, 32], "default_package_opt": [14, 18, 31, 32], "auto_load": [14, 18, 31, 32, 190], "has_materials_project_access": [14, 18, 31, 32], "package_options_descript": [14, 18, 31, 32], "setup_package_opt": [14, 18, 31, 32], "abstractchemenverror": [14, 18, 31, 33], "chemenverror": [14, 18, 29, 31, 33], "equivalentsitesearcherror": [14, 18, 31, 33], "neighborsnotcomputedchemenverror": [14, 18, 31, 33], "solidangleerror": [14, 18, 31, 33], "test_2d_point": [14, 18, 31, 34], "abcd": [14, 18, 31, 34], "crosses_origin": [14, 18, 31, 34], "distance_to_origin": [14, 18, 31, 34], "distance_to_point": [14, 18, 31, 34], "distances_indices_group": [14, 18, 31, 34], "distances_indices_sort": [14, 18, 31, 34], "fit_error": [14, 18, 31, 34], "fit_least_square_distance_error": [14, 18, 31, 34], "fit_maximum_distance_error": [14, 18, 31, 34], "from_2points_and_origin": [14, 18, 31, 34], "from_3point": [14, 18, 31, 34], "from_coeffici": [14, 18, 31, 34], "from_npoint": [14, 18, 31, 34], "from_npoints_least_square_dist": [14, 18, 31, 34], "from_npoints_maximum_dist": [14, 18, 31, 34], "indices_separ": [14, 18, 31, 34], "init_3point": [14, 18, 31, 34], "is_in_list": [14, 18, 31, 34], "is_in_plan": [14, 18, 31, 34], "is_same_plane_a": [14, 18, 31, 34], "orthonormal_vector": [14, 18, 31, 34], "perpendicular_bisector": [14, 18, 31, 34], "project_and_to2dim": [14, 18, 31, 34], "project_and_to2dim_ordered_indic": [14, 18, 31, 34], "projectionpoint": [14, 18, 31, 34], "anticlockwise_sort": [14, 18, 31, 34], "anticlockwise_sort_indic": [14, 18, 31, 34], "changebasi": [14, 18, 31, 34], "collinear": [14, 18, 31, 34, 73, 74, 129, 147, 159, 175, 232, 263], "diamond_funct": [14, 18, 31, 34], "function_comparison": [14, 18, 31, 34], "get_lower_and_upper_f": [14, 18, 31, 34], "is_anion_cation_bond": [14, 18, 31, 34], "matrixtimesvector": [14, 18, 31, 34], "my_solid_angl": [14, 18, 31, 34], "quarter_ellipsis_funct": [14, 18, 31, 34], "rectangle_surface_intersect": [14, 18, 31, 34], "rotatecoord": [14, 18, 31, 34], "rotatecoordsopt": [14, 18, 31, 34], "separation_in_list": [14, 18, 31, 34], "sort_separ": [14, 18, 31, 34], "sort_separation_tupl": [14, 18, 31, 34], "spline_funct": [14, 18, 31, 34], "vectorstomatrix": [14, 18, 31, 34], "additionalcondit": [14, 18, 25, 29, 30, 31, 35], "condition_descript": [14, 18, 31, 35], "no_ac": [14, 18, 31, 35], "no_additional_condit": [14, 18, 31, 35, 213], "no_e2seb": [14, 18, 31, 35], "no_element_to_same_element_bond": [14, 18, 31, 35, 213], "only_acb": [14, 18, 31, 35], "only_acb_and_no_e2seb": [14, 18, 31, 35], "only_anion_cation_bond": [14, 18, 31, 35, 213], "only_anion_cation_bonds_and_no_element_to_same_element_bond": [14, 18, 31, 35, 213], "only_e2ob": [14, 18, 31, 35], "only_element_to_oxygen_bond": [14, 18, 31, 35, 213], "check_condit": [14, 18, 31, 35], "abstractratiofunct": [14, 18, 31, 36], "allowed_funct": [14, 18, 31, 36], "csmfiniteratiofunct": [14, 18, 31, 36], "mean_estim": [14, 18, 31, 36], "power2_decreasing_exp": [14, 18, 25, 31, 36, 38], "smootherstep": [14, 18, 25, 31, 36, 38], "smoothstep": [14, 18, 25, 31, 36, 38], "csminfiniteratiofunct": [14, 18, 31, 36], "power2_inverse_decreas": [14, 18, 25, 31, 36, 38], "power2_inverse_power2_decreas": [14, 18, 25, 31, 36, 38], "deltacsmratiofunct": [14, 18, 31, 36], "ratiofunct": [14, 18, 31, 36], "inverse_smootherstep": [14, 18, 31, 36], "inverse_smoothstep": [14, 18, 31, 36], "multigraphcycl": [14, 18, 31, 37], "simplegraphcycl": [14, 18, 31, 37], "from_edg": [14, 18, 31, 37], "get_all_elementary_cycl": [14, 18, 31, 37], "get_all_simple_paths_edg": [14, 18, 31, 37], "cosinus_step": [14, 18, 31, 38], "divisor": [14, 18, 31, 38, 158, 189, 191], "get_center_of_arc": [14, 18, 31, 38], "get_linearly_independent_vector": [14, 18, 31, 38], "normal_cdf_step": [14, 18, 31, 38], "power2_inverse_powern_decreas": [14, 18, 31, 38], "power2_tangent_decreas": [14, 18, 31, 38], "power3_step": [14, 18, 31, 38], "powern_decreas": [14, 18, 31, 38], "powern_parts_step": [14, 18, 31, 38], "prime_factor": [14, 18, 31, 38, 233], "scale_and_clamp": [14, 18, 31, 38], "compute_environ": [14, 18, 31, 39], "draw_cg": [14, 18, 31, 39], "height": [15, 54, 71, 111, 161, 263, 276], "mi_vec": [15, 263], "arraylik": [15, 51, 58, 62, 80, 104, 140, 143, 145, 146, 147, 160, 230, 231, 269], "threshold": [15, 71, 73, 75, 76, 79, 83, 90, 92, 93, 94, 130, 136, 148, 149, 156, 189, 191, 236, 263, 265], "highest": [15, 47, 50, 80, 89, 108, 142, 156, 160, 176, 189, 264, 287], "delaunai": 15, "triangul": 15, "bridg": [15, 182, 184, 202, 204], "hollow": 15, "node": [15, 20, 22, 37, 60, 63, 79, 80, 130, 191, 241, 255, 272, 277], "posit": [15, 20, 34, 45, 51, 62, 63, 71, 73, 74, 75, 76, 80, 86, 96, 100, 128, 129, 144, 147, 148, 149, 150, 159, 160, 161, 175, 176, 177, 185, 192, 195, 199, 209, 221, 223, 226, 230, 232, 236, 248, 252, 254, 261, 263, 264, 265, 287], "concurr": [15, 263], "reorient": [15, 148, 263], "suppli": [15, 51, 54, 62, 73, 80, 83, 90, 96, 128, 130, 147, 148, 158, 159, 160, 163, 168, 187, 197, 206, 215, 223, 230, 233, 248, 254, 256, 258, 263, 265, 276], "ads_coord": 15, "repeat": [15, 94, 148, 189, 263], "tupl": [15, 17, 28, 29, 34, 40, 43, 44, 45, 46, 47, 48, 50, 51, 62, 63, 66, 68, 69, 71, 73, 74, 75, 76, 78, 79, 80, 89, 96, 100, 108, 109, 110, 113, 133, 137, 138, 139, 140, 143, 144, 145, 147, 148, 156, 158, 159, 160, 161, 163, 172, 176, 177, 181, 186, 189, 199, 200, 201, 206, 213, 215, 221, 223, 225, 230, 231, 232, 233, 247, 251, 254, 259, 263, 265, 269, 270, 273, 276, 277, 278, 284], "min_lw": [15, 263], "find_arg": [15, 263], "equival": [15, 17, 25, 26, 29, 33, 45, 46, 50, 51, 58, 62, 73, 76, 82, 85, 86, 90, 127, 130, 140, 143, 147, 148, 149, 152, 155, 158, 159, 163, 164, 166, 168, 177, 182, 185, 192, 197, 199, 202, 204, 224, 247, 254, 255, 257, 261, 263, 265], "nonpolar": [15, 58], "width": [15, 48, 54, 71, 73, 79, 111, 147, 160, 161, 190, 201, 215, 231, 263, 276, 284], "subsurfac": 15, "site_list": 15, "put_insid": 15, "ontop": 15, "no_obtuse_hollow": 15, "insid": [15, 29, 80, 128, 156, 161, 185, 189, 200, 232, 263], "obtus": 15, "triangular": [15, 51, 80, 274, 284], "xy_tol": 15, "topmost": [15, 148], "min_vacuum_s": [15, 47, 148, 263], "max_normal_search": [15, 148, 263], "undercoord_threshold": 15, "09": [15, 70, 215], "asf": 15, "min": [15, 34, 40, 54, 80, 85, 96, 108, 151, 160, 161, 226, 263, 274], "vacuum": [15, 62, 68, 96, 130, 138, 148, 263], "undercoord": 15, "counterpart": [15, 128, 130], "precursor": 15, "target_speci": [15, 94, 263], "sub_both_sid": [15, 263], "range_tol": [15, 263], "dist_from_surf": [15, 263], "viabl": [15, 263], "coords_set": 15, "0001": [15, 50, 71, 80, 82, 83, 155, 185, 236, 268, 279], "prune": [15, 71, 76], "nx3": [15, 55, 58, 62, 71, 76, 88, 89, 138, 147, 148, 195, 230], "06": [15, 77, 79, 83, 86, 100, 137, 149, 189, 191, 244], "dupl": 15, "align": [15, 28, 34, 76, 78, 140, 161, 197, 230, 241, 278], "ax": [15, 20, 25, 29, 34, 40, 43, 54, 96, 152, 159, 161, 176, 177, 179, 250, 251, 252, 256, 257, 276], "draw_unit_cel": 15, "decai": [15, 53, 133, 263], "adsorption_sit": 15, "draw": [15, 20, 26, 39, 40, 63, 80, 96, 101, 161], "opposit": [15, 66, 71, 90, 148, 150, 191], "cart_coordin": 15, "molecule_entri": 16, "fragment_entri": 16, "allow_additional_charge_separ": 16, "multibreak": 16, "loop": [16, 37, 147, 156, 185, 189, 190, 191, 207], "elsewher": [16, 208, 224], "formula_pretti": 16, "initial_molecul": 16, "final_molecul": 16, "pcm_dielectr": [16, 223], "mention": [16, 71, 206, 213], "among": [16, 47, 180], "expected_charg": 16, "addition": [16, 225, 233], "pair": [16, 47, 58, 59, 70, 71, 74, 76, 77, 80, 82, 89, 90, 95, 107, 108, 109, 110, 130, 134, 137, 146, 149, 158, 189, 204, 206, 223, 232, 245, 260, 264, 265, 270, 276, 283], "frag": 16, "eventu": [16, 148], "isomorph": [16, 63, 76, 272], "molgraph": 16, "initial_entri": 16, "final_entri": 16, "symm_tol": [17, 265], "max_radiu": [17, 53, 89, 265], "max_permut": [17, 265], "100000": [17, 184, 265], "distance_scale_factor": [17, 265], "015": [17, 28, 96, 233, 257, 265], "forbidden_speci": 17, "keef": 17, "brese": [17, 71], "jac": [17, 40], "1991": [17, 71], "113": [17, 50, 141], "3226": [17, 71], "3229": [17, 71], "1021": [17, 28, 40, 66, 73, 80, 88, 93, 94, 96, 156, 233, 285], "ja00009a002": 17, "posterior": 17, "bv": 17, "std": [17, 146, 160, 232, 248], "deviat": [17, 34, 62, 76, 79, 161, 214, 251, 254, 263], "experiment": [17, 28, 71, 80, 97, 103, 144, 161, 163, 164, 165, 167, 248, 263, 265], "unord": 17, "stake": 17, "forbidden": 17, "someon": [17, 144], "nn_list": 17, "central": [17, 22, 26, 28, 29, 50, 213, 284], "namedtupl": [17, 71, 160, 213, 251], "element_or_speci": 17, "smallest": [17, 34, 38, 47, 50, 53, 62, 71, 76, 90, 100, 147, 148, 175, 176, 177, 189, 252, 263, 286], "ni3": 17, "ni4": 17, "cr3": 17, "15": [17, 36, 66, 71, 77, 82, 88, 89, 101, 141, 152, 159, 161, 171, 177, 199, 213, 221, 223, 263, 279], "zn2": 17, "cr4": 17, "11": [17, 26, 46, 77, 80, 141, 152, 159, 161, 163, 179, 191, 233, 269, 279], "yield": [17, 50, 59, 68, 76, 140, 181, 205, 207, 233, 287], "allowed_hints_typ": [18, 24, 26], "double_cap_hint": [18, 24, 26], "single_cap_hint": [18, 24, 26], "triple_cap_hint": [18, 24, 26], "neighb_coord": [18, 24, 29], "neighb_indices_and_imag": [18, 24, 29], "neighb_sit": [18, 24, 29], "neighb_sites_and_indic": [18, 24, 29], "add_sourc": [18, 24, 29], "angle_plateau": [18, 24, 29], "distance_plateau": [18, 24, 29], "get_neighb_voronoi_indic": [18, 24, 29], "neighb_coordsopt": [18, 24, 29], "normalized_angl": [18, 24, 29], "normalized_dist": [18, 24, 29], "voronoi_grid_surface_point": [18, 24, 29], "compon": [20, 30, 40, 47, 52, 64, 76, 78, 80, 83, 88, 96, 137, 156, 159, 161, 175, 232, 233, 250, 255, 257, 278], "environments_data": 20, "links_data": 20, "bson": [20, 25, 29, 30, 213], "all_simple_path": 20, "source_nod": 20, "path_siz": 20, "include_sourc": 20, "reachabl": 20, "nth": [20, 37, 50, 149, 160, 232], "layer": [20, 47, 68, 71, 96, 138, 148, 263], "corner": [20, 76, 80], "octahedr": [20, 71, 75], "perovskit": [20, 137], "18": [20, 71, 85, 132, 141, 142, 144, 179, 279], "38": [20, 77, 141, 152, 233, 243, 244], "66": [20, 77, 141], "102": [20, 40, 141, 152], "146": [20, 141], "octahedron": [20, 75, 144], "cuboctahedron": 20, "batio3": 20, "12": [20, 40, 46, 54, 55, 80, 85, 89, 95, 141, 152, 159, 161, 163, 175, 179, 191, 201, 204, 215, 221, 223, 232, 233, 264, 279, 285], "26": [20, 104, 131, 134, 141, 156, 179], "48": [20, 77, 141, 170, 264, 279], "128": [20, 141, 257], "194": [20, 141, 221, 225], "248": [20, 141], "338": 20, "408": [20, 141], "522": [20, 141], "608": 20, "170": [20, 141], "306": 20, "482": 20, "698": 20, "short": [20, 43, 71, 136, 186, 189, 221, 232, 233], "start_nod": 20, "subgraph": [20, 23, 63, 272], "nx": [20, 47, 63, 140, 186, 231], "multigraph": [20, 23, 37, 63], "save_fil": 20, "drawing_typ": 20, "pltshow": 20, "env_graph": 20, "2d": [20, 34, 40, 45, 47, 58, 62, 68, 70, 80, 83, 88, 89, 96, 138, 140, 147, 148, 150, 175, 184, 189, 214, 230, 232, 252, 269, 278, 286], "drawn": [20, 63, 147, 252, 265, 284], "supergraph": 20, "super": [20, 63, 69, 70, 104, 109, 110, 146, 147, 148, 189, 191], "multiple_environments_choic": 21, "light_structure_environ": [21, 23], "central_sit": [22, 26, 28], "i_central_sit": 22, "connectivity_graph": 23, "site_neighbors_set": 23, "environments_symbol": 23, "only_atom": [23, 28], "atom_environ": 23, "atoms_environ": 23, "isite1": 23, "isite2": 23, "data1": 23, "data2": 23, "ligand": 23, "favour": 25, "smaller": [25, 45, 62, 71, 75, 80, 90, 113, 136, 147, 148, 158, 189, 191, 213, 214, 232, 233, 254, 263], "purpos": [25, 26, 28, 50, 71, 80, 83, 130, 144, 167, 208, 263, 272, 276, 280], "csm_wcs_ctwcc": [25, 39], "classvar": [25, 36, 279], "frozendict": [25, 28, 32, 35, 36, 54, 77, 137, 152, 172, 181, 215, 219, 230, 284], "psite": 25, "full_ce_info": 25, "strategy_info": 25, "csm": [25, 26, 29, 36], "geometry_info": 25, "dequivsit": 25, "dthissit": 25, "mysym": 25, "min_fract": [25, 29], "return_map": 25, "return_strategy_dict_info": 25, "option_nam": 25, "option_valu": 25, "all_options_dict": 25, "amongst": 25, "oxygen": [25, 35, 60, 71, 80, 83, 110, 139, 161, 163, 213], "myfloat": 25, "aa": [25, 34, 71, 198, 217], "angleweight": 25, "nb_set": [25, 28, 29], "solid": [25, 26, 30, 33, 34, 47, 66, 71, 78, 83, 89, 96, 97, 132, 139, 140, 142, 144, 163, 164, 167, 189, 215, 258, 286], "cn_map": [25, 29, 30], "additional_info": [25, 26], "angle_funct": 25, "weight_funct": 25, "angleplateauweight": 25, "initialization_opt": 25, "bias": [25, 287], "cnbiasweight": 25, "explicitli": [25, 34, 37, 47, 71, 163, 191, 223, 233], "weight_cn1": 25, "weight_cn13": 25, "geometr": [25, 71, 76, 79, 107, 285], "equidist": [25, 265], "linearli": [25, 160], "effective_csm_estim": 25, "max_csm": [25, 29, 36], "weight_estim": 25, "delta_csm_min": [25, 36], "delta_csm_max": [25, 36], "delta_cn_weight_estim": 25, "deltacsmweight": 25, "nbs_sourc": 25, "weight_typ": 25, "has_intersect": 25, "surface_definit": 25, "standard_ellipt": 25, "distance_bound": 25, "upper": [25, 34, 36, 51, 80, 85, 160, 181, 274], "angle_bound": 25, "nb_sets_from_hint": 25, "fallback_to_sourc": 25, "other_nb_set": 25, "0_weight": 25, "smoothstep_dist": 25, "smoothstep_angl": 25, "area": [25, 34, 62, 69, 70, 71, 96, 101, 148, 160, 161, 251], "distangleareaweight": 25, "d1": [25, 201], "d2": [25, 233], "a1": [25, 254], "rectangl": [25, 34], "curv": [25, 88, 109, 215, 217, 268], "intersect": [25, 34, 63, 83, 96, 269], "distance_funct": 25, "distanceplateauweight": 25, "dist_ang_area_weight": 25, "self_csm_weight": 25, "delta_csm_weight": 25, "cn_bias_weight": 25, "angle_weight": 25, "normalized_angle_distance_weight": 25, "ce_estim": 25, "chemenvstrategi": [25, 29], "multipleabundancechemenvstrategi": 25, "articl": [25, 26, 99], "average_typ": 25, "bb": [25, 34], "normangledistweight": 25, "fda_list": 25, "selfcsmweight": 25, "abund": 25, "surface_calculation_typ": [25, 30], "_additional_condit": 25, "simplest": 25, "_distance_cutoff": 25, "_angle_cutoff": 25, "_continuous_symmetry_measure_cutoff": 25, "subplot": [25, 43, 54, 161, 176, 179, 250, 251, 276], "visualization_opt": 25, "plot_typ": [25, 29, 30], "onto": [25, 45, 76, 82, 90, 147, 149, 161, 168, 189, 191, 221, 232], "truncate_dist_ang": 25, "max_nabund": 25, "target_environ": 25, "target_penalty_typ": 25, "bia": [25, 144], "target": [25, 37, 71, 76, 80, 94, 137, 156, 181, 265], "yet": [25, 71, 148, 172, 179, 189, 192, 204, 207, 287], "nb_set_weight": 25, "return_al": 25, "max_effective_csm": 25, "effective_csm_estimator_ratio_funct": 25, "appl": [26, 170, 252], "79": [26, 141], "pp": [26, 28, 34, 45, 259], "1779": 26, "1799": 26, "acta": [26, 28, 36, 62, 71, 140], "cryst": [26, 28, 36, 62, 71, 89, 170, 252], "46": [26, 77, 78, 141, 152], "1990": [26, 62, 279], "descriptor": [26, 164, 179, 191], "identif": [26, 28, 36, 47, 71, 130, 156, 198], "chemenvalgorithm": 26, "permutations_safe_overrid": [26, 28], "only_symbol": [26, 28], "safe": [26, 28, 63, 159, 161, 271], "restrict": [26, 28, 71, 113, 149, 204], "cg": [26, 28, 39, 189, 191, 206], "iucr": [26, 258], "include_deactiv": 26, "deactiv": [26, 191, 279], "coher": [26, 68, 71], "implemented_geometri": 26, "maxcn": 26, "all_geometri": 26, "all_geometries_latex_imag": 26, "all_geometries_latex": 26, "alternative_nam": 26, "equivalent_indic": 26, "neighbors_sets_hint": 26, "ideal": [26, 71, 101, 133, 144, 158, 185, 191, 214, 263], "clockwis": 26, "anticlockwis": [26, 34, 284], "hints_typ": 26, "polyhedron": [26, 28, 30, 40, 71, 89, 284], "tripl": [26, 60, 215], "beyond": [26, 28, 100, 147, 156, 264, 287], "single_cap": 26, "double_cap": 26, "triple_cap": 26, "hints_info": 26, "constitut": [26, 50, 144, 191, 276], "distfactor": [26, 29, 30], "perfect": [26, 28, 29, 89, 96, 133, 206, 217, 263], "pmesh": 26, "jmol": [26, 47, 63, 71, 89, 284], "theoret": [26, 87], "paul": [26, 71, 144], "rc": 26, "plane_point": 26, "mirror_plan": 26, "ordered_plan": 26, "point_group": [26, 130], "ordered_point_group": 26, "explicit_permut": 26, "minimum_number_of_point": 26, "explicit_optimized_permut": 26, "other_plane_point": 26, "mirror": [26, 143, 148, 254], "ones": [26, 54, 79, 94, 108, 161, 190, 230, 254], "add_opposit": 26, "xavier": [28, 200], "gonz": [28, 156], "gian": 28, "rignanes": [28, 156], "cathrin": 28, "welker": 28, "nieuwoudt": 28, "frank": 28, "rosowski": 28, "goebel": 28, "stephan": 28, "schenk": 28, "peter": [28, 71], "degelmann": 28, "rute": 28, "andr": 28, "robert": [28, 286], "glaum": 28, "mater": [28, 47, 80, 128, 132, 163, 255, 257, 285], "2017": [28, 47, 60, 71, 73, 84, 96, 129, 131, 156, 161, 232, 257, 272], "29": [28, 40, 141, 151, 179, 233, 250, 279], "19": [28, 50, 77, 95, 141, 149, 156, 221, 223], "8346": 28, "8360": 28, "chemmat": [28, 66, 73, 88], "7b02766": 28, "georg": [28, 156, 252, 286], "76": [28, 36, 77, 141, 279], "683": [28, 36], "695": 28, "1107": [28, 140], "s2052520620007994": 28, "bare_coord": 28, "centering_typ": 28, "include_central_site_in_centroid": 28, "distort": [28, 34, 58, 75, 89, 90, 264], "centroid": [28, 29, 40, 76], "plane_ordering_overrid": 28, "plane_safe_permut": 28, "consum": [28, 264], "disabl": [28, 130, 156, 223, 254], "gga_relax": 28, "lda_relax": 28, "995": 28, "001": [28, 30, 43, 55, 73, 81, 82, 85, 92, 93, 94, 133, 140, 143, 148, 149, 156, 160, 206, 221, 232, 254, 263, 265], "maximum_distance_factor": [28, 30], "minimum_angle_factor": [28, 30], "voronoi_normalized_distance_toler": 28, "voronoi_normalized_angle_toler": 28, "03": [28, 70, 77, 100, 156, 179, 233], "refin": [28, 44, 45, 46, 62, 149, 189, 191, 254, 263], "only_c": 28, "initial_structure_environ": 28, "excluded_atom": 28, "only_indic": [28, 213], "max_cn": 28, "min_cn": 28, "undefin": [28, 101], "timelimit": 28, "get_from_hint": 28, "recomput": 28, "closest_neighbor_dist": 28, "largest_angle_neighbor": 28, "sec": [28, 156, 232], "stop": [28, 175, 176, 232, 254], "incomplet": [28, 207], "tested_permut": 28, "points_perfect": 28, "notimplementederror": [28, 187, 208, 265], "permutation_setup": 28, "nrandom": 28, "random": [28, 34, 82, 147, 189, 209, 216, 263, 265], "separation_plane_algo": 28, "2point": 28, "3point": 28, "whose": [28, 34, 45, 71, 79, 82, 96, 176, 179, 189, 221], "only_minimum": 28, "all_csm": 28, "coords_are_cartesian": [28, 58, 62, 63, 138, 140, 145, 147, 148, 155, 161, 247, 249, 257, 264], "explicit_indic": 28, "unchang": [28, 43, 54, 137, 161, 164, 176, 179, 250, 251], "structure_refin": 28, "spg_analyzer_opt": 28, "chosen": [28, 71, 73, 101, 108, 110, 147, 158, 163, 168, 191, 214, 230, 232, 233, 255, 282], "max_random_dist": 28, "symbol_typ": 28, "random_transl": 28, "random_rot": [28, 147], "random_scal": 28, "inb_set": 28, "points_distort": 28, "squar": [28, 34, 45, 46, 50, 54, 62, 71, 76, 100, 101, 140, 149, 156, 160, 224, 249, 269], "sens": [28, 93, 101, 144, 231], "rot": [28, 254], "thorough": 29, "lighter": 29, "coord_geom": 29, "local2perfect_map": 29, "perfect2local_map": [29, 39], "detailed_voronoi_index": 29, "other_symmetry_measur": 29, "scaling_factor": 29, "rtol": [29, 30, 137, 149, 160], "atol": [29, 30, 137, 140, 149, 254, 255, 257, 269, 274], "08": [29, 30, 50, 51, 62, 80, 137, 140, 145, 147, 149, 189, 232, 233, 263, 269, 274, 278, 279, 285], "all_nbs_sit": [29, 213], "neighbors_set": [29, 213], "valences_origin": [29, 213], "anion_list": 29, "anion_atom_list": 29, "cation_list": 29, "cation_atom_list": 29, "neutral_list": 29, "neutral_atom_list": 29, "atom_coordination_environments_pres": 29, "ion_coordination_environments_pres": 29, "fraction_atom_coordination_environments_pres": 29, "fraction_ion_coordination_environments_pres": 29, "coordination_environments_atom_pres": 29, "coordination_environments_ion_pres": 29, "all_nbs_sites_indic": 29, "inner": [29, 140, 147, 191], "nest": [29, 96, 121, 144, 181, 189, 232, 254, 279, 287], "suppos": [29, 34, 37, 71, 76, 77, 163, 233], "anywher": [29, 79], "els": [29, 132, 140, 143, 148, 151, 155, 156, 161, 163, 178, 179, 201, 206, 230, 265, 274, 276], "concern": [29, 145, 176], "o2": [29, 66, 71, 80, 86, 96, 137, 144, 163, 168, 197, 233, 278, 279, 285, 287], "anion_atom": 29, "statistics_field": 29, "bson_compat": 29, "somewhat": [29, 137, 147, 189], "higher": [29, 50, 53, 71, 80, 94, 96, 156, 161, 191, 232, 233, 265], "skip_non": 29, "skip_empti": 29, "sites_map": 29, "equivalent_sit": 29, "ce_list": 29, "voronoicontain": [29, 30], "unequival": 29, "detailed_voronoi": 29, "site_voronoi_indic": 29, "plateau": 29, "other_origin": 29, "do_noth": 29, "staircas": 29, "inf": [29, 160, 175, 263], "consider": [29, 64, 71, 107, 114, 233, 270], "figsiz": [29, 30], "angfactor": [29, 30], "colormap": [29, 80], "region": [29, 83, 96, 130, 148, 156], "initial_norm": 29, "initial_r": 29, "closest": [29, 34, 58, 63, 71, 147], "imagenam": 29, "png": [29, 43, 54, 63, 161, 176, 179, 250, 251, 284], "voronoi_list2": 30, "voronoi_cutoff": 30, "normalized_distance_toler": 30, "normalized_angle_toler": 30, "runtimeerror": [30, 34, 37, 222, 225], "step_funct": 30, "radial": [30, 96, 179, 264], "sadf": 30, "surface_calculation_opt": [30, 34], "infinit": [30, 36, 71, 76, 140, 156, 287], "vertex": [30, 71, 269], "voronoi_list": 30, "vlist": 30, "bson_nb_voro_list": 30, "bound": [30, 34, 40, 80, 83, 94, 156, 189, 204], "bson_nb_voro_list2": 30, "package_opt": 32, "default_max_distance_factor": 32, "root_dir": [32, 100], "autoload": 32, "cosinu": 33, "p2": [34, 38, 45, 186, 233, 256, 278], "p3": [34, 45], "cz": 34, "side": [34, 80, 83, 86, 96, 148, 149, 263], "delta_factor": 34, "sign": [34, 73, 92, 129, 139, 152, 161, 181, 191, 205, 232, 274, 278], "furthest": 34, "maxim": [34, 71, 156, 158, 191, 232], "interv": [34, 156, 161, 201], "latter": [34, 147, 232, 233], "least_square_dist": 34, "three": [34, 51, 58, 62, 63, 71, 76, 78, 79, 80, 96, 101, 108, 109, 110, 133, 140, 147, 148, 156, 161, 190, 204, 216, 224, 230, 232, 234, 247, 249, 254, 255, 263, 265, 269, 270, 277, 278, 284, 287], "third": [34, 50, 78, 147, 148, 149, 160, 247, 249, 255, 257], "best_fit": 34, "dist_toler": 34, "lie": 34, "nonzero": [34, 50, 149], "plane_list": 34, "ident": [34, 50, 51, 52, 71, 110, 147, 156, 168, 189, 191, 213, 222, 224, 232, 259, 265, 272], "parallel": [34, 45, 83, 96, 113, 114, 129, 133, 148, 149, 176, 263, 264, 266, 287], "strang": [34, 47, 79], "perpendicular": [34, 62, 140, 147, 148, 149, 263], "bisector": 34, "join": [34, 62, 83, 137], "middl": 34, "segment": [34, 175, 177, 184], "plane_cent": 34, "uu": 34, "vv": 34, "nn": [34, 38, 71, 74, 134, 264], "e1": 34, "e2": 34, "e3": 34, "express": [34, 50, 58, 140, 149, 190, 224, 232, 272], "orthonorm": [34, 40, 99], "bai": 34, "largest_triangl": 34, "leg": [34, 197], "ie": [34, 96, 148], "secondmin": 34, "125": [34, 137, 141, 147, 232], "xx": [34, 38, 88, 250, 252], "yy": [34, 88, 234, 252], "y_x0": 34, "x_y0": 34, "intercept": [34, 96], "diamond": 34, "schemat": 34, "x1": [34, 40, 100], "x2": [34, 100, 144, 200], "numpoints_check": 34, "thrown": [34, 136, 137, 139, 149, 160, 226], "jj": 34, "3x3": [34, 50, 51, 52, 62, 76, 78, 88, 96, 138, 143, 147, 148, 149, 156, 210, 217, 226, 245, 256, 269], "quarter": 34, "ellips": 34, "ellipsi": 34, "f_lower": 34, "f_upper": 34, "bounds_low": 34, "bounds_upp": 34, "y1": [34, 40, 100, 276], "y2": [34, 100, 276], "r": [34, 40, 45, 46, 48, 50, 53, 58, 62, 71, 78, 79, 84, 96, 100, 101, 130, 132, 134, 140, 147, 156, 160, 161, 163, 164, 170, 179, 190, 219, 224, 232, 243, 244, 245, 252, 254, 256, 259, 264, 284, 285, 286], "separation_indic": 34, "separation_indices_list": 34, "lower_point": 34, "upper_point": 34, "degre": [34, 43, 44, 45, 46, 50, 53, 62, 63, 71, 76, 80, 90, 96, 130, 137, 139, 140, 143, 147, 161, 164, 166, 175, 177, 181, 255, 263, 264, 265, 269, 272, 276], "compos": [34, 161, 164, 190, 224, 232], "m_ij": 34, "aa_i": 34, "bb_j": 34, "options_dict": 36, "concret": [36, 179, 199, 227, 233], "lower_csm": 36, "upper_csm": 36, "val": [36, 151, 158, 180, 197, 219, 230, 274], "exp": [36, 46, 50, 165, 189, 217, 231, 232], "deltacsm": 36, "edge_indic": 37, "cycl": [37, 63, 149, 177, 181, 189, 190, 191, 223, 276, 282], "raise_on_fail": 37, "check_strict_ord": 37, "edges_are_ord": 37, "node1": 37, "node2": 37, "edge_data": 37, "math": [38, 46, 76, 148, 263, 274], "natur": [38, 66, 76, 99, 113, 156, 161, 164, 192, 222], "ascend": [38, 121, 137], "vectors_list": 38, "prefactor": 38, "powern": 38, "prime": [38, 233, 258], "greatest": [38, 137], "rtype": [38, 158], "edge0": 38, "edge1": 38, "clamp0": 38, "clamp1": 38, "chemenv_configur": 39, "perm": 39, "show_perfect": 39, "csm_info": 39, "perfect_radiu": 39, "show_distort": 39, "faces_color_overrid": 39, "myfactor": 39, "view_index": 39, "mathemat": [40, 258, 286], "dual": [40, 101, 276], "tradit": [40, 144, 189], "paper": [40, 54, 66, 70, 80, 85, 233, 241, 257, 272], "todd": 40, "mcdermott": [40, 163, 286], "rom": 40, "corrao": 40, "dennei": [40, 286], "dwaraknath": [40, 78, 163, 233, 286], "khalifah": 40, "neilson": 40, "yttrium": 40, "manganes": 40, "synthesi": [40, 233], "hyperdimension": 40, "journal": [40, 70, 79, 104, 148, 170, 233, 272, 285], "american": [40, 170], "societi": 40, "143": [40, 141, 232], "37": [40, 85, 141, 152], "15185": 40, "15194": 40, "1c06229": 40, "referenc": [40, 66, 80, 96, 148, 163, 164, 168, 233], "yokokawa": 40, "dissimilar": [40, 63], "jpe": 40, "20": [40, 58, 62, 68, 79, 80, 83, 85, 136, 138, 140, 141, 147, 148, 151, 152, 161, 175, 177, 179, 189, 191, 199, 212, 216, 217, 221, 230, 233, 257, 263, 284, 285], "258": [40, 141], "1361": 40, "105497199770335794": 40, "default_min_limit": 40, "convex": [40, 41, 66, 80, 101, 108, 109, 110], "\u03bc": 40, "envelop": 40, "accordingli": [40, 77, 131, 148], "polytop": [40, 80, 83], "border": 40, "halfspaceintersect": [40, 83], "constrain": [40, 80, 159, 175, 221, 223, 233, 238], "unspecifi": [40, 205], "\u03bc_x": 40, "label_st": [40, 80], "formulas_to_draw": 40, "draw_formula_mesh": 40, "draw_formula_lin": 40, "formula_color": 40, "rgb": [40, 161, 251, 284], "27": [40, 62, 141, 151, 156, 179, 221, 223], "158": [40, 141], "119": [40, 141, 279], "217": [40, 141, 172], "95": [40, 77, 141], "117": [40, 62, 141, 152], "112": [40, 141, 255, 257], "179": 40, "231": [40, 141], "41": [40, 46, 77, 141], "138": [40, 141], "166": [40, 130, 141], "30": [40, 55, 58, 71, 103, 138, 140, 141, 147, 148, 199, 216], "230": [40, 141, 254], "171": 40, "118": [40, 141, 179], "element_pad": 40, "limno2": 40, "fulli": [40, 59, 108, 137, 139, 148, 191, 230, 233, 287], "formulas_to": 40, "dark2": 40, "adjust": [40, 58, 71, 88, 96, 156, 163, 164, 168, 189, 199, 205, 232, 254], "pad": [40, 96], "clariti": [40, 80], "line_pt": 40, "2x2": [40, 96], "x0": [40, 231], "y0": 40, "bare": 40, "bone": 40, "polygon": [40, 83, 89, 284], "circumferenti": 40, "princip": [40, 50, 52, 76, 78, 149, 160, 161, 189, 252], "pca": 40, "csv": [41, 104, 166, 176], "kg": [41, 108, 151], "decomposit": [41, 71, 80, 83, 109, 110, 128, 149, 241, 269, 285], "amount": [41, 51, 80, 86, 89, 90, 107, 110, 137, 139, 144, 147, 155, 162, 164, 189, 232, 278, 287], "cost_per_kg": 41, "NOT": [41, 63, 80, 177, 191, 204, 232, 233, 272], "two_theta_rang": [43, 44, 45, 46], "peak": [43, 44, 46, 73, 96, 160, 250], "two_theta": [43, 44, 46], "beam": [43, 44, 45, 46, 199], "sphere": [43, 44, 46, 50, 58, 96, 101, 140, 147, 149, 179, 210, 284], "wavelength": [43, 44, 45, 46, 201], "annotate_peak": 43, "compact": 43, "with_label": 43, "fontsiz": [43, 54, 96, 179], "16": [43, 77, 141, 206, 230, 233, 264, 272, 279], "pyplot": [43, 54, 80, 83, 89, 96, 100, 101, 161, 276], "orient": [43, 47, 62, 69, 71, 90, 147, 148, 201, 226, 232, 233, 263, 287], "anyth": [43, 47, 80, 96, 144, 147, 148, 192, 213, 233, 271], "savefig": [43, 54, 80, 161, 176, 179, 250, 251], "ep": [43, 54, 71, 111, 161, 176, 179, 201, 226, 231, 250, 251, 282], "size_kwarg": [43, 54, 161, 176, 179, 250, 251], "fig": [43, 54, 80, 161, 176, 179, 250, 251], "set_size_inch": [43, 54, 161, 176, 179, 250, 251], "tight_layout": [43, 54, 161, 176, 179, 250, 251], "ax_grid": [43, 54, 161, 176, 179, 250, 251], "ax_annot": [43, 54, 161, 176, 179, 250, 251], "fig_clos": [43, 54, 161, 176, 179, 250, 251], "mult": [43, 146], "interplanar": [43, 45], "famili": [43, 111, 141, 148, 161, 179], "54184": 44, "debye_waller_factor": [44, 45, 46], "powder": 44, "slight": [44, 62, 254], "rai": [44, 45, 56, 102, 103, 104, 144], "scatter": [44, 45, 46, 156, 161, 176, 197, 231], "lorentz": [44, 46], "marc": [44, 46, 256], "graef": [44, 46, 256], "mchenri": [44, 46], "2nd": [44, 71, 80, 85, 90, 160, 163, 226, 232, 233, 254, 276], "ed": [44, 85, 144], "chapter13": 44, "cambridg": [44, 85, 286], "2003": [44, 85, 140, 170], "k_alpha": [44, 46], "waller": [44, 45, 46], "ndpattern": 44, "beam_direct": [45, 199], "camera_length": 45, "160": [45, 141, 232], "laue": [45, 148, 254], "inspir": [45, 76, 152, 163], "todo": [45, 60, 63, 96, 148, 155, 208, 232, 247], "iter": [45, 55, 59, 68, 71, 76, 79, 80, 82, 109, 110, 140, 147, 148, 149, 161, 166, 175, 176, 179, 184, 189, 190, 191, 200, 205, 223, 233, 254, 258, 263, 265, 272], "magnif": [45, 284], "twin": 45, "sampl": [45, 50, 89, 96, 103, 172, 175, 177, 223, 231, 241, 250], "thick": [45, 62, 68, 88, 148, 263], "microscop": 45, "kv": 45, "fire": [45, 147], "chromat": 45, "aberr": 45, "interplanar_spac": 45, "bragg": [45, 46], "radian": [45, 71, 143, 147, 265, 269], "sake": 45, "whole": [45, 140, 156, 199, 206, 214, 230, 233], "mott": [45, 132], "beth": [45, 175], "1st": [45, 71, 80, 90, 132, 144, 160, 163, 233, 252, 254], "approxim": [45, 55, 62, 80, 85, 101, 149, 159, 175, 179, 189, 191, 215, 223, 233, 263, 265], "coord_left": 45, "coord_right": 45, "bunch": 45, "span": [45, 156, 232], "dp": 45, "datafram": [45, 66, 74, 134, 147, 168, 176, 204, 207, 222, 240], "inherit": [45, 50, 58, 162, 187, 191, 208, 233, 264, 265, 287], "noth": [45, 73, 89, 158, 187, 206, 231, 275], "pandasdatafram": 45, "layout": [45, 96, 111], "moor": [45, 50, 233, 285, 286], "penros": [45, 50], "calcult": 45, "centimet": [45, 58], "xy": [45, 88, 137, 139, 221, 223, 252], "sin": [45, 46], "s2": [45, 76, 79, 90, 144, 233], "other_plan": 45, "relativist": [45, 181], "kinemat": 45, "laue_zon": 45, "cuka": 46, "ucsd": 46, "nano106": 46, "chapter": [46, 78, 259], "goe": [46, 197, 199, 273, 286], "frac": [46, 58, 96, 108, 145, 155, 217, 247, 249], "mathbf": 46, "g_": [46, 232], "2d_": 46, "78214": 46, "limits_": 46, "a_i": [46, 231], "b_i": 46, "f_": 46, "f_j": 46, "pi": [46, 50, 103, 130, 140, 147, 155, 189, 217, 231, 247, 249], "cdot": [46, 232], "modulu": [46, 50, 54, 144], "i_": 46, "cuka2": 46, "cuka1": 46, "cukb1": 46, "moka": 46, "moka2": 46, "moka1": 46, "mokb1": 46, "crka": 46, "crka2": 46, "crka1": 46, "crkb1": 46, "feka": 46, "feka2": 46, "feka1": 46, "fekb1": 46, "coka": 46, "coka2": 46, "coka1": 46, "cokb1": 46, "agka": 46, "agka2": 46, "agka1": 46, "agkb1": 46, "xrdpattern": 46, "larsen": 47, "pandei": 47, "jacobsen": 47, "score": 47, "phy": [47, 50, 71, 130, 131, 132, 134, 160, 163, 233, 285], "rev": [47, 50, 71, 131, 160, 163, 233, 285], "034003": 47, "cheon": 47, "duerloo": 47, "sendek": 47, "porter": 47, "reed": 47, "weakli": 47, "commensur": 47, "heterostructur": [47, 70], "nano": [47, 96], "lett": 47, "gorai": 47, "tober": 47, "stevanov": 47, "promis": 47, "thermoelectr": [47, 64], "quasi": [47, 85], "4136": 47, "bonded_structur": [47, 92], "site_index": [47, 55, 71, 89, 264], "inc_vertic": 47, "breadth": 47, "connected_matrix": 47, "gowoon": 47, "gcheon": [47, 286], "stanford": [47, 286], "largest": [47, 53, 71, 158, 159, 176, 191, 212, 252, 263], "min_clust": 47, "max_clust": 47, "45": [47, 71, 77, 141, 151, 152], "ldict": 47, "adjac": [47, 58, 71, 108, 109, 110, 272], "structure_raw": 47, "larger_cel": 47, "subunit": 47, "flat": [47, 96, 274], "wire": 47, "3x3x3": [47, 81, 82], "2x2x2": 47, "misclassifi": 47, "interpenetr": 47, "circumv": 47, "max_hkl": 47, "el_radius_upd": [47, 71, 89], "chain": [47, 209, 277], "nacl": [47, 265], "specie1": [47, 148], "specie2": [47, 148], "max_bond_dist": [47, 148], "po4": [47, 107, 148, 279], "inc_orient": 47, "inc_site_id": 47, "inc_molecule_graph": 47, "site_id": [47, 147], "molecule_graph": 47, "dr": [48, 79, 147, 226], "warren": 48, "crowlei": 48, "s_arrai": 50, "primarili": [50, 90, 149, 210, 223], "vscale": [50, 78, 149], "input_arrai": [50, 81, 149, 151], "tol": [50, 51, 55, 71, 74, 80, 81, 82, 96, 133, 136, 140, 143, 147, 148, 149, 155, 160, 204, 232, 245, 247, 254, 256, 260, 263, 265, 268, 278], "3x3x3x3": 50, "c_": 50, "ijkl": 50, "throw": [50, 80, 81, 232, 265], "input_matrix": [50, 81, 82], "__new__": [50, 51, 52, 78, 81, 82, 149, 151], "poisson": [50, 85, 144, 191], "secondari": [50, 221], "eq_stress": 50, "equilibrium": [50, 80, 96, 160], "pseudoinvers": [50, 82], "nx3x3": [50, 82], "g_r": 50, "shear": [50, 51], "g_v": 50, "reuss": 50, "hill": [50, 137, 172, 286], "include_base_prop": 50, "ignore_error": 50, "green": [50, 51, 63, 161, 175], "kristoffel": 50, "homogen": [50, 175], "k_r": 50, "k_v": 50, "young": [50, 144, 286], "moduli": [50, 232], "c_list": 50, "einstein": [50, 149], "convert_gpa_to_ev": 50, "ec": [50, 80], "3x1": [50, 58, 63, 71, 89, 140, 143, 145, 147, 149, 210, 230, 254, 265], "quad": [50, 149], "tgt": 50, "kelvin": [50, 66, 97, 151, 160, 164, 167, 230], "heat": [50, 248, 251, 276], "capac": [50, 107, 108, 109, 111], "quadratur": [50, 149], "quadpi": [50, 149], "lebedev": [50, 149], "verif": 50, "hbar": 50, "wallac": [50, 170], "tau": [50, 156, 254], "strength": [50, 75, 201, 250], "thermodynam": [50, 66, 96, 215, 233, 251], "ggt": 50, "ref": [50, 55, 71, 89, 97, 132, 156, 161], "thurston": 50, "brugger": 50, "a1604": 50, "1964": [50, 148], "137": [50, 71, 141], "a1826": 50, "1965": 50, "dulong": 50, "petit": 50, "check_rank": [50, 149], "006241509074460764": 50, "polynomi": [50, 52, 54, 100, 149, 191, 231, 276], "scalar": [50, 140, 149, 151, 159, 160, 175, 177, 178, 233, 255, 257, 269], "parameter": [50, 189], "relationship": [50, 63], "multipli": [50, 71, 96, 137, 140, 149, 232, 233], "pk2": 50, "strain_stat": 50, "6xn": 50, "absent_sym": 50, "absent": 50, "mi": 50, "hvec": 50, "stencil": 50, "add_eq": 50, "eq_strain": 50, "transposit": 50, "c_1121": 50, "c_1211": 50, "c_arr": 50, "c_vec": 50, "unphys": [50, 95, 96], "cmap": [50, 83, 276], "expr": 50, "deformation_gradi": 51, "gradient": [51, 52, 78, 79, 130, 175, 181, 184, 189, 191, 215, 223, 232, 233, 265], "matrixpo": 51, "amt": [51, 86, 90, 137, 162, 164, 167], "factori": [51, 138, 189, 205], "euler": 51, "lagrang": 51, "norm_strain": 51, "shear_strain": 51, "strain_matrix": 51, "idx": [51, 150, 219], "liter": [51, 66, 71, 75, 80, 90, 103, 122, 144, 146, 147, 148, 161, 162, 163, 164, 166, 189, 221, 223, 225, 230, 232, 233, 254], "defo": 51, "von": [51, 52, 69], "mise": [51, 52, 69], "stress_matrix": 52, "invari": [52, 90, 143, 149, 257], "deviator": 52, "characterist": [52, 60, 142, 149], "minu": [52, 83], "def_grad": 52, "piola": 52, "kirchoff": 52, "rate": 52, "real_space_cut": [53, 55], "recip_space_cut": [53, 55], "acc_factor": [53, 55], "ewaldsum": [53, 212], "dictat": [53, 55, 233], "automag": [53, 55], "Ising": 53, "spin1": 53, "spin2": 53, "ve": 53, "undergon": 54, "eos_nam": 54, "prb": [54, 152], "5480": 54, "1983": [54, 71], "intermetal": 54, "practic": [54, 76, 83, 233, 280], "195": [54, 141], "210": [54, 141], "birch_murnaghan": [54, 85], "224107": 54, "pourier_tarantola": [54, 85], "numerical_eo": [54, 85], "1103": [54, 85, 88, 163, 232, 233, 285], "physrevb": [54, 85, 163, 233, 285], "174107": [54, 85], "eos_fit": 54, "gpa": [54, 85, 225], "wrt": [54, 80, 85, 96, 149], "dimensionless": 54, "plt": [54, 66, 80, 83, 96, 186, 213, 251, 276], "dpi": [54, 276], "inch": [54, 161, 276], "8in": [54, 276], "golden": [54, 276], "fed": [54, 69], "legend": [54, 96, 161, 179], "min_ndata_factor": 54, "max_poly_order_factor": 54, "min_poly_ord": 54, "cormac": 54, "toher": [54, 84], "max_poly_ord": 54, "polyfit": 54, "m_list": 55, "num_to_return": 55, "pick": 55, "_matrix": 55, "number_of_indic": 55, "pop": [55, 201, 287], "number_return": 55, "overestim": 55, "later": [55, 63, 108, 114, 144, 148, 189], "slowli": 55, "minut": [55, 133, 263, 265], "matrix_sum": 55, "indices_left": 55, "7071067811865475": 55, "compute_forc": 55, "techniqu": [55, 175, 177, 191], "perspect": 55, "survei": 55, "abdulnour": 55, "toukmaji": 55, "board": 55, "jr": 55, "0010": 55, "4655": 55, "96": [55, 66, 77, 141], "00016": 55, "ee": 55, "duke": 55, "ayt": 55, "ewaldpap": 55, "e_recip": 55, "e_real": 55, "e_point": 55, "wish": [55, 104, 264, 285, 287], "add_oxidation_st": 55, "reproduc": [55, 129, 163, 191, 257, 258, 272], "littl": [55, 177, 189, 221, 232], "influenc": [55, 156, 165, 272], "14": [55, 96, 141, 152, 156, 159, 161, 179, 276, 279], "39964547842567": 55, "removed_indic": 55, "sub_structur": 55, "substructur": 55, "unus": [55, 233], "recov": [58, 181], "spontan": 58, "trend": [58, 276], "spaldin": 58, "beginn": 58, "modern": [58, 191, 230], "ab": [58, 137, 139, 156, 160, 161, 179, 269, 274], "1202": [58, 221], "1831": 58, "introduct": [58, 70, 85, 276], "pead": 58, "970": 58, "confirm": [58, 168], "naiv": [58, 63], "sum_i": [58, 231], "z_i": 58, "r_i": 58, "zval": [58, 128, 129, 130, 230, 232], "subroutin": 58, "point_charge_dipol": 58, "belong": [58, 63, 76, 82, 108, 141, 148, 166, 179], "mm2": 58, "4mm": 58, "6m": 58, "Being": 58, "centrosymmetr": 58, "222": [58, 141], "modulo": 58, "slope_cutoff": 58, "005": [58, 156, 232, 233], "minima": [58, 79, 161], "p_elec": 58, "p_ion": [58, 232], "p_elecs_in_cartesian": 58, "p_ions_in_cartesian": 58, "interpolate_lattic": [58, 147], "calc_ionic_from_zv": 58, "convert_to_muc_per_cm2": 58, "all_in_polar": 58, "quanta": 58, "microcoulomb": 58, "p_0": 58, "n_i": 58, "polarizaiton": 58, "compositionlik": [58, 62, 145, 147], "validate_proxim": [58, 62, 63, 138, 147, 148, 264], "why": [58, 90, 189, 197, 230], "ridicul": 58, "fe2": [58, 62, 71, 75, 90, 137, 138, 144, 145, 147, 148, 150, 265, 278, 287], "56": [58, 62, 71, 138, 141, 145, 147, 148, 150, 151, 279], "overal": [58, 147, 156, 189, 190, 191, 233, 287], "apart": [58, 62, 95, 138, 147, 148, 284], "fractional_coord": [58, 62, 138, 140, 147, 148], "closet": 58, "zval_dict": 58, "tini": 58, "zval_dictionari": 58, "use_metal_edge_extend": 59, "opt_step": 59, "10000": [59, 79, 137, 206], "prev_unique_frag_dict": 59, "assume_previous_thorough": 59, "aka": [59, 140], "disconnect": [59, 63], "reform": 59, "liec": 59, "plai": 59, "nice": [59, 161, 251, 276, 284], "subfrag": 59, "insuffici": [59, 168], "aim": [59, 75, 184, 263], "mol_graph": [59, 71], "instanti": [60, 147, 149, 161, 162, 168, 175, 178, 179, 182, 187, 189, 216, 226, 233, 287], "func_group": [60, 63, 147], "catch_bas": 60, "qualifi": 60, "carbon": [60, 137, 221, 223], "sought": 60, "ertl": 60, "benzen": [60, 136, 223], "methyl": [60, 63, 147], "ethyl": 60, "think": [60, 233, 287], "butyl": 60, "propyl": 60, "mark": [60, 161, 191, 232, 286], "quot": 60, "aromat": [60, 223], "heteroatom": 60, "nonaromat": 60, "acet": 60, "sp3": [60, 184], "nitrogen": 60, "oxiran": 60, "aziridin": 60, "thiiran": 60, "disjoint": [60, 63], "presum": 60, "rotation_axi": [62, 263], "rotation_angl": [62, 263], "gb_plane": 62, "join_plan": 62, "init_cel": 62, "vacuum_thick": [62, 263], "ab_shift": [62, 263], "pertain": [62, 138, 148], "dummi": [62, 80, 137, 144, 148, 204, 215, 221, 223, 263], "hold": [62, 148, 241], "necessarili": [62, 63, 96, 148, 204, 247, 254, 263, 265], "grain_label": 62, "top_incid": 62, "bottom_incid": 62, "quick_gen": [62, 263], "closer": [62, 71, 130, 265], "initial_structur": [62, 89, 148], "twist": [62, 263], "tilt": [62, 204], "rid": [62, 148], "redund": 62, "plane_cutoff": 62, "r_axi": 62, "r_angl": 62, "all_combin": 62, "a40": 62, "108": [62, 88, 141], "1984": [62, 70, 144], "sigma1": 62, "angle11": 62, "angle12": 62, "sigma2": 62, "angle21": 62, "angle22": 62, "microstructur": [62, 89], "c2_a2_ratio": 62, "a38": 62, "550": 62, "1982": 62, "four": [62, 71, 114, 130, 140, 147, 150, 184, 204, 276], "axial": [62, 143, 254, 263], "irrat": [62, 263], "c2_b2_a2_ratio": 62, "scipta": 62, "metallurgica": 62, "291": 62, "1992": [62, 152], "lam": [62, 263], "c2": [62, 66, 179, 200, 263], "b2": [62, 263], "ratio_alpha": 62, "a45": 62, "505": [62, 141], "1989": 62, "weber": 62, "b46": 62, "expand_tim": [62, 263], "max_search": [62, 263], "tol_coi": [62, 263], "rm_ratio": [62, 263], "60": [62, 133, 140, 141, 177, 263, 279, 287], "tune": [62, 156, 161, 233, 263], "warrant": [62, 263], "logic": [62, 71, 108, 168, 232, 263], "bond_length": [62, 63, 263], "max_denomin": [62, 137, 265], "index_non": 62, "denomin": [62, 137, 265], "lat_typ": 62, "rho": [62, 160], "trans_cri": 62, "a32": 62, "783": 62, "t2": 62, "t1": 62, "mat": [62, 68, 131, 201], "mag": [62, 232, 258], "r_matrix": 62, "csl": 62, "That": [62, 71, 89, 146], "shortest": [62, 136, 147, 243, 244, 269, 270], "t_matrix": 62, "alia": [63, 71, 73, 78, 133, 151, 172, 176, 177, 178, 179, 189, 213, 230, 251], "graph_data": 63, "keeff": [63, 71], "from_index": 63, "to_index": 63, "warn_dupl": 63, "edge_properti": [63, 71], "doesn": [63, 129, 147, 148, 158, 225, 230, 269], "from_jimag": 63, "to_jimag": 63, "new_weight": 63, "new_edge_properti": 63, "to_dict_of_dict": 63, "allow_revers": 63, "word": [63, 204, 272], "induc": [63, 272], "jaccard": 63, "union": [63, 258], "underli": [63, 71, 144, 187], "count": [63, 71, 80, 111, 128, 138, 175, 204, 232, 287], "occurr": [63, 147, 179, 206, 232, 265], "hide_unconnected_nod": 63, "hide_image_edg": 63, "edge_color": [63, 276], "node_label": 63, "weight_label": 63, "image_label": 63, "color_schem": 63, "keep_dot": 63, "fdp": 63, "mislead": [63, 130], "impos": 63, "filetyp": 63, "pdf": [63, 201, 251, 272], "red": [63, 101, 161, 251], "unconnect": 63, "neato": 63, "crowd": 63, "from_dict_of_dict": 63, "periodic_sit": 63, "return_index_map": 63, "submolecul": 63, "misdirect": 63, "undirect": 63, "func_grp": 63, "graph_dict": 63, "strategy_param": 63, "amend": 63, "substitu": [63, 147], "ch3": [63, 147], "direction": [63, 147, 252], "attach": [63, 144, 147, 151, 190, 191, 224, 232], "prop": 63, "replic": [63, 231], "remap": [63, 137], "repeatedli": 63, "alt": 63, "exchange_const": 63, "\u00e5": [63, 71, 144, 216], "use_weight": [63, 71, 213], "enantiom": 63, "violat": 63, "alphabet": [63, 80, 137, 139, 197, 230], "anonym": [63, 90, 137, 139, 147, 172], "all_weight": 63, "median": 63, "std_dev": 63, "from_imag": 63, "to_imag": 63, "herfindahl": 64, "hirschman": 64, "geograph": 64, "confin": 64, "dispers": [64, 191, 225, 233], "driven": 64, "gaultoi": 64, "flow": [66, 191], "c1": [66, 137, 179, 215], "grand_pd": 66, "pd_non_grand": 66, "include_no_mixing_energi": 66, "use_hull_energi": 66, "no_mixing_energi": 66, "reservoir": [66, 96], "reactant1": 66, "no_mixing_energy1": 66, "reactant2": 66, "no_mixing_energy2": 66, "tie": 66, "miara": 66, "kim": 66, "amp": 66, "266": [66, 141], "273": 66, "5b04082": 66, "bo": 66, "105": [66, 141], "126": [66, 141], "1038": [66, 71, 96, 148, 156, 163, 164, 172, 255, 257, 285], "s41578": 66, "019": [66, 99], "0157": 66, "4853": 66, "\u03b4\u03bc": 66, "t_std": 66, "298": [66, 97, 163, 167, 221, 227], "n2": [66, 99, 137, 158, 168, 233], "cl2": [66, 137, 168, 233], "h2": [66, 96, 137, 163, 168, 179], "molar": [66, 144], "kj": [66, 151, 215], "mixing_ratio": 66, "reaction_energi": 66, "reaction_equ": 66, "mno2": 66, "e_min": 66, "x_min": 66, "substrate_structur": 68, "film_structur": 68, "zslgen": [68, 69], "crystallin": [68, 71, 164, 177, 178, 241, 285], "bidirectionalzsl": 68, "film_thick": 68, "substrate_thick": 68, "in_lay": 68, "film_matrix": 68, "sub_matrix": 68, "growth": 69, "film_max_mil": 69, "substrate_max_mil": 69, "zur": [69, 70], "mcgill": [69, 70, 233, 286], "elasticity_tensor": 69, "plu": [69, 71, 143, 163], "max_area_ratio_tol": 70, "max_area": 70, "max_length_tol": 70, "max_angle_tol": 70, "bidirect": 70, "methodologi": [70, 129, 163, 189, 221, 223], "55": [70, 141], "378": 70, "1063": [70, 285], "333084": 70, "nearli": [70, 263], "superlattic": 70, "film_area": 70, "substrate_area": 70, "transformation_set": 70, "super_lattic": 70, "_sl_vector": 70, "variant": [70, 232, 233, 276], "linalg": 70, "area_multipl": 70, "cassel": 70, "scott": 70, "springer": 70, "busi": [70, 272], "media": 70, "matrix_list": 70, "vec_set1": 70, "vec_set2": 70, "vec1": 70, "vec2": 70, "brunner": 71, "interatom": [71, 189, 263], "siw": 71, "coval": [71, 77, 136, 142, 147, 204, 276, 283], "site_idx": 71, "backtrack": 71, "hop": [71, 272], "_get_nn_shell_info": 71, "get_all_nn": 71, "protect": 71, "yourself": 71, "weighted_cn": 71, "cation_anion": 71, "x_diff_weight": 71, "porous_adjust": 71, "search_cutoff": 71, "fingerprint_length": 71, "miner": [71, 84, 144], "iii": [71, 140, 145, 147, 148], "disregard": 71, "penal": 71, "readjust": 71, "fixed_length": 71, "on_disord": 71, "take_majority_strict": 71, "take_majority_drop": 71, "take_max_speci": 71, "altogeth": 71, "enclos": [71, 190, 224, 232, 278], "nn_data": 71, "cut_off_dict": 71, "omit": [71, 148, 230], "null": 71, "vesta_2019": 71, "visualis": 71, "use_fictive_radiu": 71, "hopp": 71, "rudolf": 71, "econ": 71, "fictiv": 71, "mefir": 71, "zeitschrift": 71, "f\u00fcr": 71, "kristallographi": 71, "150": [71, 141, 156, 279], "23": [71, 76, 141, 179], "allow_patholog": 71, "extra_nn_info": 71, "compute_adj_neighbor": 71, "ncomms15679": 71, "cordero": 71, "min_bond_dist": 71, "specieslik": [71, 90, 136, 144, 145, 147, 160, 265], "autobond": 71, "regard": [71, 264, 265], "el1_sym": 71, "el2_sym": 71, "permit": [71, 272], "recogn": [71, 139, 168, 192], "sgl_bd": 71, "bent": 71, "angular": [71, 144, 179, 189, 230], "see_saw_rect": 71, "saw": 71, "tetrahedra": 71, "oct": [71, 75, 144, 179, 233], "octahedra": 71, "bodi": [71, 190, 224, 232], "131": [71, 141, 152], "244103": 71, "2009": [71, 85, 130, 131, 170, 279], "tri_plan": 71, "planar": 71, "sq_plan": 71, "pent_plan": 71, "pentagon": 71, "tri_pyr": 71, "pyramid": 71, "basal": 71, "sq_pyr": 71, "pent_pyr": 71, "hex_pyr": 71, "tri_bipyr": 71, "bipyramid": 71, "sq_bipyr": 71, "pent_bipyr": 71, "hex_bipyr": 71, "cuboct": 71, "cuboctahedra": 71, "q2": 71, "unspecif": 71, "boop": 71, "steinhardt": 71, "784": 71, "805": 71, "q4": 71, "q6": 71, "reg_tri": 71, "regular": [71, 190, 224, 232, 233, 234, 249], "vari": [71, 80, 148, 181, 204, 215, 232, 264, 265], "oct_legaci": 71, "13352": 71, "13361": 71, "sq_pyr_legaci": 71, "op_param": 71, "180": [71, 130, 221, 223], "6081734479693927": 71, "66666666667": 71, "igw_ta": 71, "igw": 71, "igw_ep": 71, "equatori": 71, "fac_aa": 71, "azimuth": [71, 159, 161], "cosin": 71, "exp_cos_aa": 71, "min_spp": 71, "south": 71, "pole": [71, 175], "792526803190927": 71, "igw_spp": 71, "w_spp": 71, "phi": [71, 83], "trigonometr": [71, 274], "And": [71, 232], "indices_neigh": 71, "target_spec": 71, "overwrit": [71, 73, 187, 190, 212, 223, 230], "consequ": [71, 83], "furthermor": [71, 212], "polyhedra": [71, 89], "conceptu": 71, "happen": [71, 76, 206, 231], "attent": 71, "afresh": 71, "get_all_sit": 71, "d_min": 71, "trial": 71, "d_min_okeffe": 71, "d_min_vir": 71, "vire": 71, "on_disorder_opt": 71, "tetrahedr": [71, 75], "rectangular": [71, 216, 243, 244], "tessel": 71, "subtend": 71, "angle_norm": 71, "face_dist": 71, "n_vert": 71, "a35": 71, "772": 71, "775": 71, "min_dist": [71, 147, 263, 265], "min_okeeff": 71, "minimumokeeff": 71, "min_vir": 71, "tent": 71, "el1": 71, "el2": 71, "allr": 71, "rochow": 71, "okeeffe_param": 71, "el_symbol": 71, "vin": 71, "uin": 71, "libe": 71, "h3o": 71, "xoh2": 71, "2903": 71, "thresh": [71, 148, 236], "cp": [71, 97], "pack": [71, 107, 175, 177, 189, 216, 230, 233, 287], "hcp": [71, 101, 131, 265], "unrecogn": 71, "qtet": 71, "qoct": 71, "qbcc": 71, "vt1": 71, "vt2": 71, "vt3": 71, "vt4": 71, "tetrahedron": [71, 75, 80, 144, 184, 230, 233], "overwrite_magmom_mod": 73, "round_magmom": 73, "detect_val": 73, "make_primit": 73, "default_magmom": 73, "set_net_posit": 73, "threshold_nonmag": 73, "ferromagnet": [73, 175, 263], "irrespect": [73, 90], "replace_all_if_undefin": 73, "uniti": 73, "theshhold": 73, "decim": [73, 80, 140, 147, 148, 149, 160, 180, 276, 278, 279], "kernel": [73, 272], "bohr": [73, 75, 130, 140, 144, 151, 175, 186, 189], "magneton": [73, 75, 144], "nonmagnet": 73, "hamiltonian": [73, 74, 175, 189], "strictli": [73, 137, 191, 274], "spacegroup_symbol": [73, 147, 278], "international_numb": [73, 147], "heurist": [73, 75], "abbrevi": [73, 248, 256], "ferrimagnet": [73, 263], "antiferromagnet": [73, 254, 263], "truncate_by_symmetri": 73, "transformation_kwarg": 73, "magneticstructureanalyz": 73, "plausibl": [73, 263], "\u00b5b": 73, "choos": [73, 80, 161, 189, 191, 204, 233, 247, 251, 255, 264, 265, 284], "antiferromagnetic_by_motif": 73, "ferrimagnetic_by_motif": 73, "ferrimagnetic_by_speci": 73, "inequival": [73, 217], "sensibl": [73, 76, 90, 159], "unsymmetr": [73, 232], "implaus": 73, "structure_a": 73, "structure_b": 73, "proxi": 73, "bocarsli": 73, "6b04729": 73, "ordered_structur": [74, 134], "02": [74, 77, 100, 161, 179, 233, 285], "classic": [74, 134, 156, 215], "magneticorderingswf": 74, "nnn": [74, 134], "sgraph": [74, 134], "unique_site_id": [74, 134], "wyckoff_id": 74, "nn_interact": [74, 134], "nnnn": 74, "ex_mat": 74, "ex_param": [74, 134], "mev": [74, 134, 251], "fm_struct": 74, "afm_struct": 74, "fm_e": 74, "afm_": 74, "j_avg": 74, "solv": [74, 96, 177, 243, 244, 263], "hmodel": 74, "j_ij": 74, "e_afm": 74, "e_fm": 74, "crude": 74, "sublattic": 74, "multisublattic": 74, "mft_t": [74, 134], "javg": 74, "priorit": 74, "jahn": 75, "teller": 75, "calculate_val": 75, "guesstimate_spin": 75, "op_threshold": 75, "guesstim": 75, "caution": [75, 159, 160, 191, 232], "quit": [75, 80, 191], "strong": [75, 272], "weak": [75, 76], "spin_stat": 75, "spin_config": [75, 144], "roughli": 75, "e_g": [75, 160], "unevenli": 75, "occupi": [75, 142, 189, 191, 214, 284], "t_2g": 75, "weaker": 75, "t2_g": 75, "possible_jt_act": 75, "prerequisit": [76, 77], "rough": [76, 77], "rmsd": 76, "charnlei": 76, "hashabl": [76, 90, 137, 145, 147, 152], "mol1": [76, 77, 222], "mol2": [76, 77, 222], "list1": 76, "list2": 76, "Their": [76, 136], "unform": 76, "ignore_warn": 76, "unfeas": 76, "million": [76, 184], "p_prime": 76, "ind": [76, 140, 186], "achiev": [76, 149, 156, 265, 272], "genet": 76, "idea": [76, 187, 199, 287], "feasibl": [76, 191], "worst": [76, 176], "brute": [76, 94, 96], "elimin": [76, 233], "outlier": 76, "inertia": [76, 254], "hungarian": 76, "p_atom": 76, "p_centroid": 76, "p_weight": 76, "q_atom": 76, "q_centroid": 76, "q_weight": 76, "prealign": 76, "perm_ind": 76, "v1": [76, 172, 254, 269], "rodrigu": 76, "stackexchang": 76, "476311": 76, "inchi": 76, "obalign": 76, "jsonabl": 76, "en": [76, 143, 144, 269], "wikipedia": [76, 143, 144, 269], "kabsch_algorithm": 76, "cnx": 76, "hv": 76, "rsdwl": 76, "mapper": 76, "molatommapp": 76, "mol_list": 76, "assumpt": [76, 90, 160], "s1": [76, 79, 84, 90], "s3": [76, 90], "deem": [77, 147, 148], "beatriz": 77, "dalton": 77, "2832": 77, "2838": 77, "1039": [77, 252], "b801115j": 77, "31": [77, 85, 141, 144, 215, 221], "84": [77, 141, 163, 285, 287], "73": [77, 141], "71": [77, 141, 156], "57": [77, 141], "58": [77, 141, 279], "21": [77, 141, 179, 215, 221], "07": [77, 99, 130, 147, 189, 191], "53": [77, 85, 141, 148, 250, 285], "39": [77, 141, 179, 221, 279], "42": [77, 141, 170], "24": [77, 111, 141], "32": [77, 104, 133, 141, 151, 171, 233, 263], "22": [77, 141, 179, 233], "75": [77, 101, 140, 141, 147, 191, 259, 264, 265, 287], "47": [77, 141, 210, 279], "44": [77, 141, 179], "04": [77, 100, 137, 179, 199, 285], "99": [77, 141, 191, 233], "98": [77, 141, 279], "94": [77, 141], "92": [77, 141], "89": [77, 141, 160, 279], "87": [77, 89, 141, 279], "62": [77, 141, 254], "36": [77, 128, 141, 179, 232, 285], "69": [77, 141, 279], "bond_length_cap": 77, "covalent_radiu": 77, "priority_bond": 77, "priority_cap": 77, "ignore_ionic_bond": 77, "bond_13_cap": 77, "elong": 77, "Such": 77, "loos": [77, 80], "prioriti": [77, 230], "cs_matrix": 78, "shield": [78, 232], "rk": 78, "harri": 78, "magn": 78, "reson": 78, "582": 78, "598": 78, "1002": 78, "mrc": 78, "2225": 78, "1x3": [78, 155, 230], "primari": [78, 96, 191, 263], "6x1": [78, 149], "maryland": [78, 232], "haeberlen": 78, "mehr": 78, "efg_matrix": 78, "electr": [78, 144, 232, 233], "c_q": 78, "wasylishen": 78, "ashbrook": 78, "wimperi": 78, "quadrupolar": [78, 137, 144], "nuclei": [78, 130], "wilei": [78, 101, 131], "son": [78, 101], "planck": [78, 286], "nuclear": [78, 104, 144, 185, 215], "quadrupol": [78, 144, 233], "mb": [78, 151, 191, 215, 230], "millibarn": [78, 144], "elementari": 78, "proton": 78, "isotop": [78, 144, 179, 226, 233], "mhz": [78, 232], "ziqin": 79, "daniil": 79, "kitchaev": [79, 285], "pieremanuel": 79, "canepa": [79, 285], "wenxuan": 79, "huang": [79, 285], "145": [79, 141, 285], "074112": 79, "farther": 79, "superclass": [79, 233], "start_struct": 79, "end_struct": 79, "relax_sit": 79, "n_imag": 79, "mid": 79, "outfil": 79, "17": [79, 85, 141, 144, 171, 179, 221, 223, 252, 279], "min_it": 79, "max_it": [79, 191], "max_tol": 79, "5e": [79, 88, 156, 233, 250], "counterbalanc": 79, "discret": [79, 232, 265], "40": [79, 141, 170, 221, 233, 279], "diverg": [79, 191, 217], "exit": [79, 232], "pot": [79, 232], "rescal": [79, 161, 249], "volumentr": 79, "isotrop": [79, 156, 232], "narrow": 79, "obei": [79, 82, 141, 144, 152, 233], "new_dim": 79, "coars": [79, 191], "terminal_composit": 80, "normalize_terminal_composit": 80, "p2o5": 80, "breakdown": 80, "fall": [80, 140, 147, 263, 284], "li3po4": 80, "chempot": [80, 96], "encompass": [80, 83, 96], "computed_data": 80, "legendr": [80, 175], "u_x": 80, "n_x": 80, "kang": [80, 96, 285], "1798": [80, 285], "1807": [80, 285], "cm702327g": [80, 285], "delithi": [80, 90, 285], "olivin": [80, 285], "mpo4": [80, 285], "cathod": [80, 284, 285], "electrochem": [80, 83, 233, 285], "comm": 80, "427": [80, 141, 285], "430": [80, 141, 285], "elecom": [80, 285], "010": [80, 254, 255, 257, 285], "themselv": [80, 130, 161, 230], "reconstitut": [80, 137, 147], "_comput": 80, "newli": 80, "show_unst": [80, 96], "ternary_styl": 80, "plotkwarg": 80, "enter": [80, 137, 287], "e_hul": 80, "ternari": [80, 161], "markerfacecolor": 80, "4daf4a": 80, "markers": [80, 176, 251], "linewidth": [80, 161, 176, 276, 284], "_map": 80, "uli": 80, "uo": 80, "contour": 80, "instabl": [80, 110, 191], "label_unst": 80, "energy_colormap": 80, "process_attribut": 80, "label_uncertainti": 80, "highlight_entri": 80, "shade": [80, 96], "ternary_2d": 80, "quaternari": 80, "arbitrarili": [80, 130, 159], "ternary_3d": 80, "highlight": [80, 287], "trace": [80, 156, 277], "repetit": [80, 148, 247], "show_label_index": 80, "xlim": [80, 96, 161, 213, 250, 251, 282], "\u00b5li": 80, "\u00b5li0": 80, "versu": 80, "anod": 80, "uptak": 80, "evolut": [80, 83], "stream": [80, 179, 278], "stringio": 80, "image_format": [80, 111, 284], "svg": 80, "optino": 80, "keep_all_spac": 80, "act": [80, 89, 143, 258], "subspac": [80, 189], "allow_neg": [80, 137], "check_stabl": 80, "on_error": 80, "2840": 80, "slsqp": 80, "joggl": 80, "mu_li": 80, "mu_o": 80, "target_comp": 80, "open_elt": 80, "abo3": [80, 287], "mu_min": 80, "mu_max": 80, "comp1": [80, 86], "comp2": [80, 86], "tielin": [80, 109], "e_above_hul": 80, "circumst": 80, "huge": [80, 189, 191], "proport": [80, 140, 147, 175, 230, 233], "decomp": 80, "energy_above_hul": 80, "space_limit": 80, "stable_onli": 80, "maxit": [80, 149, 226], "1000": [80, 177, 184, 199, 205, 215, 233, 279], "enthalpi": [80, 97, 163, 164, 201, 225, 285], "polymorph": [80, 96], "novel": 80, "bartel": [80, 164], "trewartha": 80, "dunn": [80, 286], "examin": 80, "npj": [80, 96, 156, 161, 255, 257], "97": [80, 141, 285], "recalcul": [80, 189], "cheaper": [80, 189], "compet": 80, "tighter": 80, "comp_tol": 80, "mu_o2": 80, "487582010000001": 80, "li4o2": 80, "get_decomp_and_decomp_energi": 80, "unari": 80, "dep_elt": 80, "tol_en": 80, "target_composit": 80, "n_element": 80, "entry1": [80, 110, 166], "entry2": [80, 110, 166], "float_fmt": 80, "4f": [80, 212, 276], "electrolyt": [80, 233], "sp_map": 80, "nxd": 80, "newlin": [80, 205, 206], "newstable_entri": 80, "newunstable_entri": 80, "prettier": 80, "setoflin": 80, "3x6": 81, "input_vasp_arrai": 81, "sensit": [82, 144, 147, 160, 191, 263], "bec": 82, "pointop": [82, 260], "borneffectivechargetensor": 82, "eigtol": 82, "opstol": 82, "max_charg": 82, "acoust": [82, 247, 249], "fcm": 82, "sharedop": 82, "nxnx3x3": 82, "1a": 82, "1b": 82, "2a": [82, 133, 147, 263, 265], "2b": 82, "numit": 82, "3nx3n": 82, "unsymmeter": 82, "asum": 82, "fcmasum": 82, "unsymmetrized_fcm": 82, "max_forc": [82, 191], "ist": 82, "nx3x3x3": 82, "rcond": 82, "rcondi": 82, "anumit": 82, "tenosr": 82, "entry_list": 83, "comp_dict": 83, "conc_dict": 83, "nproc": 83, "concentr": [83, 131, 156, 160, 161], "kinet": [83, 101, 141, 144, 219, 232, 233], "won": [83, 101, 114, 156], "overstabil": 83, "henc": [83, 168, 230, 265, 273], "ph": 83, "basin": 83, "pourbaix_entri": 83, "boundary_point": 83, "ot": [83, 189, 191], "prod_comp": 83, "coeff_threshold": 83, "aqueou": [83, 163, 164], "stoichiometr": [83, 96, 137, 170], "unprocess": 83, "0591": [83, 279], "log10": 83, "conc": 83, "nO": 83, "mu_h2o": 83, "2no": 83, "h2o": [83, 139, 163], "she": 83, "invok": [83, 185], "oh": [83, 96, 139], "zn2o6": 83, "agte3": 83, "label_domain": 83, "label_fonts": [83, 96], "show_water_lin": 83, "show_neutral_ax": 83, "xlo": [83, 216], "xhi": [83, 216], "ylo": [83, 216], "yhi": [83, 216], "font": [83, 96, 111, 161, 276], "water": [83, 163, 215, 216, 221, 223, 286, 287], "horizont": 83, "ph_rang": 83, "ph_resolut": 83, "v_rang": 83, "v_resolut": 83, "e_hull_max": 83, "rdylbu_r": 83, "eg": [83, 90, 96, 144, 160, 199, 233], "naoh": [83, 139], "aq": [83, 139, 278], "na2o": [83, 90], "OF": [84, 223, 272], "mehl": [84, 230], "hick": 84, "levi": 84, "hanson": 84, "curtarolo": [84, 233, 254, 255, 257], "136": [84, 131, 141], "s828": 84, "017": [84, 96], "initial_ltol": 84, "initial_stol": 84, "initial_angle_tol": 84, "a_xb_1": 84, "x_c": 84, "gradual": 84, "strukturbericht": 84, "harmon": 85, "comphi": 85, "2004": [85, 272], "t_min": [85, 226], "300": [85, 156, 161, 164, 189, 191, 226, 276], "t_step": [85, 226], "t_max": [85, 226], "use_mie_gruneisen": 85, "anharmonic_contribut": 85, "quadrat": 85, "mie": 85, "slater": 85, "eq": [85, 151, 233, 250], "unitless": 85, "thank": [85, 256], "790": 85, "006": 85, "0k": 85, "log": [85, 113, 160, 161, 200, 207, 287], "dv": 85, "2e": 85, "3e": 85, "blanco": [85, 130], "joumal": 85, "theochem": 85, "368": 85, "245": [85, 141], "255": [85, 141, 284], "poirier": 85, "earth": [85, 144], "interior": 85, "optimum": 85, "vibrat": [85, 181, 215, 248, 251], "helmholtz": [85, 248], "a_vib": 85, "g_opt": 85, "v_opt": 85, "u_vib": 85, "reactants_coeff": 86, "products_coeff": 86, "energy1": 86, "energy2": 86, "rxn_string": 86, "2li2o": 86, "reactant_entri": 86, "product_entri": 86, "underdetermin": 86, "predicit": [87, 98], "spectroscopi": [88, 102, 104, 199], "usnistgov": 88, "9b02166": 88, "physrevlett": 88, "068701": 88, "zz": [88, 252], "yz": [88, 252], "imaginari": [88, 175, 214, 231, 232, 247, 250], "indirect": [88, 272], "diagonalis": [88, 189], "material_energy_for_absorbance_data": 88, "material_absorbance_data": 88, "material_direct_allowed_gap": 88, "material_indirect_gap": 88, "293": 88, "absorbance_in_inverse_centimet": 88, "cut_off_absorbance_below_direct_allowed_gap": 88, "plot_current_voltag": 88, "absorb": [88, 103, 148, 197, 198, 199, 263], "relative_cutoff": 89, "superoxid": [89, 163], "ozonid": [89, 163], "hydroxid": 89, "nbond": 89, "percentag": [89, 90, 156, 176, 222], "index1": [89, 232, 245], "index2": [89, 232, 245], "011": 89, "economi": 89, "site1": [89, 136, 175], "site_n": 89, "012": 89, "021": [89, 163, 172], "031": 89, "055": 89, "qhull_opt": 89, "qbb": 89, "qc": 89, "qz": 89, "schaefli": 89, "c_i": [89, 232], "liquid": [89, 97, 144, 163], "amorph": [89, 233], "stepanyuk": 89, "1993": 89, "schlaefli": 89, "c3": [89, 179], "c4": [89, 179], "c6": 89, "c7": 89, "c8": 89, "c9": 89, "c10": 89, "denot": [89, 97, 132, 150, 160, 233], "step_freq": 89, "most_frequent_polyhedra": 89, "voronoi_index": 89, "voronoi_ensembl": 89, "swept": 89, "atom_i": 89, "atom_j": 89, "image_j": 89, "outsid": [89, 96, 148], "image_index": 89, "sitei": 89, "sitej": 89, "site_i": 89, "site_j": 89, "49": [89, 141, 170, 254, 255, 257], "atom_": 89, "element1": 89, "element2": 89, "return_nbond": 89, "polysulfid": [89, 163], "sulfat": 89, "fe3": [90, 137, 144, 263], "Or": [90, 143, 277], "matter": [90, 129, 134, 151, 163, 232, 287], "weird": 90, "quicker": 90, "overlap": [90, 158, 161, 189, 190, 213, 214, 232], "vice": [90, 132, 143, 287], "versa": [90, 132, 143, 287], "ltol": [90, 140, 166], "angle_tol": [90, 166], "primitive_cel": [90, 166], "attempt_supercel": 90, "allow_subset": 90, "supercell_s": 90, "ignored_speci": 90, "niggli": [90, 140, 147, 233, 263], "invalid": [90, 144, 254], "ia": 90, "ib": 90, "nsite": [90, 172, 249, 263], "lithiat": [90, 109], "declar": [90, 141, 166, 206], "rigid": [90, 144, 166], "struct1": 90, "struct2": 90, "skip_structure_reduct": 90, "stuct2": 90, "include_dist": 90, "preprocess": [90, 168, 192], "maximin": 90, "min_map": 90, "superset": [90, 269, 270], "min_rm": 90, "minimax_rm": 90, "exce": [90, 191, 263], "include_ignored_speci": 90, "inter": [90, 147], "obvious": [90, 144], "imposs": [90, 197], "len": [90, 94, 147, 189, 247, 249, 264, 265], "s_list": 90, "num_dop": 92, "match_oxi_sign": 92, "n_type": 92, "p_type": 92, "radii_diff": 92, "dopant_spci": 92, "original_speci": 92, "dopant_speci": 92, "lambda_t": [93, 94, 263], "never": 93, "to_this_composit": 93, "from_default": 93, "fischer": [93, 94, 233, 285], "ehrlach": [93, 94], "656": [93, 94], "663": [93, 94, 179], "ic102031h": [93, 94], "species_list": 94, "exception": 94, "260": [94, 141], "itertool": 94, "_sp": 94, "conditional_probability_list": 94, "_threshold": 94, "zip": [94, 140, 187, 233, 254], "structures_list": 94, "remove_dupl": 94, "remove_exist": 94, "min_scal": 95, "max_scal": 95, "dl": 95, "conjunct": [95, 160], "icsd_vol": 95, "check_isostructur": 95, "radii_typ": 95, "use_bv": 95, "rl": 95, "isostructur": 95, "ref_structur": 95, "radhakrishnan": [96, 101, 148, 285], "winston": [96, 101, 148, 285, 286], "sun": [96, 148, 233, 285], "160080": [96, 148, 285], "sdata": [96, 148, 285], "nanoscal": 96, "sodium": 96, "implic": 96, "letter": [96, 144, 147, 177, 191, 232, 233, 254, 257, 261], "1020": 96, "nl404557w": 96, "s41524": [96, 99, 255, 257], "0017": 96, "delu_o": 96, "delu_h": 96, "delu_oh": 96, "nanoparticl": 96, "energet": 96, "competit": 96, "bulk_entri": 96, "max_r": 96, "increment": [96, 156, 232], "delu_dict": 96, "delu_default": 96, "from_sphere_area": 96, "e_unit": 96, "kev": [96, 199], "r_unit": 96, "nanomet": 96, "scale_per_atom": 96, "particl": [96, 204], "delu_el": 96, "el": [96, 132, 137, 138, 144, 160, 189, 191], "unscal": 96, "analyzer1": 96, "analyzer2": 96, "reach": [96, 132, 189, 232, 247, 254], "clean_entri": 96, "brief": [96, 130], "ads_entries_dict": 96, "computedslabentri": 96, "isol": [96, 128, 129], "rgba": 96, "coverag": 96, "ead": 96, "pulg": 96, "ordinarili": 96, "h1": [96, 179], "l1": 96, "clean_entry1": 96, "ads_entry1": 96, "ads_entry2": 96, "clean_entry2": 96, "k2": 96, "l2": [96, 103], "pristin": [96, 148], "randomli": [96, 263], "potetin": 96, "lifepo4": [96, 107, 109, 137, 278, 279, 287], "plot_ead": 96, "annotate_monolay": 96, "jperm2": 96, "monolay": 96, "primiitv": 96, "ref_delu": 96, "chempot_rang": 96, "no_clean": 96, "no_dop": 96, "xrang": 96, "ref_el": 96, "rect": 96, "nicer": [96, 161, 251, 276], "use_entry_label": 96, "no_label": 96, "mpid": 96, "max_chempot": 96, "min_chempot": 96, "ymax": 96, "ymin": 96, "35": [96, 141, 148, 252, 279, 284], "slab_entri": 96, "coexist": 96, "simultan": [96, 129], "monlay": 96, "dmu_at_0": 96, "return_se_dict": 96, "usel": 96, "incr": 96, "show_unphyiscal_onli": 96, "rangeo": 96, "fht": 96, "duli": 96, "duo": 96, "range1": 96, "range2": 96, "u_ref": 96, "u_ad": 96, "blength": [96, 148], "maximmum": 96, "therebi": 96, "longest": [96, 136], "noncontigu": 96, "locpot_filenam": 96, "outcar_filenam": 96, "label_energi": 96, "min_points_frac": 96, "0025": 96, "min_point": 96, "stai": 96, "gamma_dict": 96, "thermochem": [97, 164, 201], "data_typ": [97, 232], "cpdname": 97, "phaseinfo": 97, "temp_rang": 97, "fh": 97, "hematit": 97, "s41598": [99, 163], "45028": 99, "020": [99, 255, 257, 285], "0319": 99, "wf_noso": 99, "wf_so": 99, "trival": 99, "signifi": [99, 137], "trivial": 99, "lsorbit": [99, 232], "n1": [99, 158], "rel_tol": 99, "reimplement": 100, "henkelman": [100, 128, 232, 285], "perl": [100, 170], "spline_opt": 100, "cumul": [100, 186], "interpolation_ord": 100, "tangent": [100, 232], "zero_slop": 100, "saddl": [100, 201, 215], "relaxation_dir": 100, "00": [100, 147, 179, 233], "0n": 100, "subdir": [100, 113], "preferenti": 100, "mavrl": [100, 279], "contcar": [100, 113, 147, 230, 287], "interplot": 100, "piecewisepolynomi": 100, "normalize_rxn_coordin": 100, "extrema": [100, 156], "mep": 100, "min_extrema": 100, "max_extrema": 100, "label_barri": 100, "barrier": [100, 227], "neb_analys": 100, "arranged_neb_analys": 100, "reverse_plot": 100, "inaccur": [100, 144, 264], "arrang": [100, 137, 161, 184, 197, 254], "percol": 100, "hkil": [101, 148], "e_surf": 101, "normal_pt": 101, "dual_pt": 101, "m_ind_orig": 101, "jm": 101, "devdoc": 101, "spatial": [101, 175], "wulff_area": 101, "hkill": 101, "input_mil": 101, "off_wulff": 101, "recp_oper": 101, "variat": 101, "area_hkl": 101, "pubu": 101, "bar_po": 101, "65": [101, 141, 279], "bar_on": 101, "units_in_jperm2": 101, "legend_on": 101, "aspect_ratio": 101, "custom_color": 101, "decid": [101, 148, 189, 191, 213, 233], "joul": 101, "meter": [101, 151], "graph_obj": 101, "energy_hkl": 101, "ballufi": 101, "allen": 101, "carter": 101, "461": [101, 141], "catalyt": 101, "surface_energy_hkl": 101, "agr": 101, "absorbing_el": 103, "spectrum_typ": 103, "xane": [103, 146, 197, 198, 199], "absorbing_index": 103, "exaf": [103, 146, 197, 198, 199], "wise": [103, 206, 232], "num_sampl": 103, "xaf": 103, "l23": 103, "xanes_k": 103, "l3": 103, "xas_list": 103, "smtg": 104, "ucl": 104, "jackson": [104, 286], "anna": 104, "regoutz": 104, "russel": [104, 144], "egdel": 104, "scanlon": 104, "broaden": [104, 175, 201, 250], "photoelectron": 104, "773": 104, "21105": 104, "joss": 104, "007733": 104, "atomic_subshell_photoionization_cross_sect": 104, "repars": 104, "yeh": 104, "lindau": 104, "subshel": [104, 144, 161], "photoion": 104, "103": [104, 141], "1985": [104, 132], "155": [104, 141], "0092": 104, "640x": 104, "85": [104, 141, 163, 170, 279], "90016": 104, "spectra": [104, 144, 215, 250, 282], "arg1": [104, 146, 189], "arg2": [104, 146, 189], "kwarg1": [104, 146], "val1": [104, 146], "overarch": 105, "struc_oxid": 107, "oxi_overrid": 107, "fepo4": [107, 109], "grav": 107, "redox": 107, "li4fe3mn1": 107, "li6v4": 107, "speak": 107, "extrins": [107, 108], "voltagepair": [108, 109], "concept": [108, 199, 233, 287], "challeng": [108, 254, 257, 285], "tio2": [108, 109, 110, 279], "wherea": [108, 128, 129, 144, 148, 160, 189, 263], "liti2o4": 108, "divid": [108, 128, 130, 137, 156, 158, 164, 189, 232, 233, 248, 249], "confid": 108, "li9v6p16o58": 108, "v3p8o29": 108, "host": [108, 111, 166, 172], "use_overall_norm": 108, "gravimetr": 108, "wh": 108, "adjacent_onli": [108, 109, 110], "print_subelectrod": [108, 109, 110], "subelectrod": [108, 109, 110], "intermedi": [108, 113, 191, 232], "dataclass": [109, 144], "entries_in_chemsi": 109, "working_ion_symbol": 109, "allow_unst": [109, 165], "fef3": 109, "litio2": [109, 110], "li0": [109, 110, 137, 279], "5tio2": [109, 110], "conversion_electrod": 109, "super_electrod": 109, "step1": 109, "step2": 109, "normalization_el": 109, "topotact": 110, "strip_structur": 110, "leaner": 110, "charge_to_discharg": 110, "include_myself": 110, "xaxi": 111, "hide_neg": 111, "capacity_grav": 111, "graviometr": 111, "capciti": 111, "capacity_vol": 111, "x_form": 111, "frac_x": 111, "term_zero": 111, "600": [111, 161, 179], "font_dict": 111, "arial": 111, "graph_object": 111, "drone": [113, 114, 287], "quirki": 113, "dir": [113, 121, 134, 156, 165, 192, 233], "inc_structur": [113, 232], "file_extens": 113, "gaussiantoentrydron": 113, "gaussianio": 113, "vasptoentrydron": 113, "relax1": [113, 128, 130], "relax2": 113, "rootpath": [114, 287], "number_of_dron": 114, "leav": [114, 137, 144, 178, 191, 264, 277], "processor": [114, 189], "server": [114, 269], "dat": [116, 197, 198, 217], "engin": [118, 133, 215, 286], "rootdir": [118, 121], "reanalyz": [118, 121], "argpars": [121, 123, 124, 125, 126], "tablefmt": 121, "ion_list": 121, "success": [121, 181, 189, 191, 282], "token": [122, 210], "backup_suffix": 122, "fortran_command": 122, "cp2k_data_dir": 122, "potcar_dir": 122, "dirnam": [124, 179], "procfilefunct": 124, "fortran": [128, 131, 175, 221, 232, 285], "arnaldsson": [128, 285], "jonsson": 128, "sci": [128, 131, 160, 172, 233, 285], "254": [128, 141], "360": [128, 284, 285], "2006": [128, 156, 285], "chgcar_filenam": 128, "potcar_filenam": 128, "chgref_filenam": 128, "parse_atomic_dens": 128, "cube_filenam": 128, "partit": [128, 129, 233], "atom_index": [128, 129, 232], "raw": [128, 140, 198, 230, 232, 258], "exhibit": [128, 129], "lost": [128, 129, 149, 191, 275], "property_nam": [128, 147], "aeccar0": [128, 129, 130], "aeccar2": [128, 130], "aeccar": [128, 129, 130], "thoma": [129, 160, 286], "manz": 129, "ddec": 129, "ddec3": 129, "ddec6": 129, "cm5": 129, "gabaldon": 129, "lima": 129, "rsc": [129, 233], "adv": [129, 233], "47771": 129, "47801": 129, "wide": [129, 170, 191, 265], "nonperiod": 129, "2678": [129, 279], "2707": 129, "marenich": 129, "jerom": 129, "cramer": 129, "truhlar": 129, "hirshfeld": [129, 190, 191, 233], "gaseou": [129, 163], "condens": [129, 137], "527": [129, 141], "541": 129, "sholl": 129, "noncollinear": [129, 232, 234], "4146": 129, "4164": 129, "45552": 129, "45581": 129, "2867": 129, "meaning": [129, 130], "2455": 129, "2468": 129, "atomic_densities_path": 129, "run_chargemol": 129, "ddec6_atomic_densities_dir": 129, "index_from": 129, "index_to": 129, "charge_typ": 129, "partial_charg": 129, "spin_moment": 129, "rsquared_mo": 129, "rcubed_mo": 129, "rfourth_moment": 129, "bond_order_dict": 129, "besid": [130, 223], "otero": 130, "roza": 130, "johnson": 130, "lua\u00f1a": 130, "185": [130, 141], "1007": 130, "1018": [130, 279], "cpc": 130, "026": 130, "mart\u00edn": 130, "pend\u00e1": 130, "157": [130, 141], "018": [130, 164], "stdout": [130, 134, 147, 176, 179, 216], "stderr": 130, "cpreport": 130, "yt": 130, "zpsp": 130, "critical_point": 130, "familiar": [130, 172, 225], "nativ": [130, 178], "include_critical_point": 130, "input_script": 130, "chgcar_ref": 130, "user_input_set": [130, 134], "write_cml": 130, "substanti": 130, "promolecular": 130, "gradep": 130, "cpep": 130, "nucep": 130, "nucepsh": 130, "epsdegen": 130, "cml": 130, "augment": [130, 186, 189, 232, 243, 244], "aecar0": 130, "aecar2": 130, "field_gradi": 130, "field_hessian": 130, "characteris": 130, "grad": 130, "organ": [130, 199, 286], "ellpit": 130, "readm": [131, 271], "rodnei": 131, "forcad": 131, "77": [131, 141, 152], "224115": 131, "june": 131, "multilattic": 131, "014120": 131, "juli": 131, "lanc": 131, "nelson": 131, "59": [131, 141, 148, 152, 279, 285], "101": [131, 141, 152], "107": [131, 141], "march": 131, "morgan": [131, 286], "superstructur": 131, "freedom": [131, 137, 139, 175, 177], "144": [131, 141, 279], "149": [131, 141, 205, 241, 285], "baseexcept": [131, 151, 219], "ivec": 132, "bush_lewis_flag": 132, "buckingham": 132, "bush": 132, "lewi": 132, "gale": 132, "catlow": 132, "battl": 132, "831": 132, "837": 132, "1994": [132, 179], "1149": [132, 233], "1161": 132, "cmd": [132, 206], "commandlin": 132, "gin": 132, "gout": 132, "littleton": 132, "uc": [132, 285, 286], "valence_dict": 132, "val_dict": 132, "spring": 132, "file_nam": [132, 232], "anion_shell_flg": 132, "polariz": [132, 175, 221], "anion_core_chrg": 132, "anion_shell_chrg": 132, "cation_shell_flg": 132, "cation_core_chrg": 132, "cation_shell_chrg": 132, "cell_flg": 132, "frac_flg": 132, "symm_flg": 132, "tersoff": 132, "oxidetersoffpotentialenti": 132, "gulp_cmd": 132, "optimis": 132, "conp": 132, "qok": 132, "AT": 133, "brown": 133, "depart": [133, 286], "avdw": 133, "search_tim": [133, 263], "wr": [133, 263], "wn": [133, 263], "wd": [133, 263], "spent": [133, 263], "cpu": [133, 166, 176, 232, 263], "mont": [133, 134, 263], "carlo": [133, 134, 263], "correl": [133, 141, 152, 156, 181, 189, 191, 200, 215, 233, 263], "diamet": [133, 263], "york": [134, 276], "nanomateri": 134, "evan": [134, 286], "fan": 134, "chureemart": 134, "ostler": 134, "elli": 134, "chantrel": 134, "conden": [134, 163], "103202": 134, "mc_box_siz": 134, "equil_timestep": 134, "mc_timestep": 134, "4000": [134, 279], "save_input": 134, "hm": 134, "avg": [134, 156, 232, 258], "start_t": 134, "sim": 134, "end_t": 134, "1500": 134, "temp_incr": 134, "equilibr": 134, "mat_nam": 134, "mat_id_dict": 134, "vamp_stdout": 134, "nmat": 134, "critical_temp": 134, "parsed_out": 134, "rep": 134, "site2": 136, "default_bl": 136, "unlik": [137, 147, 160, 177, 181, 189, 232, 233, 287], "differenti": [137, 139, 147, 186, 205, 206], "deliber": 137, "__getitem__": 137, "defaultdict": 137, "get_fract": 137, "14285714285714285": 137, "li1": [137, 278], "fe1": [137, 278], "o4": [137, 278], "04399794666951898": 137, "mixtur": [137, 168], "oxi_states_overrid": [137, 139], "target_charg": 137, "all_oxi_st": [137, 139], "max_sit": [137, 139], "inclus": [137, 139, 164, 258], "nonsens": [137, 139, 230], "fe4": [137, 139], "li4": [137, 139], "o16": [137, 139], "p4": [137, 139], "abc3": 137, "subtli": 137, "unreduc": 137, "sio2": [137, 279], "noble_ga": 137, "transition_met": 137, "post_transition_met": 137, "rare_earth_met": 137, "metalloid": [137, 144], "alkali": [137, 144, 233], "alkalin": [137, 144, 179], "halogen": [137, 144, 223], "chalcogen": [137, 144], "lanthanoid": [137, 144], "actinoid": [137, 144], "o3": [137, 287], "o0": [137, 279], "introspect": 137, "weight_dict": 137, "ti6v4al": 137, "ni60ti40": 137, "weight_fract": 137, "nomenclatur": [137, 139, 144], "actinid": [137, 139, 144, 276], "polyanion": [137, 139, 165], "5o0": 137, "li4fe4p4o16": 137, "ch2": 137, "so4": 137, "x2y2": [137, 139], "fuzzy_formula": 137, "lock_if_strict": 137, "co2o3": 137, "co1": 137, "o1": [137, 158], "elem_map": 137, "mgcuo3": 137, "lio": [137, 139], "li2o2": [137, 139, 279], "nao": 137, "na2o2": 137, "ko": 137, "k2o2": [137, 279], "h2o2": [137, 139], "cso": 137, "cs2o2": 137, "rbo": 137, "rb2o2": 137, "reduced_cell_composit": 137, "unit_cell_composit": 137, "reduced_cell_formula": 137, "nelement": [137, 172, 226], "__str__": [137, 187, 197, 201, 216, 221, 230, 278], "sym_amt": 137, "interface_properti": 138, "substrate_slab": 138, "film_slab": 138, "met": [138, 272], "_properti": 139, "hydrat": [139, 149, 160, 163], "receiv": [139, 175, 177, 264], "zro2": 139, "2h2o": 139, "h4o4": 139, "bracket": [139, 185, 278], "preced": [139, 191, 201, 206, 230, 233, 278], "superscript": [139, 144, 278], "unless": [140, 143, 144, 147, 187, 208, 215, 230, 233], "iv": 140, "coords_a": 140, "coords_b": 140, "other_lattic": 140, "skip_rotation_matrix": 140, "aligned_lattic": 140, "scale_matrix": 140, "aligned_matrix": 140, "latt": 140, "acel": [140, 175], "rprim": [140, 175, 177], "ey": [140, 175], "fcoords1": [140, 269, 270], "fcoords2": [140, 269, 270], "mxn": 140, "frac_coords1": 140, "frac_coords2": 140, "fcoord": [140, 145, 186, 269], "lll_frac_coord": 140, "round_dp": [140, 147, 148], "minimis": [140, 147, 148], "gross": [140, 252], "kunstlev": [140, 252], "sauter": 140, "crystallographica": 140, "foundat": 140, "s010876730302186x": 140, "frac_point": 140, "zip_result": 140, "parallelpip": 140, "a_1": [140, 147, 232], "a_2": [140, 147], "a_3": [140, 147, 255, 257], "b_1": [140, 147, 232], "nxmax": [140, 147], "length_of_b_1": [140, 147], "supercell_imag": 140, "hex_angle_tol": 140, "hex_length_tol": 140, "metric": 140, "monoclinc": 140, "lazili": 140, "new_volum": 140, "ny": [140, 186], "nz": [140, 186], "all_coord": [140, 245], "center_coord": [140, 245], "return_fcoord": 140, "libxc": [141, 152], "client": [141, 152, 172, 179], "stuff": 141, "dev_script": 141, "regen_libxcfunc": 141, "regener": 141, "135": [141, 152], "186": 141, "88": [141, 170, 249], "86": 141, "262": 141, "132": [141, 224, 279], "130": [141, 152], "246": [141, 179], "133": [141, 152], "134": [141, 152, 241, 285], "83": 141, "152": 141, "148": 141, "153": 141, "147": 141, "61": [141, 279], "63": [141, 279], "506": 141, "507": 141, "504": 141, "516": 141, "520": [141, 233], "514": 141, "515": [141, 279], "501": 141, "502": 141, "510": 141, "508": 141, "521": [141, 232], "509": 141, "512": [141, 232], "513": 141, "511": 141, "517": 141, "523": 141, "187": 141, "188": 141, "189": 141, "190": 141, "519": 141, "518": 141, "503": 141, "165": 141, "162": 141, "163": [141, 233], "164": 141, "93": [141, 233, 279], "161": 141, "174": 141, "67": [141, 156, 279], "173": 141, "175": [141, 156], "154": [141, 198, 232], "156": 141, "197": [141, 279], "198": 141, "199": 141, "196": 141, "124": 141, "127": 141, "129": [141, 249], "192": 141, "120": [141, 152, 197, 279, 287], "184": [141, 257], "106": [141, 152, 259], "270": 141, "111": [141, 148], "114": 141, "115": 141, "104": 141, "528": 141, "525": [141, 232], "526": [141, 232], "191": 141, "529": 141, "193": 141, "182": 141, "122": 141, "82": [141, 279], "183": 141, "139": 141, "141": [141, 241, 285], "110": [141, 148], "121": 141, "265": 141, "140": [141, 257], "116": [141, 152, 179], "109": [141, 152, 279], "142": 141, "530": 141, "151": 141, "91": [141, 170, 230, 279], "524": 141, "123": [141, 151, 284], "416": 141, "417": 141, "412": [141, 232], "402": 141, "475": 141, "459": 141, "403": 141, "401": 141, "407": 141, "410": 141, "414": 141, "413": 141, "435": 141, "436": 141, "470": [141, 279], "455": 141, "433": 141, "477": [141, 252], "476": 141, "431": 141, "432": 141, "429": 141, "472": 141, "428": 141, "468": 141, "467": 141, "469": 141, "473": [141, 286], "465": 141, "437": 141, "419": 141, "415": 141, "453": 141, "404": [141, 206], "456": 141, "406": 141, "454": 141, "420": 141, "421": 141, "422": 141, "423": 141, "424": 141, "425": 141, "434": 141, "463": 141, "464": 141, "471": 141, "466": 141, "411": 141, "405": [141, 221], "418": 141, "81": 141, "426": 141, "441": 141, "440": 141, "443": 141, "438": 141, "439": 141, "449": 141, "450": 141, "444": 141, "460": 141, "462": 141, "445": 141, "446": 141, "451": 141, "442": 141, "452": 141, "458": [141, 163], "457": 141, "531": 141, "447": 141, "448": 141, "268": 141, "224": 141, "474": 141, "264": 141, "259": 141, "43": [141, 279], "240": 141, "229": 141, "72": [141, 152], "237": 141, "238": 141, "235": 141, "236": 141, "234": [141, 201], "233": 141, "78": [141, 215, 221, 279], "269": 141, "261": 141, "239": 141, "241": 141, "267": 141, "247": [141, 170], "232": [141, 198, 232], "242": 141, "211": 141, "207": 141, "244": 141, "206": 141, "204": [141, 206], "201": 141, "214": 141, "215": [141, 285], "218": 141, "216": 141, "203": 141, "219": 141, "220": 141, "225": [141, 148, 225], "226": 141, "249": 141, "250": [141, 170, 184], "243": 141, "227": 141, "221": 141, "223": 141, "257": 141, "213": 141, "212": 141, "209": [141, 279, 285], "263": 141, "205": 141, "208": 141, "202": 141, "xc_famili": 141, "xc_family_lda": 141, "xc_": [141, 152], "xc_correl": 141, "libxc_doc": 141, "constitu": 142, "uncharg": [142, 278], "srtio3": [142, 279], "338381": 142, "17001": 142, "subscript": [142, 159, 256, 278], "pairwis": 142, "unoccupi": [142, 189, 191], "758245": 142, "871362": 142, "nist": [142, 144, 164, 172], "gov": [142, 144, 172, 272], "pml": [142, 144], "affine_transformation_matrix": 143, "time_revers": 143, "thin": 143, "4x4": [143, 256], "affin": [143, 147], "magneticsymmop": 143, "translation_vec": [143, 278], "xyzt_str": 143, "2y": [143, 278], "rodr\u00edguez": 143, "carvaj": 143, "bour\u00e9": 143, "1051": 143, "epjconf": 143, "20122200010": 143, "affine_transform": 143, "point_a": 143, "point_b": 143, "from_a": 143, "to_a": 143, "r_a": 143, "from_b": 143, "to_b": 143, "r_b": 143, "are_rel": 143, "is_revers": 143, "angle_in_radian": [143, 265], "xyz_str": 143, "roto": 143, "portion": [143, 149, 231], "periodict": 144, "grammat": 144, "wrongli": 144, "vac": 144, "vacanc": [144, 263], "behav": [144, 189, 233], "front": 144, "x3": 144, "singleton": 144, "atomic_radii_of_the_elements_": 144, "data_pag": 144, "collis": 144, "bondi": 144, "worker": 144, "crc": 144, "handbook": 144, "91st": 144, "hayn": 144, "boca": 144, "raton": 144, "mendeleev": 144, "pettifor": 144, "resist": 144, "sound": 144, "refractic": 144, "3d6": 144, "4s2": 144, "boil": [144, 287], "melt": [144, 287], "superconduct": 144, "brinel": 144, "vicker": 144, "ioniz": 144, "_dict": 144, "emmet": 144, "troublesom": 144, "amu": [144, 151], "\u00e5ngstrom": 144, "nobl": 144, "gase": [144, 164], "iron": [144, 179], "hund": 144, "poor": [144, 189, 191, 286], "zebra": 144, "filter_funct": [144, 179], "printer": [144, 179], "saunder": 144, "n_e": 144, "1d2": 144, "3p0": 144, "3p1": 144, "3p2": 144, "1s0": 144, "v_e": 144, "incl": 144, "mn2": [144, 264, 265], "radius_typ": 144, "roman": [144, 161], "ix": 144, "iiipi": 144, "ivpi": 144, "ivsq": 144, "obj": [144, 151, 152, 161, 175, 177, 179, 191, 279, 284], "dummyel": 144, "skip_check": 145, "ith": [145, 232], "check_lattic": 145, "sparingli": 145, "singular": [145, 263], "govern": 145, "programmat": [145, 287], "grammar": 145, "5mn0": 145, "x_0": 146, "fwhm": 146, "charge_spin_check": 147, "unpair": [147, 201, 215, 232], "ind1": 147, "ind2": 147, "g03": 147, "g09": 147, "inp": [147, 177, 189, 197, 198, 199, 216, 287], "multicip": 147, "input_str": [147, 235], "offset": [147, 225, 232, 245], "no_cross": 147, "reorder": 147, "jumbl": 147, "forbid": 147, "attr": [147, 186], "000000e": 147, "217138e": 147, "135509e": 147, "lightweight": [147, 162, 164, 167], "merge_tol": 147, "reader": [147, 178, 189, 200, 230, 232], "magneticsymmetrygroup": 147, "belov": [147, 258], "neronova": [147, 258], "smirnova": [147, 258], "bn": [147, 258], "mandatori": [147, 156, 200, 226, 233], "include_index": 147, "include_imag": 147, "resid": 147, "subspeci": 147, "exclude_self": 147, "center_indic": 147, "points_indic": 147, "offset_vector": [147, 245], "nearestneighbor": 147, "1nn": 147, "2nn": 147, "use_site_prop": 147, "constrain_latt": 147, "unabl": 147, "reduction_algo": [147, 263], "sit": [147, 185], "parallelepip": 147, "symmetry_indic": 147, "symmetry_idx": 147, "end_structur": 147, "nimag": [147, 287], "autosort_tol": 147, "inpgen": 147, "passthru": 147, "reset": [147, 149, 284], "mutablesequ": 147, "mutablemolecul": 147, "gfn2": 147, "fmax": 147, "opt_kwarg": 147, "return_trajectori": 147, "delet": [147, 189, 199], "anchor": 147, "past": 147, "periodicimag": 147, "ni2": 147, "target_sit": 147, "nucleat": 147, "dihedr": [147, 204], "fourth": [147, 160, 215, 247, 249], "sequenti": [147, 221, 223, 263], "5a": 147, "species_map": [147, 265], "sp_and_occu": [147, 264, 265], "375": [147, 232], "modify_lattic": 147, "rapidli": 147, "rocksalt": 147, "perovksit": 147, "scaling_matrix": [147, 265], "3b": [147, 265], "amplitud": [147, 263], "relax_cel": 147, "stress_weight": 147, "_site": 147, "new_charg": 147, "617": [148, 285], "susc": [148, 285], "016": [148, 285], "reconstruction_nam": 148, "creator": 148, "archiv": 148, "fcc_110_missing_row_1x2": 148, "carefulli": [148, 233], "woods_not": 148, "2x1": 148, "vocabulari": 148, "1306": 148, "1312": 148, "transformation_matrix": [148, 254], "slabgenerator_paramet": 148, "points_to_remov": 148, "points_to_add": 148, "base_reconstruct": 148, "halit": 148, "octopolar": 148, "reconstruction_bas": 148, "halite_111_octopolar_2x2": 148, "unreconstruct": 148, "THE": [148, 272], "FOR": [148, 272], "WITH": [148, 155, 247, 249, 265], "WILL": 148, "TO": [148, 272], "reorient_lattic": 148, "inher": [148, 263], "postprocess": [148, 190, 219, 224, 231, 232], "patholog": [148, 232], "is_surfsit": 148, "mainli": [148, 156, 160, 176, 177, 190, 238], "same_species_onli": 148, "outermost": 148, "tol_dipole_per_unit_area": 148, "screw": [148, 256], "in_unit_plan": [148, 263], "polyhedr": 148, "begin": [148, 163, 177, 287], "n_layer": [148, 263], "ceil": [148, 263], "_proj_height": [148, 263], "dhkl": [148, 263], "shorter": 148, "bear": 148, "ftol": 148, "max_broken_bond": 148, "repair": 148, "_calculate_possible_shift": 148, "fcluster": 148, "init_slab": 148, "index_of_sit": 148, "destroi": 148, "undercoordin": 148, "cleav": 148, "intact": 148, "ghost_sit": 148, "goal": 148, "spill": [148, 214], "incredibli": 148, "scenario": 148, "max_index": 148, "include_reconstruct": 148, "reconstructions_arch": 148, "discern": 148, "bondlength": 148, "return_hkil": 148, "transf": 148, "symm_op": [148, 149], "shorthand": 149, "include_improp": 149, "transpos": 149, "initial_fit": 149, "1987": [149, 243, 244], "inconsist": [149, 159, 168], "other_arrai": 149, "einsum_str": 149, "voigt_rank": 149, "vsym": 149, "remaind": 149, "voigt_input": 149, "group_array_indic": 149, "zero_index": 149, "residu": [149, 165], "prec": [149, 233], "precond": 149, "precondit": [149, 189], "original_structur": 149, "new_structur": 149, "tensor_list": 149, "base_class": 149, "voight": 149, "voigt_input_list": 149, "symmetryoper": 149, "mutablemap": [149, 177, 187], "vector3d": 150, "matrix3d": 150, "sitepropstyp": 150, "frame_properti": 150, "constant_lattic": 150, "time_step": [150, 233], "coords_are_displac": 150, "base_posit": 150, "frame": [150, 159, 201, 222, 240, 284], "nvt": [150, 206], "femto": 150, "consecut": [150, 198, 209], "significant_figur": [150, 185, 204, 230, 232], "xdatcar_from_struct": 150, "prudent": 150, "autodetect": [150, 177], "mos2": 150, "energyarrai": 151, "lengtharrai": 151, "arraywithfloatwithunit": 151, "leftmost": 151, "03674933": 151, "07349865": 151, "21138386": 151, "42276772": 151, "new_unit": 151, "93252225": 151, "functool": 151, "wherev": 151, "2102479761938871": 151, "932522246000005": 151, "932522246": 151, "unit_def": 151, "base_units_dict": 151, "gather": 151, "617333262e": 151, "lose": [151, 189, 240], "get_mass": 151, "paw": [152, 177, 179, 230, 232, 233], "gpaw": 152, "pawxml": [152, 179], "mgga": 152, "hyb": 152, "strip": [152, 190, 273], "pw": [152, 230], "perdew": [152, 230, 233], "13244": 152, "6671": [152, 279], "burk": 152, "ernzerhof": 152, "prl": 152, "3865": 152, "rpbe": 152, "hammer": [152, 160], "hansen": 152, "n\u00f8rskov": 152, "7413": [152, 279], "revpb": [152, 189, 230], "zhang": 152, "890": 152, "1998": [152, 179], "pbesol": [152, 168, 189, 230], "136406": 152, "am05": [152, 230], "armiento": [152, 232, 273], "mattsson": 152, "085108": 152, "blyp": 152, "beck": [152, 230, 233], "pra": 152, "3098": 152, "1988": 152, "lee": 152, "parr": 152, "785": 152, "mutual": [152, 164, 206], "type_nam": 152, "pw_mod": 152, "hl": [152, 230], "gl": 152, "vwn": 152, "ixc": [152, 178], "typ": 152, "x_name": 152, "c_name": 152, "labels_dict": [155, 156, 217, 247, 249], "band_index": 155, "kpoint_index": 155, "orbital_index": [155, 232], "ion_index": 155, "ndarrayar": 155, "cbm": [155, 160, 161, 232, 233], "kpoint_indic": 155, "proj": [155, 161], "degeneraci": [155, 197], "el_orb_spec": 155, "orb": [155, 214], "vbm": [155, 160, 161, 232, 233], "efermi_tol": 155, "new_band_gap": 155, "start_index": [155, 247], "end_index": [155, 247], "k_point": 155, "mislabel": [155, 247], "3p": [155, 212, 233], "3p_x": 155, "3p_y": 155, "3p_z": 155, "list_b": 155, "boltzmann": [156, 230], "semi": [156, 161, 189, 215, 259], "transport": 156, "madsen": 156, "icam": 156, "singh": 156, "mu_step": 156, "cond": 156, "hall": [156, 161, 170, 254], "mu_dop": 156, "seebeck_dop": 156, "cond_dop": 156, "kappa_dop": 156, "hall_dop": 156, "dos_parti": 156, "carrier_conc": 156, "bz_band": 156, "bz_kpoint": 156, "fermi_surface_data": [156, 161], "ohm": 156, "carrier": [156, 160, 161], "hole": [156, 160], "sbs_bz": 156, "sbs_ref": 156, "warn_thr": 156, "eight": 156, "semiconductor": [156, 233], "boltztap": 156, "corr": 156, "branch_nam": 156, "avg_corr": 156, "avg_dist": [156, 254], "nb_list": 156, "acc_thr": 156, "acc_err": 156, "path_dir": 156, "dos_spin": 156, "doping_level": 156, "textbook": [156, 256], "parabol": 156, "miglio": 156, "5447": 156, "5458": 156, "cm404079a": 156, "2292": 156, "ncomms3292": 156, "analyzer_for_second_spin": 156, "dos_up": 156, "an_up": 156, "dos_dw": 156, "an_dw": 156, "cdo": 156, "initio": [156, 161, 179], "relaxation_tim": [156, 161], "target_prop": 156, "min_temp": 156, "max_temp": 156, "min_dop": 156, "max_dop": 156, "isotropy_toler": 156, "use_averag": 156, "target_properti": 156, "zt": [156, 161], "1e18": 156, "1e20": 156, "microw": 156, "microv": 156, "kpt_line": 156, "k_el": 156, "k_0": 156, "pf": 156, "mk": 156, "k_l": 156, "condten": 156, "hallten": 156, "lvl": 156, "outtran": 156, "pn_doping_level": 156, "outputtran": 156, "trim_do": 156, "transdo": 156, "transdos_x_i": 156, "trim": [156, 180], "dos_typ": 156, "histo": 156, "energy_grid": 156, "lpfac": 156, "boltz": 156, "band_nb": 156, "tauref": 156, "tauexp": 156, "tauen": 156, "energy_span_around_fermi": 156, "cond_band": 156, "tmax": [156, 251], "1300": 156, "tgrid": 156, "cb_cut": 156, "7200": 156, "histogram": [156, 176, 272], "tetra": 156, "tetrahedon": 156, "dose": [156, 161, 251, 282], "1e16": 156, "1e22": 156, "underestim": [156, 189], "kmesh": 156, "clear_dir": 156, "max_lpfac": 156, "min_egrid": 156, "egrid": 156, "output_fil": [156, 230], "output_file_proj": 156, "output_file_def": 156, "bands_obj": 156, "bands_ref_obj": 156, "bzt": 156, "sym": 156, "seeb": 156, "analyt": [156, 181, 191, 231, 247, 249], "m0": 156, "coop": [158, 161, 212, 214], "cobi": [158, 161], "chop": 158, "antibond": 158, "avg_cohp": 158, "cohp_dict": [158, 161], "orb_res_cohp": 158, "structure_fil": [158, 214], "stuttgart": [158, 210], "asa": [158, 210], "copl": [158, 210], "coopcar": [158, 214], "ctrl": [158, 210], "summed_spin_channel": [158, 213], "icooplist": [158, 213, 214], "orbital1": 158, "orbital2": 158, "aren": 158, "label_list": 158, "orbital_list": 158, "list_label": 158, "list_atom1": 158, "list_atom2": 158, "list_length": 158, "list_transl": 158, "list_num": 158, "list_orb_icohp": 158, "icoop": [158, 213, 214], "atomnam": 158, "icobi": [158, 213, 214], "strongest": [158, 213], "minbondlength": 158, "maxbondlength": 158, "minsummedicohp": 158, "maxsummedicohp": 158, "only_bonds_to": [158, 213], "partner": 158, "atom1": 158, "atom2": 158, "spinup": 158, "spindown": 158, "plariz": 158, "ortibal2": 158, "energy_rang": 158, "relative_e_fermi": 158, "saxi": [159, 233], "quantiz": 159, "shouldn": 159, "surpris": 159, "magcif": [159, 185], "total_magnetic_mo": 159, "ncl": [159, 232], "get_consistent_set": 159, "quantis": 159, "total_do": [160, 217, 248], "pdoss": [160, 190, 248], "fp": [160, 284], "erang": 160, "int_": [160, 270], "norskov": 160, "surf": 160, "343": 160, "1995": 160, "epsilon_d": 160, "zeroth": 160, "f_d": 160, "e_cent": 160, "sqrt": [160, 177, 189, 198, 217, 231], "summed_pdo": 160, "min_": 160, "max_": 160, "n_bin": 160, "256": 160, "knoop": 160, "purcel": 160, "scheffler": [160, 233], "carbogno": 160, "softw": 160, "2671": 160, "gitlab": 160, "vibe": 160, "materials_fp": 160, "copyright": [160, 271, 272], "florian": 160, "matthia": 160, "christian": [160, 286], "summed_": 160, "linspac": 160, "fp1": 160, "fp2": 160, "col": 160, "tanimoto": 160, "spd": 160, "hilbert": [160, 175], "newn": 160, "anderson": 160, "t2g": 160, "115114": 160, "epsilon_u": 160, "sanvito": 160, "1126": 160, "sciadv": 160, "1602241": 160, "ill": 160, "insul": [160, 161, 215, 232, 233], "nx1": 160, "nx2": 160, "former": [160, 233], "column": [160, 161, 168, 201, 204, 232, 240, 241], "abs_tol": 160, "norm_vol": 160, "fermi_level": 160, "riemann": 160, "dirac": 160, "nstep": [160, 191, 205, 206, 233], "greedi": 160, "finer": [160, 265], "THe": 160, "c_ref": 160, "10000000000": 160, "p_y": 160, "p_z": 160, "p_x": 160, "d_xy": 160, "d_yz": 160, "d_z": 160, "d_xz": 160, "d_x": 160, "f_y": 160, "f_xyz": 160, "f_yz": 160, "f_z": 160, "f_xz": 160, "f_x": 160, "3y": 160, "contrast": 160, "cohplist": 160, "density1": 160, "density2": 160, "bs_project": 161, "dos_project": 161, "vb_energy_rang": 161, "cb_energy_rang": 161, "fixed_cb_energi": 161, "egrid_interv": 161, "axis_fonts": 161, "tick_fonts": 161, "legend_fonts": 161, "bs_legend": 161, "dos_legend": 161, "rgb_legend": 161, "fig_siz": 161, "joint": [161, 286], "pohl": 161, "gvallver": 161, "perso": [161, 200], "univ": 161, "pau": [161, 286], "587": 161, "cb": 161, "tick": [161, 251], "facilit": [161, 168, 227, 251, 287], "zero_to_efermi": 161, "bs_ref": 161, "split_branch": 161, "e_f": [161, 198], "_b": 161, "discontinu": 161, "zero_energi": 161, "band_gap": 161, "vbm_cbm_marker": 161, "smooth_tol": 161, "smooth_k": 161, "smooth_np": 161, "bs_label": 161, "other_plott": [161, 251], "blue": [161, 251], "img_format": [161, 201, 251, 282], "subfigur": 161, "bigger": 161, "elt_ord": 161, "differienti": 161, "dictio": 161, "2p_x": [161, 214], "dictpa": 161, "sum_atom": 161, "sum_morb": 161, "selected_branch": 161, "w_h_size": 161, "num_column": 161, "maxima": 161, "chose": [161, 189], "manni": 161, "neglect": [161, 258], "cyan": 161, "bz": [161, 175, 177, 232, 255, 257], "merit": 161, "zero_at_efermi": 161, "key_sort_func": [161, 251, 282], "plot_neg": 161, "invert_ax": 161, "doss": [161, 251, 282], "dos1": [161, 282], "dos2": [161, 282], "dos_dict": [161, 251, 282], "beta_dash": 161, "chemist": 161, "fold": 161, "bz_lattic": 161, "arrow": 161, "ellipsoid": [161, 252], "rappres": 161, "plot_wirefram": 161, "rstride": 161, "cstride": 161, "energy_level": 161, "multiple_figur": 161, "mlab_figur": 161, "kpoints_dict": 161, "transparency_factor": 161, "labels_scale_factor": 161, "points_scale_factor": 161, "mayavi": 161, "mlab": 161, "opac": [161, 284], "skeleton": 161, "black": [161, 282, 284], "entiti": [162, 164], "formula_unit": [162, 164], "config_fil": 163, "correct_peroxid": 163, "error_fil": 163, "anycomputedentri": [163, 168], "inplac": [163, 168, 233], "energy_adjust": [163, 164], "interdepend": 163, "corrected_energi": 163, "compat_typ": 163, "check_potcar_hash": 163, "mitvaspinputset": [163, 285], "verifi": [163, 187, 208, 230, 279], "quantif": 163, "resp": [163, 215], "fluorid": 163, "ran": [163, 190], "mp2020compat": 163, "kingsburi": [163, 286], "quantifi": [163, 276], "15496": 163, "94550": 163, "briefli": [163, 205, 208], "room": 163, "feo": [163, 287], "embed": [163, 198], "waldwick": 163, "lazic": 163, "equilibria": 163, "235438": 163, "solid_compat": 163, "o2_energi": 163, "h2o_energi": 163, "h2o_adjust": 163, "silence_deprec": 163, "input_set": 163, "check_hash": 163, "paw_pb": [163, 232], "fe_pv": [163, 212, 230, 233], "06sep2000": [163, 232], "08apr2002": 163, "ufloat": 163, "adj_per_atom": 164, "n_atom": [164, 247], "uncertainty_per_atom": 164, "human": [164, 172, 205, 208, 287], "facil": [164, 286], "uncorrect": 164, "heavier": 164, "neither": [164, 272, 287], "e_fe6o9": 164, "e_fe2o3": 164, "formation_enthalpy_per_atom": 164, "gibbs_model": 164, "sisso": 164, "acquir": 164, "orig": [164, 189], "janaf": 164, "co2": [164, 197], "expt": 164, "millican": 164, "deml": 164, "rumptz": 164, "tuma": 164, "weimer": 164, "holder": [164, 272], "4168": 164, "s41467": 164, "06682": 164, "adj_per_deg": 164, "uncertainty_per_deg": 164, "max_error": 165, "exclude_polyanion": 165, "mpcompat": 165, "varianc": 165, "calc_entri": 165, "exp_gz": 165, "comp_gz": 165, "_name_compat": 165, "_name_compatibilityuncertainti": 165, "mutableset": 166, "latexify_nam": 166, "latex": [166, 256, 276, 278], "li_": 166, "sort_by_e_per_atom": 166, "entry3": 166, "entry4": 166, "entry5": 166, "species_to_remov": [166, 265], "298k": 167, "run_type_1": 168, "run_type_2": 168, "r2scan": [168, 233], "compat_1": 168, "cached_class": 168, "_decor": 168, "compat_2": 168, "fuzzy_match": 168, "unexpect": [168, 225, 276], "statu": 168, "materialsprojectcompatibility2020": 168, "fuzzi": 168, "printout": 168, "mixing_state_data": 168, "member": 168, "_filter_and_sort_entri": 168, "irrelev": 168, "entry_id_1": 168, "entry_id_2": 168, "energy_1": 168, "energy_2": 168, "is_stable_1": 168, "hull_energy_1": 168, "hull_energy_2": 168, "vaitku": 170, "butku": 170, "okuli\u010d": 170, "kazarina": 170, "kairi": 170, "gra\u017euli": 170, "da\u0161kevi\u010d": 170, "chateign": 170, "lutterotti": 170, "quir\u00f3": 170, "serebryanaya": 170, "moeck": 170, "lebail": 170, "nucleic": 170, "acid": [170, 223], "d420": 170, "d427": 170, "grazuli": 170, "yokochi": 170, "quiro": 170, "manakova": 170, "le": 170, "bail": 170, "726": 170, "729": 170, "mineralogist": 170, "blank": [170, 181, 189], "mysql": 170, "cod_id": 170, "sql": 170, "dashboard": [171, 287], "mprestadaptor": 171, "malform": [171, 225, 232], "api_kei": 171, "call_some_method": 171, "secur": 171, "task": [171, 181, 205, 206, 215, 287], "nscf": [171, 175, 177, 232], "aliases_or_resource_url": 172, "subject": [172, 280], "andersen": 172, "s41597": 172, "00974": 172, "mcloud": 172, "mc3d": 172, "materialscloud": 172, "mc2d": 172, "2dtopo": 172, "pyren": 172, "mof": 172, "cof": 172, "stoceriaitf": 172, "scdm": 172, "autowanni": 172, "tin": 172, "antimoni": 172, "sulfoiodid": 172, "mpd": 172, "nmd": 172, "prod": [172, 287], "rae": 172, "odbx": 172, "odbx_misc": 172, "omdb": 172, "omdb_product": 172, "openmaterialsdb": 172, "oqmd": 172, "jarvisdft": 172, "tcod": 172, "twodmatpedia": 172, "2dmatpedia": 172, "chemical_formula_anonym": 172, "chemical_formula_hil": 172, "additional_response_field": 172, "expos": 172, "_optimad": 172, "optimade_filt": 172, "lattice_vector": 172, "cartesian_site_posit": 172, "species_at_sit": 172, "providers_url": 172, "spin_mod": [175, 177, 233], "fermi_dirac": [175, 177, 189], "fband": 175, "spinor": [175, 177, 232], "bs_loband": 175, "mbpt_sciss": 175, "coulomb_mod": 175, "ecutep": 175, "mdf_epsinf": 175, "exc_typ": 175, "tda": 175, "haydock": 175, "with_lf": 175, "bs_freq_mesh": 175, "zcut": 175, "salpet": 175, "hartre": [175, 179, 186, 189, 215], "treatment": [175, 222], "coulomb": [175, 191, 192], "macroscop": 175, "epsilon_": 175, "nc": [175, 179, 234], "conjug": [175, 184, 189, 191], "nomegasf": 175, "domegasf": 175, "spmeth": 175, "nfreqr": 175, "freqremax": 175, "nfreqim": 175, "freqremin": 175, "spectral": 175, "gauss": 175, "num_kpt": [175, 230], "kpt_shift": 175, "kpts_weight": [175, 230], "use_symmetri": 175, "use_time_revers": 175, "chksymbreak": [175, 177], "poit": 175, "kppa": [175, 177, 230], "ndivsm": [175, 177], "kpath_bound": 175, "_path": 175, "subdivis": [175, 189, 230], "n_1": [175, 230, 232], "n_2": [175, 230, 232], "n_3": [175, 230, 232], "ngkpt": [175, 177], "shiftk": [175, 177], "epsilon_infin": [175, 250], "plasmon_freq": 175, "plasmon": 175, "ionmov": [175, 177], "optcel": [175, 177], "atoms_constraint": 175, "w_type": 175, "rpa": [175, 232, 233], "sc_mode": 175, "one_shot": 175, "ecutwfn": 175, "hilber": 175, "ecut": [175, 177, 179, 219], "se_typ": 175, "ecutsigx": 175, "gw_qprang": 175, "gwpara": 175, "computi": 175, "qp": 175, "ibz": [175, 230], "occopt": 175, "tsmear": 175, "004": 175, "unpolar": [175, 177], "anti": 175, "spinor_nomag": [175, 177], "angdeg": [175, 177], "site0": 175, "specie_o": 175, "specie_si": 175, "al_structur": 175, "typat": 175, "xred": 175, "ntypat": 175, "znucl": 175, "xcart": 175, "xangst": 175, "enforce_znucl": 175, "enforce_typat": 175, "cpu_tim": 176, "wall_tim": 176, "wall": 176, "sort_kei": [176, 197, 230], "minval": 176, "minfract": 176, "chart": 176, "fileobj": 176, "_io": [176, 179], "textiowrapp": [176, 179], "timopt": 176, "list_of_fil": 176, "abo": 176, "okfil": 176, "begin_tim": 176, "end_tim": 176, "successfulli": [176, 190], "nmax": 176, "mmax": [176, 179], "ordkei": 176, "mpi_rank": 176, "cpu_fract": 176, "wall_fract": 176, "ncall": 176, "gflop": 176, "gigaflop": 176, "with_head": 176, "ref_idx": 176, "filennam": 176, "criterion": [176, 233, 252, 287], "abinitinput": 177, "abipi": [177, 249, 250], "ntime": 177, "dilatmx": 177, "keyerror": 177, "abi": 177, "pseudo_dir": 177, "abi_arg": 177, "abi_kwarg": 177, "abi_object": 177, "ird": 177, "kptopt": 177, "kptbound": 177, "iscf": 177, "with_structur": 177, "with_pseudo": 177, "datataset": 177, "inde": 177, "complain": 177, "_ds1_": 177, "__getattr__": 177, "paral_kgb": 177, "geo": 177, "dtindex": 177, "multidataset": 177, "abinit_input": 177, "ndset": 177, "disk": [177, 187, 197], "run0": 177, "iniit": 177, "gammacenterd": 177, "insensit": [177, 189], "nshiftk": 177, "nscf_nband": 177, "pawecutdg": [177, 179], "scf_nband": 177, "scf_algorithm": [177, 223], "dos_kppa": 177, "shift_mod": 177, "optmiz": 177, "etsf": 178, "char": [178, 268], "rootgrp": 178, "signal": [178, 257, 276], "statement": 178, "googlecod": 178, "svn": 178, "trunk": 178, "netcdfreadererror": 178, "dimnam": 178, "dict_cl": 178, "attrdict": 178, "varnam": 178, "cmode": 178, "datatyp": 178, "navig": 178, "closeit": 178, "ncdata": 178, "momentum": [179, 189], "dens": [179, 233, 243, 244], "ppdesc": 179, "fhi": 179, "troullier": 179, "martin": [179, 285, 286], "edt": 179, "00000": 179, "940714": 179, "zatom": 179, "zion": 179, "pspdat": 179, "2001": [179, 233], "pspcod": 179, "pspxc": 179, "lloc": 179, "r2well": 179, "80626423934776": 179, "22824404341771": 179, "17378968127746": 179, "rchrg": 179, "fchrg": 179, "qchrg": 179, "gth": [179, 189], "goedeck": 179, "teter": 179, "hutter": 179, "wed": 179, "960508": 179, "2000000": 179, "0663326": 179, "6778322": 179, "rloc": 179, "rp": [179, 230], "h1p": 179, "rcutoff": 179, "hgh": 179, "hartwigsen": 179, "prb58": 179, "3641": 179, "010605": 179, "oncvpsp": 179, "r_core": 179, "140504": 179, "pspd": 179, "99000000": 179, "00000000": 179, "nproj": 179, "extension_switch": 179, "5000025868368d": 179, "2006906995331d": 179, "0000000000000d": 179, "4140499497377d": 179, "9909081701712d": 179, "085": 179, "8786493": 179, "e99": 179, "rcpsp": 179, "0000000000": 179, "ekb1": 179, "ekb2": 179, "epsatm": 179, "632": 179, "4291849": 179, "557": 179, "308": 179, "1865358": 179, "251": 179, "387": 179, "4776730": 179, "62474762267880": 179, "07409391739104": 179, "07937699839200": 179, "vanish": 179, "pseudiz": [179, 233], "atompaw": 179, "holzwarth": 179, "atompaw2abinit": 179, "v3": [179, 254], "000": [179, 232, 265], "20061204": 179, "350": 179, "paw3": 179, "1305": 179, "pspfmt": 179, "creatorid": 179, "basis_s": 179, "lmn_size": 179, "number_of_mesh": 179, "1803778368e": 179, "5000000000e": 179, "rad_step": 179, "log_step": 179, "921": 179, "500000000000e": 179, "391": 179, "3000000000": 179, "r_cut": 179, "sph": 179, "loc": 179, "vanderbilt": 179, "uspp2abinit": 179, "20090106": 179, "560": 179, "paw4": 179, "5198032759e": 179, "6666666667e": 179, "556": 179, "576": 179, "666": 179, "673": 179, "5550009124": 179, "shape_typ": 179, "rshape": 179, "nnother": 179, "20120814": 179, "paw5": 179, "1331": 179, "2129718540404674e": 179, "1498160595656655e": 179, "658": 179, "740": 179, "819": 179, "870": 179, "5669671236": 179, "ae": 179, "wave": [179, 189, 198, 214, 215, 232], "projector": [179, 189], "tmpdir": 179, "djrepo": 179, "dojo_report": 179, "pspsfile": 179, "exclude_ext": 179, "exclude_fnam": 179, "individidu": 179, "element_symbol": 179, "exclude_dir": 179, "all_fil": 179, "wildcard": [179, 207], "zmax": 179, "allow_multi": 179, "ret_list": 179, "prepend": 179, "attrnam": 179, "tabular": 179, "l_ang_mom": 179, "traceback": 179, "valperlin": 180, "floatdecim": 180, "spread": 180, "writer": [181, 230], "inpfil": 181, "subkei": 181, "delimit": [181, 222, 259, 278], "a1fit": 181, "unrestrict": [181, 189, 201], "zlmfit": 181, "exactdens": 181, "totalenergi": 181, "analyticalfreq": 181, "subend": 181, "atomdepqu": 181, "is_fail": 181, "is_internal_crash": 181, "tape13": 181, "runtyp": [181, 239], "singlepoint": 181, "geometryoptim": 181, "numericalfreq": 181, "gmolecul": 181, "array_lik": 181, "normal_mod": 181, "freq_typ": 181, "adf_run": 181, "geo_subkei": 181, "other_direct": 181, "dz": [181, 201], "numerical_frequ": 181, "overhead": 181, "cls_kwarg": 182, "rndstr": 183, "lat": 183, "hundr": 184, "mmff94": 184, "freeze_atom": 184, "rmsd_cutoff": 184, "energy_cutoff": 184, "conf_cutoff": 184, "confab": 184, "divers": [184, 285], "gaff": 184, "ghemic": 184, "uff": 184, "freez": 184, "rmsd_cufoff": 184, "kcal": 184, "file_format": 184, "return_all_molecul": 184, "thereof": 184, "string_data": 184, "0d": 184, "obbuild": 184, "steepest": 184, "descent": 184, "rotor": 184, "gen3d": 184, "fault": [184, 191], "medium": 184, "pybel": 184, "cyclohexan": [184, 223], "chair": 184, "clash": 184, "idx1": 184, "idx2": 184, "particip": 184, "rotor_arg": 184, "weightedrotorsearch": 184, "geomstep": 184, "sampleringbond": 184, "systematicrotorsearch": 184, "2500": [184, 279], "randomrotorsearch": 184, "orig_str": 185, "Of": 185, "site_toler": 185, "6667": [185, 279], "length_str": 185, "angle_str": 185, "absenc": 185, "six": 185, "symop": 185, "write_magmom": 185, "refine_struct": 185, "data_aug": [186, 232], "distance_matric": [186, 232], "circuit": [186, 232], "nbin": 186, "computation": [186, 191], "decompos": [186, 189, 190, 231], "IN": [186, 272], "vdata": 186, "structure_json": 186, "regulargridinterpol": 186, "correspondisng": 186, "tier": 187, "hierarchi": [187, 287], "recip": [187, 216, 287], "my_arg": [187, 233], "nor": [187, 205, 208, 216, 272, 287], "foo": [187, 216], "make_dir": 187, "zip_input": 187, "generate_input": 187, "force_ev": 189, "quickstep": [189, 191], "children": [189, 191], "soft": 189, "added_mo": 189, "kpoints_line_dens": [189, 191, 212, 233], "OR": [189, 272], "auxiliari": [189, 191, 200], "resolut": [189, 265], "l_alpha": 189, "n_alpha": 189, "nel_alpha": 189, "l_beta": 189, "n_beta": 189, "nel_beta": 189, "cp2k_input": 189, "make_dir_if_not_pres": [189, 199, 230, 233], "ndigit": [189, 191], "new_prec_each": 189, "precondition": [189, 191], "full_single_invers": [189, 191], "full_al": [189, 191], "energy_gap": [189, 191], "make_precondition": 189, "domin": 189, "full_kinet": [189, 191], "choleski": [189, 191], "full_singl": 189, "full_s_invers": 189, "basis_set_filenam": 189, "basis_molopt": 189, "potential_filenam": [189, 191], "gth_potenti": 189, "wfn_restart_file_nam": [189, 191], "kohn": 189, "sham": 189, "eps_u_ramp": 189, "init_u_ramping_each_scf": 189, "u_minus_j": 189, "u_ramp": 189, "ramp": 189, "ueff": 189, "stepwis": 189, "eps_adapt": 189, "eps_it": 189, "eps_jacobi": 189, "jacobi_threshold": 189, "diagron": 189, "cumbersom": 189, "section_paramet": 189, "subsection1": 189, "subsection3": 189, "supersect": 189, "gto": 189, "cardin": 189, "energy_forc": 189, "nonloc": 189, "alpha_prj_ppnl": 189, "ij": [189, 263], "eip": 189, "elabor": 189, "value1": 189, "value2": 189, "unnatur": 189, "lst": 189, "indent": 189, "gth_basi": 189, "ghost": 189, "aux_basi": 189, "mg_1": 189, "mg_2": 189, "disapl": 189, "npoint": [189, 215], "b_vector": 189, "cart_angstrom": 189, "cart_bohr": 189, "eps_geo": 189, "full_grid": 189, "parallel_group_s": 189, "weigh": 189, "write_cub": [189, 191], "nhomo": [189, 191], "nlumo": [189, 191], "1200": 189, "rel_cutoff": [189, 191], "ngrid": [189, 191, 226], "progression_factor": [189, 191], "multigrid": [189, 191], "rydberg": 189, "sharp": 189, "cours": 189, "occupation_precondition": [189, 191], "linesearch": [189, 191], "2pnt": [189, 191], "dii": [189, 191, 223], "taylor": 189, "irac": [189, 191], "congruenc": [189, 191], "gold": 189, "3pnt": [189, 191], "scale_c": [189, 265], "scale_x": 189, "nonlinear": 189, "gpw": [189, 191], "eps_default": [189, 191], "eps_pgf_orb": 189, "aspc": 189, "driver": 189, "gapw": [189, 191], "eps_": 189, "eps_scf": [189, 190, 191], "alon": 189, "max_scf": [189, 190, 191], "scf_guess": 189, "restart": [189, 190, 191, 284], "history_restart": 189, "mopac": 189, "scc": 189, "dftb": 189, "subsection2": 189, "subsection_of_interest": 189, "mongo": [189, 287], "underscor": [189, 192, 256, 277], "child": [189, 191], "subsec2": 189, "new_keyword": 189, "new_val": 189, "new_subsec": 189, "new_kwd": 189, "verboss": 189, "appeal": 189, "clutter": 189, "elec_temp": 189, "fixed_magnetic_mo": 189, "did": 190, "bandstructure_filenam": 190, "chi_filenam": 190, "suscept": [190, 250], "dos_fil": 190, "pdos_fil": 190, "ldos_fil": [190, 198], "glob": 190, "pdos_alpha": 190, "infer": [190, 204], "presid": 190, "gtensor_filenam": 190, "hyperfine_filenam": 190, "hyperfin": [190, 191, 232], "mulliken": [190, 191, 201, 213, 214, 221], "raman": [190, 191], "trajectory_fil": 190, "lattice_fil": 190, "motion": [190, 191], "tddfpt": [190, 191], "saniti": 190, "terminate_on_match": [190, 219, 224, 232], "regrep": [190, 219, 232], "render": [190, 219, 224, 232, 284], "1234": [190, 219, 224, 232, 287], "3453": [190, 219, 224, 232], "regex": [190, 219, 224, 232, 273], "header_pattern": [190, 224, 232], "row_pattern": [190, 224, 232], "footer_pattern": [190, 224, 232], "attribute_nam": [190, 224, 232], "last_one_onli": [190, 224, 232], "footer": [190, 224, 232], "immedi": [190, 224, 232], "dotal": [190, 224, 232], "captur": [190, 224, 232], "hfx": [190, 191], "energy_fil": 190, "spin_channel": 190, "snapshot": [190, 207], "philosophi": 191, "intervent": [191, 199, 233], "override_default_param": 191, "cp2kinputset": 191, "flagship": 191, "solver": [191, 225], "condition": 191, "eps_xx": 191, "outer": 191, "outer_max_scf": 191, "truncat": [191, 192, 222], "fastest": [191, 263, 287], "v9": 191, "ry": [191, 210, 219], "finest": 191, "coarsest": 191, "50ry": 191, "exhaust": 191, "basis_and_potenti": 191, "qs_method": 191, "vaspkpoint": 191, "hope": 191, "hybrid_funct": 191, "pbe0": 191, "hf_fraction": 191, "gga_x_fract": 191, "gga_c_fract": 191, "max_memori": 191, "cutoff_radiu": 191, "scale_coulomb": 191, "scale_gaussian": 191, "scale_longrang": 191, "admm_method": 191, "basis_project": 191, "admm_purification_method": 191, "admm_exch_correction_func": 191, "eps_schwarz": 191, "eps_schwarz_forc": 191, "screen_on_initial_p": 191, "screen_p_forc": 191, "ram": [191, 232], "4ei": 191, "2gb": 191, "2048": 191, "seg": 191, "lograng": 191, "mix_cl": 191, "mix_cl_trunc": 191, "mix_lg": 191, "shortrang": 191, "hse06": 191, "1000x": 191, "purifi": 191, "idempot": 191, "e_x": 191, "aux": 191, "costli": 191, "aggress": 191, "wfn": 191, "wannier": 191, "max_drift": 191, "003": [191, 232], "rms_drift": 191, "0015": [191, 279], "00045": 191, "rms_forc": 191, "0003": 191, "bfg": 191, "trust_radiu": 191, "line_search": 191, "nve": 191, "timestep": [191, 207], "thermostat": [191, 230], "nose": 191, "nproc_rep": 191, "geo_opt": 191, "cell_opt": 191, "dispersion_funct": 191, "pair_potenti": 191, "non_loc": 191, "dftd2": 191, "dftd3": 191, "bj": [191, 223], "drsll": 191, "lmkll": 191, "rvv10": [191, 233], "basis_filenam": 191, "dealt": 191, "basis_typ": 191, "dzvp": 191, "aux_basis_typ": 191, "pfit": 191, "BE": [191, 272], "add_last": 191, "stride": 191, "eletrostat": [191, 232], "assist": 192, "inp_struct": 192, "coo": [192, 197], "co_1": 192, "co_2": 192, "parsable_site_properti": 192, "file_1": 192, "file_12": 192, "file_2": 192, "neatli": 192, "IF": [192, 272], "elif": 192, "5291692998219677": 195, "celltyp": 195, "bandstr": 195, "feffproject": 196, "absorbing_atom": [197, 198, 199], "ipot": [197, 199], "spacegroup_analyzer_set": [197, 199], "coo19128": 197, "297078": 197, "254213": 197, "666666": 197, "333332": 197, "496324": 197, "333333": 197, "666667": 197, "996324": 197, "878676": 197, "378675": 197, "cif_fil": 197, "header_str": 197, "genfmt": 197, "pot_data": 197, "feffpot": [197, 199], "lmax1": 197, "lmax2": 197, "stoichometri": 197, "spinph": 197, "fefftag": 197, "parameters_that_are_the_sam": [197, 230], "parameters_that_are_differ": [197, 230], "feff_tag": 197, "eels_dat_fil": 198, "charge_transf": 198, "ldos01": 198, "ldos02": 198, "feff_inp_fil": 198, "078": [198, 232], "tot": [198, 232], "nrix": [198, 199], "mu_0": 198, "50ev": 198, "photon": 198, "aborpt": 198, "nx6": 198, "cross_sect": 198, "xmu_dat_fil": 198, "feffinputset": 199, "feffxan": 199, "feffexaf": 199, "set_": 199, "fashion": 199, "config_dict": [199, 233], "user_tag_set": 199, "dane": 199, "xmcd": 199, "eln": 199, "exelf": 199, "fprime": 199, "_del": 199, "corehol": 199, "input_dir": [199, 230], "beam_energi": 199, "collection_angl": 199, "convergence_angl": 199, "user_eels_set": 199, "incid": 199, "detector": 199, "mrad": 199, "fsr": 199, "s02": 199, "rpath": 199, "neel": 200, "cnr": 200, "blase": 200, "fiesta_run": 200, "gw_fiesta": 200, "bse_fiesta": 200, "localis": 200, "l_zeta_ng": 200, "nl": 200, "coef": 200, "l_zeta": 200, "nlm": 200, "correlation_grid": 200, "exc_dft_opt": 200, "cohsex_opt": 200, "gw_option": 200, "bse_tddft_opt": 200, "bse_dump": 200, "do_bs": 200, "tddft_dump": 200, "do_tddft": 200, "string_input": [200, 215], "full_bse_dens": 200, "n_excit": 200, "nit_bs": 200, "nv_bse": 200, "nc_bse": 200, "nv_band": 200, "nc_band": 200, "n_iter": 200, "n_grid": 200, "de_grid": 200, "nv__band": 200, "auxiliary_fold": 200, "auxiliary_basis_set_typ": 200, "aug_cc_pvtz": 200, "ion_aug_cc_pvtz_ri_weigend": 200, "log_fil": 200, "logfil": 200, "log_n2f": 200, "nw": 200, "movec": 200, "nwout": 200, "launch": 200, "31g": [201, 215], "route_paramet": [201, 287], "input_paramet": 201, "link0_paramet": 201, "gen_basi": 201, "checkpoint": 201, "chk": 201, "1000mw": 201, "gen": 201, "r_mass": 201, "f_constant": 201, "ir_intens": 201, "dx": [201, 231, 268], "error_def": 201, "om": 201, "ao_k": 201, "iatom": 201, "quotat": 201, "8709": 201, "wiberg": 201, "nboread": 201, "bndidx": 201, "abscissa": 201, "uv": 201, "lamba": 201, "oscillatori": 201, "abcissa": 201, "spectr": 201, "gaunip": 201, "list_of_molecul": 204, "list_of_nam": 204, "list_of_numb": 204, "za": 204, "z0": 204, "9_": 204, "atom_label": 204, "guess_el": 204, "ff_label": 204, "ff_map": 204, "intermolecular": 204, "ONE": 204, "qa": 204, "qb": 204, "unsupport": 204, "coordinate_fil": 204, "destruct": 204, "mols_per_data": 204, "mass_info": 204, "nonbond_coeff": 204, "topo_coeff": 204, "pairij": 204, "mass_dict": 204, "class2": 204, "bondbond": 204, "bondbond13": 204, "angleangl": 204, "coorind": 204, "vx": 204, "vy": 204, "vz": 204, "ff": 204, "sort_id": 204, "ff_element": 204, "is_sort": 204, "plain": [204, 278], "matgenix": [205, 206, 208], "stage": [205, 206, 208, 233], "tailor": [205, 208, 287], "lmp_minim": 205, "forget": 205, "manupil": 206, "broadli": 206, "stage_nam": 206, "cmd1": 206, "args1": 206, "cmd2": 206, "args2": 206, "cmd3": 206, "args3": 206, "pair_coeff": 206, "mors": 206, "0580": 206, "987": 206, "your_input_fil": 206, "after_stag": 206, "0408": 206, "399": 206, "thermo": [206, 207], "thermo_styl": 206, "lx": 206, "lz": 206, "pxx": 206, "pyi": 206, "pzz": 206, "pe": [206, 221, 223, 230], "dmp": 206, "min_styl": 206, "iso": [206, 223, 258], "vmax": 206, "0e": 206, "5000": [206, 279], "write_data": 206, "lmp_input_fil": 206, "ignore_com": 206, "cosmet": 206, "\u00b2": 206, "inlin": 206, "remove_empty_stag": 206, "new_nam": 206, "script_templ": 206, "script_filenam": 206, "experienc": 206, "write_lammps_input": 206, "sophist": 206, "placehold": 206, "variable_nam": 206, "other_set": 206, "pair_styl": 206, "eamnpair_coeff": 206, "cu_u3": 206, "eam": 206, "safe_substitut": [206, 227], "lammpstemplateset": 206, "data_filenam": 206, "file_pattern": 207, "focu": [207, 213], "shake": 207, "stat": [207, 232], "template_fil": 208, "start_monom": 209, "s_head": 209, "s_tail": 209, "monom": 209, "head": 209, "tail": 209, "end_monom": 209, "e_head": 209, "e_tail": 209, "n_unit": 209, "link_dist": 209, "linear_chain": 209, "to_ev": 210, "lmasa": 210, "ver": 210, "newest": 210, "alat": 210, "plat": 210, "spcgrp": 210, "sigfig": 210, "lmhart": 210, "lobster_output": 211, "settingsdict": 212, "cohpstartenergi": 212, "cohpendenergi": 212, "gaussiansmearingwidth": 212, "usedecimalplac": 212, "cohpstep": 212, "basisset": 212, "cohpgener": 212, "realspacehamiltonian": 212, "realspaceoverlap": 212, "printpawrealspacewavefunct": 212, "printlcaorealspacewavefunct": [212, 214], "kspacecohp": 212, "saveprojectiontofil": 212, "skipdo": 212, "skipcohp": 212, "skipcoop": 212, "skipcobi": 212, "skipmadelungenergi": 212, "loadprojectionfromfil": 212, "forceenergyrang": 212, "densityofenergi": 212, "bwdf": 212, "bwdfcohp": 212, "skippopulationanalysi": 212, "skipgrosspopul": 212, "userecommendedbasisfunct": 212, "skipproject": 212, "writebasisfunct": 212, "writematricestofil": 212, "nofftforvisu": 212, "rmsp": 212, "onlyreadvasprun": 212, "nomemorymappedfil": 212, "skippaworthonormalitytest": 212, "donotignoreexcessiveband": 212, "donotuseabsolutespil": 212, "skipreorthonorm": 212, "forcev1hmatrix": 212, "useoriginaltetrahedronmethod": 212, "bandwisespil": 212, "kpointwisespil": 212, "lsodo": 212, "basisfunct": 212, "cohpbetween": 212, "createfatband": 212, "address_basis_file_min": 212, "address_basis_file_max": 212, "dict_for_basi": 212, "address_basis_fil": [212, 233], "poscar_input": 212, "incar_input": 212, "potcar_input": 212, "vasprun_output": 212, "standard_with_energy_range_from_vasprun": 212, "standard_from_project": 212, "standard_with_fatband": 212, "onlyproject": 212, "onlydo": 212, "onlycohp": 212, "onlycoop": 212, "onlycohpcoop": 212, "incar_output": 212, "further_set": 212, "lwave": [212, 233], "kpoints_output": 212, "from_grid": 212, "input_grid": 212, "poscar_output": 212, "arriv": [212, 254], "overwritedict": 212, "min_basi": 212, "max_basi": 212, "ag3": 213, "o5": 213, "list_ce_symbol": 213, "list_csm": 213, "list_permut": 213, "list_neighsit": 213, "list_neighisit": 213, "filename_icohp": 213, "perc_strength_icohp": 213, "valences_from_charg": 213, "filename_charg": 213, "which_charg": 213, "adapt_extremum_to_add_cond": 213, "add_additional_data_sg": 213, "filename_blist_sg1": 213, "filename_blist_sg2": 213, "id_blist_sg1": 213, "id_blist_sg2": 213, "localenv": 213, "do_not_consider_anion_cation_bond": 213, "only_cation_cation_bond": 213, "loewdin": [213, 214], "filename_add_bondinglist_sg1": 213, "ddition": 213, "path_to_cohpcar": 213, "onlycation_isit": 213, "per_bond": 213, "only_cation_environ": 213, "bandoverlapsdict": 214, "maxdevi": 214, "number_occ_bands_spin_up": 214, "number_occ_bands_spin_down": 214, "limit_devi": 214, "limit_maxdevi": 214, "structure_filenam": 214, "dftprogram": 214, "beforehand": 214, "atomindex": [214, 232], "orbitalstr": 214, "kpointsfil": 214, "fatband_x_i": 214, "fatband_": 214, "grosspopul": 214, "lobsterdict": 214, "bandlist": 214, "tw": 214, "chenxin13": 215, "mail": 215, "tsinghua": [215, 286], "projected_hessian": 215, "normal_frequ": 215, "geometry_opt": 215, "symmetry_opt": 215, "memory_opt": 215, "noautoz": 215, "singlet": 215, "smoother": 215, "nw_spectrum": 215, "osc_strength": 215, "basis_set_opt": 215, "theory_direct": 215, "alternate_direct": 215, "311": 215, "spheric": [215, 254, 264], "autogener": 215, "b3lyp": [215, 232], "vscf": 215, "g3gn": 215, "sodft": 215, "mp2": 215, "direct_mp2": 215, "rimp2": [215, 221], "ri": 215, "ccsd": 215, "mcscf": 215, "multiconfigur": 215, "selci": 215, "pspw": 215, "nwpw": 215, "tce": 215, "m3g": 216, "iqm": 216, "unicamp": 216, "leandro": 216, "shtml": 216, "control_param": 216, "outputfil": 216, "packmol_out": 216, "stdoutfil": 216, "determinist": [216, 263], "zlo": 216, "succe": 216, "timeoutexpirederror": 216, "packmold": 216, "finish": 216, "atztogo": 217, "eigendisplac": [217, 247, 249], "partial_dos_path": 217, "phonopy_yaml_path": 217, "partial_do": 217, "atom_disp": 217, "supercell_matrix": [217, 269], "yaml_fnam": 217, "disp": [217, 232, 247], "generate_displac": 217, "gruneisen_path": 217, "structure_path": 217, "pymaten": 217, "qpoint": [217, 247, 249, 251], "grueneisen": [217, 249], "inaccuraci": 217, "thz": [217, 247, 248, 249, 251], "gruneisen_dict": 217, "Its": 217, "bands_path": 217, "nac": 217, "bands_dict": 217, "total_dos_path": 217, "mesh_dens": 217, "init_mesh": 217, "line_dens": [217, 257], "num_dos_step": 217, "phonopyatom": 217, "phonopy_structur": 217, "phonopy_mass": 217, "thermal_displacements_yaml": 217, "thermal_displacement_matric": [217, 252], "prism": 218, "em": 218, "stem": 218, "kpoints_mod": 219, "kpoints_grid": 219, "kpoints_shift": 219, "starting_magnet": 219, "upf": 219, "pwinput_dict": 219, "sry": 219, "bravai": [219, 254], "celldm1": 219, "celldm": 219, "celldm2": 219, "celldm3": 219, "celldm4": 219, "celldm5": 219, "celldm6": 219, "solvent": [221, 223], "smx": [221, 223], "van_der_wa": [221, 223], "vdw_mode": [221, 223], "geom_opt": [221, 223], "cdft": [221, 223], "almo_coupl": 221, "svp": [221, 223], "pcm_nonel": 221, "from_st": 221, "section_templ": 221, "read_sect": 221, "land": 221, "multi_job": 221, "tor": [221, 223], "cpcm": 221, "hpoint": 221, "smd": [221, 223], "stretch": [221, 223], "stre": [221, 223], "bend": [221, 223], "libopt3": 221, "first_atom": [221, 223], "last_atom": [221, 223], "diabat": [221, 223], "almo": [221, 223], "job_list": 221, "006736": 221, "032698": 221, "1249": 221, "solvrho": 221, "gaulag_n": 221, "rhoiso": 221, "nptleb": 221, "itrngr": 221, "irotgr": 221, "namelist": [221, 226], "isodens": [221, 223], "ss": [221, 223], "multijob": 221, "keep_sub_fil": 222, "qcout": 222, "qccalc": 222, "no_chang": 222, "unconnected_frag": 222, "fewer_bond": 222, "more_bond": 222, "bond_chang": 222, "percent": 222, "substr": 222, "cast": 222, "def2": 223, "tzvpd": 223, "qchem_vers": 223, "dft_rung": 223, "isosvp_dielectr": 223, "cmirs_solv": 223, "acetonitril": 223, "dimethyl": 223, "sulfoxid": 223, "custom_smd": 223, "max_scf_cycl": 223, "plot_cub": 223, "nbo_param": 223, "cdft_constraint": 223, "overwrite_input": 223, "gdm": 223, "diis_gdm": 223, "rung": 223, "jacob": 223, "ladder": 223, "prescrib": 223, "lsda": 223, "spw92": 223, "b97": 223, "d3": [223, 233], "metagga": [223, 232, 233], "b97m": 223, "\u03c9b97m": 223, "solvat": 223, "ief": 223, "ssvpe": 223, "solvent_method": 223, "isosvp": 223, "ethanol": 223, "methanol": 223, "seven": 223, "refract": 223, "tension": 223, "svpd": 223, "opt_vari": 223, "geom_opt_max_cycl": 223, "job_typ": [223, 224], "scan_vari": 223, "pes_scan": 223, "almo_coupling_st": 223, "extra_scf_print": 223, "trigger": [223, 255, 257], "nbo7": 223, "nbo5": 223, "input_fil": 223, "dict_to_check": 224, "jobtyp": 224, "ambigu": [224, 230], "to_return": 224, "hess_data": 224, "hess": 224, "fock_matrix": 224, "reshap": 224, "elements_pattern": 224, "text_str": 224, "shelx": 225, "whitespac": [225, 273], "parse_rem": 225, "gentl": 225, "castep": 225, "cryan": 225, "gmax": 225, "fsbc": 225, "otfg": 225, "hermann": [225, 256], "mauguin": [225, 256], "p6_3": [225, 256], "mmc": [225, 256], "sousaw": 226, "lattvec": 226, "lfactor": 226, "natomx3": 226, "scell": 226, "norient": 226, "gfactor": 226, "epsilon": [226, 243, 244, 254], "nonanalyt": 226, "autoisotop": 226, "nanowir": 226, "onlyharmon": 226, "espresso": 226, "control_dict": 226, "50000": 226, "omega_max": 226, "scalebroad": 226, "rmin": 226, "rmax": [226, 230], "ntick": 226, "vasp_input": 228, "vasp_output": 228, "userwarn": [230, 233], "isif": [230, 233], "pathlik": 230, "kpts_shift": 230, "coord_typ": 230, "tet_numb": 230, "tet_weight": 230, "tet_connect": 230, "sym_weight": 230, "tet_vertic": 230, "1x1x1": 230, "force_gamma": [230, 233], "odd": [230, 255], "length_dens": 230, "kppvol": 230, "corrector": 230, "preambl": 230, "potim": [230, 233], "specic": 230, "hasn": 230, "aris": [230, 272, 287], "check_for_potcar": 230, "read_veloc": 230, "vasp5": 230, "6th": [230, 232], "default_nam": 230, "vasp4_compat": [230, 232], "7th": [230, 232], "microcanon": 230, "sym_potcar_map": 230, "lda_54": [230, 233], "lda_u": [230, 233], "pw91_u": [230, 233], "perdew_zunger81": 230, "builder": 230, "untouch": 230, "enmax": [230, 233], "tm_3": [230, 233], "vrhfin": 230, "pot_gga_paw_pbe_54": 230, "pot_lda_paw": 230, "pot_lda_paw_52": 230, "pot_lda_paw_54": 230, "pot_lda_u": 230, "pot_gga_us_pw91": 230, "pw86": 230, "lm": 230, "langreth": 230, "hu": 230, "zunger81": 230, "hedin": 230, "lundquist": 230, "wi": 230, "sha256": 230, "cpry": 230, "metadadata": 230, "file_hash": 230, "psctr": 230, "lultra": 230, "_parse_bool": 230, "lunscr": 230, "lcor": 230, "lpaw": 230, "eatom": [230, 232], "_parse_float": 230, "rpacor": 230, "pomass": 230, "rwig": 230, "enmin": 230, "emmin": 230, "eaug": 230, "dexc": 230, "raug": 230, "rdep": 230, "rdept": 230, "qcut": 230, "qgam": 230, "rcloc": 230, "iunscr": 230, "_parse_int": 230, "icor": 230, "ndata": 230, "_parse_str": 230, "lexch": 230, "titel": 230, "_parse_list": 230, "rrkj": 230, "copyr": 230, "w_pv": [230, 233], "has_sh256": 230, "passed_hash_check": 230, "optional_fil": 230, "optional_filenam": 230, "run_dir": 230, "err_fil": 230, "err": 230, "pmg_vasp_ex": 230, "loptic": [231, 232, 233], "irreduc": [231, 254], "vrun": 231, "idir": 231, "jdir": 231, "mask": [231, 269, 270], "methfessel": [231, 233], "paxton": [231, 233], "kramer": 231, "kronig": 231, "min_val": 231, "lookin": 231, "d_n": 231, "h_2i": 231, "hermit": 231, "diri": 231, "dirj": 231, "slot": 231, "gridspac": 231, "outputgrid": 231, "s_n": 231, "erf": 231, "h_": 231, "2i": [231, 272], "parse_projected_eigen": 232, "parse_potcar_fil": 232, "separate_spin": 232, "potcar_spec": [232, 233], "elsymbol": 232, "dispvec": 232, "patrick": [232, 286], "huck": [232, 286], "is_band_gap_direct": 232, "elf": 232, "richer": 232, "4507": 232, "24605593": 232, "dep": 232, "17777": 232, "ncg": 232, "16576": 232, "subindex": 232, "36024": 232, "824705755": 232, "073149912": 232, "vaspobject": 232, "002": 232, "lorbit": [232, 233], "sigma11": 232, "sigma12": 232, "sigma13": 232, "sigma21": 232, "sigma22": 232, "sigma23": 232, "sigma31": 232, "sigma32": 232, "sigma33": 232, "271": 232, "cq": 232, "nuclear_quadrupole_mo": 232, "stopcar": 232, "elaps": 232, "kbar": 232, "6x6": 232, "augement": 232, "final_energy_contrib": 232, "contirbut": 232, "denc": 232, "505778": 232, "5184347": 232, "15561": 232, "06492564": 232, "eband": 232, "804": 232, "53201231": 232, "eentro": 232, "08932659": 232, "exhf": 232, "ediel_sol": 232, "664": 232, "6726974100002": 232, "pscenc": 232, "742": 232, "48691646": 232, "tewen": 232, "489742": 232, "86847338": 232, "xcenc": 232, "169": 232, "64189814": 232, "onsit": 232, "read_core_state_eign": 232, "read_avg_core_pot": 232, "rickard": [232, 273], "iso_shield": 232, "eigenenergi": 232, "qudropol": 232, "dipol_quadrupol_correct": 232, "g0": 232, "nsymmetr": 232, "contact": [232, 233], "a_pw": 232, "a_1p": 232, "a_1a": 232, "a_1c": 232, "a_tot": 232, "051": 232, "052": 232, "056": 232, "321": 232, "048": 232, "fch": 232, "dielectric_tensor_funct": 232, "er_ev": 232, "_ev": 232, "er_bp": 232, "_bp": 232, "er_ev_tot": 232, "er_bp_tot": 232, "p_elc": 232, "lberri": 232, "igpar": 232, "nppstr": 232, "internal_strain_tensor": 232, "lcalpol": 232, "tangent_forc": 232, "first_one_onli": 232, "phase_factor": 232, "nion": 232, "atom_num": 232, "ionic_step_skip": 232, "ionic_step_offset": 232, "parse_eigen": [232, 233], "exception_on_bad_xml": 232, "iterpars": 232, "dom": 232, "2x": 232, "smallish": 232, "1mb": 232, "10mb": 232, "orbitalindex": 232, "occu": 232, "magnetis": 232, "norbit": 232, "lnoncollinear": 232, "real_partxx": 232, "real_partyi": 232, "real_partzz": 232, "real_partxi": 232, "real_partyz": 232, "real_partxz": 232, "imag_partxx": 232, "imag_partyi": 232, "imag_partzz": 232, "imag_partxi": 232, "imag_partyz": 232, "imag_partxz": 232, "ibrion": [232, 233], "4d": 232, "ml_lmlff": 232, "07195568": 232, "17809233": 232, "nosekinet": 232, "323e": 232, "nosepot": 232, "89385012": 232, "17677989": 232, "48309874": 232, "85806696": 232, "08333333": 232, "04166667": 232, "17jan2003": 232, "10th": 232, "3rd": 232, "shave": 232, "parseexcept": 232, "monitor": 232, "forum": 232, "viewtop": 232, "17981": 232, "kpoints_filenam": 232, "force_hybrid_mod": 232, "commentari": [232, 285], "datetim": [232, 277, 287], "vasp4": 232, "currenct": 232, "wq": 232, "qqq": 232, "orthogonorm": 232, "w_k": 232, "delta_": 232, "planewav": 232, "covl_k": 232, "w_": 232, "wq_": 232, "band_i": 232, "band_j": 232, "wavetran": 232, "unfold": 232, "physrevmateri": 232, "065001": 232, "gam": 232, "kp": 232, "recreat": 232, "g_n": 232, "b_2": 232, "b_3": 232, "feenstra": 232, "widom": 232, "dept": 232, "carnegi": [232, 286], "mellon": [232, 286], "visit": 232, "andrew": [232, 286], "cmu": 232, "turianski": [232, 286], "fft": [232, 233], "complex64": 232, "psi_n": 232, "sum_": 232, "g_i": 232, "fourier": 232, "rubric": 232, "ifftn": 232, "qualit": [232, 276, 282], "bloch": 232, "wavderf": 232, "hidden": 232, "lvel": 232, "kamal": [232, 286], "choudhari": [232, 286], "float64": 232, "float32": 232, "recompil": 232, "wrt_cder_between_states_format": 232, "linear_opt": 232, "cart_dir": 232, "ionicstep_start": 232, "ionicstep_end": 232, "balachandran": [232, 286], "rambalachandran": 232, "gave": 232, "mismatch": [232, 263], "anymor": 232, "run_bandstructur": 232, "dir_nam": 232, "branch_x": 232, "ldau": 233, "deleg": 233, "headach": 233, "unbreak": 233, "user_": 233, "_set": 233, "legal": 233, "files_to_transf": 233, "constrain_total_magmom": 233, "userpotcarfunct": 233, "reduce_structur": 233, "use_structure_charg": 233, "sym_prec": 233, "international_monoclin": [233, 254, 255, 257, 265], "validate_magmom": 233, "paid": 233, "mn3": [233, 263], "mn4": 233, "lastli": 233, "ediff_per_atom": 233, "hubbard_u": 233, "ldauu": 233, "ldauj": 233, "ldaul": 233, "gd_3": 233, "nupdown": 233, "undamp": 233, "jonson": 233, "damp": 233, "tkatchenko": 233, "mbd": 233, "ddsc": 233, "dion": 233, "df": 233, "df2": 233, "optpb": 233, "optb88": 233, "optb86b": 233, "max_prime_factor": 233, "must_inc_2": 233, "ngy": [233, 234], "ngz": [233, 234], "monk": 233, "zip_output": 233, "user_supplied_basi": 233, "digest": [233, 272], "basis_pbe_54_standaard": 233, "lobster_basi": 233, "ldauprint": 233, "ldautyp": 233, "lreal": 233, "ce3": 233, "co3": [233, 279], "co4": 233, "dy3": 233, "er3": 233, "gd3": 233, "ho3": 233, "la3": [233, 279], "lu3": 233, "nd3": 233, "pm3": 233, "pr3": 233, "sm3": 233, "tb3": 233, "tm3": 233, "nelm": 233, "vaspincarbas": 233, "ba_sv": 233, "be_sv": 233, "ca_sv": 233, "cr_pv": 233, "cs_sv": 233, "cu_pv": 233, "dy_3": 233, "er_3": 233, "ga_d": 233, "ge_d": 233, "hf_pv": 233, "ho_3": 233, "in_d": 233, "k_sv": 233, "lu_3": 233, "mg_pv": 233, "mn_pv": 233, "mo_pv": 233, "na_pv": 233, "nb_pv": 233, "nd_3": 233, "ni_pv": 233, "os_pv": 233, "pb_d": 233, "pm_3": 233, "pr_3": 233, "rb_sv": 233, "re_pv": 233, "rh_pv": 233, "ru_pv": 233, "sc_sv": 233, "sm_3": 233, "sn_d": 233, "sr_sv": 233, "ta_pv": 233, "tb_3": 233, "tc_pv": 233, "ti_pv": 233, "tl_d": 233, "v_pv": 233, "y_sv": 233, "yb_2": 233, "zr_sv": 233, "start_temp": 233, "end_temp": 233, "2f": 233, "unset_encut": 233, "write_path_cif": 233, "write_endpoint_input": 233, "infrastructur": [233, 285], "023": [233, 285], "icharg": 233, "nelmin": 233, "d6854224d20e3de6e6fd7399503791d1": 233, "e8ffa02fe3f3a51338ac1ac91ae968b9": 233, "a6fd9a46aec185f4ad2acd0cbe4ae2fa": 233, "e782fc6292623b396091bf8b871c272f": 233, "8005364db225a254e52cba350bedd032": 233, "a9182d436a13194b744640ac940ab9b0": 233, "18ed2875dfa6305324cec3d7d59273a": 233, "c0477913afb63dfae3439f3534fbf0": 233, "fb974e44d56a8c62c6bbd1a1eb70c3a7": 233, "e29661c79d59abae3b3ba69eae24b1a5": 233, "40f9594b4506684a69158c8975cfb9d6": 233, "c0a8167dbb174fe492a3db7f5006c0f8": 233, "eb006721e214c04b3c13146e81b3a27d": 233, "0506b2d0ac28d5fe2b5ced77a701aa86": 233, "ff3a09f2ff91798e58eb4b9854e9be4a": 233, "779b9901046c78fe51c5d80224642aeb": 233, "b169bca4e137294d2ab3df8cbdd09083": 233, "82c14307937c7509fda4e9bc023d243d": 233, "096b53a7d80cc0086976bcda50d536e5": 233, "8ca4e43a30de0c397e51f16bbb20d678": 233, "d4a05220ab0a2d4c03a76872ea724a1": 233, "daa65a04877317f8c3c593ddeaa8a132": 233, "d466d046adf21f6146ee9644049ea268": 233, "180141c33d032bfbfff30b3bea9d23dd": 233, "9530da8244e4dac17580869b4adab115": 233, "6e0b9d58412b1bfcd7252aff13d476c2": 233, "1f0d42b1e5f6769d319d3f247992aeb9": 233, "79e788788c31e196a460553010512d3f": 233, "bb43c666e3d36577264afe07669e9582": 233, "47f9434aa3db96c85d7c4b3e4c2df09b": 233, "b113f150cbf9c736f8244a6c25b0482": 233, "c2f15dfb5fd53396c5427635e5019160": 233, "661891464a27e87cf7e1324dd1893b77": 233, "f4ff16a495dd361ff5824ee61b418bb0": 233, "7df38c0cdb4e6d9a9b93f09d690bb3a": 233, "dbcf7dcc6f4fb40df7b3d26904f60a66": 233, "3e84f86d37f203a4fb01de36af57e430": 233, "39b9b85ae3982e6c012fb549b2840ce5": 233, "9b3ce03d18f7c0b40471a817ff91b287": 233, "65e83282d1707ec078c1012afbd05be8": 233, "d40a90babf1224b88ffb4c3273ac3848": 233, "1771eb72adbbfa6310d66e7517e49930": 233, "d082dba29b57ab59b3165e605dbf71b8": 233, "84e18fd84a98e3d7fa8f055952410df0": 233, "b98fd027ddebc67da4063ff2cabbc04b": 233, "1a89e79f7e21d99e8cf5788979f6a987": 233, "7bcee99a4dc3094be0f9fd7961c02966": 233, "0c64e63070cee837c967283fffa001df": 233, "52064eee378b9e37a295a674f1c278f0": 233, "653f5772e68b2c7fd87ffd1086c0d710": 233, "20cb30b714200c4db870550b288ac4cd": 233, "7a25bc5b9a5393f46600a4939d357982": 233, "35c2cb48d48a9c38c40fb82bbe70626d": 233, "7dc3393307131ae67785a0cdacb61d5f": 233, "a1fdb1089d0727f415416ec8082246ba": 233, "704c2c967247d7f84090d2536c91877d": 233, "a395eb3aaf2fcab12fac3030a1146f61": 233, "a2c9485ea86b2a7cf175077e6e5c7b3": 233, "92f191499bf5346ea652bb806350ad87": 233, "a604ea3c6a9cc23c739b762f625cf449": 233, "f1d01e845dccc52d448679911f301a73": 233, "e447c648d870b066b3514e6b800727ab": 233, "rb_pv": 233, "72385e193c92a8acfe17ea49004c2be1": 233, "2c3dba3fcc6058ca1b1cfa75e45084bc": 233, "7925f4d4b68076d70af7cd86eef9ba8d": 233, "d368db6899d8839859bbee4811a42a88": 233, "d82c022b02fc5344e85bd1909f9ee3e7": 233, "dc386f505ad0c43385a7715b4111cb75": 233, "67a8804ede9f1112726e3d136978ef19": 233, "b2b0ea6feb62e7cde209616683b8f7f5": 233, "e5e274e7cd99602ca81d146155abdf88": 233, "849b0795e148f93113a06be8fd5f5001": 233, "ca6a5429c120a0ab705824386a76fe5b": 233, "d4e2cfe9338ef80da592d5bb9dc782c7": 233, "0790955c547003956c0fd4f080f7f508": 233, "9592642886319309a39d55c5717c6f48": 233, "72719856e22fb1d3032df6f96d98a0f2": 233, "aea79f322180fa6f0bfa74cb2a156dcf": 233, "c617e8b539c3f44a0ab6e8da2a92d318": 233, "2aa0d5406aaab7ebfbc761da382f1352": 233, "94a07cb7949b01305cb161da0cbfb492": 233, "72702eabbb1bc02b4167590dc848ed5d": 233, "7f1297a2e1d963e2a4d81b61f85e4d": 233, "2a33e0d5c700640535f60ac0a12177ab": 233, "338472e581f58b41d37c002a5e22353b": 233, "4ed187e77cd54f198bb88020278b143d": 233, "9f472bd422f640710f7d93e2d9ce89f4": 233, "e35ee27f8483a63bb68dbc236a343af3": 233, "d221d2c0bac4f8e81af2f5c42a314274": 233, "ipa": 233, "copy_wavecar": 233, "nbands_factor": 233, "nkred": 233, "prev_incar": 233, "from_prev_calcul": 233, "centr": [233, 286], "diag": 233, "from_previous_calcul": 233, "prev_calc_dir": 233, "mpabsorptionsset": 233, "added_kpoint": 233, "copy_chgcar": 233, "mphsebsstaticset": 233, "prev_structur": 233, "hfscreen": 233, "lhfcalc": 233, "precfock": 233, "skylin": 233, "aykol": [233, 286], "metast": 233, "denser": 233, "dedo": 233, "small_gap_multipli": 233, "prev_chgcar": 233, "manuscript": 233, "mkinet": 233, "jame": [233, 286], "fur": 233, "aaron": 233, "kaplan": 233, "jinliang": 233, "ning": 233, "jianwei": 233, "jpclett": 233, "0c02405": 233, "wisesa": 233, "comb": 233, "155109": 233, "ediffg": 233, "enaug": 233, "1360": 233, "680": 233, "laechg": 233, "lcharg": 233, "lelf": 233, "lmixtau": 233, "lvtot": 233, "fr_sv": 233, "po_d": 233, "ra_sv": 233, "berri": 233, "prev_kpoint": 233, "mvl": 233, "materialsvirtuallab": 233, "luo": 233, "superion": 233, "conductor": 233, "a67": 233, "a74": 233, "0061602je": 233, "k_product": 233, "slab_mod": 233, "ag_sv_gw": 233, "al_gw": 233, "ar_gw": 233, "as_gw": 233, "at_d_gw": 233, "au_sv_gw": 233, "b_gw": 233, "ba_sv_gw": 233, "be_sv_gw": 233, "bi_d_gw": 233, "br_gw": 233, "c_gw": 233, "ca_sv_gw": 233, "cd_sv_gw": 233, "ce_gw": 233, "cl_gw": 233, "co_sv_gw": 233, "cr_sv_gw": 233, "cs_sv_gw": 233, "cu_sv_gw": 233, "f_gw": 233, "fe_sv_gw": 233, "ga_d_gw": 233, "ge_d_gw": 233, "h_gw": 233, "he_gw": 233, "hf_sv_gw": 233, "hg_sv_gw": 233, "i_gw": 233, "in_d_gw": 233, "ir_sv_gw": 233, "k_sv_gw": 233, "kr_gw": 233, "la_gw": 233, "li_sv_gw": 233, "mg_sv_gw": 233, "mn_sv_gw": 233, "mo_sv_gw": 233, "n_gw": 233, "na_sv_gw": 233, "nb_sv_gw": 233, "ne_gw": 233, "ni_sv_gw": 233, "o_gw": 233, "os_sv_gw": 233, "p_gw": 233, "pb_d_gw": 233, "pd_sv_gw": 233, "po_d_gw": 233, "pt_sv_gw": 233, "rb_sv_gw": 233, "re_sv_gw": 233, "rh_sv_gw": 233, "rn_d_gw": 233, "ru_sv_gw": 233, "s_gw": 233, "sb_d_gw": 233, "sc_sv_gw": 233, "se_gw": 233, "si_gw": 233, "sn_d_gw": 233, "sr_sv_gw": 233, "ta_sv_gw": 233, "tc_sv_gw": 233, "te_gw": 233, "ti_sv_gw": 233, "tl_d_gw": 233, "v_sv_gw": 233, "w_sv_gw": 233, "xe_gw": 233, "y_sv_gw": 233, "zn_sv_gw": 233, "zr_sv_gw": 233, "pulai": 233, "keynot": 233, "dimer": 233, "c_h": 233, "o_h": 233, "n_h": 233, "f_h": 233, "p_h": 233, "s_h": 233, "cl_h": 233, "at_d": 233, "bi_d": 233, "eu_2": 233, "mo_sv": 233, "nb_sv": 233, "ti_sv": 233, "v_sv": 233, "semiloc": 233, "upward": 233, "auto_dipol": 233, "set_mix": 233, "formula_count": 233, "structurel": 233, "max_val": 233, "unkxxxxx": 234, "xxxxx": 234, "cls_": 235, "mechan": 236, "use_cor": 236, "working_dir": 238, "coords_filenam": 238, "crest_in": 238, "reference_fnm": 238, "imtd": 239, "gc": 239, "crest_best": 239, "coord_precis": 240, "maciej": 241, "haranczyk": [241, 285], "willem": [241, 285], "rycroft": [241, 285], "kazi": [241, 285], "meza": [241, 285], "micropor": [241, 285], "mesopor": [241, 285], "test_zeoio": 241, "test_point_defect": 241, "zyx": 241, "pivot": 241, "voronoi_radiu": 241, "rad_dict": 241, "probe_rad": 241, "probe": 241, "lapjv": [243, 244], "jonker": [243, 244], "volgen": [243, 244], "325": [243, 244], "340": [243, 244], "min_r": 245, "nac_frequ": 247, "nac_eigendisplac": 247, "versor": 247, "tol_eigendisplac": 247, "naf": 247, "phononwebsit": 247, "prev_eigvec": 247, "eigvec": 247, "prev_band_ord": 247, "c_v": [248, 251], "mole": [248, 251], "avogadro": 248, "limit_frequ": 249, "scripta": 249, "materialia": 249, "uclouvain": [249, 286], "apipi": 249, "freq_max_fit": 249, "quartil": 249, "theta_d": 249, "slack": 249, "gruenisen": 249, "oscillator_strength": 250, "ph_freqs_gamma": 250, "gonze1997": 250, "prb55": 250, "10355": 250, "oscil": 250, "emin": 250, "emax": 250, "div": 250, "dielectric_tensor": 250, "divsx3x3": 250, "reim": 250, "im": 250, "00005": 250, "show_phonon_frequ": 250, "inact": 250, "depict": 251, "site_comb": 251, "rgb_label": 251, "sublist": 251, "tmin": 251, "ntemp": 251, "entrpi": 251, "helmoltz": 251, "anisotrop": 252, "thermal_displacement_matrix_cart": 252, "thermal_displacement_matrix_cif": 252, "ucart": 252, "matlab": 252, "moleculartoolbox": 252, "dering": 252, "dronskowski": 252, "englert": 252, "crystengcomm": 252, "7414": 252, "7422": 252, "u11": 252, "u22": 252, "u33": 252, "u23": 252, "u13": 252, "u12": 252, "2002": 252, "480": 252, "prolat": 252, "c9ce00794f": 252, "dammroz": 252, "thermaldisplacementmatrix": 252, "deliv": 252, "vector0": 252, "vector1": 252, "adp": 252, "u11_cif": 252, "u22_cif": 252, "u33_cif": 252, "u23_cif": 252, "u13_cif": 252, "u12_cif": 252, "sort_ord": 252, "new_structure0": 252, "structure0": 252, "which_structur": 252, "atsushi": 254, "ship": 254, "mere": 254, "eigen_toler": 254, "matrix_toler": 254, "asymmetr": 254, "schoenfli": 254, "eq_set": 254, "sym_op": 254, "twofold": 254, "unto": 254, "sym_mol": 254, "looser": 254, "setyawan": [254, 255, 257], "299": [254, 255, 257, 279], "312": [254, 255, 257], "a3": 254, "is_shift": 254, "ir_kpoint": 254, "pnma": [254, 258], "tmat": 254, "centrosymmetri": 254, "int_symbol": [254, 256], "sites1": 254, "sites2": 254, "symm_prec": [254, 263], "partialremovespeci": 254, "give_only_index": 254, "origin_sit": 254, "clustered_sit": 254, "max_n": 254, "elementwis": 254, "has_magmom": [255, 257], "magmom_axi": [255, 257], "setyawan_curtarolo": 255, "hinuma": [255, 257], "latimer_munro": 255, "munro": [255, 257, 286], "eulerian": 255, "00383": [255, 257], "hi": 256, "m2": 256, "pmmm": 256, "supergroup": 256, "overlin": [256, 278], "array_list": 256, "arr": 256, "broadcast": 256, "lesser": 257, "fulfil": [257, 279], "system_is_tri": 257, "pizzi": 257, "kumagai": [257, 286], "oba": 257, "tanaka": 257, "compli": 257, "bct1": 257, "bct2": 257, "cub": 257, "orfc1": 257, "orfc2": 257, "orfc3": 257, "tri1a": 257, "tri1b": 257, "pn": 258, "ma": 258, "pnm": 258, "grei": [258, 276, 284], "paramagnet": 258, "equi": 258, "itc": 258, "isotropi": 258, "stoke": 258, "magnetic_data": 258, "professor": [258, 286], "branton": 258, "campbel": 258, "daniel": [258, 286], "litvin": 258, "publ": 258, "978": 258, "9553602": 258, "bradlei": 258, "cracknel": 258, "clarendon": 258, "oxford": 258, "1972": 258, "magneticspacegroupshelp": 258, "1651": 258, "jone": 259, "faith": 259, "colon": 259, "r3": 259, "pnnn": 259, "bbab": 259, "ccca": 259, "settin": 259, "origin_shift": 259, "spacegrouptransform": 259, "equivalent_posit": 261, "wyckoff_lett": 261, "return_ranked_list": [263, 264, 265, 266], "charge_balance_sp": 263, "min_atom": 263, "max_atom": 263, "min_length": 263, "force_diagon": 263, "force_90_degre": 263, "inscrib": 263, "num_nn_dist": 263, "max_sites_to_merg": 263, "confus": 263, "orderdisorderedtransform": 263, "inspect": 263, "ionic_radius_tol": 263, "alio_tol": 263, "codop": 263, "max_structures_per_enum": 263, "allowed_doping_speci": 263, "al3": 263, "10a": 263, "ca2": 263, "ti4": [263, 279], "inclusionari": 263, "min_cell_s": 263, "max_cell_s": 263, "refine_structur": 263, "enum_precision_paramet": 263, "check_ordered_symmetri": 263, "max_disordered_sit": 263, "sort_criteria": 263, "orderdisorderedstructur": 263, "max_cel": 263, "worth": 263, "returned_rank": [263, 264, 265, 266], "other_argu": [263, 264, 265, 266], "000000000": 263, "order_paramet": 263, "species_constraint": 263, "site_constraint_nam": 263, "site_constraint": 263, "coordination_no": 263, "mag_species_spin": 263, "complic": 263, "mod": 263, "magordertransform": 263, "disordered_structur": 263, "rattle_std": 263, "rattl": 263, "hiphiv": 263, "d_": 263, "mc_rattl": 263, "sp_to_replac": 263, "r_fraction": 263, "substitution_dict": 263, "charge_balance_speci": 263, "ligep": 263, "cluster_size_and_shel": 263, "best_onli": 263, "remove_duplicate_structur": 263, "quasirandom": 263, "adsorptionsitefind": 263, "scale_volum": 263, "nstructures_per_tran": 263, "realli": 264, "defeat": 264, "shortcircuit": 264, "algo_": [264, 265], "reserv": [264, 265, 266, 272], "transformation_paramet": [264, 265, 266], "nn_onli": 264, "undisturb": 264, "subprocess": [264, 266], "indices_to_remov": 264, "indices_species_map": 264, "indices_to_mov": 264, "vector_in_frac_coord": 264, "fix_denomin": 265, "symmetrized_structur": 265, "no_oxi_st": 265, "lithium": 265, "all_structur": 265, "specie_to_remov": 265, "fraction_to_remov": 265, "unrelaxed_structur": 265, "relaxed_structur": 265, "unrelax": 265, "pbte": 265, "rock": 265, "salt": 265, "scale_a": 265, "scale_b": 265, "test_conv": 268, "asymptot": 268, "x_valu": [268, 269], "gnuplot": 268, "nois": 268, "hit": 268, "fd": 268, "abcdefghijklmnopqrstuvwxyz0123456789": 268, "popt": 268, "heavili": [269, 287], "barycentr": 269, "point1": 269, "point2": 269, "coords1": 269, "coords2": 269, "coord_list": 269, "fcoord_list": 269, "y_valu": 269, "thread": 269, "return_d2": 269, "float_": 270, "lll_frac_tol": 270, "duecredit": 271, "blob": 271, "bsd": 271, "collector": 271, "aric": 272, "hagberg": 272, "lanl": 272, "schult": 272, "dschult": 272, "colgat": 272, "pieter": 272, "swart": 272, "redistribut": 272, "disclaim": 272, "endors": 272, "promot": 272, "BY": 272, "AS": 272, "warranti": 272, "BUT": 272, "merchant": 272, "NO": 272, "event": [272, 276, 277, 284], "shall": 272, "owner": 272, "liabl": 272, "incident": 272, "exemplari": 272, "consequenti": 272, "damag": 272, "procur": 272, "loss": 272, "profit": 272, "interrupt": 272, "liabil": 272, "tort": 272, "neglig": 272, "SUCH": 272, "weisfeil": 272, "lehman": 272, "edge_attr": 272, "node_attr": 272, "digest_s": 272, "wl": 272, "aggreg": 272, "neighborhood": 272, "blake2b": 272, "hexadecim": 272, "shervashidz": 272, "nino": 272, "pascal": 272, "schweitzer": 272, "erik": 272, "leeuwen": 272, "kurt": 272, "mehlhorn": 272, "karsten": 272, "borgwardt": 272, "jmlr": 272, "volume12": 272, "shervashidze11a": 272, "increasingli": 272, "graph2vec": 272, "node_subgraph_hash": 272, "annamalai": 272, "narayanan": 272, "mahinthan": 272, "chandramohan": 272, "rajasekar": 272, "venkatesan": 272, "lihui": 272, "liu": [272, 286], "shantanu": 272, "jaiswa": 272, "1707": 272, "05005": 272, "string_list": 273, "remove_empty_lin": 273, "carriag": 273, "postdebug": 273, "awk": 273, "mimick": 273, "occas": 273, "clever": 273, "max_abs_v": 274, "a_xx": 274, "a_yi": 274, "a_zz": 274, "a_xi": 274, "a_xz": 274, "a_yz": 274, "seq": 274, "sig_fig": 274, "acceler": [275, 285, 286], "ax_arrai": 276, "nrow": 276, "ncol": 276, "sharex": 276, "sharei": 276, "squeez": 276, "subplot_kw": 276, "gridspec_kw": 276, "fig_kw": 276, "elemental_data": 276, "cbar_label": 276, "cbar_label_s": 276, "ylorrd": 276, "cmap_rang": 276, "blank_color": 276, "white": 276, "value_format": 276, "value_fonts": 276, "symbol_fonts": 276, "max_row": 276, "readable_fontcolor": 276, "overlaid": 276, "color_cycl": [276, 282], "set1_9": [276, 282], "palett": 276, "y1label": 276, "y2label": 276, "plot_kwarg": 276, "deg": 276, "list_of_materi": 276, "intersci": 276, "1956": 276, "elsevi": 276, "breadcrumb": 277, "csd": 277, "h_node": 277, "struct_or_mol": 277, "remark": 277, "created_at": 277, "pronounc": 277, "snail": 277, "johndo": 277, "gmail": 277, "_materialsproject": 277, "pybtex": 277, "explicit_on": 278, "monoval": 278, "disordered_struct": 278, "axb1": 278, "afloat": 278, "ignore_on": 278, "0000000001": 278, "p2_1": 278, "colour": 278, "cookbook": 278, "475186": 278, "delim": 278, "fe\u2082o\u2083": 278, "p2\u2081": 278, "specie_str": 278, "o\u00b2": 278, "methodnam": 279, "runtest": 279, "testcas": 279, "posixpath": 279, "test_fil": 279, "banio3": 279, "56530132899998": 279, "1045": 279, "graphit": 279, "4700000000000006": 279, "00000000000001": 279, "928033824449685": 279, "2350000000000005": 279, "139082747347564": 279, "024877593893963e": 279, "2349999999999997": 279, "5124387969469814e": 279, "c0": 279, "2350": 279, "7132": 279, "3333": 279, "7500": 279, "7000": 279, "he_bcc": 279, "737172073807164": 279, "7371720737557492": 279, "73717207": 279, "47122060669534": 279, "47122060631484": 279, "47122066304705": 279, "786447515629305": 279, "58063058": 279, "91239069": 279, "29031529": 279, "23489164": 279, "862375062662279": 279, "862375062662278": 279, "361": 279, "89149308502677": 279, "30921504900002": 279, "3810000000000002": 279, "4945000000000004": 279, "381": 279, "4944999999999995": 279, "2795282396204257e": 279, "6905": 279, "0861": 279, "5902": 279, "4054": 279, "0946": 279, "7707": 279, "0715": 279, "5946": 279, "9054": 279, "3810": 279, "6262": 279, "6417": 279, "5896": 279, "4104": 279, "5725": 279, "7193": 279, "4275": 279, "8683": 279, "4612": 279, "9104": 279, "0896": 279, "0725": 279, "8998": 279, "9275": 279, "la2coo4f": 279, "847249": 279, "748369": 279, "754623": 279, "89340779864318": 279, "192730785407457e": 279, "648323410186749": 279, "027714027499061": 279, "0614": 279, "3336": 279, "7708": 279, "1380": 279, "8620": 279, "4820": 279, "2603": 279, "6941": 279, "9775": 279, "5180": 279, "4875": 279, "2079": 279, "6450": 279, "3620": 279, "6380": 279, "9820": 279, "6864": 279, "8198": 279, "1033": 279, "0180": 279, "0995": 279, "5139": 279, "8742": 279, "9933": 279, "4292": 279, "2966": 279, "3180": 279, "6821": 279, "5735": 279, "1922": 279, "5986": 279, "4518": 279, "4265": 279, "5555": 279, "1124": 279, "4224": 279, "1820": 279, "8179": 279, "0735": 279, "7545": 279, "9153": 279, "3260": 279, "9265": 279, "4256": 279, "8686": 279, "4371": 279, "7305": 279, "7695": 279, "8728": 279, "6730": 279, "3113": 279, "3261": 279, "3547": 279, "2305": 279, "2695": 279, "7734": 279, "1591": 279, "3242": 279, "4236": 279, "li10gep2s12": 279, "69407": 279, "5994": 279, "952": 279, "3489977658411": 279, "323582498531514e": 279, "691": 279, "4658": 279, "3310": 279, "7437": 279, "7282": 279, "8168": 279, "2283": 279, "3630": 279, "2563": 279, "2718": 279, "7101": 279, "1187": 279, "9915": 279, "7718": 279, "2437": 279, "3168": 279, "9840": 279, "5753": 279, "2282": 279, "7563": 279, "6079": 279, "6832": 279, "3082": 279, "1832": 279, "3470": 279, "6980": 279, "0554": 279, "9977": 279, "5554": 279, "6017": 279, "4446": 279, "9014": 279, "9446": 279, "643": 279, "5527": 279, "7537": 279, "1413": 279, "2463": 279, "4884": 279, "2057": 279, "2997": 279, "7463": 279, "2537": 279, "485": 279, "8970": 279, "3093": 279, "8093": 279, "4027": 279, "1907": 279, "7024": 279, "6907": 279, "0918": 279, "4299": 279, "8157": 279, "5897": 279, "6023": 279, "1843": 279, "9494": 279, "1302": 279, "6843": 279, "0897": 279, "7447": 279, "3157": 279, "4692": 279, "9103": 279, "1695": 279, "4103": 279, "0937": 279, "4025": 279, "7009": 279, "9050": 279, "6004": 279, "9474": 279, "1028": 279, "7991": 279, "4050": 279, "7466": 279, "4966": 279, "5950": 279, "1969": 279, "0950": 279, "6169": 279, "6282": 279, "2086": 279, "0772": 279, "6990": 279, "7301": 279, "9279": 279, "7086": 279, "9640": 279, "8010": 279, "6715": 279, "2914": 279, "9712": 279, "7914": 279, "291071792359756": 279, "291071899625086": 279, "2910720568557887": 279, "12971043288485": 279, "12970952137675": 279, "12970313039097": 279, "279668381289053": 279, "91738857": 279, "09789437": 279, "52000466": 279, "96463406": 279, "75503561": 279, "13320635": 279, "09789443": 279, "28691771": 279, "0121": 279, "7502": 279, "0031": 279, "7372": 279, "5806": 279, "2498": 279, "1830000000000007": 279, "1830000000000003": 279, "7258": 279, "7871492344378": 279, "5915000000000006": 279, "756558860245869": 279, "898050761686025e": 279, "5914999999999992": 279, "9490253808430124e": 279, "8629": 279, "5915": 279, "9190": 279, "7943": 279, "9314": 279, "1566": 279, "1497": 279, "5692": 279, "8503": 279, "0195": 279, "6497": 279, "7063": 279, "3503": 279, "li3v2": 279, "64068": 279, "67265": 279, "21317": 279, "3442": 279, "7978186322687": 279, "470939478415996": 279, "168424451387926": 279, "143609518420984": 279, "600861301025969": 279, "17633397910965": 279, "8221": 279, "1201": 279, "1771": 279, "9693": 279, "2652": 279, "5733": 279, "6603": 279, "4985": 279, "5307": 279, "5067": 279, "0857": 279, "1171": 279, "7518": 279, "1558": 279, "9986": 279, "0875": 279, "8492": 279, "6508": 279, "4741": 279, "3421": 279, "9052": 279, "7452": 279, "3464": 279, "1586": 279, "0112": 279, "4471": 279, "5778": 279, "3414": 279, "1536": 279, "7548": 279, "6165": 279, "1274": 279, "5645": 279, "8548": 279, "8558": 279, "8621": 279, "4732": 279, "5730": 279, "9092": 279, "6379": 279, "6442": 279, "6452": 279, "5744": 279, "5407": 279, "9951": 279, "3544": 279, "3550": 279, "3522": 279, "4669": 279, "4754": 279, "1478": 279, "1450": 279, "1456": 279, "p0": 279, "8497": 279, "7789": 279, "7592": 279, "2482": 279, "9521": 279, "5503": 279, "5114": 279, "8080": 279, "3997": 279, "9497": 279, "5479": 279, "8308": 279, "2786": 279, "3958": 279, "4574": 279, "0426": 279, "9267": 279, "5417": 279, "5478": 279, "9522": 279, "5598": 279, "5391": 279, "0387": 279, "4558": 279, "7494": 279, "1909": 279, "3806": 279, "2809": 279, "7506": 279, "0442": 279, "4613": 279, "3983": 279, "1136": 279, "9141": 279, "7133": 279, "8730": 279, "4991": 279, "5103": 279, "5115": 279, "5689": 279, "4899": 279, "6973": 279, "8827": 279, "5548": 279, "6251": 279, "0774": 279, "9518": 279, "7325": 279, "9453": 279, "2592": 279, "1953": 279, "9818": 279, "3876": 279, "7928": 279, "9117": 279, "8164": 279, "4062": 279, "7617": 279, "5732": 279, "7536": 279, "2988": 279, "6913": 279, "8787": 279, "4713": 279, "7039": 279, "9023": 279, "6440": 279, "7347": 279, "9268": 279, "7384": 279, "0938": 279, "0633": 279, "5016": 279, "1213": 279, "7675": 279, "5482": 279, "4226": 279, "6267": 279, "4251": 279, "9980": 279, "6173": 279, "8027": 279, "0101": 279, "5702": 279, "8930": 279, "4665": 279, "2641": 279, "9101": 279, "0661": 279, "4855": 279, "0749": 279, "6051": 279, "5685": 279, "4053": 279, "7588": 279, "7679": 279, "0067": 279, "4196": 279, "0009": 279, "6270": 279, "7867": 279, "3896": 279, "0627": 279, "3776": 279, "9852": 279, "3888": 279, "1934": 279, "5557": 279, "1102": 279, "4339": 279, "5899": 279, "2359": 279, "5509": 279, "3129": 279, "5157": 279, "7412": 279, "0947": 279, "9316": 279, "3963": 279, "7970": 279, "3902": 279, "1884": 279, "9869": 279, "8311": 279, "6586": 279, "8407": 279, "2314": 279, "4288": 279, "5892": 279, "4825": 279, "0673": 279, "9135": 279, "2040": 279, "1387": 279, "5865": 279, "2322": 279, "4327": 279, "2162": 279, "8054": 279, "2624": 279, "5182": 279, "3047": 279, "1852": 279, "7069": 279, "7871": 279, "7961": 279, "0287": 279, "6213": 279, "7916": 279, "5290": 279, "3923": 279, "9108": 279, "0712": 279, "2686": 279, "6360": 279, "6778": 279, "3760": 279, "5131": 279, "3116": 279, "1098": 279, "6028": 279, "1825": 279, "3066": 279, "1112": 279, "5148": 279, "7448": 279, "0657700000000006": 279, "41037": 279, "50178999999999": 279, "00019": 279, "00362": 279, "60796771125047": 279, "053122654367700306": 279, "065537365280947": 279, "00038324092231544317": 279, "41036999994276": 279, "452209424235223e": 279, "3571": 279, "0655": 279, "0004": 279, "0265": 279, "0328": 279, "7446": 279, "1521": 279, "3720": 279, "1786": 279, "3723": 279, "2647": 279, "5372": 279, "4912": 279, "5251": 279, "2534": 279, "2188": 279, "8873": 279, "5282": 279, "0251": 279, "7465": 279, "2812": 279, "4699": 279, "5374": 279, "6259": 279, "9750": 279, "2535": 279, "7188": 279, "0925": 279, "5281": 279, "4749": 279, "7812": 279, "9432": 279, "5594": 279, "7614": 279, "5821": 279, "7517": 279, "0944": 279, "2088": 279, "5061": 279, "3893": 279, "0821": 279, "2483": 279, "4056": 279, "1483": 279, "5597": 279, "3551": 279, "9179": 279, "5944": 279, "4141": 279, "5060": 279, "9829": 279, "4179": 279, "9056": 279, "4361": 279, "5232": 279, "3833": 279, "2511": 279, "0432": 279, "9618": 279, "5518": 279, "2585": 279, "7504": 279, "0962": 279, "6753": 279, "7983": 279, "3849": 279, "7135": 279, "9559": 279, "1658": 279, "6950": 279, "3276": 279, "7163": 279, "5486": 279, "1656": 279, "4570": 279, "7380": 279, "0261": 279, "4514": 279, "3344": 279, "4767": 279, "0127": 279, "0441": 279, "3342": 279, "1902": 279, "5137": 279, "5989": 279, "7585": 279, "2495": 279, "4038": 279, "7159": 279, "5425": 279, "7555": 279, "7489": 279, "4568": 279, "6412": 279, "5231": 279, "9889": 279, "2084": 279, "5432": 279, "1670": 279, "5519": 279, "1455": 279, "2415": 279, "7505": 279, "5962": 279, "8801": 279, "7988": 279, "7318": 279, "7866": 279, "9560": 279, "6658": 279, "9004": 279, "3280": 279, "7181": 279, "7837": 279, "5487": 279, "6656": 279, "6620": 279, "7376": 279, "3457": 279, "2837": 279, "4513": 279, "8344": 279, "6823": 279, "2668": 279, "3597": 279, "2866": 279, "0440": 279, "8342": 279, "3954": 279, "5138": 279, "5181": 279, "7415": 279, "2496": 279, "9038": 279, "9213": 279, "5424": 279, "3610": 279, "7084": 279, "9568": 279, "nafepo4": 279, "9955": 279, "28746": 279, "440590000000002": 279, "97269": 279, "327": 279, "9285211911844": 279, "849958881883509e": 279, "440588813976833": 279, "004976500966151329": 279, "4402": 279, "2870": 279, "9999": 279, "1442": 279, "5001": 279, "2197": 279, "5005": 279, "4999": 279, "2056": 279, "5719": 279, "6193": 279, "5235": 279, "7859": 279, "4584": 279, "7156": 279, "1238": 279, "0241": 279, "7144": 279, "9844": 279, "8792": 279, "9764": 279, "2859": 279, "2367": 279, "3805": 279, "4763": 279, "2142": 279, "3366": 279, "8377": 279, "5672": 279, "8943": 279, "3250": 279, "3370": 279, "0669": 279, "6058": 279, "1164": 279, "6625": 279, "9329": 279, "3943": 279, "1040": 279, "1641": 279, "4331": 279, "1057": 279, "0753": 279, "6636": 279, "3321": 279, "9650": 279, "2591": 279, "8888": 279, "6132": 279, "9528": 279, "4881": 279, "6974": 279, "9468": 279, "8250": 279, "4783": 279, "5532": 279, "0467": 279, "8104": 279, "9879": 279, "1971": 279, "4470": 279, "6749": 279, "0530": 279, "3830": 279, "7937": 279, "6114": 279, "5841": 279, "1557": 279, "8314": 279, "5348": 279, "8549": 279, "8420": 279, "1681": 279, "4650": 279, "0586": 279, "2059": 279, "3887": 279, "3933": 279, "9537": 279, "0111": 279, "8026": 279, "9469": 279, "4775": 279, "5531": 279, "8263": 279, "8099": 279, "5129": 279, "3027": 279, "4469": 279, "1749": 279, "3338": 279, "0531": 279, "1622": 279, "7030": 279, "1113": 279, "3650": 279, "3387": 279, "6683": 279, "0350": 279, "pb2tizro6": 279, "505383": 279, "67298": 279, "99539884709878": 279, "8365": 279, "4376": 279, "5410": 279, "4188": 279, "5369": 279, "4114": 279, "9791": 279, "3704": 279, "4661": 279, "8748": 279, "6381": 279, "2416": 279, "2584": 279, "2069": 279, "7416": 279, "3026": 279, "7584": 279, "6698": 279, "1487": 279, "4587": 279, "8401979337": 279, "840198994344244": 279, "8401979337177736": 279, "99999086398421": 279, "0000091373222": 279, "04479464425159": 279, "9200989668": 279, "3257101909": 279, "2171384943": 279, "1355090603": 279, "8402": 279, "3516": 279, "0277818": 279, "0277817873408415": 279, "51891759": 279, "00000005747829": 279, "81959693044213": 279, "6e": 279, "51389095": 279, "35418672": 279, "3140": 279, "2760": 279, "5189": 279, "5227": 279, "6792": 279, "4773": 279, "8279": 279, "0782": 279, "8396": 279, "8313": 279, "6543": 279, "8051": 279, "5850": 279, "8393": 279, "8707": 279, "0664": 279, "2469": 279, "9655": 279, "1607": 279, "7457": 279, "5373": 279, "2352": 279, "8071": 279, "1259": 279, "4150": 279, "7491": 279, "5470": 279, "7137": 279, "1293": 279, "3452": 279, "6999": 279, "5533": 279, "4626": 279, "4474": 279, "1073": 279, "3929": 279, "7960": 279, "si_sio2_interfac": 279, "160210588671637": 279, "156770002399192": 279, "99999999999999": 279, "2606": 279, "6064276838156": 279, "221334688039882e": 279, "080105294335819": 279, "799000477589283": 279, "3416": 279, "8758": 279, "3499": 279, "7976": 279, "4405": 279, "3207": 279, "9703": 279, "1328": 279, "0833": 279, "5833": 279, "4387": 279, "3898": 279, "3690": 279, "7262": 279, "0674": 279, "6468": 279, "6548": 279, "8690": 279, "6159": 279, "1048": 279, "9405": 279, "0119": 279, "0843": 279, "3618": 279, "1548": 279, "7130": 279, "6188": 279, "5119": 279, "2976": 279, "7016": 279, "4013": 279, "8678": 279, "0998": 279, "2614": 279, "2386": 279, "4078": 279, "4993": 279, "7386": 279, "9479": 279, "4879": 279, "9647": 279, "3995": 279, "5412": 279, "5330": 279, "4247": 279, "0448": 279, "5048": 279, "3277": 279, "3808": 279, "5961": 279, "6992": 279, "3800": 279, "7072": 279, "4153": 279, "0804": 279, "4944": 279, "9200": 279, "1067": 279, "5804": 279, "4601": 279, "7925": 279, "4625": 279, "1188": 279, "2550": 279, "1271": 279, "5575": 279, "0026": 279, "5183": 279, "6271": 279, "5426": 279, "0827": 279, "7777": 279, "6206": 279, "3177": 279, "9730": 279, "8578": 279, "3978": 279, "8260": 279, "2075": 279, "6347": 279, "2255": 279, "7075": 279, "9196": 279, "9379": 279, "6923": 279, "3729": 279, "5716": 279, "8729": 279, "5402": 279, "2807": 279, "8274": 279, "5085": 279, "6802": 279, "6227": 279, "65061477": 279, "294": 279, "16119253915326": 279, "4940": 279, "8193": 279, "3750": 279, "8750": 279, "1250": 279, "6250": 279, "905": 279, "54744262499999": 279, "391122875335207e": 279, "sr2": 279, "9525": 279, "tlbise2": 279, "372201544153475": 279, "149528191254596": 279, "08304095958131": 279, "6737691014605547": 279, "80413768014368": 279, "97014152897428": 279, "825": 279, "8885392060803": 279, "74140218": 279, "00027862": 279, "26231209": 279, "13595131": 279, "78041753": 279, "02198666": 279, "036913": 279, "04093202": 279, "08301525": 279, "6745": 279, "4338": 279, "9669": 279, "9717": 279, "0330": 279, "6037": 279, "7146": 279, "9793": 279, "0537": 279, "0207": 279, "5726": 279, "5326": 279, "9899": 279, "1409": 279, "0022": 279, "8101": 279, "0761": 279, "1282": 279, "5077": 279, "0023": 279, "2876": 279, "9978": 279, "3122": 279, "4572": 279, "7830": 279, "3749": 279, "3594": 279, "7667": 279, "0859": 279, "0331": 279, "4569": 279, "9670": 279, "4184": 279, "0388": 279, "5333": 279, "9611": 279, "2281": 279, "9147": 279, "0084": 279, "5786": 279, "9916": 279, "6750": 279, "4926": 279, "2811": 279, "6486": 279, "8113": 279, "7004": 279, "5869": 279, "7143": 279, "8309": 279, "9491": 279, "2379": 279, "9934": 279, "7801": 279, "0066": 279, "7442": 279, "2126": 279, "9914": 279, "8498": 279, "0086": 279, "5805": 279, "3856": 279, "1013": 279, "8952": 279, "0389": 279, "7377": 279, "2085": 279, "1484": 279, "4743": 279, "0495": 279, "5256": 279, "6987": 279, "5271": 279, "4370": 279, "4897": 279, "1339": 279, "5104": 279, "6462": 279, "7478": 279, "5002": 279, "2145": 279, "4998": 279, "5935": 279, "1347": 279, "0594": 279, "5106": 279, "4893": 279, "3505": 279, "5255": 279, "3788": 279, "4747": 279, "4871": 279, "6824": 279, "5312": 279, "4556": 279, "4685": 279, "4204": 279, "0277": 279, "0185": 279, "5364": 279, "5314": 279, "4634": 279, "2436": 279, "5013": 279, "4986": 279, "1826": 279, "4786": 279, "8633": 279, "5087": 279, "6503": 279, "4913": 279, "0777": 279, "7207": 279, "2599": 279, "9728": 279, "9625": 279, "6564": 279, "7782": 279, "5088": 279, "9121": 279, "9823": 279, "4987": 279, "8560": 279, "5014": 279, "7353": 279, "4138": 279, "5010": 279, "4636": 279, "8973": 279, "5365": 279, "6680": 279, "6996": 279, "8379": 279, "4687": 279, "9729": 279, "5316": 279, "vo2": 279, "err_msg": 279, "test_is_subclass": 279, "test_eq": 279, "__eq__": 279, "highest_protocol": 279, "viewer": 281, "xshift": 282, "yshift": 282, "get_spd": 282, "others_do": 282, "spectra_dict": 282, "chemview": 283, "show_box": 283, "bond_tol": 283, "stick_radiu": 283, "molecularview": 283, "interactor": 284, "multistructurevi": 284, "element_color_map": 284, "show_unit_cel": 284, "show_bond": 284, "show_polyhedron": 284, "poly_radii_tol_factor": 284, "excluded_bonding_el": 284, "animated_movie_opt": 284, "time_between_fram": 284, "looping_typ": 284, "number_of_loop": 284, "time_between_loop": 284, "keyboard": 284, "shortcut": 284, "eras": 284, "reset_camera": 284, "camera": 284, "clock": 284, "tube": 284, "picker": 284, "draw_edg": 284, "edges_color": 284, "edges_linewidth": 284, "axis_ind": 284, "jpeg": 284, "mp4": 284, "bitrat": 284, "10000k": 284, "video": 284, "bitat": 284, "74112": 285, "4960790": 285, "45115": 285, "045115": 285, "dacek": 285, "skinner": 285, "innov": 285, "apl": 285, "11002": 285, "4812323": 285, "brafman": 285, "037": 285, "atz": 285, "j\u00f3nsson": 285, "354": 285, "uki": 285, "micromeso": 285, "smit": 285, "ci200386x": 285, "dilig": 286, "everyon": 286, "caption": 286, "zoomabl": 286, "omiss": 286, "nanoengin": 286, "california": 286, "san": 286, "diego": 286, "senior": 286, "riebesel": 286, "kirbybroderick": 286, "delawar": 286, "danni": 286, "broberg": 286, "universit\u00e9": 286, "catholiqu": 286, "louvain": 286, "donni": 286, "donnywinston": 286, "walter": 286, "clark": 286, "spott": 286, "smith": 286, "francesco": 286, "ricci": 286, "imcn": 286, "modl": 286, "janin": 286, "feder": 286, "bam": 286, "berlin": 286, "germani": 286, "friedrich": 286, "schiller": 286, "universit\u00e4t": 286, "jena": 286, "toyota": 286, "koki": 286, "muraoka": 286, "ryan": 286, "pai": 286, "adour": 286, "samuel": 286, "blau": 286, "lbl": 286, "smidt": 286, "epstein": 286, "alexand": 286, "bonkowski": 286, "rwth": 286, "aachen": 286, "rosen": 286, "biolog": 286, "northwestern": 286, "ann": 286, "rutt": 286, "benjamin": 286, "bath": 286, "vorwerk": 286, "humboldt": 286, "zu": 286, "christoph": 286, "stihl": 286, "karlsruh": 286, "technologi": 286, "drew": 286, "parson": 286, "cagliari": 286, "eric": 286, "henriqu": 286, "miranda": 286, "jack": 286, "sundberg": 286, "north": 286, "carolina": 286, "chapel": 286, "janssen": 286, "lo": 286, "alamo": 286, "jason": 286, "0002": 286, "2743": 286, "7531": 286, "livermor": 286, "ke": 286, "michigan": 286, "shanghai": 286, "jiao": 286, "tong": 286, "kohei": 286, "shinohara": 286, "kyoto": 286, "kristjan": 286, "eimr": 286, "swiss": 286, "santa": 286, "barbara": 286, "siron": 286, "herbst": 286, "cermic": 286, "inria": 286, "pari": 286, "\u00e9cole": 286, "pont": 286, "paristech": 286, "frei": 286, "pennsylvania": 286, "nichola": 286, "winner": 286, "rachel": 286, "robinson": 286, "renew": 286, "rhy": 286, "goodal": 286, "se\u00e1n": 286, "kavanagh": 286, "imperi": 286, "colleg": 286, "london": 286, "steven": 286, "hartman": 286, "torrisi": 286, "harvard": 286, "tingzheng": 286, "hou": 286, "brookhaven": 286, "yu": 286, "hsuan": 286, "liang": 286, "tokyo": 286, "yuh": 286, "chieh": 286, "lin": 286, "tsmc": 286, "zachari": 286, "feket": 286, "council": 286, "kent": 286, "niosh": 286, "amanda": 286, "vilniu": 286, "biotechnologi": 286, "anjli": 286, "patel": 286, "ayush": 286, "gupta": 286, "justu": 286, "bocklund": 286, "bruno": 286, "camino": 286, "conrad": 286, "cole": 286, "florida": 286, "dale": 286, "schwalb": 286, "koda": 286, "massachusett": 286, "dmitri": 286, "korotin": 286, "ub": 286, "eisuk": 286, "kawashima": 286, "riken": 286, "elizabeth": 286, "decolvenaer": 286, "shaw": 286, "evgeni": 286, "tild": 286, "fanchen": 286, "meng": 286, "gui": 286, "hen": 286, "jan\u00dfen": 286, "forschungszentrum": 286, "j\u00fclich": 286, "cornel": 286, "hongsheng": 286, "hebei": 286, "vocat": 286, "quannan": 286, "west": 286, "street": 286, "xindu": 286, "district": 286, "xingtai": 286, "provinc": 286, "iulia": 286, "andriuc": 286, "janakiraman": 286, "hitachi": 286, "jen": 286, "ren\u00e8": 286, "suckert": 286, "jonathan": 286, "suni": 286, "stoni": 286, "brook": 286, "josua": 286, "vieten": 286, "exomatt": 286, "gmbh": 286, "kai": 286, "pei": 286, "frontier": 286, "xi": 286, "jiaotong": 286, "kevin": 286, "maik": 286, "jablonka": 286, "polytechniqu": 286, "f\u00e9d\u00e9rale": 286, "lausann": 286, "leopold": 286, "talirz": 286, "linda": 286, "hung": 286, "lui": 286, "barroso": 286, "luqu": 286, "humbert": 286, "notr": 286, "dame": 286, "wolloch": 286, "faculti": 286, "vienna": 286, "wu": 286, "singapor": 286, "nicla": 286, "heinsdorf": 286, "oskar": 286, "weser": 286, "pezhman": 286, "zarabadi": 286, "kurchin": 286, "dickson": 286, "liverpool": 286, "saurabh": 286, "bajaj": 286, "micron": 286, "shuaishuai": 286, "zhu": 286, "unnc": 286, "sudarshan": 286, "vijai": 286, "tam": 286, "mayeshiba": 286, "wisconsin": 286, "madison": 286, "tim": 286, "holm": 286, "tonnam": 286, "balankura": 286, "optum": 286, "uthpala": 286, "herath": 286, "virginia": 286, "texa": 286, "austin": 286, "weitang": 286, "yohei": 286, "tamura": 286, "pksha": 286, "suzuki": 286, "sokendai": 286, "antonf": 286, "ekb": 286, "as2362": 286, "benedictsaund": 286, "ctoher": 286, "czhengsci": 286, "dcossey014": 286, "eantono": 286, "exengt": 286, "frssp": 286, "gen4438": 286, "gkantoniu": 286, "hmlli": 286, "jdagdelen": 286, "johnson1228": 286, "jself42": 286, "ldamewood": 286, "leicheng": 286, "deacon": 286, "mamachra": 286, "manaslkht": 286, "mdforti": 286, "miaoliu": 286, "huebsch": 286, "nawagn": 286, "ndardenn": 286, "nokimann": 286, "pmla": 286, "rajeshsharma98": 286, "renpj": 286, "robertnf": 286, "rpw199912j": 286, "ruixingw": 286, "sdacek": 286, "shaunrong": 286, "sonium0": 286, "tirkarthi": 286, "utopianf": 286, "w6ye": 286, "wardsimon": 286, "wmdrichard": 286, "yunxingzuo": 286, "zhuoi": 286, "rich": 287, "perfectli": 287, "mongodb": 287, "supplementari": 287, "tradeoff": 287, "jsonencod": 287, "jsondecod": 287, "montydecod": 287, "__module__": 287, "json_str": 287, "hirerachi": 287, "pain": 287, "seldom": 287, "silicon": 287, "089000": 287, "026719": 287, "363000": 287, "513360": 287, "889165": 287, "cystallograph": 287, "mycif": 287, "mystructur": 287, "gau": 287, "fluorin": 287, "another_structur": 287, "fexpi": 287, "fexoi": 287, "fexpyoz": 287, "processed_entri": 287, "accomplish": 287, "input_gen": 287, "packmol_set": 287, "o_run": 287, "o_entri": 287, "cool": 287, "rct": 287, "removespecietransform": 287, "modified_structur": 287, "ht": 287, "multistructur": 287, "user_api_kei": 287, "get_dos_by_material_id": 287, "get_bandstructure_by_material_id": 287, "lixfeyoz": 287, "mp_entri": 287, "2o": 287, "materials_id": 287, "pretty_formula": 287}, "objects": {"": [[9, 0, 0, "-", "pymatgen"]], "pymatgen": [[10, 0, 0, "-", "alchemy"], [14, 0, 0, "-", "analysis"], [105, 0, 0, "-", "apps"], [115, 0, 0, "-", "cli"], [127, 0, 0, "-", "command_line"], [135, 0, 0, "-", "core"], [153, 0, 0, "-", "dao"], [154, 0, 0, "-", "electronic_structure"], [162, 0, 0, "-", "entries"], [169, 0, 0, "-", "ext"], [173, 0, 0, "-", "io"], [242, 0, 0, "-", "optimization"], [246, 0, 0, "-", "phonon"], [253, 0, 0, "-", "symmetry"], [262, 0, 0, "-", "transformations"], [267, 0, 0, "-", "util"], [281, 0, 0, "-", "vis"]], "pymatgen.alchemy": [[11, 0, 0, "-", "filters"], [12, 0, 0, "-", "materials"], [13, 0, 0, "-", "transmuters"]], "pymatgen.alchemy.filters": [[11, 1, 1, "", "AbstractStructureFilter"], [11, 1, 1, "", "ChargeBalanceFilter"], [11, 1, 1, "", "ContainsSpecieFilter"], [11, 1, 1, "", "RemoveDuplicatesFilter"], [11, 1, 1, "", "RemoveExistingFilter"], [11, 1, 1, "", "SpecieProximityFilter"], [11, 1, 1, "", "SpeciesMaxDistFilter"]], "pymatgen.alchemy.filters.AbstractStructureFilter": [[11, 2, 1, "", "test"]], "pymatgen.alchemy.filters.ChargeBalanceFilter": [[11, 2, 1, "", "test"]], "pymatgen.alchemy.filters.ContainsSpecieFilter": [[11, 2, 1, "", "as_dict"], [11, 2, 1, "", "from_dict"], [11, 2, 1, "", "test"]], "pymatgen.alchemy.filters.RemoveDuplicatesFilter": [[11, 2, 1, "", "test"]], "pymatgen.alchemy.filters.RemoveExistingFilter": [[11, 2, 1, "", "as_dict"], [11, 2, 1, "", "test"]], "pymatgen.alchemy.filters.SpecieProximityFilter": [[11, 2, 1, "", "as_dict"], [11, 2, 1, "", "from_dict"], [11, 2, 1, "", "test"]], "pymatgen.alchemy.filters.SpeciesMaxDistFilter": [[11, 2, 1, "", "test"]], "pymatgen.alchemy.materials": [[12, 1, 1, "", "TransformedStructure"]], "pymatgen.alchemy.materials.TransformedStructure": [[12, 2, 1, "", "append_filter"], [12, 2, 1, "", "append_transformation"], [12, 2, 1, "", "as_dict"], [12, 2, 1, "", "extend_transformations"], [12, 2, 1, "", "from_cif_string"], [12, 2, 1, "", "from_dict"], [12, 2, 1, "", "from_poscar_string"], [12, 2, 1, "", "from_snl"], [12, 2, 1, "", "get_vasp_input"], [12, 2, 1, "", "redo_next_change"], [12, 2, 1, "", "set_parameter"], [12, 3, 1, "", "structures"], [12, 2, 1, "", "to_snl"], [12, 2, 1, "", "undo_last_change"], [12, 3, 1, "", "was_modified"], [12, 2, 1, "", "write_vasp_input"]], "pymatgen.alchemy.transmuters": [[13, 1, 1, "", "CifTransmuter"], [13, 1, 1, "", "PoscarTransmuter"], [13, 1, 1, "", "StandardTransmuter"], [13, 4, 1, "", "batch_write_vasp_input"]], "pymatgen.alchemy.transmuters.CifTransmuter": [[13, 2, 1, "", "from_filenames"]], "pymatgen.alchemy.transmuters.PoscarTransmuter": [[13, 2, 1, "", "from_filenames"]], "pymatgen.alchemy.transmuters.StandardTransmuter": [[13, 2, 1, "", "add_tags"], [13, 2, 1, "", "append_transformation"], [13, 2, 1, "", "append_transformed_structures"], [13, 2, 1, "", "apply_filter"], [13, 2, 1, "", "extend_transformations"], [13, 2, 1, "", "from_structures"], [13, 2, 1, "", "redo_next_change"], [13, 2, 1, "", "set_parameter"], [13, 2, 1, "", "undo_last_change"], [13, 2, 1, "", "write_vasp_input"]], "pymatgen.analysis": [[15, 0, 0, "-", "adsorption"], [16, 0, 0, "-", "bond_dissociation"], [17, 0, 0, "-", "bond_valence"], [18, 0, 0, "-", "chemenv"], [40, 0, 0, "-", "chempot_diagram"], [41, 0, 0, "-", "cost"], [42, 0, 0, "-", "diffraction"], [47, 0, 0, "-", "dimensionality"], [48, 0, 0, "-", "disorder"], [49, 0, 0, "-", "elasticity"], [53, 0, 0, "-", "energy_models"], [54, 0, 0, "-", "eos"], [55, 0, 0, "-", "ewald"], [56, 0, 0, "-", "excitation"], [57, 0, 0, "-", "ferroelectricity"], [59, 0, 0, "-", "fragmenter"], [60, 0, 0, "-", "functional_groups"], [61, 0, 0, "-", "gb"], [63, 0, 0, "-", "graphs"], [64, 0, 0, "-", "hhi"], [65, 0, 0, "-", "interface"], [66, 0, 0, "-", "interface_reactions"], [67, 0, 0, "-", "interfaces"], [71, 0, 0, "-", "local_env"], [72, 0, 0, "-", "magnetism"], [76, 0, 0, "-", "molecule_matcher"], [77, 0, 0, "-", "molecule_structure_comparator"], [78, 0, 0, "-", "nmr"], [79, 0, 0, "-", "path_finder"], [80, 0, 0, "-", "phase_diagram"], [81, 0, 0, "-", "piezo"], [82, 0, 0, "-", "piezo_sensitivity"], [83, 0, 0, "-", "pourbaix_diagram"], [84, 0, 0, "-", "prototypes"], [85, 0, 0, "-", "quasiharmonic"], [86, 0, 0, "-", "reaction_calculator"], [87, 0, 0, "-", "solar"], [89, 0, 0, "-", "structure_analyzer"], [90, 0, 0, "-", "structure_matcher"], [91, 0, 0, "-", "structure_prediction"], [96, 0, 0, "-", "surface_analysis"], [97, 0, 0, "-", "thermochemistry"], [98, 0, 0, "-", "topological"], [100, 0, 0, "-", "transition_state"], [101, 0, 0, "-", "wulff"], [102, 0, 0, "-", "xas"], [104, 0, 0, "-", "xps"]], "pymatgen.analysis.adsorption": [[15, 1, 1, "", "AdsorbateSiteFinder"], [15, 4, 1, "", "get_mi_vec"], [15, 4, 1, "", "get_rot"], [15, 4, 1, "", "plot_slab"], [15, 4, 1, "", "put_coord_inside"], [15, 4, 1, "", "reorient_z"]], "pymatgen.analysis.adsorption.AdsorbateSiteFinder": [[15, 2, 1, "", "add_adsorbate"], [15, 2, 1, "", "adsorb_both_surfaces"], [15, 2, 1, "", "assign_selective_dynamics"], [15, 2, 1, "", "assign_site_properties"], [15, 2, 1, "", "ensemble_center"], [15, 2, 1, "", "find_adsorption_sites"], [15, 2, 1, "", "find_surface_sites_by_height"], [15, 2, 1, "", "from_bulk_and_miller"], [15, 2, 1, "", "generate_adsorption_structures"], [15, 2, 1, "", "generate_substitution_structures"], [15, 2, 1, "", "get_extended_surface_mesh"], [15, 2, 1, "", "near_reduce"], [15, 2, 1, "", "subsurface_sites"], [15, 3, 1, "", "surface_sites"], [15, 2, 1, "", "symm_reduce"]], "pymatgen.analysis.bond_dissociation": [[16, 1, 1, "", "BondDissociationEnergies"]], "pymatgen.analysis.bond_dissociation.BondDissociationEnergies": [[16, 2, 1, "", "build_new_entry"], [16, 2, 1, "", "filter_fragment_entries"], [16, 2, 1, "", "fragment_and_process"], [16, 2, 1, "", "search_fragment_entries"]], "pymatgen.analysis.bond_valence": [[17, 1, 1, "", "BVAnalyzer"], [17, 4, 1, "", "add_oxidation_state_by_site_fraction"], [17, 4, 1, "", "calculate_bv_sum"], [17, 4, 1, "", "calculate_bv_sum_unordered"], [17, 4, 1, "", "get_z_ordered_elmap"]], "pymatgen.analysis.bond_valence.BVAnalyzer": [[17, 5, 1, "", "CHARGE_NEUTRALITY_TOLERANCE"], [17, 2, 1, "", "get_oxi_state_decorated_structure"], [17, 2, 1, "", "get_valences"]], "pymatgen.analysis.chemenv": [[19, 0, 0, "-", "connectivity"], [24, 0, 0, "-", "coordination_environments"], [31, 0, 0, "-", "utils"]], "pymatgen.analysis.chemenv.connectivity": [[20, 0, 0, "-", "connected_components"], [21, 0, 0, "-", "connectivity_finder"], [22, 0, 0, "-", "environment_nodes"], [23, 0, 0, "-", "structure_connectivity"]], "pymatgen.analysis.chemenv.connectivity.connected_components": [[20, 1, 1, "", "ConnectedComponent"], [20, 4, 1, "", "draw_network"], [20, 4, 1, "", "make_supergraph"]], "pymatgen.analysis.chemenv.connectivity.connected_components.ConnectedComponent": [[20, 2, 1, "", "as_dict"], [20, 2, 1, "", "compute_periodicity"], [20, 2, 1, "", "compute_periodicity_all_simple_paths_algorithm"], [20, 2, 1, "", "compute_periodicity_cycle_basis"], [20, 2, 1, "", "coordination_sequence"], [20, 2, 1, "", "description"], [20, 2, 1, "", "elastic_centered_graph"], [20, 2, 1, "", "from_dict"], [20, 2, 1, "", "from_graph"], [20, 3, 1, "", "graph"], [20, 3, 1, "", "is_0d"], [20, 3, 1, "", "is_1d"], [20, 3, 1, "", "is_2d"], [20, 3, 1, "", "is_3d"], [20, 3, 1, "", "is_periodic"], [20, 2, 1, "", "make_supergraph"], [20, 3, 1, "", "periodicity"], [20, 3, 1, "", "periodicity_vectors"], [20, 2, 1, "", "show_graph"]], "pymatgen.analysis.chemenv.connectivity.connectivity_finder": [[21, 1, 1, "", "ConnectivityFinder"]], "pymatgen.analysis.chemenv.connectivity.connectivity_finder.ConnectivityFinder": [[21, 2, 1, "", "get_structure_connectivity"], [21, 2, 1, "", "setup_parameters"]], "pymatgen.analysis.chemenv.connectivity.environment_nodes": [[22, 1, 1, "", "AbstractEnvironmentNode"], [22, 1, 1, "", "EnvironmentNode"], [22, 4, 1, "", "get_environment_node"]], "pymatgen.analysis.chemenv.connectivity.environment_nodes.AbstractEnvironmentNode": [[22, 5, 1, "", "ATOM"], [22, 5, 1, "", "CE_NNBCES_NBCES_LIGANDS"], [22, 5, 1, "", "COORDINATION_ENVIRONMENT"], [22, 5, 1, "", "DEFAULT_EXTENSIONS"], [22, 5, 1, "", "LIGANDS_ARRANGEMENT"], [22, 5, 1, "", "NEIGHBORING_CES"], [22, 5, 1, "", "NEIGHBORING_COORDINATION_ENVIRONMENTS"], [22, 5, 1, "", "NEIGHBORS_LIGANDS_ARRANGEMENT"], [22, 5, 1, "", "NUMBER_OF_LIGANDS_FOR_EACH_NEIGHBORING_CE"], [22, 5, 1, "", "NUMBER_OF_LIGANDS_FOR_EACH_NEIGHBORING_COORDINATION_ENVIRONMENT"], [22, 5, 1, "", "NUMBER_OF_NEIGHBORING_CES"], [22, 5, 1, "", "NUMBER_OF_NEIGHBORING_COORDINATION_ENVIRONMENTS"], [22, 3, 1, "", "atom_symbol"], [22, 3, 1, "", "ce"], [22, 3, 1, "", "ce_symbol"], [22, 3, 1, "", "coordination_environment"], [22, 2, 1, "", "everything_equal"], [22, 3, 1, "", "isite"], [22, 3, 1, "", "mp_symbol"]], "pymatgen.analysis.chemenv.connectivity.environment_nodes.EnvironmentNode": [[22, 3, 1, "", "coordination_environment"], [22, 2, 1, "", "everything_equal"]], "pymatgen.analysis.chemenv.connectivity.structure_connectivity": [[23, 1, 1, "", "StructureConnectivity"], [23, 4, 1, "", "get_delta_image"]], "pymatgen.analysis.chemenv.connectivity.structure_connectivity.StructureConnectivity": [[23, 2, 1, "", "add_bonds"], [23, 2, 1, "", "add_sites"], [23, 2, 1, "", "as_dict"], [23, 2, 1, "", "environment_subgraph"], [23, 2, 1, "", "from_dict"], [23, 2, 1, "", "get_connected_components"], [23, 2, 1, "", "print_links"], [23, 2, 1, "", "setup_atom_environment_subgraph"], [23, 2, 1, "", "setup_atom_environments_subgraph"], [23, 2, 1, "", "setup_connectivity_description"], [23, 2, 1, "", "setup_environment_subgraph"], [23, 2, 1, "", "setup_environments_subgraph"]], "pymatgen.analysis.chemenv.coordination_environments": [[25, 0, 0, "-", "chemenv_strategies"], [26, 0, 0, "-", "coordination_geometries"], [27, 0, 0, "-", "coordination_geometries_files"], [28, 0, 0, "-", "coordination_geometry_finder"], [29, 0, 0, "-", "structure_environments"], [30, 0, 0, "-", "voronoi"]], "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies": [[25, 1, 1, "", "AbstractChemenvStrategy"], [25, 1, 1, "", "AdditionalConditionInt"], [25, 1, 1, "", "AngleCutoffFloat"], [25, 1, 1, "", "AngleNbSetWeight"], [25, 1, 1, "", "AnglePlateauNbSetWeight"], [25, 1, 1, "", "CNBiasNbSetWeight"], [25, 1, 1, "", "CSMFloat"], [25, 1, 1, "", "DeltaCSMNbSetWeight"], [25, 1, 1, "", "DeltaDistanceNbSetWeight"], [25, 1, 1, "", "DistanceAngleAreaNbSetWeight"], [25, 1, 1, "", "DistanceCutoffFloat"], [25, 1, 1, "", "DistanceNbSetWeight"], [25, 1, 1, "", "DistancePlateauNbSetWeight"], [25, 1, 1, "", "MultiWeightsChemenvStrategy"], [25, 1, 1, "", "NbSetWeight"], [25, 1, 1, "", "NormalizedAngleDistanceNbSetWeight"], [25, 1, 1, "", "SelfCSMNbSetWeight"], [25, 1, 1, "", "SimpleAbundanceChemenvStrategy"], [25, 1, 1, "", "SimplestChemenvStrategy"], [25, 1, 1, "", "StrategyOption"], [25, 1, 1, "", "TargettedPenaltiedAbundanceChemenvStrategy"], [25, 1, 1, "", "WeightedNbSetChemenvStrategy"], [25, 4, 1, "", "get_effective_csm"], [25, 4, 1, "", "set_info"]], "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AbstractChemenvStrategy": [[25, 5, 1, "", "AC"], [25, 5, 1, "", "DEFAULT_SYMMETRY_MEASURE_TYPE"], [25, 5, 1, "", "STRATEGY_DESCRIPTION"], [25, 5, 1, "", "STRATEGY_INFO_FIELDS"], [25, 5, 1, "", "STRATEGY_OPTIONS"], [25, 2, 1, "", "as_dict"], [25, 2, 1, "", "equivalent_site_index_and_transform"], [25, 2, 1, "", "from_dict"], [25, 2, 1, "", "get_site_ce_fractions_and_neighbors"], [25, 2, 1, "", "get_site_coordination_environment"], [25, 2, 1, "", "get_site_coordination_environments"], [25, 2, 1, "", "get_site_coordination_environments_fractions"], [25, 2, 1, "", "get_site_neighbors"], [25, 2, 1, "", "prepare_symmetries"], [25, 2, 1, "", "set_option"], [25, 2, 1, "", "set_structure_environments"], [25, 2, 1, "", "setup_options"], [25, 3, 1, "", "symmetry_measure_type"], [25, 3, 1, "", "uniquely_determines_coordination_environments"]], "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AdditionalConditionInt": [[25, 5, 1, "", "allowed_values"], [25, 2, 1, "", "as_dict"], [25, 5, 1, "", "description"], [25, 2, 1, "", "from_dict"], [25, 5, 1, "", "integer"]], "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AngleCutoffFloat": [[25, 5, 1, "", "allowed_values"], [25, 2, 1, "", "as_dict"], [25, 2, 1, "", "from_dict"]], "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AngleNbSetWeight": [[25, 5, 1, "", "SHORT_NAME"], [25, 2, 1, "", "angle_sum"], [25, 2, 1, "", "angle_sumn"], [25, 2, 1, "", "as_dict"], [25, 2, 1, "", "from_dict"], [25, 2, 1, "", "weight"]], "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AnglePlateauNbSetWeight": [[25, 5, 1, "", "SHORT_NAME"], [25, 2, 1, "", "as_dict"], [25, 2, 1, "", "from_dict"], [25, 2, 1, "", "weight"]], "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.CNBiasNbSetWeight": [[25, 5, 1, "", "SHORT_NAME"], [25, 2, 1, "", "as_dict"], [25, 2, 1, "", "explicit"], [25, 2, 1, "", "from_description"], [25, 2, 1, "", "from_dict"], [25, 2, 1, "", "geometrically_equidistant"], [25, 2, 1, "", "linearly_equidistant"], [25, 2, 1, "", "weight"]], "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.CSMFloat": [[25, 5, 1, "", "allowed_values"], [25, 2, 1, "", "as_dict"], [25, 2, 1, "", "from_dict"]], "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DeltaCSMNbSetWeight": [[25, 5, 1, "", "DEFAULT_EFFECTIVE_CSM_ESTIMATOR"], [25, 5, 1, "", "DEFAULT_SYMMETRY_MEASURE_TYPE"], [25, 5, 1, "", "DEFAULT_WEIGHT_ESTIMATOR"], [25, 5, 1, "", "SHORT_NAME"], [25, 2, 1, "", "as_dict"], [25, 2, 1, "", "delta_cn_specifics"], [25, 2, 1, "", "from_dict"], [25, 2, 1, "", "weight"]], "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DeltaDistanceNbSetWeight": [[25, 5, 1, "", "SHORT_NAME"], [25, 2, 1, "", "as_dict"], [25, 2, 1, "", "from_dict"], [25, 2, 1, "", "weight"]], "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DistanceAngleAreaNbSetWeight": [[25, 5, 1, "", "AC"], [25, 5, 1, "", "DEFAULT_SURFACE_DEFINITION"], [25, 5, 1, "", "SHORT_NAME"], [25, 2, 1, "", "as_dict"], [25, 2, 1, "", "from_dict"], [25, 2, 1, "", "rectangle_crosses_area"], [25, 2, 1, "", "w_area_has_intersection"], [25, 2, 1, "", "w_area_has_intersection_smoothstep"], [25, 2, 1, "", "w_area_intersection_nbsfh_fbs_onb0"], [25, 2, 1, "", "weight"]], "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DistanceCutoffFloat": [[25, 5, 1, "", "allowed_values"], [25, 2, 1, "", "as_dict"], [25, 2, 1, "", "from_dict"]], "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DistanceNbSetWeight": [[25, 5, 1, "", "SHORT_NAME"], [25, 2, 1, "", "as_dict"], [25, 2, 1, "", "from_dict"], [25, 2, 1, "", "weight"]], "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DistancePlateauNbSetWeight": [[25, 5, 1, "", "SHORT_NAME"], [25, 2, 1, "", "as_dict"], [25, 2, 1, "", "from_dict"], [25, 2, 1, "", "weight"]], "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.MultiWeightsChemenvStrategy": [[25, 5, 1, "", "DEFAULT_CE_ESTIMATOR"], [25, 5, 1, "", "STRATEGY_DESCRIPTION"], [25, 2, 1, "", "as_dict"], [25, 2, 1, "", "from_dict"], [25, 2, 1, "", "stats_article_weights_parameters"], [25, 3, 1, "", "uniquely_determines_coordination_environments"]], "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.NbSetWeight": [[25, 2, 1, "", "as_dict"], [25, 2, 1, "", "weight"]], "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.NormalizedAngleDistanceNbSetWeight": [[25, 5, 1, "", "SHORT_NAME"], [25, 2, 1, "", "ang"], [25, 2, 1, "", "anginvdist"], [25, 2, 1, "", "anginvndist"], [25, 2, 1, "", "angn"], [25, 2, 1, "", "angninvdist"], [25, 2, 1, "", "angninvndist"], [25, 2, 1, "", "as_dict"], [25, 2, 1, "", "aweight"], [25, 2, 1, "", "from_dict"], [25, 2, 1, "", "gweight"], [25, 2, 1, "", "invdist"], [25, 2, 1, "", "invndist"], [25, 2, 1, "", "weight"]], "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SelfCSMNbSetWeight": [[25, 5, 1, "", "DEFAULT_EFFECTIVE_CSM_ESTIMATOR"], [25, 5, 1, "", "DEFAULT_SYMMETRY_MEASURE_TYPE"], [25, 5, 1, "", "DEFAULT_WEIGHT_ESTIMATOR"], [25, 5, 1, "", "SHORT_NAME"], [25, 2, 1, "", "as_dict"], [25, 2, 1, "", "from_dict"], [25, 2, 1, "", "weight"]], "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimpleAbundanceChemenvStrategy": [[25, 5, 1, "", "DEFAULT_ADDITIONAL_CONDITION"], [25, 5, 1, "", "DEFAULT_MAX_DIST"], [25, 5, 1, "", "STRATEGY_DESCRIPTION"], [25, 5, 1, "", "STRATEGY_OPTIONS"], [25, 2, 1, "", "as_dict"], [25, 2, 1, "", "from_dict"], [25, 2, 1, "", "get_site_coordination_environment"], [25, 2, 1, "", "get_site_coordination_environments"], [25, 2, 1, "", "get_site_neighbors"], [25, 3, 1, "", "uniquely_determines_coordination_environments"]], "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimplestChemenvStrategy": [[25, 5, 1, "", "DEFAULT_ADDITIONAL_CONDITION"], [25, 5, 1, "", "DEFAULT_ANGLE_CUTOFF"], [25, 5, 1, "", "DEFAULT_CONTINUOUS_SYMMETRY_MEASURE_CUTOFF"], [25, 5, 1, "", "DEFAULT_DISTANCE_CUTOFF"], [25, 5, 1, "", "STRATEGY_DESCRIPTION"], [25, 5, 1, "", "STRATEGY_OPTIONS"], [25, 2, 1, "", "add_strategy_visualization_to_subplot"], [25, 3, 1, "", "additional_condition"], [25, 3, 1, "", "angle_cutoff"], [25, 2, 1, "", "as_dict"], [25, 3, 1, "", "continuous_symmetry_measure_cutoff"], [25, 3, 1, "", "distance_cutoff"], [25, 2, 1, "", "from_dict"], [25, 2, 1, "", "get_site_coordination_environment"], [25, 2, 1, "", "get_site_coordination_environments"], [25, 2, 1, "", "get_site_coordination_environments_fractions"], [25, 2, 1, "", "get_site_neighbors"], [25, 3, 1, "", "uniquely_determines_coordination_environments"]], "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.StrategyOption": [[25, 5, 1, "", "allowed_values"], [25, 2, 1, "", "as_dict"]], "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.TargettedPenaltiedAbundanceChemenvStrategy": [[25, 5, 1, "", "DEFAULT_TARGET_ENVIRONMENTS"], [25, 2, 1, "", "as_dict"], [25, 2, 1, "", "from_dict"], [25, 2, 1, "", "get_site_coordination_environment"], [25, 3, 1, "", "uniquely_determines_coordination_environments"]], "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.WeightedNbSetChemenvStrategy": [[25, 5, 1, "", "DEFAULT_CE_ESTIMATOR"], [25, 5, 1, "", "STRATEGY_DESCRIPTION"], [25, 2, 1, "", "as_dict"], [25, 2, 1, "", "from_dict"], [25, 2, 1, "", "get_site_coordination_environment"], [25, 2, 1, "", "get_site_coordination_environments"], [25, 2, 1, "", "get_site_coordination_environments_fractions"], [25, 2, 1, "", "get_site_neighbors"], [25, 3, 1, "", "uniquely_determines_coordination_environments"]], "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries": [[26, 1, 1, "", "AbstractChemenvAlgorithm"], [26, 1, 1, "", "AllCoordinationGeometries"], [26, 1, 1, "", "CoordinationGeometry"], [26, 1, 1, "", "ExplicitPermutationsAlgorithm"], [26, 1, 1, "", "SeparationPlane"]], "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.AbstractChemenvAlgorithm": [[26, 3, 1, "", "algorithm_type"], [26, 2, 1, "", "as_dict"]], "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.AllCoordinationGeometries": [[26, 2, 1, "", "get_geometries"], [26, 2, 1, "", "get_geometry_from_IUCr_symbol"], [26, 2, 1, "", "get_geometry_from_IUPAC_symbol"], [26, 2, 1, "", "get_geometry_from_mp_symbol"], [26, 2, 1, "", "get_geometry_from_name"], [26, 2, 1, "", "get_implemented_geometries"], [26, 2, 1, "", "get_not_implemented_geometries"], [26, 2, 1, "", "get_symbol_cn_mapping"], [26, 2, 1, "", "get_symbol_name_mapping"], [26, 2, 1, "", "is_a_valid_coordination_geometry"], [26, 2, 1, "", "pretty_print"]], "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry": [[26, 5, 1, "", "CSM_SKIP_SEPARATION_PLANE_ALGO"], [26, 3, 1, "", "IUCr_symbol"], [26, 3, 1, "", "IUCr_symbol_str"], [26, 3, 1, "", "IUPAC_symbol"], [26, 3, 1, "", "IUPAC_symbol_str"], [26, 1, 1, "", "NeighborsSetsHints"], [26, 3, 1, "", "algorithms"], [26, 2, 1, "", "as_dict"], [26, 3, 1, "", "ce_symbol"], [26, 3, 1, "", "coordination_number"], [26, 3, 1, "", "distfactor_max"], [26, 2, 1, "", "edges"], [26, 2, 1, "", "faces"], [26, 2, 1, "", "from_dict"], [26, 2, 1, "", "get_central_site"], [26, 2, 1, "", "get_coordination_number"], [26, 2, 1, "", "get_name"], [26, 2, 1, "", "get_pmeshes"], [26, 2, 1, "", "is_implemented"], [26, 3, 1, "", "mp_symbol"], [26, 3, 1, "", "number_of_permutations"], [26, 3, 1, "", "pauling_stability_ratio"], [26, 2, 1, "", "ref_permutation"], [26, 2, 1, "", "set_permutations_safe_override"], [26, 2, 1, "", "solid_angles"]], "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.NeighborsSetsHints": [[26, 5, 1, "", "ALLOWED_HINTS_TYPES"], [26, 2, 1, "", "as_dict"], [26, 2, 1, "", "double_cap_hints"], [26, 2, 1, "", "from_dict"], [26, 2, 1, "", "hints"], [26, 2, 1, "", "single_cap_hints"], [26, 2, 1, "", "triple_cap_hints"]], "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.ExplicitPermutationsAlgorithm": [[26, 3, 1, "", "as_dict"], [26, 2, 1, "", "from_dict"], [26, 3, 1, "", "permutations"]], "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.SeparationPlane": [[26, 3, 1, "", "argsorted_ref_separation_perm"], [26, 3, 1, "", "as_dict"], [26, 2, 1, "", "from_dict"], [26, 3, 1, "", "permutations"], [26, 3, 1, "", "ref_separation_perm"], [26, 2, 1, "", "safe_separation_permutations"]], "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder": [[28, 1, 1, "", "AbstractGeometry"], [28, 1, 1, "", "LocalGeometryFinder"], [28, 4, 1, "", "find_rotation"], [28, 4, 1, "", "find_scaling_factor"], [28, 4, 1, "", "symmetry_measure"]], "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.AbstractGeometry": [[28, 3, 1, "", "cn"], [28, 3, 1, "", "coordination_number"], [28, 2, 1, "", "from_cg"], [28, 2, 1, "", "points_wcs_csc"], [28, 2, 1, "", "points_wcs_ctwcc"], [28, 2, 1, "", "points_wcs_ctwocc"], [28, 2, 1, "", "points_wocs_csc"], [28, 2, 1, "", "points_wocs_ctwcc"], [28, 2, 1, "", "points_wocs_ctwocc"]], "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder": [[28, 5, 1, "", "BVA_DISTANCE_SCALE_FACTORS"], [28, 5, 1, "", "DEFAULT_BVA_DISTANCE_SCALE_FACTOR"], [28, 5, 1, "", "DEFAULT_SPG_ANALYZER_OPTIONS"], [28, 5, 1, "", "DEFAULT_STRATEGY"], [28, 5, 1, "", "PRESETS"], [28, 5, 1, "", "STRUCTURE_REFINEMENT_NONE"], [28, 5, 1, "", "STRUCTURE_REFINEMENT_REFINED"], [28, 5, 1, "", "STRUCTURE_REFINEMENT_SYMMETRIZED"], [28, 2, 1, "", "compute_coordination_environments"], [28, 2, 1, "", "compute_structure_environments"], [28, 2, 1, "", "coordination_geometry_symmetry_measures"], [28, 2, 1, "", "coordination_geometry_symmetry_measures_fallback_random"], [28, 2, 1, "", "coordination_geometry_symmetry_measures_separation_plane"], [28, 2, 1, "", "coordination_geometry_symmetry_measures_separation_plane_optim"], [28, 2, 1, "", "coordination_geometry_symmetry_measures_sepplane_optim"], [28, 2, 1, "", "coordination_geometry_symmetry_measures_standard"], [28, 2, 1, "", "get_coordination_symmetry_measures"], [28, 2, 1, "", "get_coordination_symmetry_measures_optim"], [28, 2, 1, "", "get_structure"], [28, 2, 1, "", "set_structure"], [28, 2, 1, "", "setup_explicit_indices_local_geometry"], [28, 2, 1, "", "setup_local_geometry"], [28, 2, 1, "", "setup_ordered_indices_local_geometry"], [28, 2, 1, "", "setup_parameter"], [28, 2, 1, "", "setup_parameters"], [28, 2, 1, "", "setup_random_indices_local_geometry"], [28, 2, 1, "", "setup_random_structure"], [28, 2, 1, "", "setup_structure"], [28, 2, 1, "", "setup_test_perfect_environment"], [28, 2, 1, "", "update_nb_set_environments"]], "pymatgen.analysis.chemenv.coordination_environments.structure_environments": [[29, 1, 1, "", "ChemicalEnvironments"], [29, 1, 1, "", "LightStructureEnvironments"], [29, 1, 1, "", "StructureEnvironments"]], "pymatgen.analysis.chemenv.coordination_environments.structure_environments.ChemicalEnvironments": [[29, 2, 1, "", "add_coord_geom"], [29, 2, 1, "", "as_dict"], [29, 2, 1, "", "from_dict"], [29, 2, 1, "", "is_close_to"], [29, 2, 1, "", "minimum_geometries"], [29, 2, 1, "", "minimum_geometry"]], "pymatgen.analysis.chemenv.coordination_environments.structure_environments.LightStructureEnvironments": [[29, 5, 1, "", "DEFAULT_STATISTICS_FIELDS"], [29, 5, 1, "", "DELTA_MAX_OXIDATION_STATE"], [29, 1, 1, "", "NeighborsSet"], [29, 2, 1, "", "as_dict"], [29, 2, 1, "", "clear_environments"], [29, 2, 1, "", "contains_only_one_anion"], [29, 2, 1, "", "contains_only_one_anion_atom"], [29, 2, 1, "", "environments_identified"], [29, 2, 1, "", "from_dict"], [29, 2, 1, "", "from_structure_environments"], [29, 2, 1, "", "get_site_info_for_specie_allces"], [29, 2, 1, "", "get_site_info_for_specie_ce"], [29, 2, 1, "", "get_statistics"], [29, 2, 1, "", "setup_statistic_lists"], [29, 2, 1, "", "site_contains_environment"], [29, 2, 1, "", "site_has_clear_environment"], [29, 2, 1, "", "structure_contains_atom_environment"], [29, 2, 1, "", "structure_has_clear_environments"], [29, 3, 1, "", "uniquely_determines_coordination_environments"]], "pymatgen.analysis.chemenv.coordination_environments.structure_environments.LightStructureEnvironments.NeighborsSet": [[29, 2, 1, "", "as_dict"], [29, 2, 1, "", "from_dict"], [29, 3, 1, "", "neighb_coords"], [29, 3, 1, "", "neighb_indices_and_images"], [29, 3, 1, "", "neighb_sites"], [29, 3, 1, "", "neighb_sites_and_indices"]], "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments": [[29, 5, 1, "", "AC"], [29, 1, 1, "", "NeighborsSet"], [29, 2, 1, "", "add_neighbors_set"], [29, 2, 1, "", "as_dict"], [29, 2, 1, "", "differences_wrt"], [29, 2, 1, "", "from_dict"], [29, 2, 1, "", "get_coordination_environments"], [29, 2, 1, "", "get_csm"], [29, 2, 1, "", "get_csm_and_maps"], [29, 2, 1, "", "get_csms"], [29, 2, 1, "", "get_environments_figure"], [29, 2, 1, "", "init_neighbors_sets"], [29, 2, 1, "", "plot_csm_and_maps"], [29, 2, 1, "", "plot_environments"], [29, 2, 1, "", "save_environments_figure"], [29, 2, 1, "", "update_coordination_environments"], [29, 2, 1, "", "update_site_info"]], "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.NeighborsSet": [[29, 2, 1, "", "add_source"], [29, 2, 1, "", "angle_plateau"], [29, 3, 1, "", "angles"], [29, 2, 1, "", "as_dict"], [29, 3, 1, "", "coords"], [29, 2, 1, "", "distance_plateau"], [29, 3, 1, "", "distances"], [29, 2, 1, "", "from_dict"], [29, 2, 1, "", "get_neighb_voronoi_indices"], [29, 3, 1, "", "info"], [29, 3, 1, "", "neighb_coords"], [29, 3, 1, "", "neighb_coordsOpt"], [29, 3, 1, "", "neighb_sites"], [29, 3, 1, "", "neighb_sites_and_indices"], [29, 3, 1, "", "normalized_angles"], [29, 3, 1, "", "normalized_distances"], [29, 3, 1, "", "source"], [29, 2, 1, "", "voronoi_grid_surface_points"]], "pymatgen.analysis.chemenv.coordination_environments.voronoi": [[30, 1, 1, "", "DetailedVoronoiContainer"], [30, 4, 1, "", "from_bson_voronoi_list2"]], "pymatgen.analysis.chemenv.coordination_environments.voronoi.DetailedVoronoiContainer": [[30, 5, 1, "", "AC"], [30, 2, 1, "", "as_dict"], [30, 5, 1, "", "default_normalized_angle_tolerance"], [30, 5, 1, "", "default_normalized_distance_tolerance"], [30, 5, 1, "", "default_voronoi_cutoff"], [30, 2, 1, "", "from_dict"], [30, 2, 1, "", "get_rdf_figure"], [30, 2, 1, "", "get_sadf_figure"], [30, 2, 1, "", "is_close_to"], [30, 2, 1, "", "maps_and_surfaces"], [30, 2, 1, "", "maps_and_surfaces_bounded"], [30, 2, 1, "", "neighbors"], [30, 2, 1, "", "neighbors_surfaces"], [30, 2, 1, "", "neighbors_surfaces_bounded"], [30, 2, 1, "", "setup_neighbors_distances_and_angles"], [30, 2, 1, "", "setup_voronoi_list"], [30, 2, 1, "", "to_bson_voronoi_list2"], [30, 2, 1, "", "voronoi_parameters_bounds_and_limits"]], "pymatgen.analysis.chemenv.utils": [[32, 0, 0, "-", "chemenv_config"], [33, 0, 0, "-", "chemenv_errors"], [34, 0, 0, "-", "coordination_geometry_utils"], [35, 0, 0, "-", "defs_utils"], [36, 0, 0, "-", "func_utils"], [37, 0, 0, "-", "graph_utils"], [38, 0, 0, "-", "math_utils"], [39, 0, 0, "-", "scripts_utils"]], "pymatgen.analysis.chemenv.utils.chemenv_config": [[32, 1, 1, "", "ChemEnvConfig"]], "pymatgen.analysis.chemenv.utils.chemenv_config.ChemEnvConfig": [[32, 5, 1, "", "DEFAULT_PACKAGE_OPTIONS"], [32, 2, 1, "", "auto_load"], [32, 3, 1, "", "has_materials_project_access"], [32, 2, 1, "", "package_options_description"], [32, 2, 1, "", "save"], [32, 2, 1, "", "setup"], [32, 2, 1, "", "setup_package_options"]], "pymatgen.analysis.chemenv.utils.chemenv_errors": [[33, 6, 1, "", "AbstractChemenvError"], [33, 6, 1, "", "ChemenvError"], [33, 6, 1, "", "EquivalentSiteSearchError"], [33, 6, 1, "", "NeighborsNotComputedChemenvError"], [33, 6, 1, "", "SolidAngleError"]], "pymatgen.analysis.chemenv.utils.coordination_geometry_utils": [[34, 1, 1, "", "Plane"], [34, 4, 1, "", "anticlockwise_sort"], [34, 4, 1, "", "anticlockwise_sort_indices"], [34, 4, 1, "", "changebasis"], [34, 4, 1, "", "collinear"], [34, 4, 1, "", "diamond_functions"], [34, 4, 1, "", "function_comparison"], [34, 4, 1, "", "get_lower_and_upper_f"], [34, 4, 1, "", "is_anion_cation_bond"], [34, 4, 1, "", "matrixTimesVector"], [34, 4, 1, "", "my_solid_angle"], [34, 4, 1, "", "quarter_ellipsis_functions"], [34, 4, 1, "", "rectangle_surface_intersection"], [34, 4, 1, "", "rotateCoords"], [34, 4, 1, "", "rotateCoordsOpt"], [34, 4, 1, "", "separation_in_list"], [34, 4, 1, "", "sort_separation"], [34, 4, 1, "", "sort_separation_tuple"], [34, 4, 1, "", "spline_functions"], [34, 4, 1, "", "vectorsToMatrix"]], "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane": [[34, 5, 1, "", "TEST_2D_POINTS"], [34, 3, 1, "", "a"], [34, 3, 1, "", "abcd"], [34, 3, 1, "", "b"], [34, 3, 1, "", "c"], [34, 3, 1, "", "coefficients"], [34, 3, 1, "", "crosses_origin"], [34, 3, 1, "", "d"], [34, 3, 1, "", "distance_to_origin"], [34, 2, 1, "", "distance_to_point"], [34, 2, 1, "", "distances"], [34, 2, 1, "", "distances_indices_groups"], [34, 2, 1, "", "distances_indices_sorted"], [34, 2, 1, "", "fit_error"], [34, 2, 1, "", "fit_least_square_distance_error"], [34, 2, 1, "", "fit_maximum_distance_error"], [34, 2, 1, "", "from_2points_and_origin"], [34, 2, 1, "", "from_3points"], [34, 2, 1, "", "from_coefficients"], [34, 2, 1, "", "from_npoints"], [34, 2, 1, "", "from_npoints_least_square_distance"], [34, 2, 1, "", "from_npoints_maximum_distance"], [34, 2, 1, "", "indices_separate"], [34, 2, 1, "", "init_3points"], [34, 2, 1, "", "is_in_list"], [34, 2, 1, "", "is_in_plane"], [34, 2, 1, "", "is_same_plane_as"], [34, 2, 1, "", "orthonormal_vectors"], [34, 2, 1, "", "perpendicular_bisector"], [34, 2, 1, "", "project_and_to2dim"], [34, 2, 1, "", "project_and_to2dim_ordered_indices"], [34, 2, 1, "", "projectionpoints"]], "pymatgen.analysis.chemenv.utils.defs_utils": [[35, 1, 1, "", "AdditionalConditions"]], "pymatgen.analysis.chemenv.utils.defs_utils.AdditionalConditions": [[35, 5, 1, "", "ALL"], [35, 5, 1, "", "CONDITION_DESCRIPTION"], [35, 5, 1, "", "NONE"], [35, 5, 1, "", "NO_AC"], [35, 5, 1, "", "NO_ADDITIONAL_CONDITION"], [35, 5, 1, "", "NO_E2SEB"], [35, 5, 1, "", "NO_ELEMENT_TO_SAME_ELEMENT_BONDS"], [35, 5, 1, "", "ONLY_ACB"], [35, 5, 1, "", "ONLY_ACB_AND_NO_E2SEB"], [35, 5, 1, "", "ONLY_ANION_CATION_BONDS"], [35, 5, 1, "", "ONLY_ANION_CATION_BONDS_AND_NO_ELEMENT_TO_SAME_ELEMENT_BONDS"], [35, 5, 1, "", "ONLY_E2OB"], [35, 5, 1, "", "ONLY_ELEMENT_TO_OXYGEN_BONDS"], [35, 2, 1, "", "check_condition"]], "pymatgen.analysis.chemenv.utils.func_utils": [[36, 1, 1, "", "AbstractRatioFunction"], [36, 1, 1, "", "CSMFiniteRatioFunction"], [36, 1, 1, "", "CSMInfiniteRatioFunction"], [36, 1, 1, "", "DeltaCSMRatioFunction"], [36, 1, 1, "", "RatioFunction"]], "pymatgen.analysis.chemenv.utils.func_utils.AbstractRatioFunction": [[36, 5, 1, "", "ALLOWED_FUNCTIONS"], [36, 2, 1, "", "evaluate"], [36, 2, 1, "", "from_dict"], [36, 2, 1, "", "setup_parameters"]], "pymatgen.analysis.chemenv.utils.func_utils.CSMFiniteRatioFunction": [[36, 5, 1, "", "ALLOWED_FUNCTIONS"], [36, 2, 1, "", "fractions"], [36, 2, 1, "", "mean_estimator"], [36, 2, 1, "", "power2_decreasing_exp"], [36, 2, 1, "", "ratios"], [36, 2, 1, "", "smootherstep"], [36, 2, 1, "", "smoothstep"]], "pymatgen.analysis.chemenv.utils.func_utils.CSMInfiniteRatioFunction": [[36, 5, 1, "", "ALLOWED_FUNCTIONS"], [36, 2, 1, "", "fractions"], [36, 2, 1, "", "mean_estimator"], [36, 2, 1, "", "power2_inverse_decreasing"], [36, 2, 1, "", "power2_inverse_power2_decreasing"], [36, 2, 1, "", "ratios"]], "pymatgen.analysis.chemenv.utils.func_utils.DeltaCSMRatioFunction": [[36, 5, 1, "", "ALLOWED_FUNCTIONS"], [36, 2, 1, "", "smootherstep"]], "pymatgen.analysis.chemenv.utils.func_utils.RatioFunction": [[36, 5, 1, "", "ALLOWED_FUNCTIONS"], [36, 2, 1, "", "inverse_smootherstep"], [36, 2, 1, "", "inverse_smoothstep"], [36, 2, 1, "", "power2_decreasing_exp"], [36, 2, 1, "", "power2_inverse_decreasing"], [36, 2, 1, "", "power2_inverse_power2_decreasing"], [36, 2, 1, "", "smootherstep"], [36, 2, 1, "", "smoothstep"]], "pymatgen.analysis.chemenv.utils.graph_utils": [[37, 1, 1, "", "MultiGraphCycle"], [37, 1, 1, "", "SimpleGraphCycle"], [37, 4, 1, "", "get_all_elementary_cycles"], [37, 4, 1, "", "get_all_simple_paths_edges"], [37, 4, 1, "", "get_delta"]], "pymatgen.analysis.chemenv.utils.graph_utils.MultiGraphCycle": [[37, 2, 1, "", "order"], [37, 2, 1, "", "validate"]], "pymatgen.analysis.chemenv.utils.graph_utils.SimpleGraphCycle": [[37, 2, 1, "", "as_dict"], [37, 2, 1, "", "from_dict"], [37, 2, 1, "", "from_edges"], [37, 2, 1, "", "order"], [37, 2, 1, "", "validate"]], "pymatgen.analysis.chemenv.utils.math_utils": [[38, 4, 1, "", "cosinus_step"], [38, 4, 1, "", "divisors"], [38, 4, 1, "", "get_center_of_arc"], [38, 4, 1, "", "get_linearly_independent_vectors"], [38, 4, 1, "", "normal_cdf_step"], [38, 4, 1, "", "power2_decreasing_exp"], [38, 4, 1, "", "power2_inverse_decreasing"], [38, 4, 1, "", "power2_inverse_power2_decreasing"], [38, 4, 1, "", "power2_inverse_powern_decreasing"], [38, 4, 1, "", "power2_tangent_decreasing"], [38, 4, 1, "", "power3_step"], [38, 4, 1, "", "powern_decreasing"], [38, 4, 1, "", "powern_parts_step"], [38, 4, 1, "", "prime_factors"], [38, 4, 1, "", "scale_and_clamp"], [38, 4, 1, "", "smootherstep"], [38, 4, 1, "", "smoothstep"]], "pymatgen.analysis.chemenv.utils.scripts_utils": [[39, 4, 1, "", "compute_environments"], [39, 4, 1, "", "draw_cg"], [39, 4, 1, "", "visualize"]], "pymatgen.analysis.chempot_diagram": [[40, 1, 1, "", "ChemicalPotentialDiagram"], [40, 4, 1, "", "get_2d_orthonormal_vector"], [40, 4, 1, "", "get_centroid_2d"], [40, 4, 1, "", "simple_pca"]], "pymatgen.analysis.chempot_diagram.ChemicalPotentialDiagram": [[40, 3, 1, "", "border_hyperplanes"], [40, 3, 1, "", "chemical_system"], [40, 3, 1, "", "domains"], [40, 3, 1, "", "el_refs"], [40, 3, 1, "", "entry_dict"], [40, 2, 1, "", "get_plot"], [40, 3, 1, "", "hyperplane_entries"], [40, 3, 1, "", "hyperplanes"], [40, 3, 1, "", "lims"]], "pymatgen.analysis.cost": [[41, 1, 1, "", "CostAnalyzer"], [41, 1, 1, "", "CostDB"], [41, 1, 1, "", "CostDBCSV"], [41, 1, 1, "", "CostEntry"]], "pymatgen.analysis.cost.CostAnalyzer": [[41, 2, 1, "", "get_cost_per_kg"], [41, 2, 1, "", "get_cost_per_mol"], [41, 2, 1, "", "get_lowest_decomposition"]], "pymatgen.analysis.cost.CostDB": [[41, 2, 1, "", "get_entries"]], "pymatgen.analysis.cost.CostDBCSV": [[41, 2, 1, "", "get_entries"]], "pymatgen.analysis.diffraction": [[43, 0, 0, "-", "core"], [44, 0, 0, "-", "neutron"], [45, 0, 0, "-", "tem"], [46, 0, 0, "-", "xrd"]], "pymatgen.analysis.diffraction.core": [[43, 1, 1, "", "AbstractDiffractionPatternCalculator"], [43, 1, 1, "", "DiffractionPattern"], [43, 4, 1, "", "get_unique_families"]], "pymatgen.analysis.diffraction.core.AbstractDiffractionPatternCalculator": [[43, 5, 1, "", "SCALED_INTENSITY_TOL"], [43, 5, 1, "", "TWO_THETA_TOL"], [43, 2, 1, "", "get_pattern"], [43, 2, 1, "", "get_plot"], [43, 2, 1, "", "plot_structures"], [43, 2, 1, "", "show_plot"]], "pymatgen.analysis.diffraction.core.DiffractionPattern": [[43, 5, 1, "", "XLABEL"], [43, 5, 1, "", "YLABEL"]], "pymatgen.analysis.diffraction.neutron": [[44, 1, 1, "", "NDCalculator"]], "pymatgen.analysis.diffraction.neutron.NDCalculator": [[44, 2, 1, "", "get_pattern"]], "pymatgen.analysis.diffraction.tem": [[45, 1, 1, "", "TEMCalculator"]], "pymatgen.analysis.diffraction.tem.TEMCalculator": [[45, 2, 1, "", "bragg_angles"], [45, 2, 1, "", "cell_intensity"], [45, 2, 1, "", "cell_scattering_factors"], [45, 2, 1, "", "electron_scattering_factors"], [45, 2, 1, "", "generate_points"], [45, 2, 1, "", "get_first_point"], [45, 2, 1, "", "get_interplanar_angle"], [45, 2, 1, "", "get_interplanar_spacings"], [45, 2, 1, "", "get_pattern"], [45, 2, 1, "", "get_plot_2d"], [45, 2, 1, "", "get_plot_2d_concise"], [45, 2, 1, "", "get_plot_coeffs"], [45, 2, 1, "", "get_positions"], [45, 2, 1, "", "get_s2"], [45, 2, 1, "", "is_parallel"], [45, 2, 1, "", "normalized_cell_intensity"], [45, 2, 1, "", "tem_dots"], [45, 2, 1, "", "wavelength_rel"], [45, 2, 1, "", "x_ray_factors"], [45, 2, 1, "", "zone_axis_filter"]], "pymatgen.analysis.diffraction.xrd": [[46, 1, 1, "", "XRDCalculator"]], "pymatgen.analysis.diffraction.xrd.XRDCalculator": [[46, 5, 1, "", "AVAILABLE_RADIATION"], [46, 2, 1, "", "get_pattern"]], "pymatgen.analysis.dimensionality": [[47, 4, 1, "", "calculate_dimensionality_of_site"], [47, 4, 1, "", "find_clusters"], [47, 4, 1, "", "find_connected_atoms"], [47, 4, 1, "", "get_dimensionality_cheon"], [47, 4, 1, "", "get_dimensionality_gorai"], [47, 4, 1, "", "get_dimensionality_larsen"], [47, 4, 1, "", "get_structure_components"], [47, 4, 1, "", "zero_d_graph_to_molecule_graph"]], "pymatgen.analysis.disorder": [[48, 4, 1, "", "get_warren_cowley_parameters"]], "pymatgen.analysis.elasticity": [[50, 0, 0, "-", "elastic"], [51, 0, 0, "-", "strain"], [52, 0, 0, "-", "stress"]], "pymatgen.analysis.elasticity.elastic": [[50, 1, 1, "", "ComplianceTensor"], [50, 1, 1, "", "ElasticTensor"], [50, 1, 1, "", "ElasticTensorExpansion"], [50, 1, 1, "", "NthOrderElasticTensor"], [50, 4, 1, "", "diff_fit"], [50, 4, 1, "", "find_eq_stress"], [50, 4, 1, "", "generate_pseudo"], [50, 4, 1, "", "get_diff_coeff"], [50, 4, 1, "", "get_strain_state_dict"], [50, 4, 1, "", "get_symbol_list"], [50, 4, 1, "", "raise_error_if_unphysical"], [50, 4, 1, "", "subs"]], "pymatgen.analysis.elasticity.elastic.ElasticTensor": [[50, 2, 1, "", "cahill_thermalcond"], [50, 2, 1, "", "clarke_thermalcond"], [50, 3, 1, "", "compliance_tensor"], [50, 2, 1, "", "debye_temperature"], [50, 2, 1, "", "directional_elastic_mod"], [50, 2, 1, "", "directional_poisson_ratio"], [50, 2, 1, "", "from_independent_strains"], [50, 2, 1, "", "from_pseudoinverse"], [50, 3, 1, "", "g_reuss"], [50, 3, 1, "", "g_voigt"], [50, 3, 1, "", "g_vrh"], [50, 2, 1, "", "get_structure_property_dict"], [50, 2, 1, "", "green_kristoffel"], [50, 3, 1, "", "homogeneous_poisson"], [50, 3, 1, "", "k_reuss"], [50, 3, 1, "", "k_voigt"], [50, 3, 1, "", "k_vrh"], [50, 2, 1, "", "long_v"], [50, 3, 1, "", "property_dict"], [50, 2, 1, "", "snyder_ac"], [50, 2, 1, "", "snyder_opt"], [50, 2, 1, "", "snyder_total"], [50, 2, 1, "", "trans_v"], [50, 3, 1, "", "universal_anisotropy"], [50, 3, 1, "", "y_mod"]], "pymatgen.analysis.elasticity.elastic.ElasticTensorExpansion": [[50, 2, 1, "", "calculate_stress"], [50, 2, 1, "", "energy_density"], [50, 2, 1, "", "from_diff_fit"], [50, 2, 1, "", "get_compliance_expansion"], [50, 2, 1, "", "get_effective_ecs"], [50, 2, 1, "", "get_ggt"], [50, 2, 1, "", "get_gruneisen_parameter"], [50, 2, 1, "", "get_heat_capacity"], [50, 2, 1, "", "get_stability_criteria"], [50, 2, 1, "", "get_strain_from_stress"], [50, 2, 1, "", "get_symmetric_wallace_tensor"], [50, 2, 1, "", "get_tgt"], [50, 2, 1, "", "get_wallace_tensor"], [50, 2, 1, "", "get_yield_stress"], [50, 2, 1, "", "omega"], [50, 3, 1, "", "order"], [50, 2, 1, "", "thermal_expansion_coeff"]], "pymatgen.analysis.elasticity.elastic.NthOrderElasticTensor": [[50, 5, 1, "", "GPa_to_eV_A3"], [50, 2, 1, "", "calculate_stress"], [50, 2, 1, "", "energy_density"], [50, 2, 1, "", "from_diff_fit"], [50, 3, 1, "", "order"], [50, 5, 1, "", "symbol"]], "pymatgen.analysis.elasticity.strain": [[51, 1, 1, "", "Deformation"], [51, 1, 1, "", "DeformedStructureSet"], [51, 1, 1, "", "Strain"], [51, 4, 1, "", "convert_strain_to_deformation"]], "pymatgen.analysis.elasticity.strain.Deformation": [[51, 2, 1, "", "apply_to_structure"], [51, 2, 1, "", "from_index_amount"], [51, 2, 1, "", "get_perturbed_indices"], [51, 3, 1, "", "green_lagrange_strain"], [51, 2, 1, "", "is_independent"], [51, 5, 1, "", "symbol"]], "pymatgen.analysis.elasticity.strain.Strain": [[51, 2, 1, "", "from_deformation"], [51, 2, 1, "", "from_index_amount"], [51, 2, 1, "", "get_deformation_matrix"], [51, 5, 1, "", "symbol"], [51, 3, 1, "", "von_mises_strain"]], "pymatgen.analysis.elasticity.stress": [[52, 1, 1, "", "Stress"]], "pymatgen.analysis.elasticity.stress.Stress": [[52, 3, 1, "", "dev_principal_invariants"], [52, 3, 1, "", "deviator_stress"], [52, 3, 1, "", "mean_stress"], [52, 2, 1, "", "piola_kirchoff_1"], [52, 2, 1, "", "piola_kirchoff_2"], [52, 5, 1, "", "symbol"], [52, 3, 1, "", "von_mises"]], "pymatgen.analysis.energy_models": [[53, 1, 1, "", "EnergyModel"], [53, 1, 1, "", "EwaldElectrostaticModel"], [53, 1, 1, "", "IsingModel"], [53, 1, 1, "", "NsitesModel"], [53, 1, 1, "", "SymmetryModel"]], "pymatgen.analysis.energy_models.EnergyModel": [[53, 2, 1, "", "from_dict"], [53, 2, 1, "", "get_energy"]], "pymatgen.analysis.energy_models.EwaldElectrostaticModel": [[53, 2, 1, "", "as_dict"], [53, 2, 1, "", "get_energy"]], "pymatgen.analysis.energy_models.IsingModel": [[53, 2, 1, "", "as_dict"], [53, 2, 1, "", "get_energy"]], "pymatgen.analysis.energy_models.NsitesModel": [[53, 2, 1, "", "as_dict"], [53, 2, 1, "", "get_energy"]], "pymatgen.analysis.energy_models.SymmetryModel": [[53, 2, 1, "", "as_dict"], [53, 2, 1, "", "get_energy"]], "pymatgen.analysis.eos": [[54, 1, 1, "", "Birch"], [54, 1, 1, "", "BirchMurnaghan"], [54, 1, 1, "", "DeltaFactor"], [54, 1, 1, "", "EOS"], [54, 1, 1, "", "EOSBase"], [54, 6, 1, "", "EOSError"], [54, 1, 1, "", "Murnaghan"], [54, 1, 1, "", "NumericalEOS"], [54, 1, 1, "", "PolynomialEOS"], [54, 1, 1, "", "PourierTarantola"], [54, 1, 1, "", "Vinet"]], "pymatgen.analysis.eos.DeltaFactor": [[54, 2, 1, "", "fit"]], "pymatgen.analysis.eos.EOS": [[54, 5, 1, "", "MODELS"], [54, 2, 1, "", "fit"]], "pymatgen.analysis.eos.EOSBase": [[54, 3, 1, "", "b0"], [54, 3, 1, "", "b0_GPa"], [54, 3, 1, "", "b1"], [54, 3, 1, "", "e0"], [54, 2, 1, "", "fit"], [54, 2, 1, "", "func"], [54, 2, 1, "", "plot"], [54, 2, 1, "", "plot_ax"], [54, 3, 1, "", "results"], [54, 3, 1, "", "v0"]], "pymatgen.analysis.eos.NumericalEOS": [[54, 2, 1, "", "fit"]], "pymatgen.analysis.eos.PolynomialEOS": [[54, 2, 1, "", "fit"]], "pymatgen.analysis.ewald": [[55, 1, 1, "", "EwaldMinimizer"], [55, 1, 1, "", "EwaldSummation"], [55, 4, 1, "", "compute_average_oxidation_state"]], "pymatgen.analysis.ewald.EwaldMinimizer": [[55, 5, 1, "", "ALGO_BEST_FIRST"], [55, 5, 1, "", "ALGO_COMPLETE"], [55, 5, 1, "", "ALGO_FAST"], [55, 5, 1, "", "ALGO_TIME_LIMIT"], [55, 2, 1, "", "add_m_list"], [55, 2, 1, "", "best_case"], [55, 3, 1, "", "best_m_list"], [55, 2, 1, "", "get_next_index"], [55, 2, 1, "", "minimize_matrix"], [55, 3, 1, "", "minimized_sum"], [55, 3, 1, "", "output_lists"]], "pymatgen.analysis.ewald.EwaldSummation": [[55, 5, 1, "", "CONV_FACT"], [55, 2, 1, "", "as_dict"], [55, 2, 1, "", "compute_partial_energy"], [55, 2, 1, "", "compute_sub_structure"], [55, 3, 1, "", "eta"], [55, 3, 1, "", "forces"], [55, 2, 1, "", "from_dict"], [55, 2, 1, "", "get_site_energy"], [55, 3, 1, "", "point_energy"], [55, 3, 1, "", "point_energy_matrix"], [55, 3, 1, "", "real_space_energy"], [55, 3, 1, "", "real_space_energy_matrix"], [55, 3, 1, "", "reciprocal_space_energy"], [55, 3, 1, "", "reciprocal_space_energy_matrix"], [55, 3, 1, "", "total_energy"], [55, 3, 1, "", "total_energy_matrix"]], "pymatgen.analysis.excitation": [[56, 1, 1, "", "ExcitationSpectrum"]], "pymatgen.analysis.excitation.ExcitationSpectrum": [[56, 5, 1, "", "XLABEL"], [56, 5, 1, "", "YLABEL"]], "pymatgen.analysis.ferroelectricity": [[58, 0, 0, "-", "polarization"]], "pymatgen.analysis.ferroelectricity.polarization": [[58, 1, 1, "", "EnergyTrend"], [58, 1, 1, "", "Polarization"], [58, 1, 1, "", "PolarizationLattice"], [58, 4, 1, "", "calc_ionic"], [58, 4, 1, "", "get_total_ionic_dipole"], [58, 4, 1, "", "zval_dict_from_potcar"]], "pymatgen.analysis.ferroelectricity.polarization.EnergyTrend": [[58, 2, 1, "", "endpoints_minima"], [58, 2, 1, "", "max_spline_jump"], [58, 2, 1, "", "smoothness"], [58, 2, 1, "", "spline"]], "pymatgen.analysis.ferroelectricity.polarization.Polarization": [[58, 2, 1, "", "from_outcars_and_structures"], [58, 2, 1, "", "get_lattice_quanta"], [58, 2, 1, "", "get_pelecs_and_pions"], [58, 2, 1, "", "get_polarization_change"], [58, 2, 1, "", "get_polarization_change_norm"], [58, 2, 1, "", "get_same_branch_polarization_data"], [58, 2, 1, "", "max_spline_jumps"], [58, 2, 1, "", "same_branch_splines"], [58, 2, 1, "", "smoothness"]], "pymatgen.analysis.ferroelectricity.polarization.PolarizationLattice": [[58, 2, 1, "", "get_nearest_site"]], "pymatgen.analysis.fragmenter": [[59, 1, 1, "", "Fragmenter"], [59, 4, 1, "", "open_ring"]], "pymatgen.analysis.functional_groups": [[60, 1, 1, "", "FunctionalGroupExtractor"]], "pymatgen.analysis.functional_groups.FunctionalGroupExtractor": [[60, 2, 1, "", "categorize_functional_groups"], [60, 2, 1, "", "get_all_functional_groups"], [60, 2, 1, "", "get_basic_functional_groups"], [60, 2, 1, "", "get_heteroatoms"], [60, 2, 1, "", "get_special_carbon"], [60, 2, 1, "", "link_marked_atoms"]], "pymatgen.analysis.gb": [[62, 0, 0, "-", "grain"]], "pymatgen.analysis.gb.grain": [[62, 1, 1, "", "GrainBoundary"], [62, 1, 1, "", "GrainBoundaryGenerator"], [62, 4, 1, "", "fix_pbc"], [62, 4, 1, "", "symm_group_cubic"]], "pymatgen.analysis.gb.grain.GrainBoundary": [[62, 2, 1, "", "as_dict"], [62, 3, 1, "", "bottom_grain"], [62, 3, 1, "", "coincidents"], [62, 2, 1, "", "copy"], [62, 2, 1, "", "from_dict"], [62, 2, 1, "", "get_sorted_structure"], [62, 3, 1, "", "sigma"], [62, 3, 1, "", "sigma_from_site_prop"], [62, 3, 1, "", "top_grain"]], "pymatgen.analysis.gb.grain.GrainBoundaryGenerator": [[62, 2, 1, "", "enum_possible_plane_cubic"], [62, 2, 1, "", "enum_sigma_cubic"], [62, 2, 1, "", "enum_sigma_hex"], [62, 2, 1, "", "enum_sigma_ort"], [62, 2, 1, "", "enum_sigma_rho"], [62, 2, 1, "", "enum_sigma_tet"], [62, 2, 1, "", "gb_from_parameters"], [62, 2, 1, "", "get_ratio"], [62, 2, 1, "", "get_rotation_angle_from_sigma"], [62, 2, 1, "", "get_trans_mat"], [62, 2, 1, "", "reduce_mat"], [62, 2, 1, "", "slab_from_csl"], [62, 2, 1, "", "vec_to_surface"]], "pymatgen.analysis.graphs": [[63, 1, 1, "", "ConnectedSite"], [63, 6, 1, "", "MolGraphSplitError"], [63, 1, 1, "", "MoleculeGraph"], [63, 1, 1, "", "StructureGraph"]], "pymatgen.analysis.graphs.ConnectedSite": [[63, 5, 1, "", "dist"], [63, 5, 1, "", "index"], [63, 5, 1, "", "jimage"], [63, 5, 1, "", "site"], [63, 5, 1, "", "weight"]], "pymatgen.analysis.graphs.MoleculeGraph": [[63, 2, 1, "", "add_edge"], [63, 2, 1, "", "alter_edge"], [63, 2, 1, "", "as_dict"], [63, 2, 1, "", "break_edge"], [63, 2, 1, "", "build_unique_fragments"], [63, 2, 1, "", "diff"], [63, 2, 1, "", "draw_graph_to_file"], [63, 3, 1, "", "edge_weight_name"], [63, 3, 1, "", "edge_weight_unit"], [63, 2, 1, "", "find_rings"], [63, 2, 1, "", "from_dict"], [63, 2, 1, "", "get_connected_sites"], [63, 2, 1, "", "get_coordination_of_site"], [63, 2, 1, "", "get_disconnected_fragments"], [63, 2, 1, "", "insert_node"], [63, 2, 1, "", "isomorphic_to"], [63, 3, 1, "", "name"], [63, 2, 1, "", "remove_nodes"], [63, 2, 1, "", "replace_group"], [63, 2, 1, "", "set_node_attributes"], [63, 2, 1, "", "sort"], [63, 2, 1, "", "split_molecule_subgraphs"], [63, 2, 1, "", "substitute_group"], [63, 2, 1, "", "with_edges"], [63, 2, 1, "", "with_empty_graph"], [63, 2, 1, "", "with_local_env_strategy"]], "pymatgen.analysis.graphs.StructureGraph": [[63, 2, 1, "", "add_edge"], [63, 2, 1, "", "alter_edge"], [63, 2, 1, "", "as_dict"], [63, 2, 1, "", "break_edge"], [63, 2, 1, "", "diff"], [63, 2, 1, "", "draw_graph_to_file"], [63, 3, 1, "", "edge_weight_name"], [63, 3, 1, "", "edge_weight_unit"], [63, 2, 1, "", "from_dict"], [63, 2, 1, "", "get_connected_sites"], [63, 2, 1, "", "get_coordination_of_site"], [63, 2, 1, "", "get_subgraphs_as_molecules"], [63, 2, 1, "", "insert_node"], [63, 3, 1, "", "name"], [63, 2, 1, "", "remove_nodes"], [63, 2, 1, "", "set_node_attributes"], [63, 2, 1, "", "sort"], [63, 2, 1, "", "substitute_group"], [63, 3, 1, "", "types_and_weights_of_connections"], [63, 2, 1, "", "types_of_coordination_environments"], [63, 3, 1, "", "weight_statistics"], [63, 2, 1, "", "with_edges"], [63, 2, 1, "", "with_empty_graph"], [63, 2, 1, "", "with_local_env_strategy"]], "pymatgen.analysis.interface_reactions": [[66, 1, 1, "", "GrandPotentialInterfacialReactivity"], [66, 1, 1, "", "InterfacialReactivity"]], "pymatgen.analysis.interface_reactions.GrandPotentialInterfacialReactivity": [[66, 2, 1, "", "get_no_mixing_energy"]], "pymatgen.analysis.interface_reactions.InterfacialReactivity": [[66, 5, 1, "", "EV_TO_KJ_PER_MOL"], [66, 2, 1, "", "get_chempot_correction"], [66, 2, 1, "", "get_critical_original_kink_ratio"], [66, 2, 1, "", "get_dataframe"], [66, 2, 1, "", "get_kinks"], [66, 3, 1, "", "labels"], [66, 3, 1, "", "minimum"], [66, 2, 1, "", "plot"], [66, 3, 1, "", "products"]], "pymatgen.analysis.interfaces": [[68, 0, 0, "-", "coherent_interfaces"], [69, 0, 0, "-", "substrate_analyzer"], [70, 0, 0, "-", "zsl"]], "pymatgen.analysis.interfaces.coherent_interfaces": [[68, 1, 1, "", "CoherentInterfaceBuilder"], [68, 4, 1, "", "from_2d_to_3d"], [68, 4, 1, "", "get_2d_transform"], [68, 4, 1, "", "get_rot_3d_for_2d"]], "pymatgen.analysis.interfaces.coherent_interfaces.CoherentInterfaceBuilder": [[68, 2, 1, "", "get_interfaces"]], "pymatgen.analysis.interfaces.substrate_analyzer": [[69, 1, 1, "", "SubstrateAnalyzer"], [69, 1, 1, "", "SubstrateMatch"]], "pymatgen.analysis.interfaces.substrate_analyzer.SubstrateAnalyzer": [[69, 2, 1, "", "calculate"], [69, 2, 1, "", "generate_surface_vectors"]], "pymatgen.analysis.interfaces.substrate_analyzer.SubstrateMatch": [[69, 5, 1, "", "elastic_energy"], [69, 5, 1, "", "film_miller"], [69, 2, 1, "", "from_zsl"], [69, 5, 1, "", "ground_state_energy"], [69, 5, 1, "", "strain"], [69, 5, 1, "", "substrate_miller"], [69, 3, 1, "", "total_energy"], [69, 5, 1, "", "von_mises_strain"]], "pymatgen.analysis.interfaces.zsl": [[70, 1, 1, "", "ZSLGenerator"], [70, 1, 1, "", "ZSLMatch"], [70, 4, 1, "", "fast_norm"], [70, 4, 1, "", "gen_sl_transform_matrices"], [70, 4, 1, "", "get_factors"], [70, 4, 1, "", "is_same_vectors"], [70, 4, 1, "", "reduce_vectors"], [70, 4, 1, "", "rel_angle"], [70, 4, 1, "", "rel_strain"], [70, 4, 1, "", "vec_angle"], [70, 4, 1, "", "vec_area"]], "pymatgen.analysis.interfaces.zsl.ZSLGenerator": [[70, 2, 1, "", "generate_sl_transformation_sets"], [70, 2, 1, "", "get_equiv_transformations"]], "pymatgen.analysis.interfaces.zsl.ZSLMatch": [[70, 5, 1, "", "film_sl_vectors"], [70, 5, 1, "", "film_transformation"], [70, 5, 1, "", "film_vectors"], [70, 3, 1, "", "match_area"], [70, 3, 1, "", "match_transformation"], [70, 5, 1, "", "substrate_sl_vectors"], [70, 5, 1, "", "substrate_transformation"], [70, 5, 1, "", "substrate_vectors"]], "pymatgen.analysis.local_env": [[71, 1, 1, "", "BrunnerNN_real"], [71, 1, 1, "", "BrunnerNN_reciprocal"], [71, 1, 1, "", "BrunnerNN_relative"], [71, 1, 1, "", "CovalentBondNN"], [71, 1, 1, "", "Critic2NN"], [71, 1, 1, "", "CrystalNN"], [71, 1, 1, "", "CutOffDictNN"], [71, 1, 1, "", "EconNN"], [71, 1, 1, "", "IsayevNN"], [71, 1, 1, "", "JmolNN"], [71, 1, 1, "", "LocalStructOrderParams"], [71, 1, 1, "", "MinimumDistanceNN"], [71, 1, 1, "", "MinimumOKeeffeNN"], [71, 1, 1, "", "MinimumVIRENN"], [71, 1, 1, "", "NearNeighbors"], [71, 1, 1, "", "OpenBabelNN"], [71, 1, 1, "", "ValenceIonicRadiusEvaluator"], [71, 1, 1, "", "VoronoiNN"], [71, 4, 1, "", "get_neighbors_of_site_with_index"], [71, 4, 1, "", "get_okeeffe_distance_prediction"], [71, 4, 1, "", "get_okeeffe_params"], [71, 4, 1, "", "gramschmidt"], [71, 4, 1, "", "metal_edge_extender"], [71, 4, 1, "", "oxygen_edge_extender"], [71, 4, 1, "", "site_is_of_motif_type"], [71, 4, 1, "", "solid_angle"], [71, 4, 1, "", "vol_tetra"]], "pymatgen.analysis.local_env.BrunnerNN_real": [[71, 2, 1, "", "get_nn_info"], [71, 3, 1, "", "molecules_allowed"], [71, 3, 1, "", "structures_allowed"]], "pymatgen.analysis.local_env.BrunnerNN_reciprocal": [[71, 2, 1, "", "get_nn_info"], [71, 3, 1, "", "molecules_allowed"], [71, 3, 1, "", "structures_allowed"]], "pymatgen.analysis.local_env.BrunnerNN_relative": [[71, 2, 1, "", "get_nn_info"], [71, 3, 1, "", "molecules_allowed"], [71, 3, 1, "", "structures_allowed"]], "pymatgen.analysis.local_env.CovalentBondNN": [[71, 3, 1, "", "extend_structure_molecules"], [71, 2, 1, "", "get_bonded_structure"], [71, 2, 1, "", "get_nn_info"], [71, 2, 1, "", "get_nn_shell_info"], [71, 3, 1, "", "molecules_allowed"], [71, 3, 1, "", "structures_allowed"]], "pymatgen.analysis.local_env.Critic2NN": [[71, 3, 1, "", "extend_structure_molecules"], [71, 2, 1, "", "get_bonded_structure"], [71, 2, 1, "", "get_nn_info"], [71, 3, 1, "", "molecules_allowed"], [71, 3, 1, "", "structures_allowed"]], "pymatgen.analysis.local_env.CrystalNN": [[71, 1, 1, "", "NNData"], [71, 2, 1, "", "get_cn"], [71, 2, 1, "", "get_cn_dict"], [71, 2, 1, "", "get_nn_data"], [71, 2, 1, "", "get_nn_info"], [71, 3, 1, "", "molecules_allowed"], [71, 3, 1, "", "structures_allowed"], [71, 2, 1, "", "transform_to_length"]], "pymatgen.analysis.local_env.CrystalNN.NNData": [[71, 5, 1, "", "all_nninfo"], [71, 5, 1, "", "cn_nninfo"], [71, 5, 1, "", "cn_weights"]], "pymatgen.analysis.local_env.CutOffDictNN": [[71, 3, 1, "", "extend_structure_molecules"], [71, 2, 1, "", "from_preset"], [71, 2, 1, "", "get_nn_info"], [71, 3, 1, "", "molecules_allowed"], [71, 3, 1, "", "structures_allowed"]], "pymatgen.analysis.local_env.EconNN": [[71, 3, 1, "", "extend_structure_molecules"], [71, 2, 1, "", "get_nn_info"], [71, 3, 1, "", "molecules_allowed"], [71, 3, 1, "", "structures_allowed"]], "pymatgen.analysis.local_env.IsayevNN": [[71, 2, 1, "", "get_all_nn_info"], [71, 2, 1, "", "get_nn_info"]], "pymatgen.analysis.local_env.JmolNN": [[71, 3, 1, "", "extend_structure_molecules"], [71, 2, 1, "", "get_max_bond_distance"], [71, 2, 1, "", "get_nn_info"], [71, 3, 1, "", "molecules_allowed"], [71, 3, 1, "", "structures_allowed"]], "pymatgen.analysis.local_env.LocalStructOrderParams": [[71, 2, 1, "", "compute_trigonometric_terms"], [71, 2, 1, "", "get_order_parameters"], [71, 2, 1, "", "get_parameters"], [71, 2, 1, "", "get_q2"], [71, 2, 1, "", "get_q4"], [71, 2, 1, "", "get_q6"], [71, 2, 1, "", "get_type"], [71, 3, 1, "", "last_nneigh"], [71, 3, 1, "", "num_ops"]], "pymatgen.analysis.local_env.MinimumDistanceNN": [[71, 3, 1, "", "extend_structure_molecules"], [71, 2, 1, "", "get_nn_info"], [71, 3, 1, "", "molecules_allowed"], [71, 3, 1, "", "structures_allowed"]], "pymatgen.analysis.local_env.MinimumOKeeffeNN": [[71, 3, 1, "", "extend_structure_molecules"], [71, 2, 1, "", "get_nn_info"], [71, 3, 1, "", "molecules_allowed"], [71, 3, 1, "", "structures_allowed"]], "pymatgen.analysis.local_env.MinimumVIRENN": [[71, 2, 1, "", "get_nn_info"], [71, 3, 1, "", "molecules_allowed"], [71, 3, 1, "", "structures_allowed"]], "pymatgen.analysis.local_env.NearNeighbors": [[71, 3, 1, "", "extend_structure_molecules"], [71, 2, 1, "", "get_all_nn_info"], [71, 2, 1, "", "get_bonded_structure"], [71, 2, 1, "", "get_cn"], [71, 2, 1, "", "get_cn_dict"], [71, 2, 1, "", "get_local_order_parameters"], [71, 2, 1, "", "get_nn"], [71, 2, 1, "", "get_nn_images"], [71, 2, 1, "", "get_nn_info"], [71, 2, 1, "", "get_nn_shell_info"], [71, 2, 1, "", "get_weights_of_nn_sites"], [71, 3, 1, "", "molecules_allowed"], [71, 3, 1, "", "structures_allowed"]], "pymatgen.analysis.local_env.OpenBabelNN": [[71, 3, 1, "", "extend_structure_molecules"], [71, 2, 1, "", "get_bonded_structure"], [71, 2, 1, "", "get_nn_info"], [71, 2, 1, "", "get_nn_shell_info"], [71, 3, 1, "", "molecules_allowed"], [71, 3, 1, "", "structures_allowed"]], "pymatgen.analysis.local_env.ValenceIonicRadiusEvaluator": [[71, 3, 1, "", "radii"], [71, 3, 1, "", "structure"], [71, 3, 1, "", "valences"]], "pymatgen.analysis.local_env.VoronoiNN": [[71, 2, 1, "", "get_all_nn_info"], [71, 2, 1, "", "get_all_voronoi_polyhedra"], [71, 2, 1, "", "get_nn_info"], [71, 2, 1, "", "get_voronoi_polyhedra"], [71, 3, 1, "", "molecules_allowed"], [71, 3, 1, "", "structures_allowed"]], "pymatgen.analysis.magnetism": [[73, 0, 0, "-", "analyzer"], [74, 0, 0, "-", "heisenberg"], [75, 0, 0, "-", "jahnteller"]], "pymatgen.analysis.magnetism.analyzer": [[73, 1, 1, "", "CollinearMagneticStructureAnalyzer"], [73, 1, 1, "", "MagneticDeformation"], [73, 1, 1, "", "MagneticStructureEnumerator"], [73, 1, 1, "", "Ordering"], [73, 1, 1, "", "OverwriteMagmomMode"], [73, 4, 1, "", "magnetic_deformation"]], "pymatgen.analysis.magnetism.analyzer.CollinearMagneticStructureAnalyzer": [[73, 2, 1, "", "get_exchange_group_info"], [73, 2, 1, "", "get_ferromagnetic_structure"], [73, 2, 1, "", "get_nonmagnetic_structure"], [73, 2, 1, "", "get_structure_with_only_magnetic_atoms"], [73, 2, 1, "", "get_structure_with_spin"], [73, 3, 1, "", "is_magnetic"], [73, 3, 1, "", "magmoms"], [73, 3, 1, "", "magnetic_species_and_magmoms"], [73, 2, 1, "", "matches_ordering"], [73, 3, 1, "", "number_of_magnetic_sites"], [73, 2, 1, "", "number_of_unique_magnetic_sites"], [73, 3, 1, "", "ordering"], [73, 3, 1, "", "types_of_magnetic_specie"], [73, 3, 1, "", "types_of_magnetic_species"]], "pymatgen.analysis.magnetism.analyzer.MagneticDeformation": [[73, 5, 1, "", "deformation"], [73, 5, 1, "", "type"]], "pymatgen.analysis.magnetism.analyzer.MagneticStructureEnumerator": [[73, 5, 1, "", "available_strategies"]], "pymatgen.analysis.magnetism.analyzer.Ordering": [[73, 5, 1, "", "AFM"], [73, 5, 1, "", "FM"], [73, 5, 1, "", "FiM"], [73, 5, 1, "", "NM"], [73, 5, 1, "", "Unknown"]], "pymatgen.analysis.magnetism.analyzer.OverwriteMagmomMode": [[73, 5, 1, "", "none"], [73, 5, 1, "", "normalize"], [73, 5, 1, "", "replace_all"], [73, 5, 1, "", "respect_sign"], [73, 5, 1, "", "respect_zero"]], "pymatgen.analysis.magnetism.heisenberg": [[74, 1, 1, "", "HeisenbergMapper"], [74, 1, 1, "", "HeisenbergModel"], [74, 1, 1, "", "HeisenbergScreener"]], "pymatgen.analysis.magnetism.heisenberg.HeisenbergMapper": [[74, 2, 1, "", "estimate_exchange"], [74, 2, 1, "", "get_exchange"], [74, 2, 1, "", "get_heisenberg_model"], [74, 2, 1, "", "get_interaction_graph"], [74, 2, 1, "", "get_low_energy_orderings"], [74, 2, 1, "", "get_mft_temperature"]], "pymatgen.analysis.magnetism.heisenberg.HeisenbergModel": [[74, 2, 1, "", "as_dict"], [74, 2, 1, "", "from_dict"]], "pymatgen.analysis.magnetism.heisenberg.HeisenbergScreener": [[74, 5, 1, "", "screened_energies"], [74, 5, 1, "", "screened_structures"]], "pymatgen.analysis.magnetism.jahnteller": [[75, 1, 1, "", "JahnTellerAnalyzer"]], "pymatgen.analysis.magnetism.jahnteller.JahnTellerAnalyzer": [[75, 2, 1, "", "get_analysis"], [75, 2, 1, "", "get_analysis_and_structure"], [75, 2, 1, "", "get_magnitude_of_effect_from_species"], [75, 2, 1, "", "get_magnitude_of_effect_from_spin_config"], [75, 2, 1, "", "is_jahn_teller_active"], [75, 2, 1, "", "mu_so"], [75, 2, 1, "", "tag_structure"]], "pymatgen.analysis.molecule_matcher": [[76, 1, 1, "", "AbstractMolAtomMapper"], [76, 1, 1, "", "BruteForceOrderMatcher"], [76, 1, 1, "", "GeneticOrderMatcher"], [76, 1, 1, "", "HungarianOrderMatcher"], [76, 1, 1, "", "InchiMolAtomMapper"], [76, 1, 1, "", "IsomorphismMolAtomMapper"], [76, 1, 1, "", "KabschMatcher"], [76, 1, 1, "", "MoleculeMatcher"]], "pymatgen.analysis.molecule_matcher.AbstractMolAtomMapper": [[76, 2, 1, "", "from_dict"], [76, 2, 1, "", "get_molecule_hash"], [76, 2, 1, "", "uniform_labels"]], "pymatgen.analysis.molecule_matcher.BruteForceOrderMatcher": [[76, 2, 1, "", "fit"], [76, 2, 1, "", "match"], [76, 2, 1, "", "permutations"]], "pymatgen.analysis.molecule_matcher.GeneticOrderMatcher": [[76, 2, 1, "", "fit"], [76, 2, 1, "", "match"], [76, 2, 1, "", "permutations"]], "pymatgen.analysis.molecule_matcher.HungarianOrderMatcher": [[76, 2, 1, "", "fit"], [76, 2, 1, "", "get_principal_axis"], [76, 2, 1, "", "match"], [76, 2, 1, "", "permutations"], [76, 2, 1, "", "rotation_matrix_vectors"]], "pymatgen.analysis.molecule_matcher.InchiMolAtomMapper": [[76, 2, 1, "", "as_dict"], [76, 2, 1, "", "from_dict"], [76, 2, 1, "", "get_molecule_hash"], [76, 2, 1, "", "uniform_labels"]], "pymatgen.analysis.molecule_matcher.IsomorphismMolAtomMapper": [[76, 2, 1, "", "as_dict"], [76, 2, 1, "", "from_dict"], [76, 2, 1, "", "get_molecule_hash"], [76, 2, 1, "", "uniform_labels"]], "pymatgen.analysis.molecule_matcher.KabschMatcher": [[76, 2, 1, "", "fit"], [76, 2, 1, "", "kabsch"], [76, 2, 1, "", "match"]], "pymatgen.analysis.molecule_matcher.MoleculeMatcher": [[76, 2, 1, "", "as_dict"], [76, 2, 1, "", "fit"], [76, 2, 1, "", "from_dict"], [76, 2, 1, "", "get_rmsd"], [76, 2, 1, "", "group_molecules"]], "pymatgen.analysis.molecule_structure_comparator": [[77, 1, 1, "", "CovalentRadius"], [77, 1, 1, "", "MoleculeStructureComparator"]], "pymatgen.analysis.molecule_structure_comparator.CovalentRadius": [[77, 5, 1, "", "radius"]], "pymatgen.analysis.molecule_structure_comparator.MoleculeStructureComparator": [[77, 2, 1, "", "are_equal"], [77, 2, 1, "", "as_dict"], [77, 2, 1, "", "from_dict"], [77, 2, 1, "", "get_13_bonds"], [77, 5, 1, "", "halogen_list"], [77, 5, 1, "", "ionic_element_list"]], "pymatgen.analysis.nmr": [[78, 1, 1, "", "ChemicalShielding"], [78, 1, 1, "", "ElectricFieldGradient"]], "pymatgen.analysis.nmr.ChemicalShielding": [[78, 1, 1, "", "HaeberlenNotation"], [78, 1, 1, "", "MarylandNotation"], [78, 1, 1, "", "MehringNotation"], [78, 2, 1, "", "from_maryland_notation"], [78, 3, 1, "", "haeberlen_values"], [78, 3, 1, "", "maryland_values"], [78, 3, 1, "", "mehring_values"], [78, 3, 1, "", "principal_axis_system"]], "pymatgen.analysis.nmr.ChemicalShielding.HaeberlenNotation": [[78, 5, 1, "", "delta_sigma_iso"], [78, 5, 1, "", "eta"], [78, 5, 1, "", "sigma_iso"], [78, 5, 1, "", "zeta"]], "pymatgen.analysis.nmr.ChemicalShielding.MarylandNotation": [[78, 5, 1, "", "kappa"], [78, 5, 1, "", "omega"], [78, 5, 1, "", "sigma_iso"]], "pymatgen.analysis.nmr.ChemicalShielding.MehringNotation": [[78, 5, 1, "", "sigma_11"], [78, 5, 1, "", "sigma_22"], [78, 5, 1, "", "sigma_33"], [78, 5, 1, "", "sigma_iso"]], "pymatgen.analysis.nmr.ElectricFieldGradient": [[78, 3, 1, "", "V_xx"], [78, 3, 1, "", "V_yy"], [78, 3, 1, "", "V_zz"], [78, 3, 1, "", "asymmetry"], [78, 2, 1, "", "coupling_constant"], [78, 3, 1, "", "principal_axis_system"]], "pymatgen.analysis.path_finder": [[79, 1, 1, "", "ChgcarPotential"], [79, 1, 1, "", "FreeVolumePotential"], [79, 1, 1, "", "MixedPotential"], [79, 1, 1, "", "NEBPathfinder"], [79, 1, 1, "", "StaticPotential"]], "pymatgen.analysis.path_finder.NEBPathfinder": [[79, 3, 1, "", "images"], [79, 2, 1, "", "interpolate"], [79, 2, 1, "", "plot_images"], [79, 2, 1, "", "string_relax"]], "pymatgen.analysis.path_finder.StaticPotential": [[79, 2, 1, "", "gaussian_smear"], [79, 2, 1, "", "get_v"], [79, 2, 1, "", "normalize"], [79, 2, 1, "", "rescale_field"]], "pymatgen.analysis.phase_diagram": [[80, 1, 1, "", "CompoundPhaseDiagram"], [80, 1, 1, "", "GrandPotPDEntry"], [80, 1, 1, "", "GrandPotentialPhaseDiagram"], [80, 1, 1, "", "PDEntry"], [80, 1, 1, "", "PDPlotter"], [80, 1, 1, "", "PatchedPhaseDiagram"], [80, 1, 1, "", "PhaseDiagram"], [80, 6, 1, "", "PhaseDiagramError"], [80, 1, 1, "", "ReactionDiagram"], [80, 1, 1, "", "TransformedPDEntry"], [80, 6, 1, "", "TransformedPDEntryError"], [80, 4, 1, "", "get_facets"], [80, 4, 1, "", "order_phase_diagram"], [80, 4, 1, "", "tet_coord"], [80, 4, 1, "", "triangular_coord"], [80, 4, 1, "", "uniquelines"]], "pymatgen.analysis.phase_diagram.CompoundPhaseDiagram": [[80, 5, 1, "", "amount_tol"], [80, 2, 1, "", "as_dict"], [80, 2, 1, "", "from_dict"], [80, 2, 1, "", "transform_entries"]], "pymatgen.analysis.phase_diagram.GrandPotPDEntry": [[80, 2, 1, "", "as_dict"], [80, 3, 1, "", "chemical_energy"], [80, 3, 1, "", "composition"], [80, 3, 1, "", "energy"], [80, 2, 1, "", "from_dict"]], "pymatgen.analysis.phase_diagram.GrandPotentialPhaseDiagram": [[80, 2, 1, "", "as_dict"], [80, 2, 1, "", "from_dict"]], "pymatgen.analysis.phase_diagram.PDEntry": [[80, 2, 1, "", "as_dict"], [80, 5, 1, "", "attribute"], [80, 5, 1, "", "composition"], [80, 3, 1, "id0", "energy"], [80, 2, 1, "", "from_dict"], [80, 5, 1, "", "name"]], "pymatgen.analysis.phase_diagram.PDPlotter": [[80, 2, 1, "", "get_chempot_range_map_plot"], [80, 2, 1, "", "get_contour_pd_plot"], [80, 2, 1, "", "get_plot"], [80, 3, 1, "", "pd_plot_data"], [80, 2, 1, "", "plot_chempot_range_map"], [80, 2, 1, "", "plot_element_profile"], [80, 2, 1, "", "show"], [80, 2, 1, "", "write_image"]], "pymatgen.analysis.phase_diagram.PatchedPhaseDiagram": [[80, 5, 1, "", "all_entries"], [80, 2, 1, "", "as_dict"], [80, 5, 1, "", "el_refs"], [80, 5, 1, "", "elements"], [80, 2, 1, "", "from_dict"], [80, 2, 1, "", "get_all_chempots"], [80, 2, 1, "", "get_chempot_range_map"], [80, 2, 1, "", "get_chempot_range_stability_phase"], [80, 2, 1, "", "get_composition_chempots"], [80, 2, 1, "", "get_critical_compositions"], [80, 2, 1, "", "get_decomp_and_e_above_hull"], [80, 2, 1, "", "get_decomposition"], [80, 2, 1, "", "get_element_profile"], [80, 2, 1, "", "get_equilibrium_reaction_energy"], [80, 2, 1, "", "get_pd_for_entry"], [80, 2, 1, "", "get_transition_chempots"], [80, 2, 1, "", "getmu_vertices_stability_phase"], [80, 5, 1, "", "min_entries"]], "pymatgen.analysis.phase_diagram.PhaseDiagram": [[80, 5, 1, "", "all_entries"], [80, 3, 1, "", "all_entries_hulldata"], [80, 2, 1, "", "as_dict"], [80, 5, 1, "", "dim"], [80, 5, 1, "", "el_refs"], [80, 5, 1, "", "elements"], [80, 5, 1, "", "facets"], [80, 5, 1, "", "formation_energy_tol"], [80, 2, 1, "", "from_dict"], [80, 2, 1, "", "get_all_chempots"], [80, 2, 1, "", "get_chempot_range_map"], [80, 2, 1, "", "get_chempot_range_stability_phase"], [80, 2, 1, "", "get_composition_chempots"], [80, 2, 1, "", "get_critical_compositions"], [80, 2, 1, "", "get_decomp_and_e_above_hull"], [80, 2, 1, "", "get_decomp_and_hull_energy_per_atom"], [80, 2, 1, "", "get_decomp_and_phase_separation_energy"], [80, 2, 1, "", "get_decomposition"], [80, 2, 1, "", "get_e_above_hull"], [80, 2, 1, "", "get_element_profile"], [80, 2, 1, "", "get_equilibrium_reaction_energy"], [80, 2, 1, "", "get_form_energy"], [80, 2, 1, "", "get_form_energy_per_atom"], [80, 2, 1, "", "get_hull_energy"], [80, 2, 1, "", "get_hull_energy_per_atom"], [80, 2, 1, "", "get_phase_separation_energy"], [80, 2, 1, "", "get_plot"], [80, 2, 1, "", "get_reference_energy_per_atom"], [80, 2, 1, "", "get_transition_chempots"], [80, 2, 1, "", "getmu_vertices_stability_phase"], [80, 5, 1, "", "numerical_tol"], [80, 2, 1, "", "pd_coords"], [80, 5, 1, "", "qhull_data"], [80, 5, 1, "", "qhull_entries"], [80, 5, 1, "", "simplices"], [80, 3, 1, "", "stable_entries"], [80, 3, 1, "", "unstable_entries"]], "pymatgen.analysis.phase_diagram.ReactionDiagram": [[80, 2, 1, "", "get_compound_pd"]], "pymatgen.analysis.phase_diagram.TransformedPDEntry": [[80, 5, 1, "", "amount_tol"], [80, 2, 1, "", "as_dict"], [80, 3, 1, "", "composition"], [80, 2, 1, "", "from_dict"]], "pymatgen.analysis.piezo": [[81, 1, 1, "", "PiezoTensor"]], "pymatgen.analysis.piezo.PiezoTensor": [[81, 2, 1, "", "from_vasp_voigt"]], "pymatgen.analysis.piezo_sensitivity": [[82, 1, 1, "", "BornEffectiveCharge"], [82, 1, 1, "", "ForceConstantMatrix"], [82, 1, 1, "", "InternalStrainTensor"], [82, 4, 1, "", "get_piezo"], [82, 4, 1, "", "rand_piezo"]], "pymatgen.analysis.piezo_sensitivity.BornEffectiveCharge": [[82, 2, 1, "", "get_BEC_operations"], [82, 2, 1, "", "get_rand_BEC"]], "pymatgen.analysis.piezo_sensitivity.ForceConstantMatrix": [[82, 2, 1, "", "get_FCM_operations"], [82, 2, 1, "", "get_asum_FCM"], [82, 2, 1, "", "get_rand_FCM"], [82, 2, 1, "", "get_stable_FCM"], [82, 2, 1, "", "get_symmetrized_FCM"], [82, 2, 1, "", "get_unstable_FCM"]], "pymatgen.analysis.piezo_sensitivity.InternalStrainTensor": [[82, 2, 1, "", "get_IST_operations"], [82, 2, 1, "", "get_rand_IST"]], "pymatgen.analysis.pourbaix_diagram": [[83, 1, 1, "", "IonEntry"], [83, 1, 1, "", "MultiEntry"], [83, 1, 1, "", "PourbaixDiagram"], [83, 1, 1, "", "PourbaixEntry"], [83, 1, 1, "", "PourbaixPlotter"], [83, 4, 1, "", "generate_entry_label"], [83, 4, 1, "", "ion_or_solid_comp_object"]], "pymatgen.analysis.pourbaix_diagram.IonEntry": [[83, 2, 1, "", "as_dict"], [83, 2, 1, "", "from_dict"], [83, 5, 1, "", "name"]], "pymatgen.analysis.pourbaix_diagram.MultiEntry": [[83, 2, 1, "", "as_dict"], [83, 2, 1, "", "from_dict"], [83, 3, 1, "", "name"]], "pymatgen.analysis.pourbaix_diagram.PourbaixDiagram": [[83, 3, 1, "", "all_entries"], [83, 2, 1, "", "as_dict"], [83, 2, 1, "", "find_stable_entry"], [83, 2, 1, "", "from_dict"], [83, 2, 1, "", "get_decomposition_energy"], [83, 2, 1, "", "get_hull_energy"], [83, 2, 1, "", "get_pourbaix_domains"], [83, 2, 1, "", "get_stable_entry"], [83, 2, 1, "", "process_multientry"], [83, 3, 1, "", "stable_entries"], [83, 3, 1, "", "unprocessed_entries"], [83, 3, 1, "", "unstable_entries"]], "pymatgen.analysis.pourbaix_diagram.PourbaixEntry": [[83, 2, 1, "", "as_dict"], [83, 3, 1, "", "composition"], [83, 3, 1, "", "conc_term"], [83, 3, 1, "", "energy"], [83, 2, 1, "", "energy_at_conditions"], [83, 3, 1, "", "energy_per_atom"], [83, 2, 1, "", "from_dict"], [83, 2, 1, "", "get_element_fraction"], [83, 3, 1, "", "nH2O"], [83, 3, 1, "", "nPhi"], [83, 3, 1, "", "name"], [83, 3, 1, "", "normalization_factor"], [83, 3, 1, "", "normalized_energy"], [83, 2, 1, "", "normalized_energy_at_conditions"], [83, 3, 1, "", "npH"], [83, 3, 1, "", "num_atoms"], [83, 2, 1, "", "to_pretty_string"]], "pymatgen.analysis.pourbaix_diagram.PourbaixPlotter": [[83, 2, 1, "", "domain_vertices"], [83, 2, 1, "", "get_pourbaix_plot"], [83, 2, 1, "", "plot_entry_stability"], [83, 2, 1, "", "show"]], "pymatgen.analysis.prototypes": [[84, 1, 1, "", "AflowPrototypeMatcher"]], "pymatgen.analysis.prototypes.AflowPrototypeMatcher": [[84, 2, 1, "", "get_prototypes"]], "pymatgen.analysis.quasiharmonic": [[85, 1, 1, "", "QuasiharmonicDebyeApprox"]], "pymatgen.analysis.quasiharmonic.QuasiharmonicDebyeApprox": [[85, 2, 1, "", "debye_integral"], [85, 2, 1, "", "debye_temperature"], [85, 2, 1, "", "get_summary_dict"], [85, 2, 1, "", "gruneisen_parameter"], [85, 2, 1, "", "optimize_gibbs_free_energy"], [85, 2, 1, "", "optimizer"], [85, 2, 1, "", "thermal_conductivity"], [85, 2, 1, "", "vibrational_free_energy"], [85, 2, 1, "", "vibrational_internal_energy"]], "pymatgen.analysis.reaction_calculator": [[86, 1, 1, "", "BalancedReaction"], [86, 1, 1, "", "ComputedReaction"], [86, 1, 1, "", "Reaction"], [86, 6, 1, "", "ReactionError"]], "pymatgen.analysis.reaction_calculator.BalancedReaction": [[86, 5, 1, "", "TOLERANCE"], [86, 3, 1, "", "all_comp"], [86, 2, 1, "", "as_dict"], [86, 2, 1, "", "as_entry"], [86, 2, 1, "", "calculate_energy"], [86, 3, 1, "", "coeffs"], [86, 3, 1, "", "elements"], [86, 2, 1, "", "from_dict"], [86, 2, 1, "", "from_string"], [86, 2, 1, "", "get_coeff"], [86, 2, 1, "", "get_el_amount"], [86, 2, 1, "", "normalize_to"], [86, 2, 1, "", "normalize_to_element"], [86, 3, 1, "", "normalized_repr"], [86, 2, 1, "", "normalized_repr_and_factor"], [86, 3, 1, "", "products"], [86, 3, 1, "", "reactants"]], "pymatgen.analysis.reaction_calculator.ComputedReaction": [[86, 3, 1, "", "all_entries"], [86, 2, 1, "", "as_dict"], [86, 3, 1, "", "calculated_reaction_energy"], [86, 3, 1, "", "calculated_reaction_energy_uncertainty"], [86, 2, 1, "", "from_dict"]], "pymatgen.analysis.reaction_calculator.Reaction": [[86, 2, 1, "", "as_dict"], [86, 2, 1, "", "copy"], [86, 2, 1, "", "from_dict"]], "pymatgen.analysis.solar": [[88, 0, 0, "-", "slme"]], "pymatgen.analysis.solar.slme": [[88, 4, 1, "", "absorption_coefficient"], [88, 4, 1, "", "get_dir_indir_gap"], [88, 4, 1, "", "matrix_eigvals"], [88, 4, 1, "", "optics"], [88, 4, 1, "", "parse_dielectric_data"], [88, 4, 1, "", "slme"], [88, 4, 1, "", "to_matrix"]], "pymatgen.analysis.structure_analyzer": [[89, 1, 1, "", "OxideType"], [89, 1, 1, "", "RelaxationAnalyzer"], [89, 1, 1, "", "VoronoiAnalyzer"], [89, 1, 1, "", "VoronoiConnectivity"], [89, 4, 1, "", "average_coordination_number"], [89, 4, 1, "", "contains_peroxide"], [89, 4, 1, "", "get_max_bond_lengths"], [89, 4, 1, "", "oxide_type"], [89, 4, 1, "", "solid_angle"], [89, 4, 1, "", "sulfide_type"]], "pymatgen.analysis.structure_analyzer.OxideType": [[89, 2, 1, "", "parse_oxide"]], "pymatgen.analysis.structure_analyzer.RelaxationAnalyzer": [[89, 2, 1, "", "get_percentage_bond_dist_changes"], [89, 2, 1, "", "get_percentage_lattice_parameter_changes"], [89, 2, 1, "", "get_percentage_volume_change"]], "pymatgen.analysis.structure_analyzer.VoronoiAnalyzer": [[89, 2, 1, "", "analyze"], [89, 2, 1, "", "analyze_structures"], [89, 2, 1, "", "plot_vor_analysis"]], "pymatgen.analysis.structure_analyzer.VoronoiConnectivity": [[89, 3, 1, "", "connectivity_array"], [89, 2, 1, "", "get_connections"], [89, 2, 1, "", "get_sitej"], [89, 3, 1, "", "max_connectivity"]], "pymatgen.analysis.structure_matcher": [[90, 1, 1, "", "AbstractComparator"], [90, 1, 1, "", "ElementComparator"], [90, 1, 1, "", "FrameworkComparator"], [90, 1, 1, "", "OccupancyComparator"], [90, 1, 1, "", "OrderDisorderElementComparator"], [90, 1, 1, "", "SpeciesComparator"], [90, 1, 1, "", "SpinComparator"], [90, 1, 1, "", "StructureMatcher"]], "pymatgen.analysis.structure_matcher.AbstractComparator": [[90, 2, 1, "", "are_equal"], [90, 2, 1, "", "as_dict"], [90, 2, 1, "", "from_dict"], [90, 2, 1, "", "get_hash"]], "pymatgen.analysis.structure_matcher.ElementComparator": [[90, 2, 1, "", "are_equal"], [90, 2, 1, "", "get_hash"]], "pymatgen.analysis.structure_matcher.FrameworkComparator": [[90, 2, 1, "", "are_equal"], [90, 2, 1, "", "get_hash"]], "pymatgen.analysis.structure_matcher.OccupancyComparator": [[90, 2, 1, "", "are_equal"], [90, 2, 1, "", "get_hash"]], "pymatgen.analysis.structure_matcher.OrderDisorderElementComparator": [[90, 2, 1, "", "are_equal"], [90, 2, 1, "", "get_hash"]], "pymatgen.analysis.structure_matcher.SpeciesComparator": [[90, 2, 1, "", "are_equal"], [90, 2, 1, "", "get_hash"]], "pymatgen.analysis.structure_matcher.SpinComparator": [[90, 2, 1, "", "are_equal"], [90, 2, 1, "", "get_hash"]], "pymatgen.analysis.structure_matcher.StructureMatcher": [[90, 2, 1, "", "as_dict"], [90, 2, 1, "", "fit"], [90, 2, 1, "", "fit_anonymous"], [90, 2, 1, "", "from_dict"], [90, 2, 1, "", "get_all_anonymous_mappings"], [90, 2, 1, "", "get_best_electronegativity_anonymous_mapping"], [90, 2, 1, "", "get_mapping"], [90, 2, 1, "", "get_rms_anonymous"], [90, 2, 1, "", "get_rms_dist"], [90, 2, 1, "", "get_s2_like_s1"], [90, 2, 1, "", "get_supercell_matrix"], [90, 2, 1, "", "get_transformation"], [90, 2, 1, "", "group_structures"]], "pymatgen.analysis.structure_prediction": [[92, 0, 0, "-", "dopant_predictor"], [93, 0, 0, "-", "substitution_probability"], [94, 0, 0, "-", "substitutor"], [95, 0, 0, "-", "volume_predictor"]], "pymatgen.analysis.structure_prediction.dopant_predictor": [[92, 4, 1, "", "get_dopants_from_shannon_radii"], [92, 4, 1, "", "get_dopants_from_substitution_probabilities"]], "pymatgen.analysis.structure_prediction.substitution_probability": [[93, 1, 1, "", "SubstitutionPredictor"], [93, 1, 1, "", "SubstitutionProbability"]], "pymatgen.analysis.structure_prediction.substitution_probability.SubstitutionPredictor": [[93, 2, 1, "", "composition_prediction"], [93, 2, 1, "", "list_prediction"]], "pymatgen.analysis.structure_prediction.substitutor": [[94, 1, 1, "", "Substitutor"]], "pymatgen.analysis.structure_prediction.substitutor.Substitutor": [[94, 2, 1, "", "as_dict"], [94, 2, 1, "", "from_dict"], [94, 2, 1, "", "get_allowed_species"], [94, 2, 1, "", "pred_from_comp"], [94, 2, 1, "", "pred_from_list"], [94, 2, 1, "", "pred_from_structures"]], "pymatgen.analysis.structure_prediction.volume_predictor": [[95, 1, 1, "", "DLSVolumePredictor"], [95, 1, 1, "", "RLSVolumePredictor"]], "pymatgen.analysis.structure_prediction.volume_predictor.DLSVolumePredictor": [[95, 2, 1, "", "get_predicted_structure"], [95, 2, 1, "", "predict"]], "pymatgen.analysis.structure_prediction.volume_predictor.RLSVolumePredictor": [[95, 2, 1, "", "get_predicted_structure"], [95, 2, 1, "", "predict"]], "pymatgen.analysis.surface_analysis": [[96, 1, 1, "", "NanoscaleStability"], [96, 1, 1, "", "SlabEntry"], [96, 1, 1, "", "SurfaceEnergyPlotter"], [96, 1, 1, "", "WorkFunctionAnalyzer"], [96, 4, 1, "", "entry_dict_from_list"], [96, 4, 1, "", "sub_chempots"]], "pymatgen.analysis.surface_analysis.NanoscaleStability": [[96, 2, 1, "", "bulk_gform"], [96, 2, 1, "", "plot_all_stability_map"], [96, 2, 1, "", "plot_one_stability_map"], [96, 2, 1, "", "scaled_wulff"], [96, 5, 1, "", "se_analyzers"], [96, 2, 1, "", "solve_equilibrium_point"], [96, 5, 1, "", "symprec"], [96, 2, 1, "", "wulff_gform_and_r"]], "pymatgen.analysis.surface_analysis.SlabEntry": [[96, 3, 1, "", "Nads_in_slab"], [96, 3, 1, "", "Nsurfs_ads_in_slab"], [96, 5, 1, "", "adsorbates"], [96, 2, 1, "", "as_dict"], [96, 3, 1, "", "cleaned_up_slab"], [96, 3, 1, "", "create_slab_label"], [96, 2, 1, "", "from_computed_structure_entry"], [96, 2, 1, "", "from_dict"], [96, 3, 1, "", "get_monolayer"], [96, 3, 1, "", "get_unit_primitive_area"], [96, 2, 1, "", "gibbs_binding_energy"], [96, 5, 1, "", "label"], [96, 5, 1, "", "miller_index"], [96, 3, 1, "", "surface_area"], [96, 2, 1, "", "surface_energy"]], "pymatgen.analysis.surface_analysis.SurfaceEnergyPlotter": [[96, 2, 1, "", "BE_vs_clean_SE"], [96, 5, 1, "", "all_slab_entries"], [96, 2, 1, "", "area_frac_vs_chempot_plot"], [96, 2, 1, "", "chempot_plot_addons"], [96, 2, 1, "", "chempot_vs_gamma"], [96, 2, 1, "", "chempot_vs_gamma_plot_one"], [96, 5, 1, "", "color_dict"], [96, 2, 1, "", "color_palette_dict"], [96, 2, 1, "", "get_stable_entry_at_u"], [96, 2, 1, "", "get_surface_equilibrium"], [96, 2, 1, "", "monolayer_vs_BE"], [96, 5, 1, "", "ref_entries"], [96, 2, 1, "", "set_all_variables"], [96, 2, 1, "", "stable_u_range_dict"], [96, 2, 1, "", "surface_chempot_range_map"], [96, 5, 1, "", "ucell_entry"], [96, 2, 1, "", "wulff_from_chempot"]], "pymatgen.analysis.surface_analysis.WorkFunctionAnalyzer": [[96, 5, 1, "", "along_c"], [96, 5, 1, "", "ave_bulk_p"], [96, 5, 1, "", "ave_locpot"], [96, 5, 1, "", "efermi"], [96, 2, 1, "", "from_files"], [96, 2, 1, "", "get_labels"], [96, 2, 1, "", "get_locpot_along_slab_plot"], [96, 2, 1, "", "is_converged"], [96, 5, 1, "", "locpot_along_c"], [96, 5, 1, "", "slab"], [96, 5, 1, "", "sorted_sites"], [96, 5, 1, "", "vacuum_locpot"], [96, 5, 1, "", "work_function"]], "pymatgen.analysis.thermochemistry": [[97, 1, 1, "", "ThermoData"]], "pymatgen.analysis.thermochemistry.ThermoData": [[97, 2, 1, "", "as_dict"], [97, 2, 1, "", "from_dict"]], "pymatgen.analysis.topological": [[99, 0, 0, "-", "spillage"]], "pymatgen.analysis.topological.spillage": [[99, 1, 1, "", "SOCSpillage"]], "pymatgen.analysis.topological.spillage.SOCSpillage": [[99, 2, 1, "", "isclose"], [99, 2, 1, "", "orth"], [99, 2, 1, "", "overlap_so_spinpol"]], "pymatgen.analysis.transition_state": [[100, 1, 1, "", "NEBAnalysis"], [100, 4, 1, "", "combine_neb_plots"]], "pymatgen.analysis.transition_state.NEBAnalysis": [[100, 2, 1, "", "as_dict"], [100, 2, 1, "", "from_dir"], [100, 2, 1, "", "from_outcars"], [100, 2, 1, "", "get_extrema"], [100, 2, 1, "", "get_plot"], [100, 2, 1, "", "setup_spline"]], "pymatgen.analysis.wulff": [[101, 1, 1, "", "WulffFacet"], [101, 1, 1, "", "WulffShape"], [101, 4, 1, "", "get_tri_area"], [101, 4, 1, "", "hkl_tuple_to_str"]], "pymatgen.analysis.wulff.WulffShape": [[101, 5, 1, "", "alpha"], [101, 3, 1, "", "anisotropy"], [101, 3, 1, "", "area_fraction_dict"], [101, 5, 1, "", "axis_off"], [101, 5, 1, "", "color_area"], [101, 5, 1, "", "color_set"], [101, 5, 1, "", "debug"], [101, 5, 1, "", "dual_cv_simp"], [101, 5, 1, "", "e_surf_list"], [101, 3, 1, "", "effective_radius"], [101, 5, 1, "", "facets"], [101, 2, 1, "", "get_line_in_facet"], [101, 2, 1, "", "get_plot"], [101, 2, 1, "", "get_plotly"], [101, 5, 1, "", "grid_off"], [101, 5, 1, "", "hkl_list"], [101, 5, 1, "", "lattice"], [101, 5, 1, "", "miller_area"], [101, 3, 1, "", "miller_area_dict"], [101, 3, 1, "", "miller_energy_dict"], [101, 5, 1, "", "miller_list"], [101, 5, 1, "", "off_color"], [101, 5, 1, "", "on_wulff"], [101, 3, 1, "", "shape_factor"], [101, 2, 1, "", "show"], [101, 5, 1, "", "show_area"], [101, 5, 1, "", "structure"], [101, 3, 1, "", "surface_area"], [101, 3, 1, "", "tot_corner_sites"], [101, 3, 1, "", "tot_edges"], [101, 3, 1, "", "total_surface_energy"], [101, 5, 1, "", "transparency"], [101, 3, 1, "", "volume"], [101, 3, 1, "", "weighted_surface_energy"], [101, 5, 1, "", "wulff_cv_simp"], [101, 5, 1, "", "wulff_pt_list"]], "pymatgen.analysis.xas": [[103, 0, 0, "-", "spectrum"]], "pymatgen.analysis.xas.spectrum": [[103, 1, 1, "", "XAS"], [103, 4, 1, "", "site_weighted_spectrum"]], "pymatgen.analysis.xas.spectrum.XAS": [[103, 5, 1, "", "XLABEL"], [103, 5, 1, "", "YLABEL"], [103, 2, 1, "", "stitch"]], "pymatgen.analysis.xps": [[104, 1, 1, "", "XPS"]], "pymatgen.analysis.xps.XPS": [[104, 5, 1, "", "XLABEL"], [104, 5, 1, "", "YLABEL"], [104, 2, 1, "", "from_dos"]], "pymatgen.apps": [[106, 0, 0, "-", "battery"], [112, 0, 0, "-", "borg"]], "pymatgen.apps.battery": [[107, 0, 0, "-", "analyzer"], [108, 0, 0, "-", "battery_abc"], [109, 0, 0, "-", "conversion_battery"], [110, 0, 0, "-", "insertion_battery"], [111, 0, 0, "-", "plotter"]], "pymatgen.apps.battery.analyzer": [[107, 1, 1, "", "BatteryAnalyzer"], [107, 4, 1, "", "is_redox_active_intercalation"]], "pymatgen.apps.battery.analyzer.BatteryAnalyzer": [[107, 2, 1, "", "get_max_capgrav"], [107, 2, 1, "", "get_max_capvol"], [107, 2, 1, "", "get_removals_int_oxid"], [107, 3, 1, "", "max_ion_insertion"], [107, 3, 1, "", "max_ion_removal"]], "pymatgen.apps.battery.battery_abc": [[108, 1, 1, "", "AbstractElectrode"], [108, 1, 1, "", "AbstractVoltagePair"]], "pymatgen.apps.battery.battery_abc.AbstractElectrode": [[108, 3, 1, "", "framework"], [108, 5, 1, "id0", "framework_formula"], [108, 2, 1, "", "get_average_voltage"], [108, 2, 1, "", "get_capacity_grav"], [108, 2, 1, "", "get_capacity_vol"], [108, 2, 1, "", "get_energy_density"], [108, 2, 1, "", "get_specific_energy"], [108, 2, 1, "", "get_sub_electrodes"], [108, 2, 1, "", "get_summary_dict"], [108, 3, 1, "", "max_delta_volume"], [108, 3, 1, "", "max_voltage"], [108, 3, 1, "", "max_voltage_step"], [108, 3, 1, "", "min_voltage"], [108, 3, 1, "", "normalization_mass"], [108, 3, 1, "", "normalization_volume"], [108, 3, 1, "", "num_steps"], [108, 5, 1, "id1", "voltage_pairs"], [108, 3, 1, "id2", "working_ion"], [108, 5, 1, "id3", "working_ion_entry"], [108, 3, 1, "", "x_charge"], [108, 3, 1, "", "x_discharge"]], "pymatgen.apps.battery.battery_abc.AbstractVoltagePair": [[108, 5, 1, "id4", "frac_charge"], [108, 5, 1, "id5", "frac_discharge"], [108, 3, 1, "", "framework"], [108, 5, 1, "id6", "framework_formula"], [108, 5, 1, "id7", "mAh"], [108, 5, 1, "id8", "mass_charge"], [108, 5, 1, "id9", "mass_discharge"], [108, 5, 1, "id10", "vol_charge"], [108, 5, 1, "id11", "vol_discharge"], [108, 5, 1, "id12", "voltage"], [108, 3, 1, "", "working_ion"], [108, 5, 1, "id13", "working_ion_entry"], [108, 3, 1, "", "x_charge"], [108, 3, 1, "", "x_discharge"]], "pymatgen.apps.battery.conversion_battery": [[109, 1, 1, "", "ConversionElectrode"], [109, 1, 1, "", "ConversionVoltagePair"]], "pymatgen.apps.battery.conversion_battery.ConversionElectrode": [[109, 2, 1, "", "from_composition_and_entries"], [109, 2, 1, "", "from_composition_and_pd"], [109, 2, 1, "", "get_sub_electrodes"], [109, 2, 1, "", "get_summary_dict"], [109, 3, 1, "", "initial_comp"], [109, 5, 1, "", "initial_comp_formula"], [109, 2, 1, "", "is_super_electrode"]], "pymatgen.apps.battery.conversion_battery.ConversionVoltagePair": [[109, 5, 1, "id0", "entries_charge"], [109, 5, 1, "id1", "entries_discharge"], [109, 5, 1, "", "frac_charge"], [109, 5, 1, "", "frac_discharge"], [109, 2, 1, "", "from_steps"], [109, 5, 1, "", "mAh"], [109, 5, 1, "", "mass_charge"], [109, 5, 1, "", "mass_discharge"], [109, 5, 1, "id2", "rxn"], [109, 5, 1, "", "vol_charge"], [109, 5, 1, "", "vol_discharge"], [109, 5, 1, "", "voltage"], [109, 5, 1, "", "working_ion_entry"]], "pymatgen.apps.battery.insertion_battery": [[110, 1, 1, "", "InsertionElectrode"], [110, 1, 1, "", "InsertionVoltagePair"]], "pymatgen.apps.battery.insertion_battery.InsertionElectrode": [[110, 2, 1, "", "as_dict_legacy"], [110, 2, 1, "", "from_dict_legacy"], [110, 2, 1, "", "from_entries"], [110, 3, 1, "", "fully_charged_entry"], [110, 3, 1, "", "fully_discharged_entry"], [110, 2, 1, "", "get_all_entries"], [110, 2, 1, "", "get_max_instability"], [110, 2, 1, "", "get_max_muO2"], [110, 2, 1, "", "get_min_instability"], [110, 2, 1, "", "get_min_muO2"], [110, 2, 1, "", "get_stable_entries"], [110, 2, 1, "", "get_sub_electrodes"], [110, 2, 1, "", "get_summary_dict"], [110, 2, 1, "", "get_unstable_entries"], [110, 5, 1, "", "stable_entries"], [110, 5, 1, "", "unstable_entries"]], "pymatgen.apps.battery.insertion_battery.InsertionVoltagePair": [[110, 5, 1, "", "entry_charge"], [110, 5, 1, "", "entry_discharge"], [110, 2, 1, "", "from_entries"]], "pymatgen.apps.battery.plotter": [[111, 1, 1, "", "VoltageProfilePlotter"]], "pymatgen.apps.battery.plotter.VoltageProfilePlotter": [[111, 2, 1, "", "add_electrode"], [111, 2, 1, "", "get_plot"], [111, 2, 1, "", "get_plot_data"], [111, 2, 1, "", "get_plotly_figure"], [111, 2, 1, "", "save"], [111, 2, 1, "", "show"]], "pymatgen.apps.borg": [[113, 0, 0, "-", "hive"], [114, 0, 0, "-", "queen"]], "pymatgen.apps.borg.hive": [[113, 1, 1, "", "AbstractDrone"], [113, 1, 1, "", "GaussianToComputedEntryDrone"], [113, 1, 1, "", "SimpleVaspToComputedEntryDrone"], [113, 1, 1, "", "VaspToComputedEntryDrone"]], "pymatgen.apps.borg.hive.AbstractDrone": [[113, 2, 1, "", "assimilate"], [113, 2, 1, "", "get_valid_paths"]], "pymatgen.apps.borg.hive.GaussianToComputedEntryDrone": [[113, 2, 1, "", "as_dict"], [113, 2, 1, "", "assimilate"], [113, 2, 1, "", "from_dict"], [113, 2, 1, "", "get_valid_paths"]], "pymatgen.apps.borg.hive.SimpleVaspToComputedEntryDrone": [[113, 2, 1, "", "as_dict"], [113, 2, 1, "", "assimilate"], [113, 2, 1, "", "from_dict"]], "pymatgen.apps.borg.hive.VaspToComputedEntryDrone": [[113, 2, 1, "", "as_dict"], [113, 2, 1, "", "assimilate"], [113, 2, 1, "", "from_dict"], [113, 2, 1, "", "get_valid_paths"]], "pymatgen.apps.borg.queen": [[114, 1, 1, "", "BorgQueen"], [114, 4, 1, "", "order_assimilation"]], "pymatgen.apps.borg.queen.BorgQueen": [[114, 2, 1, "", "get_data"], [114, 2, 1, "", "load_data"], [114, 2, 1, "", "parallel_assimilate"], [114, 2, 1, "", "save_data"], [114, 2, 1, "", "serial_assimilate"]], "pymatgen.cli": [[116, 0, 0, "-", "feff_plot_cross_section"], [117, 0, 0, "-", "feff_plot_dos"], [118, 0, 0, "-", "gaussian_analyzer"], [119, 0, 0, "-", "get_environment"], [120, 0, 0, "-", "pmg"], [121, 0, 0, "-", "pmg_analyze"], [122, 0, 0, "-", "pmg_config"], [123, 0, 0, "-", "pmg_plot"], [124, 0, 0, "-", "pmg_potcar"], [125, 0, 0, "-", "pmg_query"], [126, 0, 0, "-", "pmg_structure"]], "pymatgen.cli.feff_plot_cross_section": [[116, 4, 1, "", "main"]], "pymatgen.cli.feff_plot_dos": [[117, 4, 1, "", "main"]], "pymatgen.cli.gaussian_analyzer": [[118, 4, 1, "", "get_energies"], [118, 4, 1, "", "main"]], "pymatgen.cli.get_environment": [[119, 4, 1, "", "main"]], "pymatgen.cli.pmg": [[120, 4, 1, "", "diff_incar"], [120, 4, 1, "", "main"], [120, 4, 1, "", "parse_view"]], "pymatgen.cli.pmg_analyze": [[121, 4, 1, "", "analyze"], [121, 4, 1, "", "get_energies"], [121, 4, 1, "", "get_magnetizations"]], "pymatgen.cli.pmg_config": [[122, 4, 1, "", "add_config_var"], [122, 4, 1, "", "build_bader"], [122, 4, 1, "", "build_enum"], [122, 4, 1, "", "configure_pmg"], [122, 4, 1, "", "install_software"], [122, 4, 1, "", "setup_cp2k_data"], [122, 4, 1, "", "setup_potcars"]], "pymatgen.cli.pmg_plot": [[123, 4, 1, "", "get_chgint_plot"], [123, 4, 1, "", "get_dos_plot"], [123, 4, 1, "", "get_xrd_plot"], [123, 4, 1, "", "plot"]], "pymatgen.cli.pmg_potcar": [[124, 4, 1, "", "gen_potcar"], [124, 4, 1, "", "generate_potcar"], [124, 4, 1, "", "proc_dir"]], "pymatgen.cli.pmg_query": [[125, 4, 1, "", "do_query"]], "pymatgen.cli.pmg_structure": [[126, 4, 1, "", "analyze_localenv"], [126, 4, 1, "", "analyze_structures"], [126, 4, 1, "", "analyze_symmetry"], [126, 4, 1, "", "compare_structures"], [126, 4, 1, "", "convert_fmt"]], "pymatgen.command_line": [[128, 0, 0, "-", "bader_caller"], [129, 0, 0, "-", "chargemol_caller"], [130, 0, 0, "-", "critic2_caller"], [131, 0, 0, "-", "enumlib_caller"], [132, 0, 0, "-", "gulp_caller"], [133, 0, 0, "-", "mcsqs_caller"], [134, 0, 0, "-", "vampire_caller"]], "pymatgen.command_line.bader_caller": [[128, 1, 1, "", "BaderAnalysis"], [128, 4, 1, "", "bader_analysis_from_objects"], [128, 4, 1, "", "bader_analysis_from_path"]], "pymatgen.command_line.bader_caller.BaderAnalysis": [[128, 2, 1, "", "from_path"], [128, 2, 1, "", "get_charge"], [128, 2, 1, "", "get_charge_decorated_structure"], [128, 2, 1, "", "get_charge_transfer"], [128, 2, 1, "", "get_decorated_structure"], [128, 2, 1, "", "get_oxidation_state_decorated_structure"], [128, 2, 1, "", "get_partial_charge"], [128, 3, 1, "", "summary"]], "pymatgen.command_line.chargemol_caller": [[129, 1, 1, "", "ChargemolAnalysis"]], "pymatgen.command_line.chargemol_caller.ChargemolAnalysis": [[129, 2, 1, "", "get_bond_order"], [129, 2, 1, "", "get_charge"], [129, 2, 1, "", "get_charge_transfer"], [129, 2, 1, "", "get_partial_charge"], [129, 2, 1, "", "get_property_decorated_structure"], [129, 3, 1, "", "summary"]], "pymatgen.command_line.critic2_caller": [[130, 1, 1, "", "Critic2Analysis"], [130, 1, 1, "", "Critic2Caller"], [130, 1, 1, "", "CriticalPoint"], [130, 1, 1, "", "CriticalPointType"], [130, 4, 1, "", "get_filepath"]], "pymatgen.command_line.critic2_caller.Critic2Analysis": [[130, 2, 1, "", "get_critical_point_for_site"], [130, 2, 1, "", "get_volume_and_charge_for_site"], [130, 2, 1, "", "structure_graph"]], "pymatgen.command_line.critic2_caller.Critic2Caller": [[130, 2, 1, "", "from_chgcar"], [130, 2, 1, "", "from_path"]], "pymatgen.command_line.critic2_caller.CriticalPoint": [[130, 3, 1, "", "ellipticity"], [130, 3, 1, "", "laplacian"], [130, 3, 1, "", "type"]], "pymatgen.command_line.critic2_caller.CriticalPointType": [[130, 5, 1, "", "bond"], [130, 5, 1, "", "cage"], [130, 5, 1, "", "nnattr"], [130, 5, 1, "", "nucleus"], [130, 5, 1, "", "ring"]], "pymatgen.command_line.enumlib_caller": [[131, 6, 1, "", "EnumError"]], "pymatgen.command_line.gulp_caller": [[132, 1, 1, "", "BuckinghamPotential"], [132, 1, 1, "", "GulpCaller"], [132, 6, 1, "", "GulpConvergenceError"], [132, 6, 1, "", "GulpError"], [132, 1, 1, "", "GulpIO"], [132, 1, 1, "", "TersoffPotential"], [132, 4, 1, "", "get_energy_buckingham"], [132, 4, 1, "", "get_energy_relax_structure_buckingham"], [132, 4, 1, "", "get_energy_tersoff"]], "pymatgen.command_line.gulp_caller.GulpCaller": [[132, 2, 1, "", "run"]], "pymatgen.command_line.gulp_caller.GulpIO": [[132, 2, 1, "", "buckingham_input"], [132, 2, 1, "", "buckingham_potential"], [132, 2, 1, "", "get_energy"], [132, 2, 1, "", "get_relaxed_structure"], [132, 2, 1, "", "keyword_line"], [132, 2, 1, "", "library_line"], [132, 2, 1, "", "specie_potential_lines"], [132, 2, 1, "", "structure_lines"], [132, 2, 1, "", "tersoff_input"], [132, 2, 1, "", "tersoff_potential"]], "pymatgen.command_line.mcsqs_caller": [[133, 1, 1, "", "Sqs"], [133, 4, 1, "", "run_mcsqs"]], "pymatgen.command_line.mcsqs_caller.Sqs": [[133, 5, 1, "", "allsqs"], [133, 5, 1, "", "bestsqs"], [133, 5, 1, "", "clusters"], [133, 5, 1, "", "directory"], [133, 5, 1, "", "objective_function"]], "pymatgen.command_line.vampire_caller": [[134, 1, 1, "", "VampireCaller"], [134, 1, 1, "", "VampireOutput"]], "pymatgen.command_line.vampire_caller.VampireCaller": [[134, 2, 1, "", "parse_stdout"]], "pymatgen.core": [[136, 0, 0, "-", "bonds"], [137, 0, 0, "-", "composition"], [138, 0, 0, "-", "interface"], [139, 0, 0, "-", "ion"], [140, 0, 0, "-", "lattice"], [141, 0, 0, "-", "libxcfunc"], [142, 0, 0, "-", "molecular_orbitals"], [143, 0, 0, "-", "operations"], [144, 0, 0, "-", "periodic_table"], [145, 0, 0, "-", "sites"], [146, 0, 0, "-", "spectrum"], [147, 0, 0, "-", "structure"], [148, 0, 0, "-", "surface"], [149, 0, 0, "-", "tensors"], [150, 0, 0, "-", "trajectory"], [151, 0, 0, "-", "units"], [152, 0, 0, "-", "xcfunc"]], "pymatgen.core.bonds": [[136, 1, 1, "", "CovalentBond"], [136, 4, 1, "", "get_bond_length"], [136, 4, 1, "", "get_bond_order"], [136, 4, 1, "", "obtain_all_bond_lengths"]], "pymatgen.core.bonds.CovalentBond": [[136, 2, 1, "", "get_bond_order"], [136, 2, 1, "", "is_bonded"], [136, 3, 1, "", "length"]], "pymatgen.core.composition": [[137, 1, 1, "", "ChemicalPotential"], [137, 1, 1, "", "Composition"], [137, 6, 1, "", "CompositionError"], [137, 4, 1, "", "reduce_formula"]], "pymatgen.core.composition.ChemicalPotential": [[137, 2, 1, "", "get_energy"]], "pymatgen.core.composition.Composition": [[137, 2, 1, "", "add_charges_from_oxi_state_guesses"], [137, 2, 1, "", "almost_equals"], [137, 3, 1, "", "alphabetical_formula"], [137, 5, 1, "", "amount_tolerance"], [137, 3, 1, "", "anonymized_formula"], [137, 2, 1, "", "as_dict"], [137, 3, 1, "", "average_electroneg"], [137, 3, 1, "", "chemical_system"], [137, 2, 1, "", "contains_element_type"], [137, 2, 1, "", "copy"], [137, 3, 1, "", "element_composition"], [137, 3, 1, "", "elements"], [137, 3, 1, "", "formula"], [137, 3, 1, "", "fractional_composition"], [137, 2, 1, "", "from_dict"], [137, 2, 1, "", "from_weight_dict"], [137, 2, 1, "", "get_atomic_fraction"], [137, 2, 1, "", "get_el_amt_dict"], [137, 2, 1, "", "get_integer_formula_and_factor"], [137, 2, 1, "", "get_reduced_composition_and_factor"], [137, 2, 1, "", "get_reduced_formula_and_factor"], [137, 2, 1, "", "get_wt_fraction"], [137, 3, 1, "", "hill_formula"], [137, 3, 1, "", "is_element"], [137, 3, 1, "", "iupac_formula"], [137, 3, 1, "", "num_atoms"], [137, 5, 1, "", "oxi_prob"], [137, 2, 1, "", "oxi_state_guesses"], [137, 2, 1, "", "ranked_compositions_from_indeterminate_formula"], [137, 3, 1, "", "reduced_composition"], [137, 3, 1, "", "reduced_formula"], [137, 2, 1, "", "remove_charges"], [137, 2, 1, "", "replace"], [137, 5, 1, "", "special_formulas"], [137, 3, 1, "", "to_data_dict"], [137, 2, 1, "", "to_pretty_string"], [137, 3, 1, "", "to_reduced_dict"], [137, 3, 1, "", "to_weight_dict"], [137, 3, 1, "", "total_electrons"], [137, 3, 1, "", "valid"], [137, 3, 1, "", "weight"]], "pymatgen.core.interface": [[138, 1, 1, "", "Interface"], [138, 4, 1, "", "count_layers"], [138, 4, 1, "", "label_termination"]], "pymatgen.core.interface.Interface": [[138, 2, 1, "", "as_dict"], [138, 2, 1, "", "copy"], [138, 3, 1, "", "film"], [138, 3, 1, "", "film_indices"], [138, 3, 1, "", "film_layers"], [138, 3, 1, "", "film_sites"], [138, 3, 1, "", "film_termination"], [138, 2, 1, "", "from_dict"], [138, 2, 1, "", "from_slabs"], [138, 3, 1, "", "gap"], [138, 2, 1, "", "get_shifts_based_on_adsorbate_sites"], [138, 2, 1, "", "get_sorted_structure"], [138, 3, 1, "", "in_plane_offset"], [138, 3, 1, "", "substrate"], [138, 3, 1, "", "substrate_indices"], [138, 3, 1, "", "substrate_layers"], [138, 3, 1, "", "substrate_sites"], [138, 3, 1, "", "substrate_termination"], [138, 3, 1, "", "vacuum_over_film"]], "pymatgen.core.ion": [[139, 1, 1, "", "Ion"]], "pymatgen.core.ion.Ion": [[139, 3, 1, "", "alphabetical_formula"], [139, 3, 1, "", "anonymized_formula"], [139, 2, 1, "", "as_dict"], [139, 3, 1, "", "charge"], [139, 3, 1, "", "composition"], [139, 3, 1, "", "formula"], [139, 2, 1, "", "from_dict"], [139, 2, 1, "", "from_formula"], [139, 2, 1, "", "get_reduced_formula_and_factor"], [139, 2, 1, "", "oxi_state_guesses"], [139, 3, 1, "", "reduced_formula"], [139, 2, 1, "", "to_pretty_string"], [139, 3, 1, "", "to_reduced_dict"]], "pymatgen.core.lattice": [[140, 1, 1, "", "Lattice"], [140, 4, 1, "", "find_neighbors"], [140, 4, 1, "", "get_integer_index"], [140, 4, 1, "", "get_points_in_spheres"]], "pymatgen.core.lattice.Lattice": [[140, 3, 1, "", "a"], [140, 3, 1, "", "abc"], [140, 3, 1, "", "alpha"], [140, 3, 1, "", "angles"], [140, 2, 1, "", "as_dict"], [140, 3, 1, "", "b"], [140, 3, 1, "", "beta"], [140, 3, 1, "", "c"], [140, 2, 1, "", "copy"], [140, 2, 1, "", "cubic"], [140, 2, 1, "", "d_hkl"], [140, 2, 1, "", "dot"], [140, 2, 1, "", "find_all_mappings"], [140, 2, 1, "", "find_mapping"], [140, 2, 1, "", "from_dict"], [140, 2, 1, "", "from_parameters"], [140, 3, 1, "", "gamma"], [140, 2, 1, "", "get_all_distances"], [140, 2, 1, "", "get_brillouin_zone"], [140, 2, 1, "", "get_cartesian_coords"], [140, 2, 1, "", "get_distance_and_image"], [140, 2, 1, "", "get_frac_coords_from_lll"], [140, 2, 1, "", "get_fractional_coords"], [140, 2, 1, "", "get_lll_frac_coords"], [140, 2, 1, "", "get_lll_reduced_lattice"], [140, 2, 1, "", "get_miller_index_from_coords"], [140, 2, 1, "", "get_niggli_reduced_lattice"], [140, 2, 1, "", "get_points_in_sphere"], [140, 2, 1, "", "get_points_in_sphere_old"], [140, 2, 1, "", "get_points_in_sphere_py"], [140, 2, 1, "", "get_recp_symmetry_operation"], [140, 2, 1, "", "get_vector_along_lattice_directions"], [140, 2, 1, "", "get_wigner_seitz_cell"], [140, 2, 1, "", "hexagonal"], [140, 3, 1, "", "inv_matrix"], [140, 3, 1, "", "is_3d_periodic"], [140, 2, 1, "", "is_hexagonal"], [140, 3, 1, "", "is_orthogonal"], [140, 3, 1, "", "lengths"], [140, 3, 1, "", "lll_inverse"], [140, 3, 1, "", "lll_mapping"], [140, 3, 1, "", "lll_matrix"], [140, 3, 1, "", "matrix"], [140, 3, 1, "", "metric_tensor"], [140, 2, 1, "", "monoclinic"], [140, 2, 1, "", "norm"], [140, 2, 1, "", "orthorhombic"], [140, 3, 1, "", "parameters"], [140, 3, 1, "", "pbc"], [140, 3, 1, "", "reciprocal_lattice"], [140, 3, 1, "", "reciprocal_lattice_crystallographic"], [140, 2, 1, "", "rhombohedral"], [140, 2, 1, "", "scale"], [140, 2, 1, "", "selling_dist"], [140, 3, 1, "", "selling_vector"], [140, 2, 1, "", "tetragonal"], [140, 3, 1, "", "volume"]], "pymatgen.core.libxcfunc": [[141, 1, 1, "", "LibxcFunc"]], "pymatgen.core.libxcfunc.LibxcFunc": [[141, 5, 1, "", "GGA_C_AM05"], [141, 5, 1, "", "GGA_C_APBE"], [141, 5, 1, "", "GGA_C_BGCP"], [141, 5, 1, "", "GGA_C_FT97"], [141, 5, 1, "", "GGA_C_GAM"], [141, 5, 1, "", "GGA_C_HCTH_A"], [141, 5, 1, "", "GGA_C_LM"], [141, 5, 1, "", "GGA_C_LYP"], [141, 5, 1, "", "GGA_C_N12"], [141, 5, 1, "", "GGA_C_N12_SX"], [141, 5, 1, "", "GGA_C_OPTC"], [141, 5, 1, "", "GGA_C_OP_B88"], [141, 5, 1, "", "GGA_C_OP_G96"], [141, 5, 1, "", "GGA_C_OP_PBE"], [141, 5, 1, "", "GGA_C_OP_PW91"], [141, 5, 1, "", "GGA_C_OP_XALPHA"], [141, 5, 1, "", "GGA_C_P86"], [141, 5, 1, "", "GGA_C_PBE"], [141, 5, 1, "", "GGA_C_PBEFE"], [141, 5, 1, "", "GGA_C_PBEINT"], [141, 5, 1, "", "GGA_C_PBELOC"], [141, 5, 1, "", "GGA_C_PBE_JRGX"], [141, 5, 1, "", "GGA_C_PBE_SOL"], [141, 5, 1, "", "GGA_C_PW91"], [141, 5, 1, "", "GGA_C_Q2D"], [141, 5, 1, "", "GGA_C_REGTPSS"], [141, 5, 1, "", "GGA_C_REVTCA"], [141, 5, 1, "", "GGA_C_RGE2"], [141, 5, 1, "", "GGA_C_SOGGA11"], [141, 5, 1, "", "GGA_C_SOGGA11_X"], [141, 5, 1, "", "GGA_C_SPBE"], [141, 5, 1, "", "GGA_C_TCA"], [141, 5, 1, "", "GGA_C_WI"], [141, 5, 1, "", "GGA_C_WI0"], [141, 5, 1, "", "GGA_C_WL"], [141, 5, 1, "", "GGA_C_XPBE"], [141, 5, 1, "", "GGA_C_ZPBEINT"], [141, 5, 1, "", "GGA_C_ZPBESOL"], [141, 5, 1, "", "GGA_K_ABSP1"], [141, 5, 1, "", "GGA_K_ABSP2"], [141, 5, 1, "", "GGA_K_APBE"], [141, 5, 1, "", "GGA_K_APBEINT"], [141, 5, 1, "", "GGA_K_BALTIN"], [141, 5, 1, "", "GGA_K_DK"], [141, 5, 1, "", "GGA_K_ERNZERHOF"], [141, 5, 1, "", "GGA_K_FR_B88"], [141, 5, 1, "", "GGA_K_FR_PW86"], [141, 5, 1, "", "GGA_K_GE2"], [141, 5, 1, "", "GGA_K_GOLDEN"], [141, 5, 1, "", "GGA_K_GP85"], [141, 5, 1, "", "GGA_K_GR"], [141, 5, 1, "", "GGA_K_LC94"], [141, 5, 1, "", "GGA_K_LIEB"], [141, 5, 1, "", "GGA_K_LLP"], [141, 5, 1, "", "GGA_K_LUDENA"], [141, 5, 1, "", "GGA_K_MEYER"], [141, 5, 1, "", "GGA_K_OL1"], [141, 5, 1, "", "GGA_K_OL2"], [141, 5, 1, "", "GGA_K_PEARSON"], [141, 5, 1, "", "GGA_K_PERDEW"], [141, 5, 1, "", "GGA_K_REVAPBE"], [141, 5, 1, "", "GGA_K_REVAPBEINT"], [141, 5, 1, "", "GGA_K_TFVW"], [141, 5, 1, "", "GGA_K_THAKKAR"], [141, 5, 1, "", "GGA_K_TW1"], [141, 5, 1, "", "GGA_K_TW2"], [141, 5, 1, "", "GGA_K_TW3"], [141, 5, 1, "", "GGA_K_TW4"], [141, 5, 1, "", "GGA_K_VJKS"], [141, 5, 1, "", "GGA_K_VSK"], [141, 5, 1, "", "GGA_K_VW"], [141, 5, 1, "", "GGA_K_YT65"], [141, 5, 1, "", "GGA_XC_B97_D"], [141, 5, 1, "", "GGA_XC_B97_GGA1"], [141, 5, 1, "", "GGA_XC_EDF1"], [141, 5, 1, "", "GGA_XC_HCTH_120"], [141, 5, 1, "", "GGA_XC_HCTH_147"], [141, 5, 1, "", "GGA_XC_HCTH_407"], [141, 5, 1, "", "GGA_XC_HCTH_407P"], [141, 5, 1, "", "GGA_XC_HCTH_93"], [141, 5, 1, "", "GGA_XC_HCTH_P14"], [141, 5, 1, "", "GGA_XC_HCTH_P76"], [141, 5, 1, "", "GGA_XC_KT2"], [141, 5, 1, "", "GGA_XC_MOHLYP"], [141, 5, 1, "", "GGA_XC_MOHLYP2"], [141, 5, 1, "", "GGA_XC_MPWLYP1W"], [141, 5, 1, "", "GGA_XC_OBLYP_D"], [141, 5, 1, "", "GGA_XC_OPBE_D"], [141, 5, 1, "", "GGA_XC_OPWLYP_D"], [141, 5, 1, "", "GGA_XC_PBE1W"], [141, 5, 1, "", "GGA_XC_PBELYP1W"], [141, 5, 1, "", "GGA_XC_TH1"], [141, 5, 1, "", "GGA_XC_TH2"], [141, 5, 1, "", "GGA_XC_TH3"], [141, 5, 1, "", "GGA_XC_TH4"], [141, 5, 1, "", "GGA_XC_TH_FC"], [141, 5, 1, "", "GGA_XC_TH_FCFO"], [141, 5, 1, "", "GGA_XC_TH_FCO"], [141, 5, 1, "", "GGA_XC_TH_FL"], [141, 5, 1, "", "GGA_XC_VV10"], [141, 5, 1, "", "GGA_XC_XLYP"], [141, 5, 1, "", "GGA_X_2D_B86"], [141, 5, 1, "", "GGA_X_2D_B86_MGC"], [141, 5, 1, "", "GGA_X_2D_B88"], [141, 5, 1, "", "GGA_X_2D_PBE"], [141, 5, 1, "", "GGA_X_AIRY"], [141, 5, 1, "", "GGA_X_AK13"], [141, 5, 1, "", "GGA_X_AM05"], [141, 5, 1, "", "GGA_X_APBE"], [141, 5, 1, "", "GGA_X_B86"], [141, 5, 1, "", "GGA_X_B86_MGC"], [141, 5, 1, "", "GGA_X_B86_R"], [141, 5, 1, "", "GGA_X_B88"], [141, 5, 1, "", "GGA_X_BAYESIAN"], [141, 5, 1, "", "GGA_X_BGCP"], [141, 5, 1, "", "GGA_X_BPCCAC"], [141, 5, 1, "", "GGA_X_C09X"], [141, 5, 1, "", "GGA_X_CAP"], [141, 5, 1, "", "GGA_X_DK87_R1"], [141, 5, 1, "", "GGA_X_DK87_R2"], [141, 5, 1, "", "GGA_X_EV93"], [141, 5, 1, "", "GGA_X_FT97_A"], [141, 5, 1, "", "GGA_X_FT97_B"], [141, 5, 1, "", "GGA_X_G96"], [141, 5, 1, "", "GGA_X_GAM"], [141, 5, 1, "", "GGA_X_HCTH_A"], [141, 5, 1, "", "GGA_X_HERMAN"], [141, 5, 1, "", "GGA_X_HJS_B88"], [141, 5, 1, "", "GGA_X_HJS_B88_V2"], [141, 5, 1, "", "GGA_X_HJS_B97X"], [141, 5, 1, "", "GGA_X_HJS_PBE"], [141, 5, 1, "", "GGA_X_HJS_PBE_SOL"], [141, 5, 1, "", "GGA_X_HTBS"], [141, 5, 1, "", "GGA_X_ITYH"], [141, 5, 1, "", "GGA_X_KT1"], [141, 5, 1, "", "GGA_X_LAG"], [141, 5, 1, "", "GGA_X_LAMBDA_CH_N"], [141, 5, 1, "", "GGA_X_LAMBDA_LO_N"], [141, 5, 1, "", "GGA_X_LAMBDA_OC2_N"], [141, 5, 1, "", "GGA_X_LB"], [141, 5, 1, "", "GGA_X_LBM"], [141, 5, 1, "", "GGA_X_LG93"], [141, 5, 1, "", "GGA_X_LV_RPW86"], [141, 5, 1, "", "GGA_X_MB88"], [141, 5, 1, "", "GGA_X_MPBE"], [141, 5, 1, "", "GGA_X_MPW91"], [141, 5, 1, "", "GGA_X_N12"], [141, 5, 1, "", "GGA_X_OL2"], [141, 5, 1, "", "GGA_X_OPTB88_VDW"], [141, 5, 1, "", "GGA_X_OPTPBE_VDW"], [141, 5, 1, "", "GGA_X_OPTX"], [141, 5, 1, "", "GGA_X_PBE"], [141, 5, 1, "", "GGA_X_PBEA"], [141, 5, 1, "", "GGA_X_PBEFE"], [141, 5, 1, "", "GGA_X_PBEINT"], [141, 5, 1, "", "GGA_X_PBEK1_VDW"], [141, 5, 1, "", "GGA_X_PBE_JSJR"], [141, 5, 1, "", "GGA_X_PBE_MOL"], [141, 5, 1, "", "GGA_X_PBE_R"], [141, 5, 1, "", "GGA_X_PBE_SOL"], [141, 5, 1, "", "GGA_X_PBE_TCA"], [141, 5, 1, "", "GGA_X_PW86"], [141, 5, 1, "", "GGA_X_PW91"], [141, 5, 1, "", "GGA_X_Q2D"], [141, 5, 1, "", "GGA_X_RGE2"], [141, 5, 1, "", "GGA_X_RPBE"], [141, 5, 1, "", "GGA_X_RPW86"], [141, 5, 1, "", "GGA_X_SFAT"], [141, 5, 1, "", "GGA_X_SOGGA"], [141, 5, 1, "", "GGA_X_SOGGA11"], [141, 5, 1, "", "GGA_X_SSB"], [141, 5, 1, "", "GGA_X_SSB_D"], [141, 5, 1, "", "GGA_X_SSB_SW"], [141, 5, 1, "", "GGA_X_VMT84_GE"], [141, 5, 1, "", "GGA_X_VMT84_PBE"], [141, 5, 1, "", "GGA_X_VMT_GE"], [141, 5, 1, "", "GGA_X_VMT_PBE"], [141, 5, 1, "", "GGA_X_WC"], [141, 5, 1, "", "GGA_X_WPBEH"], [141, 5, 1, "", "GGA_X_XPBE"], [141, 5, 1, "", "HYB_GGA_XC_B1LYP"], [141, 5, 1, "", "HYB_GGA_XC_B1PW91"], [141, 5, 1, "", "HYB_GGA_XC_B1WC"], [141, 5, 1, "", "HYB_GGA_XC_B3LYP"], [141, 5, 1, "", "HYB_GGA_XC_B3LYP5"], [141, 5, 1, "", "HYB_GGA_XC_B3LYPs"], [141, 5, 1, "", "HYB_GGA_XC_B3P86"], [141, 5, 1, "", "HYB_GGA_XC_B3PW91"], [141, 5, 1, "", "HYB_GGA_XC_B97"], [141, 5, 1, "", "HYB_GGA_XC_B97_1"], [141, 5, 1, "", "HYB_GGA_XC_B97_1p"], [141, 5, 1, "", "HYB_GGA_XC_B97_2"], [141, 5, 1, "", "HYB_GGA_XC_B97_3"], [141, 5, 1, "", "HYB_GGA_XC_B97_K"], [141, 5, 1, "", "HYB_GGA_XC_BHANDH"], [141, 5, 1, "", "HYB_GGA_XC_BHANDHLYP"], [141, 5, 1, "", "HYB_GGA_XC_CAMY_B3LYP"], [141, 5, 1, "", "HYB_GGA_XC_CAMY_BLYP"], [141, 5, 1, "", "HYB_GGA_XC_CAM_B3LYP"], [141, 5, 1, "", "HYB_GGA_XC_CAP0"], [141, 5, 1, "", "HYB_GGA_XC_EDF2"], [141, 5, 1, "", "HYB_GGA_XC_HJS_B88"], [141, 5, 1, "", "HYB_GGA_XC_HJS_B97X"], [141, 5, 1, "", "HYB_GGA_XC_HJS_PBE"], [141, 5, 1, "", "HYB_GGA_XC_HJS_PBE_SOL"], [141, 5, 1, "", "HYB_GGA_XC_HPBEINT"], [141, 5, 1, "", "HYB_GGA_XC_HSE03"], [141, 5, 1, "", "HYB_GGA_XC_HSE06"], [141, 5, 1, "", "HYB_GGA_XC_LCY_BLYP"], [141, 5, 1, "", "HYB_GGA_XC_LCY_PBE"], [141, 5, 1, "", "HYB_GGA_XC_LC_VV10"], [141, 5, 1, "", "HYB_GGA_XC_LRC_WPBE"], [141, 5, 1, "", "HYB_GGA_XC_LRC_WPBEH"], [141, 5, 1, "", "HYB_GGA_XC_MB3LYP_RC04"], [141, 5, 1, "", "HYB_GGA_XC_MPW3LYP"], [141, 5, 1, "", "HYB_GGA_XC_MPW3PW"], [141, 5, 1, "", "HYB_GGA_XC_MPWLYP1M"], [141, 5, 1, "", "HYB_GGA_XC_O3LYP"], [141, 5, 1, "", "HYB_GGA_XC_PBE0_13"], [141, 5, 1, "", "HYB_GGA_XC_PBEH"], [141, 5, 1, "", "HYB_GGA_XC_REVB3LYP"], [141, 5, 1, "", "HYB_GGA_XC_SB98_1a"], [141, 5, 1, "", "HYB_GGA_XC_SB98_1b"], [141, 5, 1, "", "HYB_GGA_XC_SB98_1c"], [141, 5, 1, "", "HYB_GGA_XC_SB98_2a"], [141, 5, 1, "", "HYB_GGA_XC_SB98_2b"], [141, 5, 1, "", "HYB_GGA_XC_SB98_2c"], [141, 5, 1, "", "HYB_GGA_XC_TUNED_CAM_B3LYP"], [141, 5, 1, "", "HYB_GGA_XC_WB97"], [141, 5, 1, "", "HYB_GGA_XC_WB97X"], [141, 5, 1, "", "HYB_GGA_XC_WB97X_D"], [141, 5, 1, "", "HYB_GGA_XC_WB97X_V"], [141, 5, 1, "", "HYB_GGA_XC_X3LYP"], [141, 5, 1, "", "HYB_GGA_XC_mPW1K"], [141, 5, 1, "", "HYB_GGA_XC_mPW1PW"], [141, 5, 1, "", "HYB_GGA_X_N12_SX"], [141, 5, 1, "", "HYB_GGA_X_SOGGA11_X"], [141, 5, 1, "", "HYB_MGGA_XC_B86B95"], [141, 5, 1, "", "HYB_MGGA_XC_B88B95"], [141, 5, 1, "", "HYB_MGGA_XC_BB1K"], [141, 5, 1, "", "HYB_MGGA_XC_M05"], [141, 5, 1, "", "HYB_MGGA_XC_M05_2X"], [141, 5, 1, "", "HYB_MGGA_XC_M06"], [141, 5, 1, "", "HYB_MGGA_XC_M06_2X"], [141, 5, 1, "", "HYB_MGGA_XC_M06_HF"], [141, 5, 1, "", "HYB_MGGA_XC_M08_HX"], [141, 5, 1, "", "HYB_MGGA_XC_M08_SO"], [141, 5, 1, "", "HYB_MGGA_XC_M11"], [141, 5, 1, "", "HYB_MGGA_XC_MPW1B95"], [141, 5, 1, "", "HYB_MGGA_XC_MPWB1K"], [141, 5, 1, "", "HYB_MGGA_XC_PW6B95"], [141, 5, 1, "", "HYB_MGGA_XC_PW86B95"], [141, 5, 1, "", "HYB_MGGA_XC_PWB6K"], [141, 5, 1, "", "HYB_MGGA_XC_REVTPSSH"], [141, 5, 1, "", "HYB_MGGA_XC_TPSSH"], [141, 5, 1, "", "HYB_MGGA_XC_WB97M_V"], [141, 5, 1, "", "HYB_MGGA_XC_X1B95"], [141, 5, 1, "", "HYB_MGGA_XC_XB1K"], [141, 5, 1, "", "HYB_MGGA_X_DLDF"], [141, 5, 1, "", "HYB_MGGA_X_MN12_SX"], [141, 5, 1, "", "HYB_MGGA_X_MN15"], [141, 5, 1, "", "HYB_MGGA_X_MS2H"], [141, 5, 1, "", "HYB_MGGA_X_MVSH"], [141, 5, 1, "", "HYB_MGGA_X_SCAN0"], [141, 5, 1, "", "LDA_C_1D_CSC"], [141, 5, 1, "", "LDA_C_1D_LOOS"], [141, 5, 1, "", "LDA_C_2D_AMGB"], [141, 5, 1, "", "LDA_C_2D_PRM"], [141, 5, 1, "", "LDA_C_GL"], [141, 5, 1, "", "LDA_C_GOMBAS"], [141, 5, 1, "", "LDA_C_HL"], [141, 5, 1, "", "LDA_C_ML1"], [141, 5, 1, "", "LDA_C_ML2"], [141, 5, 1, "", "LDA_C_OB_PW"], [141, 5, 1, "", "LDA_C_OB_PZ"], [141, 5, 1, "", "LDA_C_PW"], [141, 5, 1, "", "LDA_C_PW_MOD"], [141, 5, 1, "", "LDA_C_PW_RPA"], [141, 5, 1, "", "LDA_C_PZ"], [141, 5, 1, "", "LDA_C_PZ_MOD"], [141, 5, 1, "", "LDA_C_RC04"], [141, 5, 1, "", "LDA_C_RPA"], [141, 5, 1, "", "LDA_C_VWN"], [141, 5, 1, "", "LDA_C_VWN_1"], [141, 5, 1, "", "LDA_C_VWN_2"], [141, 5, 1, "", "LDA_C_VWN_3"], [141, 5, 1, "", "LDA_C_VWN_4"], [141, 5, 1, "", "LDA_C_VWN_RPA"], [141, 5, 1, "", "LDA_C_WIGNER"], [141, 5, 1, "", "LDA_C_XALPHA"], [141, 5, 1, "", "LDA_C_vBH"], [141, 5, 1, "", "LDA_K_LP"], [141, 5, 1, "", "LDA_K_TF"], [141, 5, 1, "", "LDA_X"], [141, 5, 1, "", "LDA_XC_KSDT"], [141, 5, 1, "", "LDA_XC_TETER93"], [141, 5, 1, "", "LDA_XC_ZLP"], [141, 5, 1, "", "LDA_X_1D"], [141, 5, 1, "", "LDA_X_2D"], [141, 5, 1, "", "MGGA_C_BC95"], [141, 5, 1, "", "MGGA_C_CC06"], [141, 5, 1, "", "MGGA_C_CS"], [141, 5, 1, "", "MGGA_C_DLDF"], [141, 5, 1, "", "MGGA_C_M05"], [141, 5, 1, "", "MGGA_C_M05_2X"], [141, 5, 1, "", "MGGA_C_M06"], [141, 5, 1, "", "MGGA_C_M06_2X"], [141, 5, 1, "", "MGGA_C_M06_HF"], [141, 5, 1, "", "MGGA_C_M06_L"], [141, 5, 1, "", "MGGA_C_M08_HX"], [141, 5, 1, "", "MGGA_C_M08_SO"], [141, 5, 1, "", "MGGA_C_M11"], [141, 5, 1, "", "MGGA_C_M11_L"], [141, 5, 1, "", "MGGA_C_MN12_L"], [141, 5, 1, "", "MGGA_C_MN12_SX"], [141, 5, 1, "", "MGGA_C_MN15"], [141, 5, 1, "", "MGGA_C_MN15_L"], [141, 5, 1, "", "MGGA_C_PKZB"], [141, 5, 1, "", "MGGA_C_REVTPSS"], [141, 5, 1, "", "MGGA_C_SCAN"], [141, 5, 1, "", "MGGA_C_TPSS"], [141, 5, 1, "", "MGGA_C_TPSSLOC"], [141, 5, 1, "", "MGGA_C_VSXC"], [141, 5, 1, "", "MGGA_XC_B97M_V"], [141, 5, 1, "", "MGGA_XC_OTPSS_D"], [141, 5, 1, "", "MGGA_XC_TPSSLYP1W"], [141, 5, 1, "", "MGGA_XC_ZLP"], [141, 5, 1, "", "MGGA_X_2D_PRHG07"], [141, 5, 1, "", "MGGA_X_2D_PRHG07_PRP10"], [141, 5, 1, "", "MGGA_X_BJ06"], [141, 5, 1, "", "MGGA_X_BLOC"], [141, 5, 1, "", "MGGA_X_BR89"], [141, 5, 1, "", "MGGA_X_GVT4"], [141, 5, 1, "", "MGGA_X_LTA"], [141, 5, 1, "", "MGGA_X_M05"], [141, 5, 1, "", "MGGA_X_M05_2X"], [141, 5, 1, "", "MGGA_X_M06"], [141, 5, 1, "", "MGGA_X_M06_2X"], [141, 5, 1, "", "MGGA_X_M06_HF"], [141, 5, 1, "", "MGGA_X_M06_L"], [141, 5, 1, "", "MGGA_X_M08_HX"], [141, 5, 1, "", "MGGA_X_M08_SO"], [141, 5, 1, "", "MGGA_X_M11"], [141, 5, 1, "", "MGGA_X_M11_L"], [141, 5, 1, "", "MGGA_X_MBEEF"], [141, 5, 1, "", "MGGA_X_MBEEFVDW"], [141, 5, 1, "", "MGGA_X_MK00"], [141, 5, 1, "", "MGGA_X_MK00B"], [141, 5, 1, "", "MGGA_X_MN12_L"], [141, 5, 1, "", "MGGA_X_MN15_L"], [141, 5, 1, "", "MGGA_X_MODTPSS"], [141, 5, 1, "", "MGGA_X_MS0"], [141, 5, 1, "", "MGGA_X_MS1"], [141, 5, 1, "", "MGGA_X_MS2"], [141, 5, 1, "", "MGGA_X_MVS"], [141, 5, 1, "", "MGGA_X_PKZB"], [141, 5, 1, "", "MGGA_X_REVTPSS"], [141, 5, 1, "", "MGGA_X_RPP09"], [141, 5, 1, "", "MGGA_X_SCAN"], [141, 5, 1, "", "MGGA_X_TAU_HCTH"], [141, 5, 1, "", "MGGA_X_TB09"], [141, 5, 1, "", "MGGA_X_TPSS"], [141, 2, 1, "", "all_families"], [141, 2, 1, "", "all_kinds"], [141, 2, 1, "", "as_dict"], [141, 2, 1, "", "from_dict"], [141, 3, 1, "", "info_dict"], [141, 3, 1, "", "is_c_kind"], [141, 3, 1, "", "is_gga_family"], [141, 3, 1, "", "is_hyb_gga_family"], [141, 3, 1, "", "is_hyb_mgga_family"], [141, 3, 1, "", "is_k_kind"], [141, 3, 1, "", "is_lda_family"], [141, 3, 1, "", "is_mgga_family"], [141, 3, 1, "", "is_x_kind"], [141, 3, 1, "", "is_xc_kind"], [141, 2, 1, "", "to_json"]], "pymatgen.core.molecular_orbitals": [[142, 1, 1, "", "MolecularOrbitals"]], "pymatgen.core.molecular_orbitals.MolecularOrbitals": [[142, 5, 1, "", "aos"], [142, 2, 1, "", "aos_as_list"], [142, 5, 1, "", "band_edges"], [142, 5, 1, "", "composition"], [142, 5, 1, "", "elec_neg"], [142, 5, 1, "", "elements"], [142, 2, 1, "", "max_electronegativity"], [142, 2, 1, "", "obtain_band_edges"]], "pymatgen.core.operations": [[143, 1, 1, "", "MagSymmOp"], [143, 1, 1, "", "SymmOp"]], "pymatgen.core.operations.MagSymmOp": [[143, 2, 1, "", "as_dict"], [143, 2, 1, "", "as_xyzt_string"], [143, 2, 1, "", "from_dict"], [143, 2, 1, "", "from_rotation_and_translation_and_time_reversal"], [143, 2, 1, "", "from_symmop"], [143, 2, 1, "", "from_xyzt_string"], [143, 2, 1, "", "operate_magmom"]], "pymatgen.core.operations.SymmOp": [[143, 5, 1, "", "affine_matrix"], [143, 2, 1, "", "apply_rotation_only"], [143, 2, 1, "", "are_symmetrically_related"], [143, 2, 1, "", "are_symmetrically_related_vectors"], [143, 2, 1, "", "as_dict"], [143, 2, 1, "", "as_xyz_string"], [143, 2, 1, "", "from_axis_angle_and_translation"], [143, 2, 1, "", "from_dict"], [143, 2, 1, "", "from_origin_axis_angle"], [143, 2, 1, "", "from_rotation_and_translation"], [143, 2, 1, "", "from_xyz_string"], [143, 3, 1, "", "inverse"], [143, 2, 1, "", "inversion"], [143, 2, 1, "", "operate"], [143, 2, 1, "", "operate_multi"], [143, 2, 1, "", "reflection"], [143, 3, 1, "", "rotation_matrix"], [143, 2, 1, "", "rotoreflection"], [143, 2, 1, "", "transform_tensor"], [143, 3, 1, "", "translation_vector"]], "pymatgen.core.periodic_table": [[144, 1, 1, "", "DummySpecie"], [144, 1, 1, "", "DummySpecies"], [144, 1, 1, "", "Element"], [144, 1, 1, "", "ElementBase"], [144, 1, 1, "", "Specie"], [144, 1, 1, "", "Species"], [144, 4, 1, "", "get_el_sp"]], "pymatgen.core.periodic_table.DummySpecies": [[144, 3, 1, "id0", "X"], [144, 3, 1, "id1", "Z"], [144, 2, 1, "", "as_dict"], [144, 2, 1, "", "from_dict"], [144, 2, 1, "", "from_string"], [144, 3, 1, "id2", "oxi_state"], [144, 3, 1, "", "symbol"]], "pymatgen.core.periodic_table.Element": [[144, 5, 1, "", "Ac"], [144, 5, 1, "", "Ag"], [144, 5, 1, "", "Al"], [144, 5, 1, "", "Am"], [144, 5, 1, "", "Ar"], [144, 5, 1, "", "As"], [144, 5, 1, "", "At"], [144, 5, 1, "", "Au"], [144, 5, 1, "", "B"], [144, 5, 1, "", "Ba"], [144, 5, 1, "", "Be"], [144, 5, 1, "", "Bh"], [144, 5, 1, "", "Bi"], [144, 5, 1, "", "Bk"], [144, 5, 1, "", "Br"], [144, 5, 1, "", "C"], [144, 5, 1, "", "Ca"], [144, 5, 1, "", "Cd"], [144, 5, 1, "", "Ce"], [144, 5, 1, "", "Cf"], [144, 5, 1, "", "Cl"], [144, 5, 1, "", "Cm"], [144, 5, 1, "", "Cn"], [144, 5, 1, "", "Co"], [144, 5, 1, "", "Cr"], [144, 5, 1, "", "Cs"], [144, 5, 1, "", "Cu"], [144, 5, 1, "", "Db"], [144, 5, 1, "", "Ds"], [144, 5, 1, "", "Dy"], [144, 5, 1, "", "Er"], [144, 5, 1, "", "Es"], [144, 5, 1, "", "Eu"], [144, 5, 1, "", "F"], [144, 5, 1, "", "Fe"], [144, 5, 1, "", "Fl"], [144, 5, 1, "", "Fm"], [144, 5, 1, "", "Fr"], [144, 5, 1, "", "Ga"], [144, 5, 1, "", "Gd"], [144, 5, 1, "", "Ge"], [144, 5, 1, "", "H"], [144, 5, 1, "", "He"], [144, 5, 1, "", "Hf"], [144, 5, 1, "", "Hg"], [144, 5, 1, "", "Ho"], [144, 5, 1, "", "Hs"], [144, 5, 1, "", "I"], [144, 5, 1, "", "In"], [144, 5, 1, "", "Ir"], [144, 5, 1, "", "K"], [144, 5, 1, "", "Kr"], [144, 5, 1, "", "La"], [144, 5, 1, "", "Li"], [144, 5, 1, "", "Lr"], [144, 5, 1, "", "Lu"], [144, 5, 1, "", "Lv"], [144, 5, 1, "", "Mc"], [144, 5, 1, "", "Md"], [144, 5, 1, "", "Mg"], [144, 5, 1, "", "Mn"], [144, 5, 1, "", "Mo"], [144, 5, 1, "", "Mt"], [144, 5, 1, "", "N"], [144, 5, 1, "", "Na"], [144, 5, 1, "", "Nb"], [144, 5, 1, "", "Nd"], [144, 5, 1, "", "Ne"], [144, 5, 1, "", "Nh"], [144, 5, 1, "", "Ni"], [144, 5, 1, "", "No"], [144, 5, 1, "", "Np"], [144, 5, 1, "", "O"], [144, 5, 1, "", "Og"], [144, 5, 1, "", "Os"], [144, 5, 1, "", "P"], [144, 5, 1, "", "Pa"], [144, 5, 1, "", "Pb"], [144, 5, 1, "", "Pd"], [144, 5, 1, "", "Pm"], [144, 5, 1, "", "Po"], [144, 5, 1, "", "Pr"], [144, 5, 1, "", "Pt"], [144, 5, 1, "", "Pu"], [144, 5, 1, "", "Ra"], [144, 5, 1, "", "Rb"], [144, 5, 1, "", "Re"], [144, 5, 1, "", "Rf"], [144, 5, 1, "", "Rg"], [144, 5, 1, "", "Rh"], [144, 5, 1, "", "Rn"], [144, 5, 1, "", "Ru"], [144, 5, 1, "", "S"], [144, 5, 1, "", "Sb"], [144, 5, 1, "", "Sc"], [144, 5, 1, "", "Se"], [144, 5, 1, "", "Sg"], [144, 5, 1, "", "Si"], [144, 5, 1, "", "Sm"], [144, 5, 1, "", "Sn"], [144, 5, 1, "", "Sr"], [144, 5, 1, "", "Ta"], [144, 5, 1, "", "Tb"], [144, 5, 1, "", "Tc"], [144, 5, 1, "", "Te"], [144, 5, 1, "", "Th"], [144, 5, 1, "", "Ti"], [144, 5, 1, "", "Tl"], [144, 5, 1, "", "Tm"], [144, 5, 1, "", "Ts"], [144, 5, 1, "", "U"], [144, 5, 1, "", "V"], [144, 5, 1, "", "W"], [144, 5, 1, "", "Xe"], [144, 5, 1, "", "Y"], [144, 5, 1, "", "Yb"], [144, 5, 1, "", "Z"], [144, 5, 1, "", "Zn"], [144, 5, 1, "", "Zr"], [144, 5, 1, "", "atomic_orbitals"], [144, 5, 1, "", "atomic_radius_calculated"], [144, 5, 1, "", "boiling_point"], [144, 5, 1, "", "brinell_hardness"], [144, 5, 1, "", "bulk_modulus"], [144, 5, 1, "", "coefficient_of_linear_thermal_expansion"], [144, 5, 1, "", "critical_temperature"], [144, 5, 1, "", "density_of_solid"], [144, 5, 1, "", "electrical_resistivity"], [144, 5, 1, "", "electronic_structure"], [144, 5, 1, "", "ground_level"], [144, 5, 1, "", "ionization_energies"], [144, 5, 1, "", "liquid_range"], [144, 5, 1, "", "long_name"], [144, 5, 1, "", "melting_point"], [144, 5, 1, "", "mendeleev_no"], [144, 5, 1, "", "mineral_hardness"], [144, 5, 1, "", "molar_volume"], [144, 5, 1, "", "poissons_ratio"], [144, 5, 1, "", "reflectivity"], [144, 5, 1, "", "refractive_index"], [144, 5, 1, "", "rigidity_modulus"], [144, 5, 1, "", "superconduction_temperature"], [144, 5, 1, "", "symbol"], [144, 5, 1, "", "thermal_conductivity"], [144, 5, 1, "", "van_der_waals_radius"], [144, 5, 1, "", "velocity_of_sound"], [144, 5, 1, "", "vickers_hardness"], [144, 5, 1, "", "youngs_modulus"]], "pymatgen.core.periodic_table.ElementBase": [[144, 3, 1, "", "X"], [144, 5, 1, "", "Z"], [144, 2, 1, "", "as_dict"], [144, 3, 1, "", "atomic_mass"], [144, 5, 1, "", "atomic_orbitals"], [144, 3, 1, "", "atomic_radius"], [144, 5, 1, "", "atomic_radius_calculated"], [144, 3, 1, "", "average_anionic_radius"], [144, 3, 1, "", "average_cationic_radius"], [144, 3, 1, "", "average_ionic_radius"], [144, 3, 1, "", "block"], [144, 5, 1, "", "boiling_point"], [144, 5, 1, "", "brinell_hardness"], [144, 5, 1, "", "bulk_modulus"], [144, 5, 1, "", "coefficient_of_linear_thermal_expansion"], [144, 3, 1, "", "common_oxidation_states"], [144, 5, 1, "", "critical_temperature"], [144, 3, 1, "", "data"], [144, 5, 1, "", "density_of_solid"], [144, 5, 1, "", "electrical_resistivity"], [144, 3, 1, "", "electron_affinity"], [144, 3, 1, "id3", "electronic_structure"], [144, 2, 1, "", "from_Z"], [144, 2, 1, "", "from_dict"], [144, 2, 1, "", "from_name"], [144, 2, 1, "", "from_row_and_group"], [144, 3, 1, "", "full_electronic_structure"], [144, 5, 1, "", "ground_level"], [144, 3, 1, "", "ground_state_term_symbol"], [144, 3, 1, "", "group"], [144, 3, 1, "", "icsd_oxidation_states"], [144, 3, 1, "", "ionic_radii"], [144, 5, 1, "", "ionization_energies"], [144, 3, 1, "", "ionization_energy"], [144, 3, 1, "", "is_actinoid"], [144, 3, 1, "", "is_alkali"], [144, 3, 1, "", "is_alkaline"], [144, 3, 1, "", "is_chalcogen"], [144, 3, 1, "", "is_halogen"], [144, 3, 1, "", "is_lanthanoid"], [144, 3, 1, "", "is_metal"], [144, 3, 1, "", "is_metalloid"], [144, 3, 1, "", "is_noble_gas"], [144, 3, 1, "", "is_post_transition_metal"], [144, 3, 1, "", "is_quadrupolar"], [144, 3, 1, "", "is_rare_earth_metal"], [144, 3, 1, "", "is_transition_metal"], [144, 2, 1, "", "is_valid_symbol"], [144, 3, 1, "", "iupac_ordering"], [144, 5, 1, "", "liquid_range"], [144, 5, 1, "", "long_name"], [144, 3, 1, "", "max_oxidation_state"], [144, 5, 1, "", "melting_point"], [144, 5, 1, "", "mendeleev_no"], [144, 3, 1, "", "metallic_radius"], [144, 3, 1, "", "min_oxidation_state"], [144, 5, 1, "", "mineral_hardness"], [144, 5, 1, "", "molar_volume"], [144, 3, 1, "", "nmr_quadrupole_moment"], [144, 3, 1, "", "number"], [144, 3, 1, "", "oxidation_states"], [144, 5, 1, "", "poissons_ratio"], [144, 2, 1, "", "print_periodic_table"], [144, 5, 1, "", "reflectivity"], [144, 5, 1, "", "refractive_index"], [144, 5, 1, "", "rigidity_modulus"], [144, 3, 1, "", "row"], [144, 5, 1, "", "superconduction_temperature"], [144, 5, 1, "", "symbol"], [144, 3, 1, "", "term_symbols"], [144, 5, 1, "", "thermal_conductivity"], [144, 3, 1, "", "valence"], [144, 5, 1, "", "van_der_waals_radius"], [144, 5, 1, "", "velocity_of_sound"], [144, 5, 1, "", "vickers_hardness"], [144, 5, 1, "", "youngs_modulus"]], "pymatgen.core.periodic_table.Species": [[144, 5, 1, "", "STRING_MODE"], [144, 2, 1, "", "as_dict"], [144, 3, 1, "", "element"], [144, 2, 1, "", "from_dict"], [144, 2, 1, "", "from_string"], [144, 2, 1, "", "get_crystal_field_spin"], [144, 2, 1, "", "get_nmr_quadrupole_moment"], [144, 2, 1, "", "get_shannon_radius"], [144, 3, 1, "", "ionic_radius"], [144, 3, 1, "", "oxi_state"], [144, 3, 1, "", "properties"], [144, 3, 1, "", "spin"], [144, 2, 1, "", "to_pretty_string"]], "pymatgen.core.sites": [[145, 1, 1, "", "PeriodicSite"], [145, 1, 1, "", "Site"]], "pymatgen.core.sites.PeriodicSite": [[145, 3, 1, "", "a"], [145, 2, 1, "", "as_dict"], [145, 3, 1, "", "b"], [145, 3, 1, "", "c"], [145, 3, 1, "", "coords"], [145, 2, 1, "", "distance"], [145, 2, 1, "", "distance_and_image"], [145, 2, 1, "", "distance_and_image_from_frac_coords"], [145, 3, 1, "", "frac_coords"], [145, 2, 1, "", "from_dict"], [145, 2, 1, "", "is_periodic_image"], [145, 3, 1, "", "lattice"], [145, 2, 1, "", "to_unit_cell"], [145, 3, 1, "", "x"], [145, 3, 1, "", "y"], [145, 3, 1, "", "z"]], "pymatgen.core.sites.Site": [[145, 2, 1, "", "as_dict"], [145, 2, 1, "", "distance"], [145, 2, 1, "", "distance_from_point"], [145, 2, 1, "", "from_dict"], [145, 3, 1, "", "is_ordered"], [145, 5, 1, "", "position_atol"], [145, 3, 1, "", "specie"], [145, 3, 1, "", "species"], [145, 3, 1, "", "species_string"], [145, 3, 1, "", "x"], [145, 3, 1, "", "y"], [145, 3, 1, "", "z"]], "pymatgen.core.spectrum": [[146, 1, 1, "", "Spectrum"], [146, 4, 1, "", "lorentzian"]], "pymatgen.core.spectrum.Spectrum": [[146, 5, 1, "", "XLABEL"], [146, 5, 1, "", "YLABEL"], [146, 2, 1, "", "copy"], [146, 2, 1, "", "get_interpolated_value"], [146, 2, 1, "", "normalize"], [146, 2, 1, "", "smear"]], "pymatgen.core.structure": [[147, 1, 1, "", "IMolecule"], [147, 1, 1, "", "IStructure"], [147, 1, 1, "", "Molecule"], [147, 1, 1, "", "Neighbor"], [147, 1, 1, "", "PeriodicNeighbor"], [147, 1, 1, "", "SiteCollection"], [147, 1, 1, "", "Structure"], [147, 6, 1, "", "StructureError"]], "pymatgen.core.structure.IMolecule": [[147, 2, 1, "", "as_dict"], [147, 2, 1, "", "break_bond"], [147, 3, 1, "", "center_of_mass"], [147, 3, 1, "", "charge"], [147, 2, 1, "", "from_dict"], [147, 2, 1, "", "from_file"], [147, 2, 1, "", "from_sites"], [147, 2, 1, "", "from_str"], [147, 2, 1, "", "get_boxed_structure"], [147, 2, 1, "", "get_centered_molecule"], [147, 2, 1, "", "get_covalent_bonds"], [147, 2, 1, "", "get_distance"], [147, 2, 1, "", "get_neighbors"], [147, 2, 1, "", "get_neighbors_in_shell"], [147, 2, 1, "", "get_sites_in_sphere"], [147, 2, 1, "", "get_zmatrix"], [147, 3, 1, "", "nelectrons"], [147, 3, 1, "", "sites"], [147, 3, 1, "", "spin_multiplicity"], [147, 2, 1, "", "to"]], "pymatgen.core.structure.IStructure": [[147, 2, 1, "", "as_dataframe"], [147, 2, 1, "", "as_dict"], [147, 3, 1, "", "charge"], [147, 2, 1, "", "copy"], [147, 3, 1, "", "density"], [147, 3, 1, "", "distance_matrix"], [147, 3, 1, "", "frac_coords"], [147, 2, 1, "", "from_dict"], [147, 2, 1, "", "from_file"], [147, 2, 1, "", "from_magnetic_spacegroup"], [147, 2, 1, "", "from_sites"], [147, 2, 1, "", "from_spacegroup"], [147, 2, 1, "", "from_str"], [147, 2, 1, "", "get_all_neighbors"], [147, 2, 1, "", "get_all_neighbors_old"], [147, 2, 1, "", "get_all_neighbors_py"], [147, 2, 1, "", "get_distance"], [147, 2, 1, "", "get_miller_index_from_site_indexes"], [147, 2, 1, "", "get_neighbor_list"], [147, 2, 1, "", "get_neighbors"], [147, 2, 1, "", "get_neighbors_in_shell"], [147, 2, 1, "", "get_neighbors_old"], [147, 2, 1, "", "get_orderings"], [147, 2, 1, "", "get_primitive_structure"], [147, 2, 1, "", "get_reduced_structure"], [147, 2, 1, "", "get_sites_in_sphere"], [147, 2, 1, "", "get_sorted_structure"], [147, 2, 1, "", "get_space_group_info"], [147, 2, 1, "", "get_symmetric_neighbor_list"], [147, 2, 1, "", "interpolate"], [147, 3, 1, "", "is_3d_periodic"], [147, 3, 1, "", "lattice"], [147, 2, 1, "", "matches"], [147, 3, 1, "", "pbc"], [147, 3, 1, "", "sites"], [147, 2, 1, "", "to"], [147, 2, 1, "", "unset_charge"], [147, 3, 1, "", "volume"]], "pymatgen.core.structure.Molecule": [[147, 2, 1, "", "append"], [147, 2, 1, "", "apply_operation"], [147, 2, 1, "", "calculate"], [147, 2, 1, "", "copy"], [147, 2, 1, "", "insert"], [147, 2, 1, "", "perturb"], [147, 2, 1, "", "relax"], [147, 2, 1, "", "remove_sites"], [147, 2, 1, "", "remove_species"], [147, 2, 1, "", "rotate_sites"], [147, 2, 1, "", "set_charge_and_spin"], [147, 2, 1, "", "substitute"], [147, 2, 1, "", "translate_sites"]], "pymatgen.core.structure.Neighbor": [[147, 2, 1, "", "as_dict"], [147, 5, 1, "", "coords"], [147, 2, 1, "", "from_dict"], [147, 5, 1, "", "properties"]], "pymatgen.core.structure.PeriodicNeighbor": [[147, 2, 1, "", "as_dict"], [147, 3, 1, "", "coords"], [147, 2, 1, "", "from_dict"], [147, 5, 1, "", "properties"]], "pymatgen.core.structure.SiteCollection": [[147, 5, 1, "", "DISTANCE_TOLERANCE"], [147, 2, 1, "", "add_oxidation_state_by_element"], [147, 2, 1, "", "add_oxidation_state_by_guess"], [147, 2, 1, "", "add_oxidation_state_by_site"], [147, 2, 1, "", "add_site_property"], [147, 2, 1, "", "add_spin_by_element"], [147, 2, 1, "", "add_spin_by_site"], [147, 3, 1, "", "atomic_numbers"], [147, 3, 1, "", "cart_coords"], [147, 3, 1, "", "charge"], [147, 3, 1, "", "composition"], [147, 3, 1, "", "distance_matrix"], [147, 2, 1, "", "extract_cluster"], [147, 3, 1, "", "formula"], [147, 2, 1, "", "from_file"], [147, 2, 1, "", "from_str"], [147, 2, 1, "", "get_angle"], [147, 2, 1, "", "get_dihedral"], [147, 2, 1, "", "get_distance"], [147, 2, 1, "", "group_by_types"], [147, 2, 1, "", "indices_from_symbol"], [147, 3, 1, "", "is_ordered"], [147, 2, 1, "", "is_valid"], [147, 3, 1, "", "ntypesp"], [147, 3, 1, "", "num_sites"], [147, 2, 1, "", "remove_oxidation_states"], [147, 2, 1, "", "remove_site_property"], [147, 2, 1, "", "remove_spin"], [147, 2, 1, "", "replace_species"], [147, 3, 1, "", "site_properties"], [147, 3, 1, "", "sites"], [147, 3, 1, "", "species"], [147, 3, 1, "", "species_and_occu"], [147, 3, 1, "", "symbol_set"], [147, 2, 1, "", "to"], [147, 3, 1, "", "types_of_specie"], [147, 3, 1, "", "types_of_species"]], "pymatgen.core.structure.Structure": [[147, 2, 1, "", "append"], [147, 2, 1, "", "apply_operation"], [147, 2, 1, "", "apply_strain"], [147, 2, 1, "", "calculate"], [147, 2, 1, "", "from_prototype"], [147, 2, 1, "", "insert"], [147, 3, 1, "", "lattice"], [147, 2, 1, "", "make_supercell"], [147, 2, 1, "", "merge_sites"], [147, 2, 1, "", "perturb"], [147, 2, 1, "", "relax"], [147, 2, 1, "", "remove_sites"], [147, 2, 1, "", "remove_species"], [147, 2, 1, "", "replace"], [147, 2, 1, "", "rotate_sites"], [147, 2, 1, "", "scale_lattice"], [147, 2, 1, "", "set_charge"], [147, 2, 1, "", "sort"], [147, 2, 1, "", "substitute"], [147, 2, 1, "", "translate_sites"]], "pymatgen.core.surface": [[148, 1, 1, "", "ReconstructionGenerator"], [148, 1, 1, "", "Slab"], [148, 1, 1, "", "SlabGenerator"], [148, 4, 1, "", "center_slab"], [148, 4, 1, "", "generate_all_slabs"], [148, 4, 1, "", "get_d"], [148, 4, 1, "", "get_slab_regions"], [148, 4, 1, "", "get_symmetrically_distinct_miller_indices"], [148, 4, 1, "", "get_symmetrically_equivalent_miller_indices"], [148, 4, 1, "", "hkl_transformation"], [148, 4, 1, "", "is_already_analyzed"], [148, 4, 1, "", "miller_index_from_sites"]], "pymatgen.core.surface.ReconstructionGenerator": [[148, 2, 1, "", "build_slabs"], [148, 2, 1, "", "get_unreconstructed_slabs"], [148, 5, 1, "", "slabgen_params"]], "pymatgen.core.surface.Slab": [[148, 2, 1, "", "add_adsorbate_atom"], [148, 2, 1, "", "as_dict"], [148, 3, 1, "", "center_of_mass"], [148, 2, 1, "", "copy"], [148, 3, 1, "", "dipole"], [148, 2, 1, "", "from_dict"], [148, 2, 1, "", "get_orthogonal_c_slab"], [148, 2, 1, "", "get_sorted_structure"], [148, 2, 1, "", "get_surface_sites"], [148, 2, 1, "", "get_symmetric_site"], [148, 2, 1, "", "get_tasker2_slabs"], [148, 2, 1, "", "is_polar"], [148, 2, 1, "", "is_symmetric"], [148, 5, 1, "", "miller_index"], [148, 3, 1, "", "normal"], [148, 5, 1, "", "scale_factor"], [148, 5, 1, "", "shift"], [148, 3, 1, "", "surface_area"], [148, 2, 1, "", "symmetrically_add_atom"], [148, 2, 1, "", "symmetrically_remove_atoms"]], "pymatgen.core.surface.SlabGenerator": [[148, 5, 1, "", "center_slab"], [148, 2, 1, "", "get_slab"], [148, 2, 1, "", "get_slabs"], [148, 5, 1, "", "lll_reduce"], [148, 5, 1, "", "miller_index"], [148, 5, 1, "", "min_slab_size"], [148, 5, 1, "", "min_vac_size"], [148, 2, 1, "", "move_to_other_side"], [148, 2, 1, "", "nonstoichiometric_symmetrized_slab"], [148, 5, 1, "", "oriented_unit_cell"], [148, 5, 1, "", "parent"], [148, 2, 1, "", "repair_broken_bonds"], [148, 5, 1, "", "slab_scale_factor"]], "pymatgen.core.tensors": [[149, 1, 1, "", "SquareTensor"], [149, 1, 1, "", "Tensor"], [149, 1, 1, "", "TensorCollection"], [149, 1, 1, "", "TensorMapping"], [149, 4, 1, "", "get_uvec"], [149, 4, 1, "", "symmetry_reduce"]], "pymatgen.core.tensors.SquareTensor": [[149, 3, 1, "", "det"], [149, 2, 1, "", "get_scaled"], [149, 3, 1, "", "inv"], [149, 2, 1, "", "is_rotation"], [149, 2, 1, "", "polar_decomposition"], [149, 3, 1, "", "principal_invariants"], [149, 2, 1, "", "refine_rotation"], [149, 3, 1, "", "trans"]], "pymatgen.core.tensors.Tensor": [[149, 2, 1, "", "as_dict"], [149, 2, 1, "", "average_over_unit_sphere"], [149, 2, 1, "", "convert_to_ieee"], [149, 2, 1, "", "einsum_sequence"], [149, 2, 1, "", "fit_to_structure"], [149, 2, 1, "", "from_dict"], [149, 2, 1, "", "from_values_indices"], [149, 2, 1, "", "from_voigt"], [149, 2, 1, "", "get_grouped_indices"], [149, 2, 1, "", "get_ieee_rotation"], [149, 2, 1, "", "get_symbol_dict"], [149, 2, 1, "", "get_voigt_dict"], [149, 2, 1, "", "is_fit_to_structure"], [149, 2, 1, "", "is_symmetric"], [149, 2, 1, "", "is_voigt_symmetric"], [149, 2, 1, "", "populate"], [149, 2, 1, "", "project"], [149, 2, 1, "", "rotate"], [149, 2, 1, "", "round"], [149, 2, 1, "", "structure_transform"], [149, 5, 1, "", "symbol"], [149, 3, 1, "", "symmetrized"], [149, 2, 1, "", "transform"], [149, 3, 1, "", "voigt"], [149, 3, 1, "", "voigt_symmetrized"], [149, 2, 1, "", "zeroed"]], "pymatgen.core.tensors.TensorCollection": [[149, 2, 1, "", "as_dict"], [149, 2, 1, "", "convert_to_ieee"], [149, 2, 1, "", "fit_to_structure"], [149, 2, 1, "", "from_dict"], [149, 2, 1, "", "from_voigt"], [149, 2, 1, "", "is_fit_to_structure"], [149, 2, 1, "", "is_symmetric"], [149, 2, 1, "", "is_voigt_symmetric"], [149, 3, 1, "", "ranks"], [149, 2, 1, "", "rotate"], [149, 2, 1, "", "round"], [149, 3, 1, "", "symmetrized"], [149, 2, 1, "", "transform"], [149, 3, 1, "", "voigt"], [149, 3, 1, "", "voigt_symmetrized"], [149, 2, 1, "", "zeroed"]], "pymatgen.core.tensors.TensorMapping": [[149, 2, 1, "", "items"], [149, 2, 1, "", "values"]], "pymatgen.core.trajectory": [[150, 1, 1, "", "Trajectory"]], "pymatgen.core.trajectory.Trajectory": [[150, 2, 1, "", "as_dict"], [150, 2, 1, "", "extend"], [150, 2, 1, "", "from_file"], [150, 2, 1, "", "from_molecules"], [150, 2, 1, "", "from_structures"], [150, 2, 1, "", "get_molecule"], [150, 2, 1, "", "get_structure"], [150, 2, 1, "", "to_displacements"], [150, 2, 1, "", "to_positions"], [150, 2, 1, "", "write_Xdatcar"]], "pymatgen.core.units": [[151, 1, 1, "", "ArrayWithUnit"], [151, 7, 1, "", "Charge"], [151, 7, 1, "", "Energy"], [151, 1, 1, "", "FloatWithUnit"], [151, 7, 1, "", "Length"], [151, 7, 1, "", "Mass"], [151, 7, 1, "", "Memory"], [151, 7, 1, "", "Temp"], [151, 7, 1, "", "Time"], [151, 1, 1, "", "Unit"], [151, 6, 1, "", "UnitError"], [151, 7, 1, "", "kb"], [151, 4, 1, "", "obj_with_unit"], [151, 4, 1, "", "unitized"]], "pymatgen.core.units.ArrayWithUnit": [[151, 5, 1, "", "Error"], [151, 3, 1, "", "as_base_units"], [151, 2, 1, "", "conversions"], [151, 3, 1, "", "supported_units"], [151, 2, 1, "", "to"], [151, 3, 1, "", "unit"], [151, 3, 1, "", "unit_type"]], "pymatgen.core.units.FloatWithUnit": [[151, 5, 1, "", "Error"], [151, 3, 1, "", "as_base_units"], [151, 2, 1, "", "from_string"], [151, 3, 1, "", "supported_units"], [151, 2, 1, "", "to"], [151, 3, 1, "", "unit"], [151, 3, 1, "", "unit_type"]], "pymatgen.core.units.Unit": [[151, 5, 1, "", "Error"], [151, 3, 1, "", "as_base_units"], [151, 2, 1, "", "get_conversion_factor"]], "pymatgen.core.xcfunc": [[152, 1, 1, "", "XcFunc"]], "pymatgen.core.xcfunc.XcFunc": [[152, 5, 1, "", "abinitixc_to_libxc"], [152, 2, 1, "", "aliases"], [152, 2, 1, "", "as_dict"], [152, 2, 1, "", "asxc"], [152, 5, 1, "", "defined_aliases"], [152, 2, 1, "", "from_abinit_ixc"], [152, 2, 1, "", "from_dict"], [152, 2, 1, "", "from_name"], [152, 2, 1, "", "from_type_name"], [152, 2, 1, "", "name"], [152, 2, 1, "", "type"]], "pymatgen.electronic_structure": [[155, 0, 0, "-", "bandstructure"], [156, 0, 0, "-", "boltztrap"], [158, 0, 0, "-", "cohp"], [159, 0, 0, "-", "core"], [160, 0, 0, "-", "dos"], [161, 0, 0, "-", "plotter"]], "pymatgen.electronic_structure.bandstructure": [[155, 1, 1, "", "BandStructure"], [155, 1, 1, "", "BandStructureSymmLine"], [155, 1, 1, "", "Kpoint"], [155, 1, 1, "", "LobsterBandStructureSymmLine"], [155, 4, 1, "", "get_reconstructed_band_structure"]], "pymatgen.electronic_structure.bandstructure.BandStructure": [[155, 2, 1, "", "as_dict"], [155, 5, 1, "", "bands"], [155, 5, 1, "", "efermi"], [155, 2, 1, "", "from_dict"], [155, 2, 1, "", "from_old_dict"], [155, 2, 1, "", "get_band_gap"], [155, 2, 1, "", "get_cbm"], [155, 2, 1, "", "get_direct_band_gap"], [155, 2, 1, "", "get_direct_band_gap_dict"], [155, 2, 1, "", "get_kpoint_degeneracy"], [155, 2, 1, "", "get_projection_on_elements"], [155, 2, 1, "", "get_projections_on_elements_and_orbitals"], [155, 2, 1, "", "get_sym_eq_kpoints"], [155, 2, 1, "", "get_vbm"], [155, 2, 1, "", "is_metal"], [155, 5, 1, "", "is_spin_polarized"], [155, 5, 1, "", "lattice_rec"], [155, 5, 1, "", "nb_bands"], [155, 5, 1, "", "projections"], [155, 5, 1, "", "structure"]], "pymatgen.electronic_structure.bandstructure.BandStructureSymmLine": [[155, 2, 1, "", "apply_scissor"], [155, 2, 1, "", "as_dict"], [155, 2, 1, "", "get_branch"], [155, 2, 1, "", "get_equivalent_kpoints"]], "pymatgen.electronic_structure.bandstructure.Kpoint": [[155, 3, 1, "", "a"], [155, 2, 1, "", "as_dict"], [155, 3, 1, "", "b"], [155, 3, 1, "", "c"], [155, 3, 1, "", "cart_coords"], [155, 3, 1, "", "frac_coords"], [155, 2, 1, "", "from_dict"], [155, 3, 1, "", "label"], [155, 3, 1, "", "lattice"]], "pymatgen.electronic_structure.bandstructure.LobsterBandStructureSymmLine": [[155, 2, 1, "", "as_dict"], [155, 2, 1, "", "from_dict"], [155, 2, 1, "", "from_old_dict"], [155, 2, 1, "", "get_projection_on_elements"], [155, 2, 1, "", "get_projections_on_elements_and_orbitals"]], "pymatgen.electronic_structure.boltztrap": [[156, 1, 1, "", "BoltztrapAnalyzer"], [156, 6, 1, "", "BoltztrapError"], [156, 1, 1, "", "BoltztrapRunner"], [156, 4, 1, "", "compare_sym_bands"], [156, 4, 1, "", "eta_from_seebeck"], [156, 4, 1, "", "read_cube_file"], [156, 4, 1, "", "seebeck_eff_mass_from_carr"], [156, 4, 1, "", "seebeck_eff_mass_from_seebeck_carr"], [156, 4, 1, "", "seebeck_spb"]], "pymatgen.electronic_structure.boltztrap.BoltztrapAnalyzer": [[156, 2, 1, "", "as_dict"], [156, 2, 1, "", "check_acc_bzt_bands"], [156, 2, 1, "", "from_dict"], [156, 2, 1, "", "from_files"], [156, 2, 1, "", "get_average_eff_mass"], [156, 2, 1, "", "get_carrier_concentration"], [156, 2, 1, "", "get_complete_dos"], [156, 2, 1, "", "get_complexity_factor"], [156, 2, 1, "", "get_conductivity"], [156, 2, 1, "", "get_extreme"], [156, 2, 1, "", "get_hall_carrier_concentration"], [156, 2, 1, "", "get_mu_bounds"], [156, 2, 1, "", "get_power_factor"], [156, 2, 1, "", "get_seebeck"], [156, 2, 1, "", "get_seebeck_eff_mass"], [156, 2, 1, "", "get_symm_bands"], [156, 2, 1, "", "get_thermal_conductivity"], [156, 2, 1, "", "get_zt"], [156, 2, 1, "", "parse_cond_and_hall"], [156, 2, 1, "", "parse_intrans"], [156, 2, 1, "", "parse_outputtrans"], [156, 2, 1, "", "parse_struct"], [156, 2, 1, "", "parse_transdos"]], "pymatgen.electronic_structure.boltztrap.BoltztrapRunner": [[156, 2, 1, "", "as_dict"], [156, 3, 1, "", "bs"], [156, 3, 1, "", "nelec"], [156, 2, 1, "", "run"], [156, 2, 1, "", "write_def"], [156, 2, 1, "", "write_energy"], [156, 2, 1, "", "write_input"], [156, 2, 1, "", "write_intrans"], [156, 2, 1, "", "write_proj"], [156, 2, 1, "", "write_struct"]], "pymatgen.electronic_structure.cohp": [[158, 1, 1, "", "Cohp"], [158, 1, 1, "", "CompleteCohp"], [158, 1, 1, "", "IcohpCollection"], [158, 1, 1, "", "IcohpValue"], [158, 4, 1, "", "get_integrated_cohp_in_energy_range"]], "pymatgen.electronic_structure.cohp.Cohp": [[158, 2, 1, "", "as_dict"], [158, 2, 1, "", "from_dict"], [158, 2, 1, "", "get_cohp"], [158, 2, 1, "", "get_icohp"], [158, 2, 1, "", "get_interpolated_value"], [158, 2, 1, "", "has_antibnd_states_below_efermi"]], "pymatgen.electronic_structure.cohp.CompleteCohp": [[158, 2, 1, "", "as_dict"], [158, 2, 1, "", "from_dict"], [158, 2, 1, "", "from_file"], [158, 2, 1, "", "get_cohp_by_label"], [158, 2, 1, "", "get_orbital_resolved_cohp"], [158, 2, 1, "", "get_summed_cohp_by_label_and_orbital_list"], [158, 2, 1, "", "get_summed_cohp_by_label_list"]], "pymatgen.electronic_structure.cohp.IcohpCollection": [[158, 3, 1, "id0", "are_cobis"], [158, 3, 1, "id1", "are_coops"], [158, 2, 1, "", "extremum_icohpvalue"], [158, 2, 1, "", "get_icohp_by_label"], [158, 2, 1, "", "get_icohp_dict_by_bondlengths"], [158, 2, 1, "", "get_icohp_dict_of_site"], [158, 2, 1, "", "get_summed_icohp_by_label_list"], [158, 3, 1, "id2", "is_spin_polarized"]], "pymatgen.electronic_structure.cohp.IcohpValue": [[158, 3, 1, "id3", "are_cobis"], [158, 3, 1, "id4", "are_coops"], [158, 3, 1, "id5", "icohp"], [158, 2, 1, "", "icohpvalue"], [158, 2, 1, "", "icohpvalue_orbital"], [158, 3, 1, "", "is_spin_polarized"], [158, 3, 1, "id6", "num_bonds"], [158, 3, 1, "", "summed_icohp"], [158, 3, 1, "", "summed_orbital_icohp"]], "pymatgen.electronic_structure.core": [[159, 1, 1, "", "Magmom"], [159, 1, 1, "", "Orbital"], [159, 1, 1, "", "OrbitalType"], [159, 1, 1, "", "Spin"]], "pymatgen.electronic_structure.core.Magmom": [[159, 2, 1, "", "are_collinear"], [159, 2, 1, "", "from_global_moment_and_saxis"], [159, 2, 1, "", "from_moment_relative_to_crystal_axes"], [159, 2, 1, "", "get_00t_magmom_with_xyz_saxis"], [159, 2, 1, "", "get_consistent_set_and_saxis"], [159, 2, 1, "", "get_moment"], [159, 2, 1, "", "get_moment_relative_to_crystal_axes"], [159, 2, 1, "", "get_suggested_saxis"], [159, 2, 1, "", "get_xyz_magmom_with_001_saxis"], [159, 3, 1, "", "global_moment"], [159, 2, 1, "", "have_consistent_saxis"], [159, 3, 1, "", "projection"]], "pymatgen.electronic_structure.core.Orbital": [[159, 5, 1, "", "dx2"], [159, 5, 1, "", "dxy"], [159, 5, 1, "", "dxz"], [159, 5, 1, "", "dyz"], [159, 5, 1, "", "dz2"], [159, 5, 1, "", "f0"], [159, 5, 1, "", "f1"], [159, 5, 1, "", "f2"], [159, 5, 1, "", "f3"], [159, 5, 1, "", "f_1"], [159, 5, 1, "", "f_2"], [159, 5, 1, "", "f_3"], [159, 3, 1, "", "orbital_type"], [159, 5, 1, "", "px"], [159, 5, 1, "", "py"], [159, 5, 1, "", "pz"], [159, 5, 1, "", "s"]], "pymatgen.electronic_structure.core.OrbitalType": [[159, 5, 1, "", "d"], [159, 5, 1, "", "f"], [159, 5, 1, "", "p"], [159, 5, 1, "", "s"]], "pymatgen.electronic_structure.core.Spin": [[159, 5, 1, "", "down"], [159, 5, 1, "", "up"]], "pymatgen.electronic_structure.dos": [[160, 1, 1, "", "CompleteDos"], [160, 1, 1, "", "DOS"], [160, 1, 1, "", "Dos"], [160, 1, 1, "", "FermiDos"], [160, 1, 1, "", "LobsterCompleteDos"], [160, 4, 1, "", "add_densities"], [160, 4, 1, "", "f0"]], "pymatgen.electronic_structure.dos.CompleteDos": [[160, 2, 1, "", "as_dict"], [160, 2, 1, "", "fp_to_dict"], [160, 2, 1, "", "from_dict"], [160, 2, 1, "", "get_band_center"], [160, 2, 1, "", "get_band_filling"], [160, 2, 1, "", "get_band_kurtosis"], [160, 2, 1, "", "get_band_skewness"], [160, 2, 1, "", "get_band_width"], [160, 2, 1, "", "get_dos_fp"], [160, 2, 1, "", "get_dos_fp_similarity"], [160, 2, 1, "", "get_element_dos"], [160, 2, 1, "", "get_element_spd_dos"], [160, 2, 1, "", "get_hilbert_transform"], [160, 2, 1, "", "get_n_moment"], [160, 2, 1, "", "get_normalized"], [160, 2, 1, "", "get_site_dos"], [160, 2, 1, "", "get_site_orbital_dos"], [160, 2, 1, "", "get_site_spd_dos"], [160, 2, 1, "", "get_site_t2g_eg_resolved_dos"], [160, 2, 1, "", "get_spd_dos"], [160, 2, 1, "", "get_upper_band_edge"], [160, 5, 1, "", "pdos"], [160, 3, 1, "", "spin_polarization"], [160, 5, 1, "", "structure"]], "pymatgen.electronic_structure.dos.DOS": [[160, 5, 1, "", "XLABEL"], [160, 5, 1, "", "YLABEL"], [160, 2, 1, "", "get_cbm_vbm"], [160, 2, 1, "", "get_gap"], [160, 2, 1, "", "get_interpolated_gap"]], "pymatgen.electronic_structure.dos.Dos": [[160, 2, 1, "", "as_dict"], [160, 2, 1, "", "from_dict"], [160, 2, 1, "", "get_cbm_vbm"], [160, 2, 1, "", "get_densities"], [160, 2, 1, "", "get_gap"], [160, 2, 1, "", "get_interpolated_gap"], [160, 2, 1, "", "get_interpolated_value"], [160, 2, 1, "", "get_smeared_densities"]], "pymatgen.electronic_structure.dos.FermiDos": [[160, 2, 1, "", "as_dict"], [160, 2, 1, "", "from_dict"], [160, 2, 1, "", "get_doping"], [160, 2, 1, "", "get_fermi"], [160, 2, 1, "", "get_fermi_interextrapolated"]], "pymatgen.electronic_structure.dos.LobsterCompleteDos": [[160, 2, 1, "", "from_dict"], [160, 2, 1, "", "get_element_spd_dos"], [160, 2, 1, "", "get_site_orbital_dos"], [160, 2, 1, "", "get_site_t2g_eg_resolved_dos"], [160, 2, 1, "", "get_spd_dos"]], "pymatgen.electronic_structure.plotter": [[161, 1, 1, "", "BSDOSPlotter"], [161, 1, 1, "", "BSPlotter"], [161, 1, 1, "", "BSPlotterProjected"], [161, 1, 1, "", "BoltztrapPlotter"], [161, 1, 1, "", "CohpPlotter"], [161, 1, 1, "", "DosPlotter"], [161, 4, 1, "", "fold_point"], [161, 4, 1, "", "plot_brillouin_zone"], [161, 4, 1, "", "plot_brillouin_zone_from_kpath"], [161, 4, 1, "", "plot_ellipsoid"], [161, 4, 1, "", "plot_fermi_surface"], [161, 4, 1, "", "plot_labels"], [161, 4, 1, "", "plot_lattice_vectors"], [161, 4, 1, "", "plot_path"], [161, 4, 1, "", "plot_points"], [161, 4, 1, "", "plot_wigner_seitz"]], "pymatgen.electronic_structure.plotter.BSDOSPlotter": [[161, 2, 1, "", "get_plot"]], "pymatgen.electronic_structure.plotter.BSPlotter": [[161, 2, 1, "", "add_bs"], [161, 2, 1, "", "bs_plot_data"], [161, 2, 1, "", "get_plot"], [161, 2, 1, "", "get_ticks"], [161, 2, 1, "", "get_ticks_old"], [161, 2, 1, "", "plot_brillouin"], [161, 2, 1, "", "plot_compare"], [161, 2, 1, "", "save_plot"], [161, 2, 1, "", "show"]], "pymatgen.electronic_structure.plotter.BSPlotterProjected": [[161, 2, 1, "", "get_elt_projected_plots"], [161, 2, 1, "", "get_elt_projected_plots_color"], [161, 2, 1, "", "get_projected_plots_dots"], [161, 2, 1, "", "get_projected_plots_dots_patom_pmorb"]], "pymatgen.electronic_structure.plotter.BoltztrapPlotter": [[161, 2, 1, "", "plot_carriers"], [161, 2, 1, "", "plot_complexity_factor_mu"], [161, 2, 1, "", "plot_conductivity_dop"], [161, 2, 1, "", "plot_conductivity_mu"], [161, 2, 1, "", "plot_conductivity_temp"], [161, 2, 1, "", "plot_dos"], [161, 2, 1, "", "plot_eff_mass_dop"], [161, 2, 1, "", "plot_eff_mass_temp"], [161, 2, 1, "", "plot_hall_carriers"], [161, 2, 1, "", "plot_power_factor_dop"], [161, 2, 1, "", "plot_power_factor_mu"], [161, 2, 1, "", "plot_power_factor_temp"], [161, 2, 1, "", "plot_seebeck_dop"], [161, 2, 1, "", "plot_seebeck_eff_mass_mu"], [161, 2, 1, "", "plot_seebeck_mu"], [161, 2, 1, "", "plot_seebeck_temp"], [161, 2, 1, "", "plot_zt_dop"], [161, 2, 1, "", "plot_zt_mu"], [161, 2, 1, "", "plot_zt_temp"]], "pymatgen.electronic_structure.plotter.CohpPlotter": [[161, 2, 1, "", "add_cohp"], [161, 2, 1, "", "add_cohp_dict"], [161, 2, 1, "", "get_cohp_dict"], [161, 2, 1, "", "get_plot"], [161, 2, 1, "", "save_plot"], [161, 2, 1, "", "show"]], "pymatgen.electronic_structure.plotter.DosPlotter": [[161, 2, 1, "", "add_dos"], [161, 2, 1, "", "add_dos_dict"], [161, 2, 1, "", "get_dos_dict"], [161, 2, 1, "", "get_plot"], [161, 2, 1, "", "save_plot"], [161, 2, 1, "", "show"]], "pymatgen.entries": [[162, 1, 1, "", "Entry"], [163, 0, 0, "-", "compatibility"], [164, 0, 0, "-", "computed_entries"], [165, 0, 0, "-", "correction_calculator"], [166, 0, 0, "-", "entry_tools"], [167, 0, 0, "-", "exp_entries"], [168, 0, 0, "-", "mixing_scheme"]], "pymatgen.entries.Entry": [[162, 2, 1, "", "as_dict"], [162, 3, 1, "", "composition"], [162, 3, 1, "", "energy"], [162, 3, 1, "", "energy_per_atom"], [162, 3, 1, "", "is_element"], [162, 2, 1, "", "normalize"]], "pymatgen.entries.compatibility": [[163, 1, 1, "", "AnionCorrection"], [163, 1, 1, "", "AqueousCorrection"], [163, 1, 1, "", "Compatibility"], [163, 6, 1, "", "CompatibilityError"], [163, 1, 1, "", "Correction"], [163, 1, 1, "", "CorrectionsList"], [163, 1, 1, "", "GasCorrection"], [163, 1, 1, "", "MITAqueousCompatibility"], [163, 1, 1, "", "MITCompatibility"], [163, 1, 1, "", "MaterialsProject2020Compatibility"], [163, 1, 1, "", "MaterialsProjectAqueousCompatibility"], [163, 1, 1, "", "MaterialsProjectCompatibility"], [163, 1, 1, "", "PotcarCorrection"], [163, 1, 1, "", "UCorrection"]], "pymatgen.entries.compatibility.Compatibility": [[163, 2, 1, "", "explain"], [163, 2, 1, "", "get_adjustments"], [163, 2, 1, "", "process_entries"], [163, 2, 1, "", "process_entry"]], "pymatgen.entries.compatibility.Correction": [[163, 2, 1, "", "correct_entry"], [163, 2, 1, "", "get_correction"]], "pymatgen.entries.compatibility.CorrectionsList": [[163, 2, 1, "", "explain"], [163, 2, 1, "", "get_adjustments"], [163, 2, 1, "", "get_corrections_dict"], [163, 2, 1, "", "get_explanation_dict"]], "pymatgen.entries.compatibility.PotcarCorrection": [[163, 2, 1, "", "get_correction"]], "pymatgen.entries.computed_entries": [[164, 1, 1, "", "CompositionEnergyAdjustment"], [164, 1, 1, "", "ComputedEntry"], [164, 1, 1, "", "ComputedStructureEntry"], [164, 1, 1, "", "ConstantEnergyAdjustment"], [164, 1, 1, "", "EnergyAdjustment"], [164, 1, 1, "", "GibbsComputedStructureEntry"], [164, 1, 1, "", "ManualEnergyAdjustment"], [164, 1, 1, "", "TemperatureEnergyAdjustment"]], "pymatgen.entries.computed_entries.CompositionEnergyAdjustment": [[164, 3, 1, "", "explain"], [164, 2, 1, "", "normalize"], [164, 3, 1, "", "uncertainty"], [164, 3, 1, "", "value"]], "pymatgen.entries.computed_entries.ComputedEntry": [[164, 2, 1, "", "as_dict"], [164, 2, 1, "", "copy"], [164, 3, 1, "", "correction"], [164, 3, 1, "", "correction_per_atom"], [164, 3, 1, "", "correction_uncertainty"], [164, 3, 1, "", "correction_uncertainty_per_atom"], [164, 3, 1, "", "energy"], [164, 2, 1, "", "from_dict"], [164, 2, 1, "", "normalize"], [164, 3, 1, "", "uncorrected_energy"], [164, 3, 1, "", "uncorrected_energy_per_atom"]], "pymatgen.entries.computed_entries.ComputedStructureEntry": [[164, 2, 1, "", "as_dict"], [164, 2, 1, "", "copy"], [164, 2, 1, "", "from_dict"], [164, 2, 1, "", "normalize"], [164, 3, 1, "", "structure"]], "pymatgen.entries.computed_entries.ConstantEnergyAdjustment": [[164, 3, 1, "", "explain"], [164, 2, 1, "", "normalize"]], "pymatgen.entries.computed_entries.EnergyAdjustment": [[164, 3, 1, "", "explain"], [164, 2, 1, "", "normalize"], [164, 3, 1, "", "uncertainty"], [164, 3, 1, "", "value"]], "pymatgen.entries.computed_entries.GibbsComputedStructureEntry": [[164, 2, 1, "", "as_dict"], [164, 2, 1, "", "from_dict"], [164, 2, 1, "", "from_entries"], [164, 2, 1, "", "from_pd"], [164, 2, 1, "", "gf_sisso"]], "pymatgen.entries.computed_entries.TemperatureEnergyAdjustment": [[164, 3, 1, "", "explain"], [164, 2, 1, "", "normalize"], [164, 3, 1, "", "uncertainty"], [164, 3, 1, "", "value"]], "pymatgen.entries.correction_calculator": [[165, 1, 1, "", "CorrectionCalculator"]], "pymatgen.entries.correction_calculator.CorrectionCalculator": [[165, 5, 1, "", "calc_compounds"], [165, 2, 1, "", "compute_corrections"], [165, 2, 1, "", "compute_from_files"], [165, 5, 1, "", "corrections"], [165, 5, 1, "", "corrections_dict"], [165, 5, 1, "", "corrections_std_error"], [165, 5, 1, "", "exp_compounds"], [165, 2, 1, "", "graph_residual_error"], [165, 2, 1, "", "graph_residual_error_per_species"], [165, 2, 1, "", "make_yaml"], [165, 5, 1, "", "species"]], "pymatgen.entries.entry_tools": [[166, 1, 1, "", "EntrySet"], [166, 4, 1, "", "group_entries_by_composition"], [166, 4, 1, "", "group_entries_by_structure"]], "pymatgen.entries.entry_tools.EntrySet": [[166, 2, 1, "", "add"], [166, 2, 1, "", "as_dict"], [166, 3, 1, "", "chemsys"], [166, 2, 1, "", "discard"], [166, 2, 1, "", "from_csv"], [166, 2, 1, "", "get_subset_in_chemsys"], [166, 3, 1, "", "ground_states"], [166, 2, 1, "", "is_ground_state"], [166, 2, 1, "", "remove_non_ground_states"], [166, 2, 1, "", "to_csv"]], "pymatgen.entries.exp_entries": [[167, 1, 1, "", "ExpEntry"]], "pymatgen.entries.exp_entries.ExpEntry": [[167, 2, 1, "", "as_dict"], [167, 2, 1, "", "from_dict"]], "pymatgen.entries.mixing_scheme": [[168, 1, 1, "", "MaterialsProjectDFTMixingScheme"]], "pymatgen.entries.mixing_scheme.MaterialsProjectDFTMixingScheme": [[168, 2, 1, "", "display_entries"], [168, 2, 1, "", "get_adjustments"], [168, 2, 1, "", "get_mixing_state_data"], [168, 2, 1, "", "process_entries"]], "pymatgen.ext": [[170, 0, 0, "-", "cod"], [171, 0, 0, "-", "matproj"], [172, 0, 0, "-", "optimade"]], "pymatgen.ext.cod": [[170, 1, 1, "", "COD"]], "pymatgen.ext.cod.COD": [[170, 2, 1, "", "get_cod_ids"], [170, 2, 1, "", "get_structure_by_formula"], [170, 2, 1, "", "get_structure_by_id"], [170, 2, 1, "", "query"]], "pymatgen.ext.matproj": [[171, 6, 1, "", "MPRestError"], [171, 1, 1, "", "MPRester"], [171, 1, 1, "", "TaskType"], [171, 4, 1, "", "get_chunks"]], "pymatgen.ext.matproj.TaskType": [[171, 5, 1, "", "GGAU_DEF"], [171, 5, 1, "", "GGAU_LINE"], [171, 5, 1, "", "GGAU_OPT"], [171, 5, 1, "", "GGAU_STATIC"], [171, 5, 1, "", "GGAU_STATIC_DIEL"], [171, 5, 1, "", "GGAU_UNIFORM"], [171, 5, 1, "", "GGA_DEF"], [171, 5, 1, "", "GGA_LINE"], [171, 5, 1, "", "GGA_OPT"], [171, 5, 1, "", "GGA_STATIC"], [171, 5, 1, "", "GGA_STATIC_DIEL"], [171, 5, 1, "", "GGA_UNIFORM"], [171, 5, 1, "", "LDA_STATIC_DIEL"], [171, 5, 1, "", "SCAN_OPT"]], "pymatgen.ext.optimade": [[172, 1, 1, "", "OptimadeRester"], [172, 1, 1, "", "Provider"]], "pymatgen.ext.optimade.OptimadeRester": [[172, 5, 1, "", "aliases"], [172, 2, 1, "", "describe"], [172, 2, 1, "", "get_snls"], [172, 2, 1, "", "get_snls_with_filter"], [172, 2, 1, "", "get_structures"], [172, 2, 1, "", "get_structures_with_filter"], [172, 5, 1, "", "mandatory_response_fields"], [172, 2, 1, "", "refresh_aliases"]], "pymatgen.ext.optimade.Provider": [[172, 5, 1, "", "base_url"], [172, 5, 1, "", "description"], [172, 5, 1, "", "homepage"], [172, 5, 1, "", "name"], [172, 5, 1, "", "prefix"]], "pymatgen.io": [[174, 0, 0, "-", "abinit"], [181, 0, 0, "-", "adf"], [182, 0, 0, "-", "ase"], [183, 0, 0, "-", "atat"], [184, 0, 0, "-", "babel"], [185, 0, 0, "-", "cif"], [186, 0, 0, "-", "common"], [187, 0, 0, "-", "core"], [188, 0, 0, "-", "cp2k"], [193, 0, 0, "-", "cssr"], [194, 0, 0, "-", "exciting"], [196, 0, 0, "-", "feff"], [200, 0, 0, "-", "fiesta"], [201, 0, 0, "-", "gaussian"], [202, 0, 0, "-", "jarvis"], [203, 0, 0, "-", "lammps"], [210, 0, 0, "-", "lmto"], [211, 0, 0, "-", "lobster"], [215, 0, 0, "-", "nwchem"], [216, 0, 0, "-", "packmol"], [217, 0, 0, "-", "phonopy"], [218, 0, 0, "-", "prismatic"], [219, 0, 0, "-", "pwscf"], [220, 0, 0, "-", "qchem"], [225, 0, 0, "-", "res"], [226, 0, 0, "-", "shengbte"], [227, 0, 0, "-", "template"], [228, 0, 0, "-", "vasp"], [234, 0, 0, "-", "wannier90"], [235, 0, 0, "-", "xcrysden"], [236, 0, 0, "-", "xr"], [237, 0, 0, "-", "xtb"], [240, 0, 0, "-", "xyz"], [241, 0, 0, "-", "zeopp"]], "pymatgen.io.abinit": [[175, 0, 0, "-", "abiobjects"], [176, 0, 0, "-", "abitimer"], [177, 0, 0, "-", "inputs"], [178, 0, 0, "-", "netcdf"], [179, 0, 0, "-", "pseudos"], [180, 0, 0, "-", "variable"]], "pymatgen.io.abinit.abiobjects": [[175, 1, 1, "", "AbivarAble"], [175, 1, 1, "", "Constraints"], [175, 1, 1, "", "Electrons"], [175, 1, 1, "", "ElectronsAlgorithm"], [175, 1, 1, "", "ExcHamiltonian"], [175, 1, 1, "", "HilbertTransform"], [175, 1, 1, "", "KSampling"], [175, 1, 1, "", "KSamplingModes"], [175, 1, 1, "", "ModelDielectricFunction"], [175, 1, 1, "", "PPModel"], [175, 1, 1, "", "PPModelModes"], [175, 1, 1, "", "RelaxationMethod"], [175, 1, 1, "", "Screening"], [175, 1, 1, "", "SelfEnergy"], [175, 1, 1, "", "Smearing"], [175, 1, 1, "", "SpinMode"], [175, 4, 1, "", "contract"], [175, 4, 1, "", "lattice_from_abivars"], [175, 4, 1, "", "species_by_znucl"], [175, 4, 1, "", "structure_from_abivars"], [175, 4, 1, "", "structure_to_abivars"]], "pymatgen.io.abinit.abiobjects.AbivarAble": [[175, 2, 1, "", "to_abivars"]], "pymatgen.io.abinit.abiobjects.Constraints": [[175, 2, 1, "", "to_abivars"]], "pymatgen.io.abinit.abiobjects.Electrons": [[175, 2, 1, "", "as_dict"], [175, 2, 1, "", "from_dict"], [175, 3, 1, "", "nspden"], [175, 3, 1, "", "nspinor"], [175, 3, 1, "", "nsppol"], [175, 2, 1, "", "to_abivars"]], "pymatgen.io.abinit.abiobjects.ElectronsAlgorithm": [[175, 2, 1, "", "as_dict"], [175, 2, 1, "", "from_dict"], [175, 2, 1, "", "to_abivars"]], "pymatgen.io.abinit.abiobjects.ExcHamiltonian": [[175, 3, 1, "", "inclvkb"], [175, 2, 1, "", "to_abivars"], [175, 3, 1, "", "use_cg"], [175, 3, 1, "", "use_direct_diago"], [175, 3, 1, "", "use_haydock"]], "pymatgen.io.abinit.abiobjects.HilbertTransform": [[175, 2, 1, "", "to_abivars"]], "pymatgen.io.abinit.abiobjects.KSampling": [[175, 2, 1, "", "as_dict"], [175, 2, 1, "", "automatic_density"], [175, 2, 1, "", "explicit_path"], [175, 2, 1, "", "from_dict"], [175, 2, 1, "", "gamma_centered"], [175, 2, 1, "", "gamma_only"], [175, 3, 1, "", "is_homogeneous"], [175, 2, 1, "", "monkhorst"], [175, 2, 1, "", "monkhorst_automatic"], [175, 2, 1, "", "path_from_structure"], [175, 2, 1, "", "to_abivars"]], "pymatgen.io.abinit.abiobjects.KSamplingModes": [[175, 5, 1, "", "automatic"], [175, 5, 1, "", "monkhorst"], [175, 5, 1, "", "path"]], "pymatgen.io.abinit.abiobjects.ModelDielectricFunction": [[175, 2, 1, "", "to_abivars"]], "pymatgen.io.abinit.abiobjects.PPModel": [[175, 2, 1, "", "as_dict"], [175, 2, 1, "", "as_ppmodel"], [175, 2, 1, "", "from_dict"], [175, 2, 1, "", "get_noppmodel"], [175, 2, 1, "", "to_abivars"]], "pymatgen.io.abinit.abiobjects.PPModelModes": [[175, 5, 1, "", "farid"], [175, 5, 1, "", "godby"], [175, 5, 1, "", "hybersten"], [175, 5, 1, "", "linden"], [175, 5, 1, "", "noppmodel"]], "pymatgen.io.abinit.abiobjects.RelaxationMethod": [[175, 5, 1, "", "IONMOV_DEFAULT"], [175, 5, 1, "", "OPTCELL_DEFAULT"], [175, 2, 1, "", "as_dict"], [175, 2, 1, "", "atoms_and_cell"], [175, 2, 1, "", "atoms_only"], [175, 2, 1, "", "from_dict"], [175, 3, 1, "", "move_atoms"], [175, 3, 1, "", "move_cell"], [175, 2, 1, "", "to_abivars"]], "pymatgen.io.abinit.abiobjects.Screening": [[175, 2, 1, "", "to_abivars"], [175, 3, 1, "", "use_hilbert"]], "pymatgen.io.abinit.abiobjects.SelfEnergy": [[175, 3, 1, "", "gwcalctyp"], [175, 3, 1, "", "symsigma"], [175, 2, 1, "", "to_abivars"], [175, 3, 1, "", "use_ppmodel"]], "pymatgen.io.abinit.abiobjects.Smearing": [[175, 2, 1, "", "as_dict"], [175, 2, 1, "", "as_smearing"], [175, 2, 1, "", "from_dict"], [175, 3, 1, "", "mode"], [175, 2, 1, "", "nosmearing"], [175, 2, 1, "", "to_abivars"]], "pymatgen.io.abinit.abiobjects.SpinMode": [[175, 2, 1, "", "as_dict"], [175, 2, 1, "", "as_spinmode"], [175, 2, 1, "", "from_dict"], [175, 2, 1, "", "to_abivars"]], "pymatgen.io.abinit.abitimer": [[176, 1, 1, "", "AbinitTimer"], [176, 1, 1, "", "AbinitTimerParser"], [176, 6, 1, "", "AbinitTimerParserError"], [176, 1, 1, "", "AbinitTimerSection"], [176, 1, 1, "", "ParallelEfficiency"], [176, 4, 1, "", "alternate"]], "pymatgen.io.abinit.abitimer.AbinitTimer": [[176, 2, 1, "", "cpuwall_histogram"], [176, 2, 1, "", "get_dataframe"], [176, 2, 1, "", "get_section"], [176, 2, 1, "", "get_values"], [176, 2, 1, "", "names_and_values"], [176, 3, 1, "", "ncpus"], [176, 2, 1, "", "order_sections"], [176, 2, 1, "", "pie"], [176, 2, 1, "", "scatter_hist"], [176, 2, 1, "", "sum_sections"], [176, 2, 1, "", "to_csv"], [176, 2, 1, "", "to_table"], [176, 2, 1, "", "totable"]], "pymatgen.io.abinit.abitimer.AbinitTimerParser": [[176, 5, 1, "", "BEGIN_TAG"], [176, 5, 1, "", "END_TAG"], [176, 5, 1, "", "Error"], [176, 3, 1, "", "filenames"], [176, 2, 1, "", "get_sections"], [176, 2, 1, "", "parse"], [176, 2, 1, "", "pefficiency"], [176, 2, 1, "", "plot_all"], [176, 2, 1, "", "plot_efficiency"], [176, 2, 1, "", "plot_pie"], [176, 2, 1, "", "plot_stacked_hist"], [176, 2, 1, "", "section_names"], [176, 2, 1, "", "summarize"], [176, 2, 1, "", "timers"], [176, 2, 1, "", "walk"]], "pymatgen.io.abinit.abitimer.AbinitTimerSection": [[176, 5, 1, "", "FIELDS"], [176, 5, 1, "", "NUMERIC_FIELDS"], [176, 5, 1, "", "STR_FIELDS"], [176, 2, 1, "", "fake"], [176, 2, 1, "", "to_csvline"], [176, 2, 1, "", "to_dict"], [176, 2, 1, "", "to_tuple"]], "pymatgen.io.abinit.abitimer.ParallelEfficiency": [[176, 2, 1, "", "bad_sections"], [176, 2, 1, "", "good_sections"], [176, 2, 1, "", "totable"]], "pymatgen.io.abinit.inputs": [[177, 1, 1, "", "AbstractInput"], [177, 1, 1, "", "BasicAbinitInput"], [177, 6, 1, "", "BasicAbinitInputError"], [177, 1, 1, "", "BasicMultiDataset"], [177, 1, 1, "", "ShiftMode"], [177, 4, 1, "", "as_structure"], [177, 4, 1, "", "calc_shiftk"], [177, 4, 1, "", "ebands_input"], [177, 4, 1, "", "gs_input"], [177, 4, 1, "", "ion_ioncell_relax_input"], [177, 4, 1, "", "num_valence_electrons"]], "pymatgen.io.abinit.inputs.AbstractInput": [[177, 2, 1, "", "deepcopy"], [177, 2, 1, "", "pop_vars"], [177, 2, 1, "", "remove_vars"], [177, 2, 1, "", "set_vars"], [177, 2, 1, "", "set_vars_ifnotin"], [177, 2, 1, "", "to_string"], [177, 3, 1, "", "vars"], [177, 2, 1, "", "write"]], "pymatgen.io.abinit.inputs.BasicAbinitInput": [[177, 5, 1, "", "Error"], [177, 2, 1, "", "add_abiobjects"], [177, 2, 1, "", "as_dict"], [177, 3, 1, "", "comment"], [177, 2, 1, "", "from_dict"], [177, 3, 1, "", "isnc"], [177, 3, 1, "", "ispaw"], [177, 2, 1, "", "new_with_vars"], [177, 2, 1, "", "pop_irdvars"], [177, 2, 1, "", "pop_tolerances"], [177, 3, 1, "", "pseudos"], [177, 2, 1, "", "set_comment"], [177, 2, 1, "", "set_gamma_sampling"], [177, 2, 1, "", "set_kmesh"], [177, 2, 1, "", "set_kpath"], [177, 2, 1, "", "set_spin_mode"], [177, 2, 1, "", "set_structure"], [177, 3, 1, "", "structure"], [177, 2, 1, "", "to_string"], [177, 3, 1, "", "vars"]], "pymatgen.io.abinit.inputs.BasicMultiDataset": [[177, 5, 1, "", "Error"], [177, 2, 1, "", "addnew_from"], [177, 2, 1, "", "append"], [177, 2, 1, "", "deepcopy"], [177, 2, 1, "", "extend"], [177, 2, 1, "", "from_inputs"], [177, 3, 1, "", "has_same_structures"], [177, 3, 1, "", "isnc"], [177, 3, 1, "", "ispaw"], [177, 3, 1, "", "ndtset"], [177, 3, 1, "", "pseudos"], [177, 2, 1, "", "replicate_input"], [177, 2, 1, "", "split_datasets"], [177, 2, 1, "", "to_string"], [177, 2, 1, "", "write"]], "pymatgen.io.abinit.inputs.ShiftMode": [[177, 5, 1, "", "GammaCentered"], [177, 5, 1, "", "MonkhorstPack"], [177, 5, 1, "", "OneSymmetric"], [177, 5, 1, "", "Symmetric"], [177, 2, 1, "", "from_object"]], "pymatgen.io.abinit.netcdf": [[178, 1, 1, "", "ETSF_Reader"], [178, 1, 1, "", "NO_DEFAULT"], [178, 1, 1, "", "NetcdfReader"], [178, 4, 1, "", "as_etsfreader"], [178, 4, 1, "", "as_ncreader"], [178, 4, 1, "", "structure_from_ncdata"]], "pymatgen.io.abinit.netcdf.ETSF_Reader": [[178, 2, 1, "", "chemical_symbols"], [178, 2, 1, "", "read_abinit_hdr"], [178, 2, 1, "", "read_abinit_xcfunc"], [178, 2, 1, "", "read_structure"], [178, 2, 1, "", "typeidx_from_symbol"]], "pymatgen.io.abinit.netcdf.NetcdfReader": [[178, 5, 1, "", "Error"], [178, 2, 1, "", "close"], [178, 2, 1, "", "print_tree"], [178, 2, 1, "", "read_dimvalue"], [178, 2, 1, "", "read_keys"], [178, 2, 1, "", "read_value"], [178, 2, 1, "", "read_variable"], [178, 2, 1, "", "read_varnames"], [178, 2, 1, "", "walk_tree"]], "pymatgen.io.abinit.pseudos": [[179, 1, 1, "", "AbinitHeader"], [179, 1, 1, "", "AbinitPseudo"], [179, 1, 1, "", "Hint"], [179, 1, 1, "", "NcAbinitHeader"], [179, 1, 1, "", "NcAbinitPseudo"], [179, 1, 1, "", "NcPseudo"], [179, 1, 1, "", "PawAbinitHeader"], [179, 1, 1, "", "PawAbinitPseudo"], [179, 1, 1, "", "PawPseudo"], [179, 1, 1, "", "PawXmlSetup"], [179, 1, 1, "", "Pseudo"], [179, 1, 1, "", "PseudoParser"], [179, 6, 1, "", "PseudoParserError"], [179, 1, 1, "", "PseudoTable"], [179, 1, 1, "", "RadialFunction"], [179, 4, 1, "", "l2str"], [179, 4, 1, "", "str2l"], [179, 4, 1, "", "straceback"]], "pymatgen.io.abinit.pseudos.AbinitPseudo": [[179, 3, 1, "", "Z"], [179, 3, 1, "", "Z_val"], [179, 3, 1, "", "l_local"], [179, 3, 1, "", "l_max"], [179, 3, 1, "", "summary"], [179, 3, 1, "", "supports_soc"]], "pymatgen.io.abinit.pseudos.Hint": [[179, 2, 1, "", "as_dict"], [179, 2, 1, "", "from_dict"]], "pymatgen.io.abinit.pseudos.NcAbinitHeader": [[179, 2, 1, "", "fhi_header"], [179, 2, 1, "", "gth_header"], [179, 2, 1, "", "hgh_header"], [179, 2, 1, "", "oncvpsp_header"], [179, 2, 1, "", "tm_header"]], "pymatgen.io.abinit.pseudos.NcAbinitPseudo": [[179, 3, 1, "", "Z"], [179, 3, 1, "", "Z_val"], [179, 3, 1, "", "l_local"], [179, 3, 1, "", "l_max"], [179, 3, 1, "", "nlcc_radius"], [179, 3, 1, "", "summary"]], "pymatgen.io.abinit.pseudos.NcPseudo": [[179, 3, 1, "", "has_nlcc"], [179, 3, 1, "", "nlcc_radius"], [179, 3, 1, "", "rcore"]], "pymatgen.io.abinit.pseudos.PawAbinitHeader": [[179, 2, 1, "", "paw_header"]], "pymatgen.io.abinit.pseudos.PawAbinitPseudo": [[179, 3, 1, "", "paw_radius"], [179, 3, 1, "", "supports_soc"]], "pymatgen.io.abinit.pseudos.PawPseudo": [[179, 3, 1, "", "paw_radius"], [179, 3, 1, "", "rcore"]], "pymatgen.io.abinit.pseudos.PawXmlSetup": [[179, 3, 1, "", "Z"], [179, 3, 1, "", "Z_val"], [179, 2, 1, "", "ae_core_density"], [179, 2, 1, "", "ae_partial_waves"], [179, 3, 1, "", "l_local"], [179, 3, 1, "", "l_max"], [179, 3, 1, "", "paw_radius"], [179, 2, 1, "", "plot_densities"], [179, 2, 1, "", "plot_projectors"], [179, 2, 1, "", "plot_waves"], [179, 2, 1, "", "projector_functions"], [179, 2, 1, "", "pseudo_core_density"], [179, 3, 1, "", "pseudo_partial_waves"], [179, 2, 1, "", "root"], [179, 3, 1, "", "summary"], [179, 3, 1, "", "supports_soc"], [179, 2, 1, "", "yield_figs"]], "pymatgen.io.abinit.pseudos.Pseudo": [[179, 3, 1, "", "Z"], [179, 3, 1, "", "Z_val"], [179, 2, 1, "", "as_dict"], [179, 2, 1, "", "as_pseudo"], [179, 2, 1, "", "as_tmpfile"], [179, 3, 1, "", "basename"], [179, 2, 1, "", "compute_md5"], [179, 3, 1, "", "djrepo_path"], [179, 3, 1, "", "element"], [179, 3, 1, "", "filepath"], [179, 2, 1, "", "from_dict"], [179, 2, 1, "", "from_file"], [179, 3, 1, "", "has_dojo_report"], [179, 3, 1, "", "has_hints"], [179, 2, 1, "", "hint_for_accuracy"], [179, 3, 1, "", "isnc"], [179, 3, 1, "", "ispaw"], [179, 3, 1, "", "l_local"], [179, 3, 1, "", "l_max"], [179, 2, 1, "", "md5"], [179, 2, 1, "", "open_pspsfile"], [179, 3, 1, "", "summary"], [179, 3, 1, "", "supports_soc"], [179, 3, 1, "", "symbol"], [179, 2, 1, "", "to_string"], [179, 3, 1, "", "type"]], "pymatgen.io.abinit.pseudos.PseudoParser": [[179, 5, 1, "", "Error"], [179, 2, 1, "", "parse"], [179, 2, 1, "", "read_ppdesc"], [179, 2, 1, "", "scan_directory"]], "pymatgen.io.abinit.pseudos.PseudoTable": [[179, 2, 1, "", "all_combinations_for_elements"], [179, 3, 1, "", "allnc"], [179, 3, 1, "", "allpaw"], [179, 2, 1, "", "as_dict"], [179, 2, 1, "", "as_table"], [179, 2, 1, "", "from_dict"], [179, 2, 1, "", "from_dir"], [179, 2, 1, "", "get_pseudos_for_structure"], [179, 2, 1, "", "is_complete"], [179, 2, 1, "", "print_table"], [179, 2, 1, "", "pseudo_with_symbol"], [179, 2, 1, "", "pseudos_with_symbols"], [179, 2, 1, "", "select"], [179, 2, 1, "", "select_family"], [179, 2, 1, "", "select_rows"], [179, 2, 1, "", "select_symbols"], [179, 2, 1, "", "sort_by_z"], [179, 2, 1, "", "sorted"], [179, 2, 1, "", "to_table"], [179, 2, 1, "", "with_dojo_report"], [179, 3, 1, "", "zlist"]], "pymatgen.io.abinit.variable": [[180, 1, 1, "", "InputVariable"]], "pymatgen.io.abinit.variable.InputVariable": [[180, 3, 1, "", "basename"], [180, 3, 1, "", "dataset"], [180, 2, 1, "", "format_list"], [180, 2, 1, "", "format_list2d"], [180, 2, 1, "", "format_scalar"], [180, 2, 1, "", "get_value"], [180, 3, 1, "", "name"], [180, 3, 1, "", "units"]], "pymatgen.io.adf": [[181, 1, 1, "", "AdfInput"], [181, 6, 1, "", "AdfInputError"], [181, 1, 1, "", "AdfKey"], [181, 1, 1, "", "AdfOutput"], [181, 6, 1, "", "AdfOutputError"], [181, 1, 1, "", "AdfTask"], [181, 4, 1, "", "is_numeric"], [181, 4, 1, "", "iterlines"]], "pymatgen.io.adf.AdfInput": [[181, 2, 1, "", "write_file"]], "pymatgen.io.adf.AdfKey": [[181, 2, 1, "", "add_option"], [181, 2, 1, "", "add_subkey"], [181, 2, 1, "", "as_dict"], [181, 5, 1, "", "block_keys"], [181, 2, 1, "", "from_dict"], [181, 2, 1, "", "from_string"], [181, 2, 1, "", "has_option"], [181, 2, 1, "", "has_subkey"], [181, 2, 1, "", "is_block_key"], [181, 3, 1, "", "key"], [181, 2, 1, "", "remove_option"], [181, 2, 1, "", "remove_subkey"], [181, 5, 1, "", "sub_keys"]], "pymatgen.io.adf.AdfTask": [[181, 2, 1, "", "as_dict"], [181, 2, 1, "", "from_dict"], [181, 2, 1, "", "get_default_basis_set"], [181, 2, 1, "", "get_default_geo"], [181, 2, 1, "", "get_default_scf"], [181, 2, 1, "", "get_default_units"], [181, 2, 1, "", "get_default_xc"], [181, 5, 1, "", "operations"]], "pymatgen.io.ase": [[182, 1, 1, "", "AseAtomsAdaptor"]], "pymatgen.io.ase.AseAtomsAdaptor": [[182, 2, 1, "", "get_atoms"], [182, 2, 1, "", "get_molecule"], [182, 2, 1, "", "get_structure"]], "pymatgen.io.atat": [[183, 1, 1, "", "Mcsqs"]], "pymatgen.io.atat.Mcsqs": [[183, 2, 1, "", "structure_from_string"], [183, 2, 1, "", "to_string"]], "pymatgen.io.babel": [[184, 1, 1, "", "BabelMolAdaptor"]], "pymatgen.io.babel.BabelMolAdaptor": [[184, 2, 1, "", "add_hydrogen"], [184, 2, 1, "", "confab_conformers"], [184, 2, 1, "", "from_file"], [184, 2, 1, "", "from_molecule_graph"], [184, 2, 1, "", "from_string"], [184, 2, 1, "", "gen3d_conformer"], [184, 2, 1, "", "localopt"], [184, 2, 1, "", "make3d"], [184, 3, 1, "", "openbabel_mol"], [184, 3, 1, "", "pybel_mol"], [184, 3, 1, "", "pymatgen_mol"], [184, 2, 1, "", "remove_bond"], [184, 2, 1, "", "rotor_conformer"], [184, 2, 1, "", "write_file"]], "pymatgen.io.cif": [[185, 1, 1, "", "CifBlock"], [185, 1, 1, "", "CifFile"], [185, 1, 1, "", "CifParser"], [185, 1, 1, "", "CifWriter"], [185, 4, 1, "", "str2float"]], "pymatgen.io.cif.CifBlock": [[185, 2, 1, "", "from_string"], [185, 5, 1, "", "maxlen"]], "pymatgen.io.cif.CifFile": [[185, 2, 1, "", "from_file"], [185, 2, 1, "", "from_string"]], "pymatgen.io.cif.CifParser": [[185, 2, 1, "", "as_dict"], [185, 2, 1, "", "from_string"], [185, 2, 1, "", "get_bibtex_string"], [185, 2, 1, "", "get_lattice"], [185, 2, 1, "", "get_lattice_no_exception"], [185, 2, 1, "", "get_magsymops"], [185, 2, 1, "", "get_structures"], [185, 2, 1, "", "get_symops"], [185, 3, 1, "", "has_errors"], [185, 2, 1, "", "parse_magmoms"], [185, 2, 1, "", "parse_oxi_states"]], "pymatgen.io.cif.CifWriter": [[185, 3, 1, "", "ciffile"], [185, 2, 1, "", "write_file"]], "pymatgen.io.common": [[186, 1, 1, "", "VolumetricData"]], "pymatgen.io.common.VolumetricData": [[186, 2, 1, "", "copy"], [186, 2, 1, "", "from_cube"], [186, 2, 1, "", "from_hdf5"], [186, 2, 1, "", "get_average_along_axis"], [186, 2, 1, "", "get_axis_grid"], [186, 2, 1, "", "get_integrated_diff"], [186, 2, 1, "", "linear_add"], [186, 2, 1, "", "linear_slice"], [186, 5, 1, "", "ngridpts"], [186, 2, 1, "", "scale"], [186, 3, 1, "", "spin_data"], [186, 5, 1, "", "structure"], [186, 2, 1, "", "to_cube"], [186, 2, 1, "", "to_hdf5"], [186, 2, 1, "", "value_at"]], "pymatgen.io.core": [[187, 1, 1, "", "InputFile"], [187, 1, 1, "", "InputGenerator"], [187, 1, 1, "", "InputSet"]], "pymatgen.io.core.InputFile": [[187, 2, 1, "", "from_file"], [187, 2, 1, "", "from_string"], [187, 2, 1, "", "get_string"], [187, 2, 1, "", "write_file"]], "pymatgen.io.core.InputGenerator": [[187, 2, 1, "", "get_input_set"]], "pymatgen.io.core.InputSet": [[187, 2, 1, "", "from_directory"], [187, 2, 1, "", "validate"], [187, 2, 1, "", "write_input"]], "pymatgen.io.cp2k": [[189, 0, 0, "-", "inputs"], [190, 0, 0, "-", "outputs"], [191, 0, 0, "-", "sets"], [192, 0, 0, "-", "utils"]], "pymatgen.io.cp2k.inputs": [[189, 1, 1, "", "AtomicMetadata"], [189, 1, 1, "", "Band_Structure"], [189, 1, 1, "", "BasisFile"], [189, 1, 1, "", "BasisInfo"], [189, 1, 1, "", "BrokenSymmetry"], [189, 1, 1, "", "Cell"], [189, 1, 1, "", "Coord"], [189, 1, 1, "", "Cp2kInput"], [189, 1, 1, "", "DOS"], [189, 1, 1, "", "DataFile"], [189, 1, 1, "", "Davidson"], [189, 1, 1, "", "Dft"], [189, 1, 1, "", "DftPlusU"], [189, 1, 1, "", "Diagonalization"], [189, 1, 1, "", "E_Density_Cube"], [189, 1, 1, "", "ForceEval"], [189, 1, 1, "", "GaussianTypeOrbitalBasisSet"], [189, 1, 1, "", "Global"], [189, 1, 1, "", "GthPotential"], [189, 1, 1, "", "Keyword"], [189, 1, 1, "", "KeywordList"], [189, 1, 1, "", "Kind"], [189, 1, 1, "", "Kpoint_Set"], [189, 1, 1, "", "Kpoints"], [189, 1, 1, "", "LDOS"], [189, 1, 1, "", "MO_Cubes"], [189, 1, 1, "", "Mgrid"], [189, 1, 1, "", "OrbitalTransformation"], [189, 1, 1, "", "PBE"], [189, 1, 1, "", "PDOS"], [189, 1, 1, "", "PotentialFile"], [189, 1, 1, "", "PotentialInfo"], [189, 1, 1, "", "QS"], [189, 1, 1, "", "Scf"], [189, 1, 1, "", "Section"], [189, 1, 1, "", "SectionList"], [189, 1, 1, "", "Smear"], [189, 1, 1, "", "Subsys"], [189, 1, 1, "", "V_Hartree_Cube"], [189, 1, 1, "", "Xc_Functional"]], "pymatgen.io.cp2k.inputs.AtomicMetadata": [[189, 5, 1, "id0", "alias_names"], [189, 5, 1, "id1", "element"], [189, 5, 1, "id2", "filename"], [189, 2, 1, "", "get_hash"], [189, 2, 1, "", "get_string"], [189, 5, 1, "id3", "info"], [189, 5, 1, "id4", "name"], [189, 5, 1, "id5", "potential"], [189, 2, 1, "", "softmatch"], [189, 5, 1, "id6", "version"]], "pymatgen.io.cp2k.inputs.Band_Structure": [[189, 2, 1, "", "from_kpoints"]], "pymatgen.io.cp2k.inputs.BasisFile": [[189, 2, 1, "", "from_string"]], "pymatgen.io.cp2k.inputs.BasisInfo": [[189, 5, 1, "id7", "admm"], [189, 5, 1, "id8", "cc"], [189, 5, 1, "id9", "contracted"], [189, 5, 1, "id10", "core"], [189, 5, 1, "id11", "diffuse"], [189, 5, 1, "id12", "electrons"], [189, 2, 1, "", "from_string"], [189, 5, 1, "id13", "lri"], [189, 5, 1, "id14", "molopt"], [189, 5, 1, "id15", "pc"], [189, 5, 1, "id16", "polarization"], [189, 2, 1, "", "softmatch"], [189, 5, 1, "id17", "sr"], [189, 5, 1, "id18", "valence"], [189, 5, 1, "id19", "xc"]], "pymatgen.io.cp2k.inputs.BrokenSymmetry": [[189, 2, 1, "", "from_el"]], "pymatgen.io.cp2k.inputs.Cp2kInput": [[189, 2, 1, "", "from_file"], [189, 2, 1, "", "from_lines"], [189, 2, 1, "", "from_string"], [189, 2, 1, "", "get_string"], [189, 2, 1, "", "write_file"]], "pymatgen.io.cp2k.inputs.DataFile": [[189, 2, 1, "", "from_file"], [189, 2, 1, "", "from_string"], [189, 2, 1, "", "get_string"], [189, 5, 1, "", "objects"], [189, 2, 1, "", "write_file"]], "pymatgen.io.cp2k.inputs.GaussianTypeOrbitalBasisSet": [[189, 5, 1, "id20", "coefficients"], [189, 5, 1, "id21", "exponents"], [189, 2, 1, "", "from_string"], [189, 2, 1, "", "get_keyword"], [189, 2, 1, "", "get_string"], [189, 5, 1, "id22", "info"], [189, 5, 1, "id23", "lmax"], [189, 5, 1, "id24", "lmin"], [189, 5, 1, "id25", "n"], [189, 3, 1, "", "nexp"], [189, 5, 1, "id26", "nset"], [189, 5, 1, "id27", "nshell"]], "pymatgen.io.cp2k.inputs.GthPotential": [[189, 5, 1, "id28", "c_exp_ppl"], [189, 2, 1, "", "from_section"], [189, 2, 1, "", "from_string"], [189, 2, 1, "", "get_keyword"], [189, 2, 1, "", "get_section"], [189, 2, 1, "", "get_string"], [189, 5, 1, "id29", "hprj_ppnl"], [189, 5, 1, "", "info"], [189, 5, 1, "id30", "n_elecs"], [189, 5, 1, "id31", "nexp_ppl"], [189, 5, 1, "id32", "nprj"], [189, 5, 1, "id33", "nprj_ppnl"], [189, 5, 1, "id34", "r_loc"], [189, 5, 1, "id35", "radii"]], "pymatgen.io.cp2k.inputs.Keyword": [[189, 2, 1, "", "as_dict"], [189, 2, 1, "", "from_dict"], [189, 2, 1, "", "from_string"], [189, 2, 1, "", "get_string"], [189, 2, 1, "", "verbosity"]], "pymatgen.io.cp2k.inputs.KeywordList": [[189, 2, 1, "", "append"], [189, 2, 1, "", "extend"], [189, 2, 1, "", "get_string"], [189, 2, 1, "", "verbosity"]], "pymatgen.io.cp2k.inputs.Kpoints": [[189, 2, 1, "", "from_kpoints"]], "pymatgen.io.cp2k.inputs.PotentialFile": [[189, 2, 1, "", "from_string"]], "pymatgen.io.cp2k.inputs.PotentialInfo": [[189, 5, 1, "id36", "electrons"], [189, 2, 1, "", "from_string"], [189, 5, 1, "id37", "nlcc"], [189, 5, 1, "id38", "potential_type"], [189, 2, 1, "", "softmatch"], [189, 5, 1, "id39", "xc"]], "pymatgen.io.cp2k.inputs.Section": [[189, 2, 1, "", "add"], [189, 2, 1, "", "by_path"], [189, 2, 1, "", "check"], [189, 2, 1, "", "get"], [189, 2, 1, "", "get_keyword"], [189, 2, 1, "", "get_section"], [189, 2, 1, "", "get_string"], [189, 2, 1, "", "inc"], [189, 2, 1, "", "insert"], [189, 2, 1, "", "safeset"], [189, 2, 1, "", "set"], [189, 2, 1, "", "setitem"], [189, 2, 1, "", "silence"], [189, 2, 1, "", "unset"], [189, 2, 1, "", "update"], [189, 2, 1, "", "verbosity"]], "pymatgen.io.cp2k.inputs.SectionList": [[189, 2, 1, "", "append"], [189, 2, 1, "", "extend"], [189, 2, 1, "", "get"], [189, 2, 1, "", "get_string"], [189, 2, 1, "", "verbosity"]], "pymatgen.io.cp2k.outputs": [[190, 1, 1, "", "Cp2kOutput"], [190, 4, 1, "", "parse_dos"], [190, 4, 1, "", "parse_energy_file"], [190, 4, 1, "", "parse_pdos"]], "pymatgen.io.cp2k.outputs.Cp2kOutput": [[190, 2, 1, "", "as_dict"], [190, 3, 1, "", "band_structure"], [190, 3, 1, "", "calculation_type"], [190, 3, 1, "", "charge"], [190, 3, 1, "", "complete_dos"], [190, 3, 1, "", "completed"], [190, 2, 1, "", "convergence"], [190, 3, 1, "", "cp2k_version"], [190, 3, 1, "", "is_hubbard"], [190, 3, 1, "", "is_metal"], [190, 3, 1, "", "is_molecule"], [190, 3, 1, "", "multiplicity"], [190, 3, 1, "", "num_warnings"], [190, 2, 1, "", "parse_atomic_kind_info"], [190, 2, 1, "", "parse_bandstructure"], [190, 2, 1, "", "parse_cell_params"], [190, 2, 1, "", "parse_chi_tensor"], [190, 2, 1, "", "parse_cp2k_params"], [190, 2, 1, "", "parse_dft_params"], [190, 2, 1, "", "parse_dos"], [190, 2, 1, "", "parse_energies"], [190, 2, 1, "", "parse_files"], [190, 2, 1, "", "parse_forces"], [190, 2, 1, "", "parse_global_params"], [190, 2, 1, "", "parse_gtensor"], [190, 2, 1, "", "parse_hirshfeld"], [190, 2, 1, "", "parse_homo_lumo"], [190, 2, 1, "", "parse_hyperfine"], [190, 2, 1, "", "parse_initial_structure"], [190, 2, 1, "", "parse_input"], [190, 2, 1, "", "parse_ionic_steps"], [190, 2, 1, "", "parse_mo_eigenvalues"], [190, 2, 1, "", "parse_mulliken"], [190, 2, 1, "", "parse_nmr_shift"], [190, 2, 1, "", "parse_opt_steps"], [190, 2, 1, "", "parse_overlap_condition"], [190, 2, 1, "", "parse_plus_u_params"], [190, 2, 1, "", "parse_qs_params"], [190, 2, 1, "", "parse_raman"], [190, 2, 1, "", "parse_scf_opt"], [190, 2, 1, "", "parse_scf_params"], [190, 2, 1, "", "parse_stresses"], [190, 2, 1, "", "parse_structures"], [190, 2, 1, "", "parse_tddfpt"], [190, 2, 1, "", "parse_timing"], [190, 2, 1, "", "parse_total_numbers"], [190, 3, 1, "", "project_name"], [190, 2, 1, "", "ran_successfully"], [190, 2, 1, "", "read_pattern"], [190, 2, 1, "", "read_table_pattern"], [190, 3, 1, "", "run_type"], [190, 3, 1, "", "spin_polarized"]], "pymatgen.io.cp2k.sets": [[191, 1, 1, "", "CellOptSet"], [191, 6, 1, "", "Cp2kValidationError"], [191, 1, 1, "", "DftSet"], [191, 1, 1, "", "HybridCellOptSet"], [191, 1, 1, "", "HybridRelaxSet"], [191, 1, 1, "", "HybridStaticSet"], [191, 1, 1, "", "RelaxSet"], [191, 1, 1, "", "StaticSet"]], "pymatgen.io.cp2k.sets.Cp2kValidationError": [[191, 5, 1, "", "CP2K_VERSION"]], "pymatgen.io.cp2k.sets.DftSet": [[191, 2, 1, "", "activate_epr"], [191, 2, 1, "", "activate_fast_minimization"], [191, 2, 1, "", "activate_hybrid"], [191, 2, 1, "", "activate_hyperfine"], [191, 2, 1, "", "activate_localize"], [191, 2, 1, "", "activate_motion"], [191, 2, 1, "", "activate_nmr"], [191, 2, 1, "", "activate_nonperiodic"], [191, 2, 1, "", "activate_polar"], [191, 2, 1, "", "activate_robust_minimization"], [191, 2, 1, "", "activate_spinspin"], [191, 2, 1, "", "activate_tddfpt"], [191, 2, 1, "", "activate_vdw_potential"], [191, 2, 1, "", "activate_very_strict_minimization"], [191, 2, 1, "", "create_subsys"], [191, 2, 1, "", "get_basis_and_potential"], [191, 2, 1, "", "get_cutoff_from_basis"], [191, 2, 1, "", "get_xc_functionals"], [191, 2, 1, "", "modify_dft_print_iters"], [191, 2, 1, "", "print_bandstructure"], [191, 2, 1, "", "print_dos"], [191, 2, 1, "", "print_e_density"], [191, 2, 1, "", "print_forces"], [191, 2, 1, "", "print_hirshfeld"], [191, 2, 1, "", "print_ldos"], [191, 2, 1, "", "print_mo"], [191, 2, 1, "", "print_mo_cubes"], [191, 2, 1, "", "print_mulliken"], [191, 2, 1, "", "print_pdos"], [191, 2, 1, "", "print_v_hartree"], [191, 2, 1, "", "set_charge"], [191, 2, 1, "", "validate"], [191, 2, 1, "", "write_basis_set_file"], [191, 2, 1, "", "write_potential_file"]], "pymatgen.io.cp2k.utils": [[192, 4, 1, "", "chunk"], [192, 4, 1, "", "get_truncated_coulomb_cutoff"], [192, 4, 1, "", "get_unique_site_indices"], [192, 4, 1, "", "natural_keys"], [192, 4, 1, "", "postprocessor"], [192, 4, 1, "", "preprocessor"]], "pymatgen.io.cssr": [[193, 1, 1, "", "Cssr"]], "pymatgen.io.cssr.Cssr": [[193, 2, 1, "", "from_file"], [193, 2, 1, "", "from_string"], [193, 2, 1, "", "write_file"]], "pymatgen.io.exciting": [[195, 0, 0, "-", "inputs"]], "pymatgen.io.exciting.inputs": [[195, 1, 1, "", "ExcitingInput"]], "pymatgen.io.exciting.inputs.ExcitingInput": [[195, 5, 1, "", "bohr2ang"], [195, 2, 1, "", "from_file"], [195, 2, 1, "", "from_string"], [195, 3, 1, "id0", "lockxyz"], [195, 5, 1, "", "structure"], [195, 5, 1, "", "title"], [195, 2, 1, "", "write_etree"], [195, 2, 1, "", "write_file"], [195, 2, 1, "", "write_string"]], "pymatgen.io.feff": [[197, 0, 0, "-", "inputs"], [198, 0, 0, "-", "outputs"], [199, 0, 0, "-", "sets"]], "pymatgen.io.feff.inputs": [[197, 1, 1, "", "Atoms"], [197, 6, 1, "", "FeffParserError"], [197, 1, 1, "", "Header"], [197, 1, 1, "", "Paths"], [197, 1, 1, "", "Potential"], [197, 1, 1, "", "Tags"], [197, 4, 1, "", "get_absorbing_atom_symbol_index"], [197, 4, 1, "", "get_atom_map"]], "pymatgen.io.feff.inputs.Atoms": [[197, 2, 1, "", "atoms_string_from_file"], [197, 3, 1, "", "cluster"], [197, 2, 1, "", "cluster_from_file"], [197, 2, 1, "", "get_lines"], [197, 2, 1, "", "write_file"]], "pymatgen.io.feff.inputs.Header": [[197, 3, 1, "", "formula"], [197, 2, 1, "", "from_cif_file"], [197, 2, 1, "", "from_file"], [197, 2, 1, "", "from_string"], [197, 2, 1, "", "header_string_from_file"], [197, 3, 1, "", "structure_symmetry"], [197, 2, 1, "", "write_file"]], "pymatgen.io.feff.inputs.Paths": [[197, 2, 1, "", "write_file"]], "pymatgen.io.feff.inputs.Potential": [[197, 2, 1, "", "pot_dict_from_string"], [197, 2, 1, "", "pot_string_from_file"], [197, 2, 1, "", "write_file"]], "pymatgen.io.feff.inputs.Tags": [[197, 2, 1, "", "as_dict"], [197, 2, 1, "", "diff"], [197, 2, 1, "", "from_dict"], [197, 2, 1, "", "from_file"], [197, 2, 1, "", "get_string"], [197, 2, 1, "", "proc_val"], [197, 2, 1, "", "write_file"]], "pymatgen.io.feff.outputs": [[198, 1, 1, "", "Eels"], [198, 1, 1, "", "LDos"], [198, 1, 1, "", "Xmu"]], "pymatgen.io.feff.outputs.Eels": [[198, 2, 1, "", "as_dict"], [198, 3, 1, "", "atomic_background"], [198, 3, 1, "", "energies"], [198, 3, 1, "", "fine_structure"], [198, 2, 1, "", "from_file"], [198, 3, 1, "", "total_spectrum"]], "pymatgen.io.feff.outputs.LDos": [[198, 2, 1, "", "charge_transfer_from_file"], [198, 2, 1, "", "charge_transfer_to_string"], [198, 2, 1, "", "from_file"]], "pymatgen.io.feff.outputs.Xmu": [[198, 2, 1, "", "as_dict"], [198, 3, 1, "", "calc"], [198, 3, 1, "", "chi"], [198, 3, 1, "", "e_fermi"], [198, 3, 1, "", "edge"], [198, 3, 1, "", "energies"], [198, 2, 1, "", "from_file"], [198, 3, 1, "", "material_formula"], [198, 3, 1, "", "mu"], [198, 3, 1, "", "mu0"], [198, 3, 1, "", "relative_energies"], [198, 3, 1, "", "source"], [198, 3, 1, "", "wavenumber"]], "pymatgen.io.feff.sets": [[199, 1, 1, "", "AbstractFeffInputSet"], [199, 1, 1, "", "FEFFDictSet"], [199, 1, 1, "", "MPEELSDictSet"], [199, 1, 1, "", "MPELNESSet"], [199, 1, 1, "", "MPEXAFSSet"], [199, 1, 1, "", "MPEXELFSSet"], [199, 1, 1, "", "MPXANESSet"]], "pymatgen.io.feff.sets.AbstractFeffInputSet": [[199, 2, 1, "", "all_input"], [199, 3, 1, "", "atoms"], [199, 2, 1, "", "header"], [199, 3, 1, "", "potential"], [199, 3, 1, "", "tags"], [199, 2, 1, "", "write_input"]], "pymatgen.io.feff.sets.FEFFDictSet": [[199, 3, 1, "", "atoms"], [199, 2, 1, "", "from_directory"], [199, 2, 1, "", "header"], [199, 3, 1, "", "potential"], [199, 3, 1, "", "tags"]], "pymatgen.io.feff.sets.MPELNESSet": [[199, 5, 1, "", "CONFIG"]], "pymatgen.io.feff.sets.MPEXAFSSet": [[199, 5, 1, "", "CONFIG"]], "pymatgen.io.feff.sets.MPEXELFSSet": [[199, 5, 1, "", "CONFIG"]], "pymatgen.io.feff.sets.MPXANESSet": [[199, 5, 1, "", "CONFIG"]], "pymatgen.io.fiesta": [[200, 1, 1, "", "BSEOutput"], [200, 1, 1, "", "BasisSetReader"], [200, 1, 1, "", "FiestaInput"], [200, 1, 1, "", "FiestaOutput"], [200, 1, 1, "", "FiestaRun"], [200, 1, 1, "", "Nwchem2Fiesta"]], "pymatgen.io.fiesta.BasisSetReader": [[200, 2, 1, "", "infos_on_basis_set"], [200, 2, 1, "", "set_n_nlmo"]], "pymatgen.io.fiesta.FiestaInput": [[200, 2, 1, "", "as_dict"], [200, 2, 1, "", "dump_BSE_data_in_GW_run"], [200, 2, 1, "", "dump_TDDFT_data_in_GW_run"], [200, 2, 1, "", "from_dict"], [200, 2, 1, "", "from_file"], [200, 2, 1, "", "from_string"], [200, 3, 1, "", "infos_on_system"], [200, 2, 1, "", "make_FULL_BSE_Densities_folder"], [200, 3, 1, "", "molecule"], [200, 2, 1, "", "set_BSE_options"], [200, 2, 1, "", "set_GW_options"], [200, 2, 1, "", "set_auxiliary_basis_set"], [200, 2, 1, "", "write_file"]], "pymatgen.io.fiesta.FiestaRun": [[200, 2, 1, "", "as_dict"], [200, 2, 1, "", "bse_run"], [200, 2, 1, "", "from_dict"], [200, 2, 1, "", "run"]], "pymatgen.io.fiesta.Nwchem2Fiesta": [[200, 2, 1, "", "as_dict"], [200, 2, 1, "", "from_dict"], [200, 2, 1, "", "run"]], "pymatgen.io.gaussian": [[201, 1, 1, "", "GaussianInput"], [201, 1, 1, "", "GaussianOutput"], [201, 4, 1, "", "read_route_line"]], "pymatgen.io.gaussian.GaussianInput": [[201, 2, 1, "", "as_dict"], [201, 2, 1, "", "from_dict"], [201, 2, 1, "", "from_file"], [201, 2, 1, "", "from_string"], [201, 2, 1, "", "get_cart_coords"], [201, 2, 1, "", "get_zmatrix"], [201, 3, 1, "", "molecule"], [201, 2, 1, "", "to_string"], [201, 2, 1, "", "write_file"]], "pymatgen.io.gaussian.GaussianOutput": [[201, 5, 1, "", "MO_coefficients"], [201, 5, 1, "", "Mulliken_charges"], [201, 2, 1, "", "as_dict"], [201, 5, 1, "", "atom_basis_labels"], [201, 5, 1, "", "basis_set"], [201, 5, 1, "", "bond_orders"], [201, 5, 1, "", "cart_forces"], [201, 5, 1, "", "charge"], [201, 5, 1, "", "corrections"], [201, 5, 1, "", "dieze_tag"], [201, 5, 1, "", "eigenvalues"], [201, 5, 1, "", "eigenvectors"], [201, 5, 1, "", "electrons"], [201, 5, 1, "", "energies"], [201, 5, 1, "", "errors"], [201, 3, 1, "", "final_energy"], [201, 3, 1, "", "final_structure"], [201, 5, 1, "", "frequencies"], [201, 5, 1, "", "functional"], [201, 2, 1, "id0", "get_scan_plot"], [201, 2, 1, "", "get_spectre_plot"], [201, 5, 1, "", "hessian"], [201, 5, 1, "", "is_pcm"], [201, 5, 1, "", "is_spin"], [201, 5, 1, "", "link0"], [201, 5, 1, "", "molecular_orbital"], [201, 5, 1, "", "num_basis_func"], [201, 5, 1, "", "opt_structures"], [201, 5, 1, "", "pcm"], [201, 5, 1, "", "properly_terminated"], [201, 2, 1, "", "read_excitation_energies"], [201, 2, 1, "id1", "read_scan"], [201, 5, 1, "", "resumes"], [201, 5, 1, "", "route"], [201, 2, 1, "id2", "save_scan_plot"], [201, 2, 1, "", "save_spectre_plot"], [201, 5, 1, "", "spin_multiplicity"], [201, 5, 1, "", "standard_orientation"], [201, 5, 1, "", "stationary_type"], [201, 5, 1, "", "structures_input_orientation"], [201, 5, 1, "", "title"], [201, 2, 1, "", "to_input"]], "pymatgen.io.jarvis": [[202, 1, 1, "", "JarvisAtomsAdaptor"]], "pymatgen.io.jarvis.JarvisAtomsAdaptor": [[202, 2, 1, "", "get_atoms"], [202, 2, 1, "", "get_structure"]], "pymatgen.io.lammps": [[204, 0, 0, "-", "data"], [205, 0, 0, "-", "generators"], [206, 0, 0, "-", "inputs"], [207, 0, 0, "-", "outputs"], [208, 0, 0, "-", "sets"], [209, 0, 0, "-", "utils"]], "pymatgen.io.lammps.data": [[204, 1, 1, "", "CombinedData"], [204, 1, 1, "", "ForceField"], [204, 1, 1, "", "LammpsBox"], [204, 1, 1, "", "LammpsData"], [204, 1, 1, "", "Topology"], [204, 4, 1, "", "lattice_2_lmpbox"]], "pymatgen.io.lammps.data.CombinedData": [[204, 2, 1, "", "as_lammpsdata"], [204, 2, 1, "", "disassemble"], [204, 2, 1, "", "from_ff_and_topologies"], [204, 2, 1, "", "from_files"], [204, 2, 1, "", "from_lammpsdata"], [204, 2, 1, "", "from_structure"], [204, 2, 1, "", "get_string"], [204, 2, 1, "", "parse_xyz"], [204, 3, 1, "", "structure"]], "pymatgen.io.lammps.data.ForceField": [[204, 5, 1, "", "force_field"], [204, 2, 1, "", "from_dict"], [204, 2, 1, "", "from_file"], [204, 5, 1, "", "maps"], [204, 5, 1, "", "masses"], [204, 2, 1, "", "to_file"]], "pymatgen.io.lammps.data.LammpsBox": [[204, 2, 1, "", "get_box_shift"], [204, 2, 1, "", "get_string"], [204, 2, 1, "", "to_lattice"], [204, 3, 1, "", "volume"]], "pymatgen.io.lammps.data.LammpsData": [[204, 2, 1, "", "disassemble"], [204, 2, 1, "", "from_ff_and_topologies"], [204, 2, 1, "", "from_file"], [204, 2, 1, "", "from_structure"], [204, 2, 1, "", "get_string"], [204, 2, 1, "", "set_charge_atom"], [204, 2, 1, "", "set_charge_atom_type"], [204, 3, 1, "", "structure"], [204, 2, 1, "", "write_file"]], "pymatgen.io.lammps.data.Topology": [[204, 2, 1, "", "from_bonding"]], "pymatgen.io.lammps.generators": [[205, 1, 1, "", "BaseLammpsGenerator"], [205, 1, 1, "", "LammpsMinimization"]], "pymatgen.io.lammps.generators.BaseLammpsGenerator": [[205, 5, 1, "", "calc_type"], [205, 2, 1, "", "get_input_set"], [205, 5, 1, "", "keep_stages"], [205, 5, 1, "", "settings"], [205, 5, 1, "", "template"]], "pymatgen.io.lammps.generators.LammpsMinimization": [[205, 3, 1, "", "atom_style"], [205, 3, 1, "", "boundary"], [205, 3, 1, "", "dimension"], [205, 3, 1, "", "force_field"], [205, 3, 1, "", "read_data"], [205, 5, 1, "", "settings"], [205, 5, 1, "", "template"], [205, 3, 1, "", "units"]], "pymatgen.io.lammps.inputs": [[206, 1, 1, "", "LammpsInputFile"], [206, 1, 1, "", "LammpsRun"], [206, 1, 1, "", "LammpsTemplateGen"]], "pymatgen.io.lammps.inputs.LammpsInputFile": [[206, 2, 1, "", "add_commands"], [206, 2, 1, "", "add_stage"], [206, 2, 1, "", "append"], [206, 2, 1, "", "contains_command"], [206, 2, 1, "", "from_file"], [206, 2, 1, "", "from_string"], [206, 2, 1, "", "get_args"], [206, 2, 1, "", "get_string"], [206, 2, 1, "", "merge_stages"], [206, 3, 1, "", "ncomments"], [206, 3, 1, "", "nstages"], [206, 2, 1, "", "remove_command"], [206, 2, 1, "", "remove_stage"], [206, 2, 1, "", "rename_stage"], [206, 2, 1, "", "set_args"], [206, 3, 1, "", "stages_names"], [206, 2, 1, "", "write_file"]], "pymatgen.io.lammps.inputs.LammpsRun": [[206, 2, 1, "", "md"], [206, 5, 1, "", "template_dir"], [206, 2, 1, "", "write_inputs"]], "pymatgen.io.lammps.inputs.LammpsTemplateGen": [[206, 2, 1, "", "get_input_set"]], "pymatgen.io.lammps.outputs": [[207, 1, 1, "", "LammpsDump"], [207, 4, 1, "", "parse_lammps_dumps"], [207, 4, 1, "", "parse_lammps_log"]], "pymatgen.io.lammps.outputs.LammpsDump": [[207, 2, 1, "", "as_dict"], [207, 2, 1, "", "from_dict"], [207, 2, 1, "", "from_string"]], "pymatgen.io.lammps.sets": [[208, 1, 1, "", "LammpsInputSet"]], "pymatgen.io.lammps.sets.LammpsInputSet": [[208, 2, 1, "", "from_directory"], [208, 2, 1, "", "validate"]], "pymatgen.io.lammps.utils": [[209, 1, 1, "", "LammpsRunner"], [209, 1, 1, "", "Polymer"]], "pymatgen.io.lammps.utils.LammpsRunner": [[209, 2, 1, "", "run"]], "pymatgen.io.lmto": [[210, 1, 1, "", "LMTOCopl"], [210, 1, 1, "", "LMTOCtrl"]], "pymatgen.io.lmto.LMTOCtrl": [[210, 2, 1, "", "as_dict"], [210, 2, 1, "", "from_dict"], [210, 2, 1, "", "from_file"], [210, 2, 1, "", "from_string"], [210, 2, 1, "", "get_string"], [210, 2, 1, "", "write_file"]], "pymatgen.io.lobster": [[212, 0, 0, "-", "inputs"], [213, 0, 0, "-", "lobsterenv"], [214, 0, 0, "-", "outputs"]], "pymatgen.io.lobster.inputs": [[212, 1, 1, "", "Lobsterin"], [212, 4, 1, "", "get_all_possible_basis_combinations"]], "pymatgen.io.lobster.inputs.Lobsterin": [[212, 5, 1, "", "AVAILABLEKEYWORDS"], [212, 5, 1, "", "BOOLEAN_KEYWORDS"], [212, 5, 1, "", "FLOAT_KEYWORDS"], [212, 5, 1, "", "LISTKEYWORDS"], [212, 5, 1, "", "STRING_KEYWORDS"], [212, 2, 1, "", "as_dict"], [212, 2, 1, "", "diff"], [212, 2, 1, "", "from_dict"], [212, 2, 1, "", "from_file"], [212, 2, 1, "", "get_all_possible_basis_functions"], [212, 2, 1, "", "get_basis"], [212, 2, 1, "", "standard_calculations_from_vasp_files"], [212, 2, 1, "", "write_INCAR"], [212, 2, 1, "", "write_KPOINTS"], [212, 2, 1, "", "write_POSCAR_with_standard_primitive"], [212, 2, 1, "", "write_lobsterin"]], "pymatgen.io.lobster.lobsterenv": [[213, 1, 1, "", "ICOHPNeighborsInfo"], [213, 1, 1, "", "LobsterLightStructureEnvironments"], [213, 1, 1, "", "LobsterNeighbors"]], "pymatgen.io.lobster.lobsterenv.ICOHPNeighborsInfo": [[213, 5, 1, "", "atoms"], [213, 5, 1, "", "central_isites"], [213, 5, 1, "", "labels"], [213, 5, 1, "", "list_icohps"], [213, 5, 1, "", "n_bonds"], [213, 5, 1, "", "total_icohp"]], "pymatgen.io.lobster.lobsterenv.LobsterLightStructureEnvironments": [[213, 2, 1, "", "as_dict"], [213, 2, 1, "", "from_Lobster"], [213, 3, 1, "", "uniquely_determines_coordination_environments"]], "pymatgen.io.lobster.lobsterenv.LobsterNeighbors": [[213, 3, 1, "", "anion_types"], [213, 2, 1, "", "get_anion_types"], [213, 2, 1, "", "get_info_cohps_to_neighbors"], [213, 2, 1, "", "get_info_icohps_between_neighbors"], [213, 2, 1, "", "get_info_icohps_to_neighbors"], [213, 2, 1, "", "get_light_structure_environment"], [213, 2, 1, "", "get_nn_info"], [213, 3, 1, "", "molecules_allowed"], [213, 2, 1, "", "plot_cohps_of_neighbors"], [213, 3, 1, "", "structures_allowed"]], "pymatgen.io.lobster.outputs": [[214, 1, 1, "", "Bandoverlaps"], [214, 1, 1, "", "Charge"], [214, 1, 1, "", "Cohpcar"], [214, 1, 1, "", "Doscar"], [214, 1, 1, "", "Fatband"], [214, 1, 1, "", "Grosspop"], [214, 1, 1, "", "Icohplist"], [214, 1, 1, "", "Lobsterout"], [214, 1, 1, "", "MadelungEnergies"], [214, 1, 1, "", "SitePotential"], [214, 1, 1, "", "Wavefunction"], [214, 4, 1, "", "get_orb_from_str"]], "pymatgen.io.lobster.outputs.Bandoverlaps": [[214, 2, 1, "", "has_good_quality_check_occupied_bands"], [214, 2, 1, "", "has_good_quality_maxDeviation"]], "pymatgen.io.lobster.outputs.Charge": [[214, 2, 1, "", "get_structure_with_charges"]], "pymatgen.io.lobster.outputs.Doscar": [[214, 3, 1, "id2", "completedos"], [214, 3, 1, "id3", "energies"], [214, 3, 1, "id4", "is_spin_polarized"], [214, 3, 1, "", "itdensities"], [214, 3, 1, "id5", "pdos"], [214, 3, 1, "id6", "tdensities"], [214, 3, 1, "id7", "tdos"]], "pymatgen.io.lobster.outputs.Fatband": [[214, 2, 1, "", "get_bandstructure"]], "pymatgen.io.lobster.outputs.Grosspop": [[214, 2, 1, "", "get_structure_with_total_grosspop"]], "pymatgen.io.lobster.outputs.Icohplist": [[214, 3, 1, "", "icohpcollection"], [214, 3, 1, "", "icohplist"]], "pymatgen.io.lobster.outputs.Lobsterout": [[214, 2, 1, "", "get_doc"]], "pymatgen.io.lobster.outputs.SitePotential": [[214, 2, 1, "", "get_structure_with_site_potentials"]], "pymatgen.io.lobster.outputs.Wavefunction": [[214, 2, 1, "", "get_volumetricdata_density"], [214, 2, 1, "", "get_volumetricdata_imaginary"], [214, 2, 1, "", "get_volumetricdata_real"], [214, 2, 1, "", "set_volumetric_data"], [214, 2, 1, "", "write_file"]], "pymatgen.io.nwchem": [[215, 1, 1, "", "NwInput"], [215, 6, 1, "", "NwInputError"], [215, 1, 1, "", "NwOutput"], [215, 1, 1, "", "NwTask"]], "pymatgen.io.nwchem.NwInput": [[215, 2, 1, "", "as_dict"], [215, 2, 1, "", "from_dict"], [215, 2, 1, "", "from_file"], [215, 2, 1, "", "from_string"], [215, 3, 1, "", "molecule"], [215, 2, 1, "", "write_file"]], "pymatgen.io.nwchem.NwOutput": [[215, 2, 1, "", "get_excitation_spectrum"], [215, 2, 1, "", "parse_tddft"]], "pymatgen.io.nwchem.NwTask": [[215, 2, 1, "", "as_dict"], [215, 2, 1, "", "dft_task"], [215, 2, 1, "", "esp_task"], [215, 2, 1, "", "from_dict"], [215, 2, 1, "", "from_molecule"], [215, 5, 1, "", "operations"], [215, 5, 1, "", "theories"]], "pymatgen.io.packmol": [[216, 1, 1, "", "PackmolBoxGen"], [216, 1, 1, "", "PackmolSet"]], "pymatgen.io.packmol.PackmolBoxGen": [[216, 2, 1, "", "get_input_set"]], "pymatgen.io.packmol.PackmolSet": [[216, 2, 1, "", "from_directory"], [216, 2, 1, "", "run"]], "pymatgen.io.phonopy": [[217, 4, 1, "", "eigvec_to_eigdispl"], [217, 4, 1, "", "get_complete_ph_dos"], [217, 4, 1, "", "get_displaced_structures"], [217, 4, 1, "", "get_gruneisen_ph_bs_symm_line"], [217, 4, 1, "", "get_gruneisenparameter"], [217, 4, 1, "", "get_gs_ph_bs_symm_line_from_dict"], [217, 4, 1, "", "get_ph_bs_symm_line"], [217, 4, 1, "", "get_ph_bs_symm_line_from_dict"], [217, 4, 1, "", "get_ph_dos"], [217, 4, 1, "", "get_phonon_band_structure_from_fc"], [217, 4, 1, "", "get_phonon_band_structure_symm_line_from_fc"], [217, 4, 1, "", "get_phonon_dos_from_fc"], [217, 4, 1, "", "get_phonopy_structure"], [217, 4, 1, "", "get_pmg_structure"], [217, 4, 1, "", "get_structure_from_dict"], [217, 4, 1, "", "get_thermal_displacement_matrices"]], "pymatgen.io.prismatic": [[218, 1, 1, "", "Prismatic"]], "pymatgen.io.prismatic.Prismatic": [[218, 2, 1, "", "to_string"]], "pymatgen.io.pwscf": [[219, 1, 1, "", "PWInput"], [219, 6, 1, "", "PWInputError"], [219, 1, 1, "", "PWOutput"]], "pymatgen.io.pwscf.PWInput": [[219, 2, 1, "", "as_dict"], [219, 2, 1, "", "from_dict"], [219, 2, 1, "", "from_file"], [219, 2, 1, "", "from_string"], [219, 2, 1, "", "proc_val"], [219, 2, 1, "", "write_file"]], "pymatgen.io.pwscf.PWOutput": [[219, 3, 1, "", "final_energy"], [219, 2, 1, "", "get_celldm"], [219, 3, 1, "", "lattice_type"], [219, 5, 1, "", "patterns"], [219, 2, 1, "", "read_pattern"]], "pymatgen.io.qchem": [[221, 0, 0, "-", "inputs"], [222, 0, 0, "-", "outputs"], [223, 0, 0, "-", "sets"], [224, 0, 0, "-", "utils"]], "pymatgen.io.qchem.inputs": [[221, 1, 1, "", "QCInput"]], "pymatgen.io.qchem.inputs.QCInput": [[221, 2, 1, "", "almo_template"], [221, 2, 1, "", "cdft_template"], [221, 2, 1, "", "find_sections"], [221, 2, 1, "", "from_file"], [221, 2, 1, "", "from_multi_jobs_file"], [221, 2, 1, "", "from_string"], [221, 2, 1, "", "geom_opt_template"], [221, 2, 1, "", "get_string"], [221, 2, 1, "", "molecule_template"], [221, 2, 1, "", "multi_job_string"], [221, 2, 1, "", "nbo_template"], [221, 2, 1, "", "opt_template"], [221, 2, 1, "", "pcm_nonels_template"], [221, 2, 1, "", "pcm_template"], [221, 2, 1, "", "plots_template"], [221, 2, 1, "", "read_almo"], [221, 2, 1, "", "read_cdft"], [221, 2, 1, "", "read_geom_opt"], [221, 2, 1, "", "read_molecule"], [221, 2, 1, "", "read_nbo"], [221, 2, 1, "", "read_opt"], [221, 2, 1, "", "read_pcm"], [221, 2, 1, "", "read_pcm_nonels"], [221, 2, 1, "", "read_plots"], [221, 2, 1, "", "read_rem"], [221, 2, 1, "", "read_scan"], [221, 2, 1, "", "read_smx"], [221, 2, 1, "", "read_solvent"], [221, 2, 1, "", "read_svp"], [221, 2, 1, "", "read_vdw"], [221, 2, 1, "", "rem_template"], [221, 2, 1, "", "scan_template"], [221, 2, 1, "", "smx_template"], [221, 2, 1, "", "solvent_template"], [221, 2, 1, "", "svp_template"], [221, 2, 1, "", "van_der_waals_template"], [221, 2, 1, "", "write_multi_job_file"]], "pymatgen.io.qchem.outputs": [[222, 1, 1, "", "QCOutput"], [222, 4, 1, "", "check_for_structure_changes"], [222, 4, 1, "", "get_percentage"], [222, 4, 1, "", "jump_to_header"], [222, 4, 1, "", "nbo_parser"], [222, 4, 1, "", "parse_hybridization_character"], [222, 4, 1, "", "parse_hyperbonds"], [222, 4, 1, "", "parse_natural_populations"], [222, 4, 1, "", "parse_perturbation_energy"], [222, 4, 1, "", "z_int"]], "pymatgen.io.qchem.outputs.QCOutput": [[222, 2, 1, "", "as_dict"], [222, 2, 1, "", "multiple_outputs_from_file"]], "pymatgen.io.qchem.sets": [[223, 1, 1, "", "ForceSet"], [223, 1, 1, "", "FreqSet"], [223, 1, 1, "", "OptSet"], [223, 1, 1, "", "PESScanSet"], [223, 1, 1, "", "QChemDictSet"], [223, 1, 1, "", "SinglePointSet"], [223, 1, 1, "", "TransitionStateSet"]], "pymatgen.io.qchem.sets.QChemDictSet": [[223, 2, 1, "", "write"]], "pymatgen.io.qchem.utils": [[224, 4, 1, "", "lower_and_check_unique"], [224, 4, 1, "", "process_parsed_HESS"], [224, 4, 1, "", "process_parsed_coords"], [224, 4, 1, "", "process_parsed_fock_matrix"], [224, 4, 1, "", "read_matrix_pattern"], [224, 4, 1, "", "read_pattern"], [224, 4, 1, "", "read_table_pattern"]], "pymatgen.io.res": [[225, 1, 1, "", "AirssProvider"], [225, 6, 1, "", "ParseError"], [225, 6, 1, "", "ResError"], [225, 1, 1, "", "ResIO"], [225, 1, 1, "", "ResProvider"], [225, 1, 1, "", "ResWriter"]], "pymatgen.io.res.AirssProvider": [[225, 3, 1, "", "appearances"], [225, 2, 1, "", "as_dict"], [225, 3, 1, "", "energy"], [225, 3, 1, "", "entry"], [225, 2, 1, "", "from_file"], [225, 2, 1, "", "from_str"], [225, 2, 1, "", "get_airss_version"], [225, 2, 1, "", "get_castep_version"], [225, 2, 1, "", "get_cut_grid_gmax_fsbc"], [225, 2, 1, "", "get_func_rel_disp"], [225, 2, 1, "", "get_mpgrid_offset_nkpts_spacing"], [225, 2, 1, "", "get_pspots"], [225, 2, 1, "", "get_run_start_info"], [225, 3, 1, "", "integrated_absolute_spin_density"], [225, 3, 1, "", "integrated_spin_density"], [225, 3, 1, "", "pressure"], [225, 3, 1, "", "seed"], [225, 3, 1, "", "spacegroup_label"], [225, 3, 1, "", "volume"]], "pymatgen.io.res.ResIO": [[225, 2, 1, "", "entry_from_file"], [225, 2, 1, "", "entry_from_str"], [225, 2, 1, "", "entry_to_file"], [225, 2, 1, "", "entry_to_str"], [225, 2, 1, "", "structure_from_file"], [225, 2, 1, "", "structure_from_str"], [225, 2, 1, "", "structure_to_file"], [225, 2, 1, "", "structure_to_str"]], "pymatgen.io.res.ResProvider": [[225, 2, 1, "", "from_file"], [225, 2, 1, "", "from_str"], [225, 3, 1, "", "lattice"], [225, 3, 1, "", "rems"], [225, 3, 1, "", "sites"], [225, 3, 1, "", "structure"]], "pymatgen.io.res.ResWriter": [[225, 3, 1, "", "string"], [225, 2, 1, "", "write"]], "pymatgen.io.shengbte": [[226, 1, 1, "", "Control"]], "pymatgen.io.shengbte.Control": [[226, 5, 1, "", "allocations_keys"], [226, 2, 1, "", "as_dict"], [226, 5, 1, "", "crystal_keys"], [226, 5, 1, "", "data_keys"], [226, 5, 1, "", "flags_keys"], [226, 2, 1, "", "from_dict"], [226, 2, 1, "", "from_file"], [226, 2, 1, "", "from_structure"], [226, 2, 1, "", "get_structure"], [226, 5, 1, "", "params_keys"], [226, 5, 1, "", "required_params"], [226, 2, 1, "", "to_file"]], "pymatgen.io.template": [[227, 1, 1, "", "TemplateInputGen"]], "pymatgen.io.template.TemplateInputGen": [[227, 2, 1, "", "get_input_set"]], "pymatgen.io.vasp": [[229, 0, 0, "-", "help"], [230, 0, 0, "-", "inputs"], [231, 0, 0, "-", "optics"], [232, 0, 0, "-", "outputs"], [233, 0, 0, "-", "sets"]], "pymatgen.io.vasp.help": [[229, 1, 1, "", "VaspDoc"]], "pymatgen.io.vasp.help.VaspDoc": [[229, 2, 1, "", "get_help"], [229, 2, 1, "", "get_incar_tags"], [229, 2, 1, "", "print_help"], [229, 2, 1, "", "print_jupyter_help"]], "pymatgen.io.vasp.inputs": [[230, 6, 1, "", "BadIncarWarning"], [230, 1, 1, "", "Incar"], [230, 1, 1, "", "Kpoints"], [230, 1, 1, "", "Kpoints_supported_modes"], [230, 1, 1, "", "Orbital"], [230, 1, 1, "", "OrbitalDescription"], [230, 1, 1, "", "Poscar"], [230, 1, 1, "", "Potcar"], [230, 1, 1, "", "PotcarSingle"], [230, 6, 1, "", "UnknownPotcarWarning"], [230, 1, 1, "", "VaspInput"]], "pymatgen.io.vasp.inputs.Incar": [[230, 2, 1, "", "as_dict"], [230, 2, 1, "", "check_params"], [230, 2, 1, "", "diff"], [230, 2, 1, "", "from_dict"], [230, 2, 1, "", "from_file"], [230, 2, 1, "", "from_string"], [230, 2, 1, "", "get_string"], [230, 2, 1, "", "proc_val"], [230, 2, 1, "", "write_file"]], "pymatgen.io.vasp.inputs.Kpoints": [[230, 2, 1, "", "as_dict"], [230, 2, 1, "", "automatic"], [230, 2, 1, "", "automatic_density"], [230, 2, 1, "", "automatic_density_by_lengths"], [230, 2, 1, "", "automatic_density_by_vol"], [230, 2, 1, "", "automatic_gamma_density"], [230, 2, 1, "", "automatic_linemode"], [230, 2, 1, "", "from_dict"], [230, 2, 1, "", "from_file"], [230, 2, 1, "", "from_string"], [230, 2, 1, "", "gamma_automatic"], [230, 2, 1, "", "monkhorst_automatic"], [230, 3, 1, "", "style"], [230, 5, 1, "", "supported_modes"], [230, 2, 1, "", "write_file"]], "pymatgen.io.vasp.inputs.Kpoints_supported_modes": [[230, 5, 1, "", "Automatic"], [230, 5, 1, "", "Cartesian"], [230, 5, 1, "", "Gamma"], [230, 5, 1, "", "Line_mode"], [230, 5, 1, "", "Monkhorst"], [230, 5, 1, "", "Reciprocal"], [230, 2, 1, "", "from_string"]], "pymatgen.io.vasp.inputs.Orbital": [[230, 5, 1, "", "E"], [230, 5, 1, "", "j"], [230, 5, 1, "", "l"], [230, 5, 1, "", "n"], [230, 5, 1, "", "occ"]], "pymatgen.io.vasp.inputs.OrbitalDescription": [[230, 5, 1, "", "E"], [230, 5, 1, "", "Rcut"], [230, 5, 1, "", "Rcut2"], [230, 5, 1, "", "Type"], [230, 5, 1, "", "Type2"], [230, 5, 1, "", "l"]], "pymatgen.io.vasp.inputs.Poscar": [[230, 2, 1, "", "as_dict"], [230, 5, 1, "", "comment"], [230, 2, 1, "", "from_dict"], [230, 2, 1, "", "from_file"], [230, 2, 1, "", "from_string"], [230, 2, 1, "", "get_string"], [230, 3, 1, "", "natoms"], [230, 3, 1, "id0", "predictor_corrector"], [230, 5, 1, "", "predictor_corrector_preamble"], [230, 3, 1, "id1", "selective_dynamics"], [230, 2, 1, "", "set_temperature"], [230, 3, 1, "", "site_symbols"], [230, 5, 1, "", "structure"], [230, 5, 1, "", "temperature"], [230, 5, 1, "", "true_names"], [230, 3, 1, "id2", "velocities"], [230, 2, 1, "", "write_file"]], "pymatgen.io.vasp.inputs.Potcar": [[230, 5, 1, "", "FUNCTIONAL_CHOICES"], [230, 2, 1, "", "as_dict"], [230, 2, 1, "", "from_dict"], [230, 2, 1, "", "from_file"], [230, 2, 1, "", "set_symbols"], [230, 3, 1, "", "spec"], [230, 3, 1, "", "symbols"], [230, 2, 1, "", "write_file"]], "pymatgen.io.vasp.inputs.PotcarSingle": [[230, 3, 1, "", "atomic_no"], [230, 5, 1, "", "data"], [230, 3, 1, "", "electron_configuration"], [230, 3, 1, "", "element"], [230, 2, 1, "", "from_file"], [230, 2, 1, "", "from_symbol_and_functional"], [230, 3, 1, "", "functional"], [230, 3, 1, "", "functional_class"], [230, 5, 1, "", "functional_dir"], [230, 5, 1, "", "functional_tags"], [230, 2, 1, "", "get_potcar_file_hash"], [230, 2, 1, "", "get_potcar_hash"], [230, 2, 1, "", "get_sha256_file_hash"], [230, 2, 1, "", "identify_potcar"], [230, 5, 1, "", "keywords"], [230, 3, 1, "", "nelectrons"], [230, 5, 1, "", "parse_functions"], [230, 3, 1, "", "potential_type"], [230, 3, 1, "", "symbol"], [230, 2, 1, "", "verify_potcar"], [230, 2, 1, "", "write_file"]], "pymatgen.io.vasp.inputs.VaspInput": [[230, 2, 1, "", "as_dict"], [230, 2, 1, "", "from_dict"], [230, 2, 1, "", "from_directory"], [230, 2, 1, "", "run_vasp"], [230, 2, 1, "", "write_input"]], "pymatgen.io.vasp.optics": [[231, 1, 1, "", "DielectricFunctionCalculator"], [231, 4, 1, "", "delta_func"], [231, 4, 1, "", "delta_methfessel_paxton"], [231, 4, 1, "", "epsilon_imag"], [231, 4, 1, "", "get_delta"], [231, 4, 1, "", "get_step"], [231, 4, 1, "", "kramers_kronig"], [231, 4, 1, "", "step_func"], [231, 4, 1, "", "step_methfessel_paxton"]], "pymatgen.io.vasp.optics.DielectricFunctionCalculator": [[231, 3, 1, "", "cder"], [231, 5, 1, "", "cder_imag"], [231, 5, 1, "", "cder_real"], [231, 5, 1, "", "cshift"], [231, 5, 1, "", "deltae"], [231, 5, 1, "", "efermi"], [231, 5, 1, "", "eigs"], [231, 2, 1, "", "from_directory"], [231, 2, 1, "", "from_vasp_objects"], [231, 2, 1, "", "get_epsilon"], [231, 5, 1, "", "ismear"], [231, 5, 1, "", "ispin"], [231, 5, 1, "", "kweights"], [231, 5, 1, "", "nedos"], [231, 2, 1, "", "plot_weighted_transition_data"], [231, 5, 1, "", "sigma"], [231, 5, 1, "", "volume"]], "pymatgen.io.vasp.outputs": [[232, 1, 1, "", "BSVasprun"], [232, 1, 1, "", "Chgcar"], [232, 1, 1, "", "Dynmat"], [232, 1, 1, "", "Eigenval"], [232, 1, 1, "", "Elfcar"], [232, 1, 1, "", "Locpot"], [232, 1, 1, "", "Oszicar"], [232, 1, 1, "", "Outcar"], [232, 1, 1, "", "Procar"], [232, 6, 1, "", "UnconvergedVASPWarning"], [232, 6, 1, "", "VaspParserError"], [232, 1, 1, "", "Vasprun"], [232, 1, 1, "", "VolumetricData"], [232, 1, 1, "", "WSWQ"], [232, 1, 1, "", "Wavecar"], [232, 1, 1, "", "Waveder"], [232, 1, 1, "", "Xdatcar"], [232, 4, 1, "", "get_adjusted_fermi_level"], [232, 4, 1, "", "get_band_structure_from_vasp_multiple_branches"]], "pymatgen.io.vasp.outputs.BSVasprun": [[232, 2, 1, "", "as_dict"]], "pymatgen.io.vasp.outputs.Chgcar": [[232, 2, 1, "", "from_file"], [232, 3, 1, "", "net_magnetization"]], "pymatgen.io.vasp.outputs.Dynmat": [[232, 5, 1, "", "data"], [232, 2, 1, "", "get_phonon_frequencies"], [232, 3, 1, "", "masses"], [232, 3, 1, "", "natoms"], [232, 3, 1, "", "ndisps"], [232, 3, 1, "", "nspecs"]], "pymatgen.io.vasp.outputs.Eigenval": [[232, 3, 1, "", "eigenvalue_band_properties"], [232, 5, 1, "", "eigenvalues"], [232, 5, 1, "", "filename"], [232, 5, 1, "", "ispin"], [232, 5, 1, "", "kpoints"], [232, 5, 1, "", "kpoints_weights"], [232, 5, 1, "", "nbands"], [232, 5, 1, "", "nelect"], [232, 5, 1, "", "nkpt"], [232, 5, 1, "", "occu_tol"]], "pymatgen.io.vasp.outputs.Elfcar": [[232, 2, 1, "", "from_file"], [232, 2, 1, "", "get_alpha"]], "pymatgen.io.vasp.outputs.Locpot": [[232, 2, 1, "", "from_file"]], "pymatgen.io.vasp.outputs.Oszicar": [[232, 3, 1, "", "all_energies"], [232, 2, 1, "", "as_dict"], [232, 5, 1, "", "electronic_steps"], [232, 3, 1, "", "final_energy"]], "pymatgen.io.vasp.outputs.Outcar": [[232, 2, 1, "", "as_dict"], [232, 5, 1, "", "charge"], [232, 5, 1, "", "chemical_shielding"], [232, 5, 1, "", "cs_core_contribution"], [232, 5, 1, "", "cs_g0_contribution"], [232, 5, 1, "", "drift"], [232, 5, 1, "", "efermi"], [232, 5, 1, "", "efg"], [232, 5, 1, "", "elastic_tensor"], [232, 5, 1, "", "filename"], [232, 5, 1, "", "final_energy"], [232, 5, 1, "", "final_energy_wo_entrp"], [232, 5, 1, "", "final_fr_energy"], [232, 5, 1, "", "has_onsite_density_matrices"], [232, 5, 1, "", "is_stopped"], [232, 5, 1, "", "lcalcpol"], [232, 5, 1, "", "lepsilon"], [232, 5, 1, "", "magnetization"], [232, 5, 1, "", "nelect"], [232, 5, 1, "", "ngf"], [232, 2, 1, "", "read_avg_core_poten"], [232, 2, 1, "", "read_chemical_shielding"], [232, 2, 1, "", "read_core_state_eigen"], [232, 2, 1, "", "read_corrections"], [232, 2, 1, "", "read_cs_core_contribution"], [232, 2, 1, "", "read_cs_g0_contribution"], [232, 2, 1, "", "read_cs_raw_symmetrized_tensors"], [232, 2, 1, "", "read_elastic_tensor"], [232, 2, 1, "", "read_electrostatic_potential"], [232, 2, 1, "", "read_fermi_contact_shift"], [232, 2, 1, "", "read_freq_dielectric"], [232, 2, 1, "", "read_igpar"], [232, 2, 1, "", "read_internal_strain_tensor"], [232, 2, 1, "", "read_lcalcpol"], [232, 2, 1, "", "read_lepsilon"], [232, 2, 1, "", "read_lepsilon_ionic"], [232, 2, 1, "", "read_neb"], [232, 2, 1, "", "read_nmr_efg"], [232, 2, 1, "", "read_nmr_efg_tensor"], [232, 2, 1, "", "read_onsite_density_matrices"], [232, 2, 1, "", "read_pattern"], [232, 2, 1, "", "read_piezo_tensor"], [232, 2, 1, "", "read_pseudo_zval"], [232, 2, 1, "", "read_table_pattern"], [232, 5, 1, "", "run_stats"], [232, 5, 1, "", "spin"], [232, 5, 1, "", "total_mag"], [232, 5, 1, "", "unsym_cs_tensor"]], "pymatgen.io.vasp.outputs.Procar": [[232, 5, 1, "", "data"], [232, 2, 1, "", "get_occupation"], [232, 2, 1, "", "get_projection_on_elements"], [232, 5, 1, "", "weights"]], "pymatgen.io.vasp.outputs.Vasprun": [[232, 5, 1, "", "actual_kpoints"], [232, 5, 1, "", "actual_kpoints_weights"], [232, 2, 1, "", "as_dict"], [232, 5, 1, "", "atomic_symbols"], [232, 2, 1, "", "calculate_efermi"], [232, 3, 1, "", "complete_dos"], [232, 3, 1, "", "complete_dos_normalized"], [232, 3, 1, "", "converged"], [232, 3, 1, "", "converged_electronic"], [232, 3, 1, "", "converged_ionic"], [232, 3, 1, "", "dielectric"], [232, 5, 1, "", "efermi"], [232, 3, 1, "", "eigenvalue_band_properties"], [232, 5, 1, "", "eigenvalues"], [232, 3, 1, "", "epsilon_ionic"], [232, 3, 1, "", "epsilon_static"], [232, 3, 1, "", "epsilon_static_wolfe"], [232, 3, 1, "", "final_energy"], [232, 5, 1, "", "force_constants"], [232, 2, 1, "", "get_band_structure"], [232, 2, 1, "", "get_computed_entry"], [232, 2, 1, "", "get_potcars"], [232, 2, 1, "", "get_trajectory"], [232, 3, 1, "", "hubbards"], [232, 5, 1, "", "idos"], [232, 5, 1, "", "incar"], [232, 5, 1, "", "ionic_steps"], [232, 3, 1, "", "is_hubbard"], [232, 3, 1, "", "is_spin"], [232, 5, 1, "", "kpoints"], [232, 5, 1, "", "md_data"], [232, 5, 1, "", "nionic_steps"], [232, 5, 1, "", "normalmode_eigenvals"], [232, 5, 1, "", "normalmode_eigenvecs"], [232, 3, 1, "", "optical_absorption_coeff"], [232, 5, 1, "", "other_dielectric"], [232, 5, 1, "", "parameters"], [232, 5, 1, "", "pdos"], [232, 5, 1, "", "potcar_symbols"], [232, 5, 1, "", "projected_eigenvalues"], [232, 5, 1, "", "projected_magnetisation"], [232, 3, 1, "", "run_type"], [232, 3, 1, "", "structures"], [232, 5, 1, "", "tdos"], [232, 2, 1, "", "update_charge_from_potcar"], [232, 2, 1, "", "update_potcar_spec"]], "pymatgen.io.vasp.outputs.VolumetricData": [[232, 2, 1, "", "parse_file"], [232, 2, 1, "", "write_file"]], "pymatgen.io.vasp.outputs.WSWQ": [[232, 3, 1, "", "data"], [232, 2, 1, "", "from_file"], [232, 5, 1, "id0", "me_imag"], [232, 5, 1, "id1", "me_real"], [232, 5, 1, "id2", "nbands"], [232, 5, 1, "id3", "nkpoints"], [232, 5, 1, "id4", "nspin"]], "pymatgen.io.vasp.outputs.Wavecar": [[232, 5, 1, "", "Gpoints"], [232, 5, 1, "", "a"], [232, 5, 1, "", "b"], [232, 5, 1, "", "band_energy"], [232, 5, 1, "", "coeffs"], [232, 5, 1, "", "efermi"], [232, 5, 1, "", "encut"], [232, 2, 1, "", "evaluate_wavefunc"], [232, 2, 1, "", "fft_mesh"], [232, 5, 1, "", "filename"], [232, 2, 1, "", "get_parchg"], [232, 5, 1, "", "kpoints"], [232, 5, 1, "", "nb"], [232, 5, 1, "", "nk"], [232, 5, 1, "", "vasp_type"], [232, 5, 1, "", "vol"], [232, 2, 1, "", "write_unks"]], "pymatgen.io.vasp.outputs.Waveder": [[232, 3, 1, "", "cder"], [232, 5, 1, "id5", "cder_imag"], [232, 5, 1, "id6", "cder_real"], [232, 2, 1, "", "from_binary"], [232, 2, 1, "", "from_formatted"], [232, 2, 1, "", "get_orbital_derivative_between_states"], [232, 3, 1, "", "nbands"], [232, 3, 1, "", "nkpoints"], [232, 3, 1, "", "nspin"]], "pymatgen.io.vasp.outputs.Xdatcar": [[232, 5, 1, "", "comment"], [232, 2, 1, "", "concatenate"], [232, 2, 1, "", "get_string"], [232, 3, 1, "", "natoms"], [232, 3, 1, "", "site_symbols"], [232, 5, 1, "", "structures"], [232, 2, 1, "", "write_file"]], "pymatgen.io.vasp.sets": [[233, 6, 1, "", "BadInputSetWarning"], [233, 1, 1, "", "DictSet"], [233, 1, 1, "", "LobsterSet"], [233, 1, 1, "", "MITMDSet"], [233, 1, 1, "", "MITNEBSet"], [233, 1, 1, "", "MITRelaxSet"], [233, 1, 1, "", "MPAbsorptionSet"], [233, 1, 1, "", "MPHSEBSSet"], [233, 1, 1, "", "MPHSERelaxSet"], [233, 1, 1, "", "MPMDSet"], [233, 1, 1, "", "MPMetalRelaxSet"], [233, 1, 1, "", "MPNMRSet"], [233, 1, 1, "", "MPNonSCFSet"], [233, 1, 1, "", "MPRelaxSet"], [233, 1, 1, "", "MPSOCSet"], [233, 1, 1, "", "MPScanRelaxSet"], [233, 1, 1, "", "MPScanStaticSet"], [233, 1, 1, "", "MPStaticSet"], [233, 1, 1, "", "MVLElasticSet"], [233, 1, 1, "", "MVLGBSet"], [233, 1, 1, "", "MVLGWSet"], [233, 1, 1, "", "MVLNPTMDSet"], [233, 1, 1, "", "MVLRelax52Set"], [233, 1, 1, "", "MVLScanRelaxSet"], [233, 1, 1, "", "MVLSlabSet"], [233, 1, 1, "", "VaspInputSet"], [233, 4, 1, "", "batch_write_input"], [233, 4, 1, "", "get_structure_from_prev_run"], [233, 4, 1, "", "get_valid_magmom_struct"], [233, 4, 1, "", "get_vasprun_outcar"], [233, 4, 1, "", "next_num_with_prime_factors"], [233, 4, 1, "", "primes_less_than"], [233, 4, 1, "", "standardize_structure"]], "pymatgen.io.vasp.sets.DictSet": [[233, 2, 1, "", "calculate_ng"], [233, 2, 1, "", "estimate_nbands"], [233, 3, 1, "", "incar"], [233, 3, 1, "", "kpoints"], [233, 3, 1, "", "nelect"], [233, 3, 1, "", "poscar"], [233, 3, 1, "", "potcar_functional"], [233, 3, 1, "", "structure"], [233, 2, 1, "", "write_input"]], "pymatgen.io.vasp.sets.LobsterSet": [[233, 5, 1, "", "CONFIG"]], "pymatgen.io.vasp.sets.MITMDSet": [[233, 3, 1, "", "kpoints"]], "pymatgen.io.vasp.sets.MITNEBSet": [[233, 3, 1, "", "poscar"], [233, 3, 1, "", "poscars"], [233, 2, 1, "", "write_input"]], "pymatgen.io.vasp.sets.MITRelaxSet": [[233, 5, 1, "", "CONFIG"]], "pymatgen.io.vasp.sets.MPAbsorptionSet": [[233, 5, 1, "", "SUPPORTED_MODES"], [233, 2, 1, "", "from_prev_calc"], [233, 3, 1, "", "incar"], [233, 3, 1, "", "kpoints"], [233, 2, 1, "", "override_from_prev_calc"]], "pymatgen.io.vasp.sets.MPHSEBSSet": [[233, 2, 1, "", "from_prev_calc"], [233, 3, 1, "", "kpoints"], [233, 2, 1, "", "override_from_prev_calc"]], "pymatgen.io.vasp.sets.MPHSERelaxSet": [[233, 5, 1, "", "CONFIG"]], "pymatgen.io.vasp.sets.MPMDSet": [[233, 3, 1, "", "kpoints"]], "pymatgen.io.vasp.sets.MPMetalRelaxSet": [[233, 5, 1, "", "CONFIG"]], "pymatgen.io.vasp.sets.MPNMRSet": [[233, 3, 1, "", "incar"]], "pymatgen.io.vasp.sets.MPNonSCFSet": [[233, 2, 1, "", "from_prev_calc"], [233, 3, 1, "", "incar"], [233, 3, 1, "", "kpoints"], [233, 2, 1, "", "override_from_prev_calc"]], "pymatgen.io.vasp.sets.MPRelaxSet": [[233, 5, 1, "", "CONFIG"]], "pymatgen.io.vasp.sets.MPSOCSet": [[233, 2, 1, "", "from_prev_calc"], [233, 3, 1, "", "incar"], [233, 2, 1, "", "override_from_prev_calc"], [233, 5, 1, "", "user_potcar_functional"]], "pymatgen.io.vasp.sets.MPScanRelaxSet": [[233, 5, 1, "", "CONFIG"]], "pymatgen.io.vasp.sets.MPScanStaticSet": [[233, 2, 1, "", "from_prev_calc"], [233, 3, 1, "", "incar"], [233, 2, 1, "", "override_from_prev_calc"], [233, 5, 1, "", "user_potcar_functional"]], "pymatgen.io.vasp.sets.MPStaticSet": [[233, 2, 1, "", "from_prev_calc"], [233, 3, 1, "", "incar"], [233, 3, 1, "", "kpoints"], [233, 2, 1, "", "override_from_prev_calc"], [233, 5, 1, "", "user_potcar_functional"]], "pymatgen.io.vasp.sets.MVLElasticSet": [[233, 5, 1, "", "user_potcar_functional"]], "pymatgen.io.vasp.sets.MVLGBSet": [[233, 3, 1, "", "incar"], [233, 3, 1, "", "kpoints"], [233, 5, 1, "", "user_potcar_functional"]], "pymatgen.io.vasp.sets.MVLGWSet": [[233, 5, 1, "", "CONFIG"], [233, 5, 1, "", "SUPPORTED_MODES"], [233, 2, 1, "", "from_prev_calc"], [233, 3, 1, "", "incar"], [233, 3, 1, "", "kpoints"], [233, 2, 1, "", "override_from_prev_calc"]], "pymatgen.io.vasp.sets.MVLNPTMDSet": [[233, 5, 1, "", "user_potcar_functional"]], "pymatgen.io.vasp.sets.MVLRelax52Set": [[233, 5, 1, "", "CONFIG"]], "pymatgen.io.vasp.sets.MVLScanRelaxSet": [[233, 5, 1, "", "user_potcar_functional"]], "pymatgen.io.vasp.sets.MVLSlabSet": [[233, 2, 1, "", "as_dict"], [233, 3, 1, "", "kpoints"], [233, 5, 1, "", "user_potcar_functional"]], "pymatgen.io.vasp.sets.VaspInputSet": [[233, 2, 1, "", "as_dict"], [233, 2, 1, "", "get_vasp_input"], [233, 3, 1, "", "incar"], [233, 3, 1, "", "kpoints"], [233, 3, 1, "", "poscar"], [233, 3, 1, "", "potcar"], [233, 3, 1, "", "potcar_symbols"], [233, 2, 1, "", "write_input"]], "pymatgen.io.wannier90": [[234, 1, 1, "", "Unk"]], "pymatgen.io.wannier90.Unk": [[234, 3, 1, "id0", "data"], [234, 2, 1, "", "from_file"], [234, 5, 1, "id1", "ik"], [234, 5, 1, "id2", "is_noncollinear"], [234, 5, 1, "id3", "nbnd"], [234, 5, 1, "id4", "ng"], [234, 2, 1, "", "write_file"]], "pymatgen.io.xcrysden": [[235, 1, 1, "", "XSF"]], "pymatgen.io.xcrysden.XSF": [[235, 2, 1, "", "from_string"], [235, 2, 1, "", "to_string"]], "pymatgen.io.xr": [[236, 1, 1, "", "Xr"]], "pymatgen.io.xr.Xr": [[236, 2, 1, "", "from_file"], [236, 2, 1, "", "from_string"], [236, 2, 1, "", "write_file"]], "pymatgen.io.xtb": [[238, 0, 0, "-", "inputs"], [239, 0, 0, "-", "outputs"]], "pymatgen.io.xtb.inputs": [[238, 1, 1, "", "CRESTInput"]], "pymatgen.io.xtb.inputs.CRESTInput": [[238, 2, 1, "", "constrains_template"], [238, 2, 1, "", "write_input_files"]], "pymatgen.io.xtb.outputs": [[239, 1, 1, "", "CRESTOutput"]], "pymatgen.io.xyz": [[240, 1, 1, "", "XYZ"]], "pymatgen.io.xyz.XYZ": [[240, 3, 1, "", "all_molecules"], [240, 2, 1, "", "as_dataframe"], [240, 2, 1, "", "from_file"], [240, 2, 1, "", "from_string"], [240, 3, 1, "", "molecule"], [240, 2, 1, "", "write_file"]], "pymatgen.io.zeopp": [[241, 1, 1, "", "ZeoCssr"], [241, 1, 1, "", "ZeoVoronoiXYZ"], [241, 4, 1, "", "get_free_sphere_params"], [241, 4, 1, "", "get_high_accuracy_voronoi_nodes"], [241, 4, 1, "", "get_voronoi_nodes"]], "pymatgen.io.zeopp.ZeoCssr": [[241, 2, 1, "", "from_file"], [241, 2, 1, "", "from_string"]], "pymatgen.io.zeopp.ZeoVoronoiXYZ": [[241, 2, 1, "", "from_file"], [241, 2, 1, "", "from_string"]], "pymatgen.optimization": [[243, 0, 0, "-", "linear_assignment"], [244, 0, 0, "-", "linear_assignment_numpy"], [245, 0, 0, "-", "neighbors"]], "pymatgen.optimization.linear_assignment": [[243, 1, 1, "", "LinearAssignment"]], "pymatgen.optimization.linear_assignment_numpy": [[244, 1, 1, "", "LinearAssignment"]], "pymatgen.optimization.linear_assignment_numpy.LinearAssignment": [[244, 3, 1, "", "min_cost"]], "pymatgen.optimization.neighbors": [[245, 4, 1, "", "find_points_in_spheres"]], "pymatgen.phonon": [[247, 0, 0, "-", "bandstructure"], [248, 0, 0, "-", "dos"], [249, 0, 0, "-", "gruneisen"], [250, 0, 0, "-", "ir_spectra"], [251, 0, 0, "-", "plotter"], [252, 0, 0, "-", "thermal_displacements"]], "pymatgen.phonon.bandstructure": [[247, 1, 1, "", "PhononBandStructure"], [247, 1, 1, "", "PhononBandStructureSymmLine"], [247, 4, 1, "", "eigenvectors_from_displacements"], [247, 4, 1, "", "estimate_band_connection"], [247, 4, 1, "", "get_reasonable_repetitions"]], "pymatgen.phonon.bandstructure.PhononBandStructure": [[247, 2, 1, "", "as_dict"], [247, 2, 1, "", "asr_breaking"], [247, 2, 1, "", "from_dict"], [247, 2, 1, "", "get_nac_eigendisplacements_along_dir"], [247, 2, 1, "", "get_nac_frequencies_along_dir"], [247, 3, 1, "", "has_eigendisplacements"], [247, 2, 1, "", "has_imaginary_freq"], [247, 3, 1, "", "has_nac"], [247, 2, 1, "", "min_freq"]], "pymatgen.phonon.bandstructure.PhononBandStructureSymmLine": [[247, 2, 1, "", "as_dict"], [247, 2, 1, "", "as_phononwebsite"], [247, 2, 1, "", "band_reorder"], [247, 2, 1, "", "from_dict"], [247, 2, 1, "", "get_branch"], [247, 2, 1, "", "get_equivalent_qpoints"], [247, 2, 1, "", "write_phononwebsite"]], "pymatgen.phonon.dos": [[248, 1, 1, "", "CompletePhononDos"], [248, 1, 1, "", "PhononDos"], [248, 4, 1, "", "coth"]], "pymatgen.phonon.dos.CompletePhononDos": [[248, 2, 1, "", "as_dict"], [248, 2, 1, "", "from_dict"], [248, 2, 1, "", "get_element_dos"], [248, 2, 1, "", "get_site_dos"], [248, 5, 1, "", "pdos"]], "pymatgen.phonon.dos.PhononDos": [[248, 2, 1, "", "as_dict"], [248, 2, 1, "", "cv"], [248, 2, 1, "", "entropy"], [248, 2, 1, "", "from_dict"], [248, 2, 1, "", "get_interpolated_value"], [248, 2, 1, "", "get_smeared_densities"], [248, 2, 1, "", "helmholtz_free_energy"], [248, 2, 1, "", "ind_zero_freq"], [248, 2, 1, "", "internal_energy"], [248, 2, 1, "", "zero_point_energy"]], "pymatgen.phonon.gruneisen": [[249, 1, 1, "", "GruneisenParameter"], [249, 1, 1, "", "GruneisenPhononBandStructure"], [249, 1, 1, "", "GruneisenPhononBandStructureSymmLine"]], "pymatgen.phonon.gruneisen.GruneisenParameter": [[249, 3, 1, "", "acoustic_debye_temp"], [249, 2, 1, "", "average_gruneisen"], [249, 3, 1, "", "debye_temp_limit"], [249, 2, 1, "", "debye_temp_phonopy"], [249, 3, 1, "", "phdos"], [249, 3, 1, "", "tdos"], [249, 2, 1, "", "thermal_conductivity_slack"]], "pymatgen.phonon.gruneisen.GruneisenPhononBandStructure": [[249, 2, 1, "", "as_dict"], [249, 2, 1, "", "from_dict"]], "pymatgen.phonon.gruneisen.GruneisenPhononBandStructureSymmLine": [[249, 2, 1, "", "from_dict"]], "pymatgen.phonon.ir_spectra": [[250, 1, 1, "", "IRDielectricTensor"]], "pymatgen.phonon.ir_spectra.IRDielectricTensor": [[250, 2, 1, "", "as_dict"], [250, 2, 1, "", "from_dict"], [250, 2, 1, "", "get_ir_spectra"], [250, 2, 1, "", "get_plotter"], [250, 2, 1, "", "get_spectrum"], [250, 3, 1, "", "max_phfreq"], [250, 3, 1, "", "nph_freqs"], [250, 2, 1, "", "plot"], [250, 2, 1, "", "write_json"]], "pymatgen.phonon.plotter": [[251, 1, 1, "", "FreqUnits"], [251, 1, 1, "", "GruneisenPhononBSPlotter"], [251, 1, 1, "", "GruneisenPlotter"], [251, 1, 1, "", "PhononBSPlotter"], [251, 1, 1, "", "PhononDosPlotter"], [251, 1, 1, "", "ThermoPlotter"], [251, 4, 1, "", "freq_units"]], "pymatgen.phonon.plotter.FreqUnits": [[251, 5, 1, "", "factor"], [251, 5, 1, "", "label"]], "pymatgen.phonon.plotter.GruneisenPhononBSPlotter": [[251, 2, 1, "", "bs_plot_data"], [251, 2, 1, "", "get_plot_gs"], [251, 2, 1, "", "plot_compare_gs"], [251, 2, 1, "", "save_plot_gs"], [251, 2, 1, "", "show_gs"]], "pymatgen.phonon.plotter.GruneisenPlotter": [[251, 2, 1, "", "get_plot"], [251, 2, 1, "", "save_plot"], [251, 2, 1, "", "show"]], "pymatgen.phonon.plotter.PhononBSPlotter": [[251, 2, 1, "", "bs_plot_data"], [251, 2, 1, "", "get_plot"], [251, 2, 1, "", "get_proj_plot"], [251, 2, 1, "", "get_ticks"], [251, 2, 1, "", "plot_brillouin"], [251, 2, 1, "", "plot_compare"], [251, 2, 1, "", "save_plot"], [251, 2, 1, "", "show"], [251, 2, 1, "", "show_proj"]], "pymatgen.phonon.plotter.PhononDosPlotter": [[251, 2, 1, "", "add_dos"], [251, 2, 1, "", "add_dos_dict"], [251, 2, 1, "", "get_dos_dict"], [251, 2, 1, "", "get_plot"], [251, 2, 1, "", "save_plot"], [251, 2, 1, "", "show"]], "pymatgen.phonon.plotter.ThermoPlotter": [[251, 2, 1, "", "plot_cv"], [251, 2, 1, "", "plot_entropy"], [251, 2, 1, "", "plot_helmholtz_free_energy"], [251, 2, 1, "", "plot_internal_energy"], [251, 2, 1, "", "plot_thermodynamic_properties"]], "pymatgen.phonon.thermal_displacements": [[252, 1, 1, "", "ThermalDisplacementMatrices"]], "pymatgen.phonon.thermal_displacements.ThermalDisplacementMatrices": [[252, 3, 1, "", "B"], [252, 3, 1, "", "U1U2U3"], [252, 3, 1, "", "Ucif"], [252, 3, 1, "", "Ustar"], [252, 3, 1, "", "beta"], [252, 2, 1, "", "compute_directionality_quality_criterion"], [252, 2, 1, "", "from_Ucif"], [252, 2, 1, "", "from_cif_P1"], [252, 2, 1, "", "from_structure_with_site_properties_Ucif"], [252, 2, 1, "", "get_full_matrix"], [252, 2, 1, "", "get_reduced_matrix"], [252, 3, 1, "", "ratio_prolate"], [252, 2, 1, "", "to_structure_with_site_properties_Ucif"], [252, 2, 1, "", "visualize_directionality_quality_criterion"], [252, 2, 1, "", "write_cif"]], "pymatgen.symmetry": [[254, 0, 0, "-", "analyzer"], [255, 0, 0, "-", "bandstructure"], [256, 0, 0, "-", "groups"], [257, 0, 0, "-", "kpath"], [258, 0, 0, "-", "maggroups"], [259, 0, 0, "-", "settings"], [260, 0, 0, "-", "site_symmetries"], [261, 0, 0, "-", "structure"]], "pymatgen.symmetry.analyzer": [[254, 1, 1, "", "PointGroupAnalyzer"], [254, 1, 1, "", "PointGroupOperations"], [254, 1, 1, "", "SpacegroupAnalyzer"], [254, 1, 1, "", "SpacegroupOperations"], [254, 4, 1, "", "cluster_sites"], [254, 4, 1, "", "generate_full_symmops"], [254, 4, 1, "", "iterative_symmetrize"]], "pymatgen.symmetry.analyzer.PointGroupAnalyzer": [[254, 2, 1, "", "get_equivalent_atoms"], [254, 2, 1, "", "get_pointgroup"], [254, 2, 1, "", "get_rotational_symmetry_number"], [254, 2, 1, "", "get_symmetry_operations"], [254, 5, 1, "", "inversion_op"], [254, 2, 1, "", "is_valid_op"], [254, 2, 1, "", "symmetrize_molecule"]], "pymatgen.symmetry.analyzer.PointGroupOperations": [[254, 5, 1, "", "sch_symbol"]], "pymatgen.symmetry.analyzer.SpacegroupAnalyzer": [[254, 2, 1, "", "find_primitive"], [254, 2, 1, "", "get_conventional_standard_structure"], [254, 2, 1, "", "get_conventional_to_primitive_transformation_matrix"], [254, 2, 1, "", "get_crystal_system"], [254, 2, 1, "", "get_hall"], [254, 2, 1, "", "get_ir_reciprocal_mesh"], [254, 2, 1, "", "get_ir_reciprocal_mesh_map"], [254, 2, 1, "", "get_kpoint_weights"], [254, 2, 1, "", "get_lattice_type"], [254, 2, 1, "", "get_point_group_operations"], [254, 2, 1, "", "get_point_group_symbol"], [254, 2, 1, "", "get_primitive_standard_structure"], [254, 2, 1, "", "get_refined_structure"], [254, 2, 1, "", "get_space_group_number"], [254, 2, 1, "", "get_space_group_operations"], [254, 2, 1, "", "get_space_group_symbol"], [254, 2, 1, "", "get_symmetrized_structure"], [254, 2, 1, "", "get_symmetry_dataset"], [254, 2, 1, "", "get_symmetry_operations"], [254, 2, 1, "", "is_laue"]], "pymatgen.symmetry.analyzer.SpacegroupOperations": [[254, 2, 1, "", "are_symmetrically_equivalent"]], "pymatgen.symmetry.bandstructure": [[255, 1, 1, "", "HighSymmKpath"]], "pymatgen.symmetry.bandstructure.HighSymmKpath": [[255, 3, 1, "", "equiv_labels"], [255, 2, 1, "", "get_continuous_path"], [255, 3, 1, "", "label_index"], [255, 3, 1, "", "path_lengths"], [255, 3, 1, "", "path_type"]], "pymatgen.symmetry.groups": [[256, 1, 1, "", "PointGroup"], [256, 1, 1, "", "SpaceGroup"], [256, 1, 1, "", "SymmetryGroup"], [256, 4, 1, "", "in_array_list"], [256, 4, 1, "", "sg_symbol_from_int_number"]], "pymatgen.symmetry.groups.PointGroup": [[256, 5, 1, "", "generators"], [256, 5, 1, "", "symbol"], [256, 5, 1, "", "symmetry_ops"]], "pymatgen.symmetry.groups.SpaceGroup": [[256, 5, 1, "", "generators"], [256, 5, 1, "", "int_number"], [256, 5, 1, "", "order"], [256, 5, 1, "", "symbol"]], "pymatgen.symmetry.groups.SymmetryGroup": [[256, 2, 1, "", "is_subgroup"], [256, 2, 1, "", "is_supergroup"], [256, 3, 1, "", "symmetry_ops"], [256, 2, 1, "", "to_latex_string"]], "pymatgen.symmetry.kpath": [[257, 1, 1, "", "KPathBase"], [257, 1, 1, "", "KPathLatimerMunro"], [257, 1, 1, "", "KPathSeek"], [257, 1, 1, "", "KPathSetyawanCurtarolo"]], "pymatgen.symmetry.kpath.KPathBase": [[257, 2, 1, "", "get_kpoints"], [257, 3, 1, "", "kpath"], [257, 3, 1, "", "lattice"], [257, 3, 1, "", "rec_lattice"], [257, 3, 1, "", "structure"]], "pymatgen.symmetry.kpath.KPathLatimerMunro": [[257, 2, 1, "", "LabelPoints"], [257, 2, 1, "", "LabelSymbol"], [257, 3, 1, "", "mag_type"]], "pymatgen.symmetry.kpath.KPathSetyawanCurtarolo": [[257, 2, 1, "", "bcc"], [257, 2, 1, "", "bctet1"], [257, 2, 1, "", "bctet2"], [257, 3, 1, "", "conventional"], [257, 2, 1, "", "cubic"], [257, 2, 1, "", "fcc"], [257, 2, 1, "", "hex"], [257, 2, 1, "", "mcl"], [257, 2, 1, "", "mclc1"], [257, 2, 1, "", "mclc2"], [257, 2, 1, "", "mclc3"], [257, 2, 1, "", "mclc4"], [257, 2, 1, "", "mclc5"], [257, 2, 1, "", "orc"], [257, 2, 1, "", "orcc"], [257, 2, 1, "", "orcf1"], [257, 2, 1, "", "orcf2"], [257, 2, 1, "", "orcf3"], [257, 2, 1, "", "orci"], [257, 3, 1, "", "prim"], [257, 3, 1, "", "prim_rec"], [257, 2, 1, "", "rhl1"], [257, 2, 1, "", "rhl2"], [257, 2, 1, "", "tet"], [257, 2, 1, "", "tria"], [257, 2, 1, "", "trib"]], "pymatgen.symmetry.maggroups": [[258, 1, 1, "", "MagneticSpaceGroup"]], "pymatgen.symmetry.settings": [[259, 1, 1, "", "JonesFaithfulTransformation"]], "pymatgen.symmetry.settings.JonesFaithfulTransformation": [[259, 3, 1, "", "P"], [259, 2, 1, "", "from_origin_shift"], [259, 2, 1, "", "from_transformation_string"], [259, 3, 1, "", "inverse"], [259, 3, 1, "", "p"], [259, 2, 1, "", "parse_transformation_string"], [259, 2, 1, "", "transform_coords"], [259, 2, 1, "", "transform_lattice"], [259, 2, 1, "", "transform_symmop"], [259, 3, 1, "", "transformation_string"]], "pymatgen.symmetry.site_symmetries": [[260, 4, 1, "", "get_shared_symmetry_operations"], [260, 4, 1, "", "get_site_symmetries"]], "pymatgen.symmetry.structure": [[261, 1, 1, "", "SymmetrizedStructure"]], "pymatgen.symmetry.structure.SymmetrizedStructure": [[261, 2, 1, "", "as_dict"], [261, 2, 1, "", "copy"], [261, 2, 1, "", "find_equivalent_sites"], [261, 2, 1, "", "from_dict"]], "pymatgen.transformations": [[263, 0, 0, "-", "advanced_transformations"], [264, 0, 0, "-", "site_transformations"], [265, 0, 0, "-", "standard_transformations"], [266, 0, 0, "-", "transformation_abc"]], "pymatgen.transformations.advanced_transformations": [[263, 1, 1, "", "AddAdsorbateTransformation"], [263, 1, 1, "", "ChargeBalanceTransformation"], [263, 1, 1, "", "CubicSupercellTransformation"], [263, 1, 1, "", "DisorderOrderedTransformation"], [263, 1, 1, "", "DopingTransformation"], [263, 1, 1, "", "EnumerateStructureTransformation"], [263, 1, 1, "", "GrainBoundaryTransformation"], [263, 1, 1, "", "MagOrderParameterConstraint"], [263, 1, 1, "", "MagOrderingTransformation"], [263, 1, 1, "", "MonteCarloRattleTransformation"], [263, 1, 1, "", "MultipleSubstitutionTransformation"], [263, 1, 1, "", "SQSTransformation"], [263, 1, 1, "", "SlabTransformation"], [263, 1, 1, "", "SubstituteSurfaceSiteTransformation"], [263, 1, 1, "", "SubstitutionPredictorTransformation"], [263, 1, 1, "", "SuperTransformation"]], "pymatgen.transformations.advanced_transformations.AddAdsorbateTransformation": [[263, 2, 1, "", "apply_transformation"], [263, 3, 1, "", "inverse"], [263, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.advanced_transformations.ChargeBalanceTransformation": [[263, 2, 1, "", "apply_transformation"], [263, 3, 1, "", "inverse"], [263, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.advanced_transformations.CubicSupercellTransformation": [[263, 2, 1, "", "apply_transformation"], [263, 3, 1, "", "inverse"], [263, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.advanced_transformations.DisorderOrderedTransformation": [[263, 2, 1, "", "apply_transformation"], [263, 3, 1, "", "inverse"], [263, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.advanced_transformations.DopingTransformation": [[263, 2, 1, "", "apply_transformation"], [263, 3, 1, "", "inverse"], [263, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.advanced_transformations.EnumerateStructureTransformation": [[263, 2, 1, "", "apply_transformation"], [263, 3, 1, "", "inverse"], [263, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.advanced_transformations.GrainBoundaryTransformation": [[263, 2, 1, "", "apply_transformation"], [263, 3, 1, "", "inverse"], [263, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.advanced_transformations.MagOrderParameterConstraint": [[263, 2, 1, "", "satisfies_constraint"]], "pymatgen.transformations.advanced_transformations.MagOrderingTransformation": [[263, 2, 1, "", "apply_transformation"], [263, 2, 1, "", "determine_min_cell"], [263, 3, 1, "", "inverse"], [263, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.advanced_transformations.MonteCarloRattleTransformation": [[263, 2, 1, "", "apply_transformation"], [263, 3, 1, "", "inverse"], [263, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.advanced_transformations.MultipleSubstitutionTransformation": [[263, 2, 1, "", "apply_transformation"], [263, 3, 1, "", "inverse"], [263, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.advanced_transformations.SQSTransformation": [[263, 2, 1, "", "apply_transformation"], [263, 3, 1, "", "inverse"], [263, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.advanced_transformations.SlabTransformation": [[263, 2, 1, "", "apply_transformation"], [263, 3, 1, "", "inverse"], [263, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.advanced_transformations.SubstituteSurfaceSiteTransformation": [[263, 2, 1, "", "apply_transformation"], [263, 3, 1, "", "inverse"], [263, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.advanced_transformations.SubstitutionPredictorTransformation": [[263, 2, 1, "", "apply_transformation"], [263, 3, 1, "", "inverse"], [263, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.advanced_transformations.SuperTransformation": [[263, 2, 1, "", "apply_transformation"], [263, 3, 1, "", "inverse"], [263, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.site_transformations": [[264, 1, 1, "", "AddSitePropertyTransformation"], [264, 1, 1, "", "InsertSitesTransformation"], [264, 1, 1, "", "PartialRemoveSitesTransformation"], [264, 1, 1, "", "RadialSiteDistortionTransformation"], [264, 1, 1, "", "RemoveSitesTransformation"], [264, 1, 1, "", "ReplaceSiteSpeciesTransformation"], [264, 1, 1, "", "TranslateSitesTransformation"]], "pymatgen.transformations.site_transformations.AddSitePropertyTransformation": [[264, 2, 1, "", "apply_transformation"], [264, 3, 1, "", "inverse"], [264, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.site_transformations.InsertSitesTransformation": [[264, 2, 1, "", "apply_transformation"], [264, 3, 1, "", "inverse"], [264, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.site_transformations.PartialRemoveSitesTransformation": [[264, 5, 1, "", "ALGO_BEST_FIRST"], [264, 5, 1, "", "ALGO_COMPLETE"], [264, 5, 1, "", "ALGO_ENUMERATE"], [264, 5, 1, "", "ALGO_FAST"], [264, 2, 1, "", "apply_transformation"], [264, 3, 1, "", "inverse"], [264, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.site_transformations.RadialSiteDistortionTransformation": [[264, 2, 1, "", "apply_transformation"], [264, 3, 1, "", "inverse"], [264, 3, 1, "", "is_one_to_many"], [264, 3, 1, "", "use_multiprocessing"]], "pymatgen.transformations.site_transformations.RemoveSitesTransformation": [[264, 2, 1, "", "apply_transformation"], [264, 3, 1, "", "inverse"], [264, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.site_transformations.ReplaceSiteSpeciesTransformation": [[264, 2, 1, "", "apply_transformation"], [264, 3, 1, "", "inverse"], [264, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.site_transformations.TranslateSitesTransformation": [[264, 2, 1, "", "apply_transformation"], [264, 2, 1, "", "as_dict"], [264, 3, 1, "", "inverse"], [264, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.standard_transformations": [[265, 1, 1, "", "AutoOxiStateDecorationTransformation"], [265, 1, 1, "", "ChargedCellTransformation"], [265, 1, 1, "", "ConventionalCellTransformation"], [265, 1, 1, "", "DeformStructureTransformation"], [265, 1, 1, "", "DiscretizeOccupanciesTransformation"], [265, 1, 1, "", "OrderDisorderedStructureTransformation"], [265, 1, 1, "", "OxidationStateDecorationTransformation"], [265, 1, 1, "", "OxidationStateRemovalTransformation"], [265, 1, 1, "", "PartialRemoveSpecieTransformation"], [265, 1, 1, "", "PerturbStructureTransformation"], [265, 1, 1, "", "PrimitiveCellTransformation"], [265, 1, 1, "", "RemoveSpeciesTransformation"], [265, 1, 1, "", "RotationTransformation"], [265, 1, 1, "", "ScaleToRelaxedTransformation"], [265, 1, 1, "", "SubstitutionTransformation"], [265, 1, 1, "", "SupercellTransformation"]], "pymatgen.transformations.standard_transformations.AutoOxiStateDecorationTransformation": [[265, 2, 1, "", "apply_transformation"], [265, 3, 1, "", "inverse"], [265, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.standard_transformations.ChargedCellTransformation": [[265, 2, 1, "", "apply_transformation"], [265, 3, 1, "", "inverse"], [265, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.standard_transformations.ConventionalCellTransformation": [[265, 2, 1, "", "apply_transformation"], [265, 3, 1, "", "inverse"], [265, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.standard_transformations.DeformStructureTransformation": [[265, 2, 1, "", "apply_transformation"], [265, 3, 1, "", "inverse"], [265, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.standard_transformations.DiscretizeOccupanciesTransformation": [[265, 2, 1, "", "apply_transformation"], [265, 3, 1, "", "inverse"], [265, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.standard_transformations.OrderDisorderedStructureTransformation": [[265, 5, 1, "", "ALGO_BEST_FIRST"], [265, 5, 1, "", "ALGO_COMPLETE"], [265, 5, 1, "", "ALGO_FAST"], [265, 2, 1, "", "apply_transformation"], [265, 3, 1, "", "inverse"], [265, 3, 1, "", "is_one_to_many"], [265, 3, 1, "", "lowest_energy_structure"]], "pymatgen.transformations.standard_transformations.OxidationStateDecorationTransformation": [[265, 2, 1, "", "apply_transformation"], [265, 3, 1, "", "inverse"], [265, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.standard_transformations.OxidationStateRemovalTransformation": [[265, 2, 1, "", "apply_transformation"], [265, 3, 1, "", "inverse"], [265, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.standard_transformations.PartialRemoveSpecieTransformation": [[265, 5, 1, "", "ALGO_BEST_FIRST"], [265, 5, 1, "", "ALGO_COMPLETE"], [265, 5, 1, "", "ALGO_ENUMERATE"], [265, 5, 1, "", "ALGO_FAST"], [265, 2, 1, "", "apply_transformation"], [265, 3, 1, "", "inverse"], [265, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.standard_transformations.PerturbStructureTransformation": [[265, 2, 1, "", "apply_transformation"], [265, 3, 1, "", "inverse"], [265, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.standard_transformations.PrimitiveCellTransformation": [[265, 2, 1, "", "apply_transformation"], [265, 3, 1, "", "inverse"], [265, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.standard_transformations.RemoveSpeciesTransformation": [[265, 2, 1, "", "apply_transformation"], [265, 3, 1, "", "inverse"], [265, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.standard_transformations.RotationTransformation": [[265, 2, 1, "", "apply_transformation"], [265, 3, 1, "", "inverse"], [265, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.standard_transformations.ScaleToRelaxedTransformation": [[265, 2, 1, "", "apply_transformation"], [265, 3, 1, "", "inverse"], [265, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.standard_transformations.SubstitutionTransformation": [[265, 2, 1, "", "apply_transformation"], [265, 3, 1, "", "inverse"], [265, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.standard_transformations.SupercellTransformation": [[265, 2, 1, "", "apply_transformation"], [265, 2, 1, "", "from_scaling_factors"], [265, 3, 1, "", "inverse"], [265, 3, 1, "", "is_one_to_many"]], "pymatgen.transformations.transformation_abc": [[266, 1, 1, "", "AbstractTransformation"]], "pymatgen.transformations.transformation_abc.AbstractTransformation": [[266, 2, 1, "", "apply_transformation"], [266, 3, 1, "", "inverse"], [266, 3, 1, "", "is_one_to_many"], [266, 3, 1, "", "use_multiprocessing"]], "pymatgen.util": [[268, 0, 0, "-", "convergence"], [269, 0, 0, "-", "coord"], [270, 0, 0, "-", "coord_cython"], [271, 0, 0, "-", "due"], [272, 0, 0, "-", "graph_hashing"], [273, 0, 0, "-", "io_utils"], [274, 0, 0, "-", "num"], [275, 0, 0, "-", "numba"], [276, 0, 0, "-", "plotting"], [277, 0, 0, "-", "provenance"], [278, 0, 0, "-", "string"], [279, 0, 0, "-", "testing"], [280, 0, 0, "-", "typing"]], "pymatgen.util.convergence": [[268, 6, 1, "", "SplineInputError"], [268, 4, 1, "", "determine_convergence"], [268, 4, 1, "", "exponential"], [268, 4, 1, "", "extrapolate_reciprocal"], [268, 4, 1, "", "extrapolate_simple_reciprocal"], [268, 4, 1, "", "get_derivatives"], [268, 4, 1, "", "get_weights"], [268, 4, 1, "", "id_generator"], [268, 4, 1, "", "measure"], [268, 4, 1, "", "multi_curve_fit"], [268, 4, 1, "", "multi_reciprocal_extra"], [268, 4, 1, "", "p0_exponential"], [268, 4, 1, "", "p0_reciprocal"], [268, 4, 1, "", "p0_simple_2reciprocal"], [268, 4, 1, "", "p0_simple_4reciprocal"], [268, 4, 1, "", "p0_simple_5reciprocal"], [268, 4, 1, "", "p0_simple_reciprocal"], [268, 4, 1, "", "p0_single_reciprocal"], [268, 4, 1, "", "print_and_raise_error"], [268, 4, 1, "", "print_plot_line"], [268, 4, 1, "", "reciprocal"], [268, 4, 1, "", "simple_2reciprocal"], [268, 4, 1, "", "simple_4reciprocal"], [268, 4, 1, "", "simple_5reciprocal"], [268, 4, 1, "", "simple_reciprocal"], [268, 4, 1, "", "single_reciprocal"]], "pymatgen.util.coord": [[269, 1, 1, "", "Simplex"], [269, 4, 1, "", "all_distances"], [269, 4, 1, "", "barycentric_coords"], [269, 4, 1, "", "coord_list_mapping"], [269, 4, 1, "", "coord_list_mapping_pbc"], [269, 4, 1, "", "find_in_coord_list"], [269, 4, 1, "", "find_in_coord_list_pbc"], [269, 4, 1, "", "get_angle"], [269, 4, 1, "", "get_linear_interpolated_value"], [269, 4, 1, "", "in_coord_list"], [269, 4, 1, "", "in_coord_list_pbc"], [269, 4, 1, "", "is_coord_subset"], [269, 4, 1, "", "is_coord_subset_pbc"], [269, 4, 1, "", "lattice_points_in_supercell"], [269, 4, 1, "", "pbc_diff"], [269, 4, 1, "", "pbc_shortest_vectors"]], "pymatgen.util.coord.Simplex": [[269, 2, 1, "", "bary_coords"], [269, 3, 1, "", "coords"], [269, 2, 1, "", "in_simplex"], [269, 2, 1, "", "line_intersection"], [269, 2, 1, "", "point_from_bary_coords"], [269, 3, 1, "", "volume"]], "pymatgen.util.coord_cython": [[270, 4, 1, "", "coord_list_mapping_pbc"], [270, 4, 1, "", "is_coord_subset_pbc"], [270, 4, 1, "", "pbc_shortest_vectors"]], "pymatgen.util.due": [[271, 4, 1, "", "BibTeX"], [271, 4, 1, "", "Doi"], [271, 1, 1, "", "InactiveDueCreditCollector"], [271, 4, 1, "", "Text"], [271, 4, 1, "", "Url"]], "pymatgen.util.due.InactiveDueCreditCollector": [[271, 2, 1, "", "activate"], [271, 5, 1, "", "active"], [271, 2, 1, "", "add"], [271, 2, 1, "", "cite"], [271, 2, 1, "", "dcite"], [271, 2, 1, "", "dump"], [271, 2, 1, "", "load"]], "pymatgen.util.graph_hashing": [[272, 4, 1, "", "weisfeiler_lehman_graph_hash"], [272, 4, 1, "", "weisfeiler_lehman_subgraph_hashes"]], "pymatgen.util.io_utils": [[273, 4, 1, "", "clean_lines"], [273, 4, 1, "", "micro_pyawk"]], "pymatgen.util.num": [[274, 4, 1, "", "abs_cap"], [274, 4, 1, "", "make_symmetric_matrix_from_upper_tri"], [274, 4, 1, "", "maxloc"], [274, 4, 1, "", "min_max_indexes"], [274, 4, 1, "", "minloc"], [274, 4, 1, "", "monotonic"], [274, 4, 1, "", "non_decreasing"], [274, 4, 1, "", "non_increasing"], [274, 4, 1, "", "round_to_sigfigs"], [274, 4, 1, "", "strictly_decreasing"], [274, 4, 1, "", "strictly_increasing"]], "pymatgen.util.numba": [[275, 4, 1, "", "jit"], [275, 4, 1, "", "njit"]], "pymatgen.util.plotting": [[276, 4, 1, "", "add_fig_kwargs"], [276, 4, 1, "", "format_formula"], [276, 4, 1, "", "get_ax3d_fig_plt"], [276, 4, 1, "", "get_ax_fig_plt"], [276, 4, 1, "", "get_axarray_fig_plt"], [276, 4, 1, "", "periodic_table_heatmap"], [276, 4, 1, "", "pretty_plot"], [276, 4, 1, "", "pretty_plot_two_axis"], [276, 4, 1, "", "pretty_polyfit_plot"], [276, 4, 1, "", "van_arkel_triangle"]], "pymatgen.util.provenance": [[277, 1, 1, "", "Author"], [277, 1, 1, "", "HistoryNode"], [277, 1, 1, "", "StructureNL"], [277, 4, 1, "", "is_valid_bibtex"]], "pymatgen.util.provenance.Author": [[277, 2, 1, "", "as_dict"], [277, 5, 1, "", "email"], [277, 2, 1, "", "from_dict"], [277, 5, 1, "", "name"], [277, 2, 1, "", "parse_author"]], "pymatgen.util.provenance.HistoryNode": [[277, 2, 1, "", "as_dict"], [277, 5, 1, "", "description"], [277, 2, 1, "", "from_dict"], [277, 5, 1, "", "name"], [277, 2, 1, "", "parse_history_node"], [277, 5, 1, "", "url"]], "pymatgen.util.provenance.StructureNL": [[277, 2, 1, "", "as_dict"], [277, 2, 1, "", "from_dict"], [277, 2, 1, "", "from_structures"]], "pymatgen.util.string": [[278, 1, 1, "", "Stringify"], [278, 4, 1, "", "charge_string"], [278, 4, 1, "", "disordered_formula"], [278, 4, 1, "", "formula_double_format"], [278, 4, 1, "", "htmlify"], [278, 4, 1, "", "latexify"], [278, 4, 1, "", "latexify_spacegroup"], [278, 4, 1, "", "str_delimited"], [278, 4, 1, "", "stream_has_colours"], [278, 4, 1, "", "transformation_to_string"], [278, 4, 1, "", "unicodeify"], [278, 4, 1, "", "unicodeify_spacegroup"], [278, 4, 1, "", "unicodeify_species"]], "pymatgen.util.string.Stringify": [[278, 5, 1, "", "STRING_MODE"], [278, 2, 1, "", "to_html_string"], [278, 2, 1, "", "to_latex_string"], [278, 2, 1, "", "to_pretty_string"], [278, 2, 1, "", "to_unicode_string"]], "pymatgen.util.testing": [[279, 1, 1, "", "PymatgenTest"]], "pymatgen.util.testing.PymatgenTest": [[279, 5, 1, "", "MODULE_DIR"], [279, 5, 1, "", "STRUCTURES_DIR"], [279, 5, 1, "", "TEST_FILES_DIR"], [279, 5, 1, "", "TEST_STRUCTURES"], [279, 2, 1, "", "assert_all_close"], [279, 2, 1, "", "assert_msonable"], [279, 2, 1, "", "assert_str_content_equal"], [279, 5, 1, "", "fn"], [279, 2, 1, "", "get_structure"], [279, 2, 1, "", "serialize_with_pickle"], [279, 5, 1, "", "warnings"]], "pymatgen.vis": [[282, 0, 0, "-", "plotters"], [283, 0, 0, "-", "structure_chemview"], [284, 0, 0, "-", "structure_vtk"]], "pymatgen.vis.plotters": [[282, 1, 1, "", "SpectrumPlotter"]], "pymatgen.vis.plotters.SpectrumPlotter": [[282, 2, 1, "", "add_spectra"], [282, 2, 1, "", "add_spectrum"], [282, 2, 1, "", "get_plot"], [282, 2, 1, "", "save_plot"], [282, 2, 1, "", "show"]], "pymatgen.vis.structure_chemview": [[283, 4, 1, "", "quick_view"]], "pymatgen.vis.structure_vtk": [[284, 1, 1, "", "MultiStructuresInteractorStyle"], [284, 1, 1, "", "MultiStructuresVis"], [284, 1, 1, "", "StructureInteractorStyle"], [284, 1, 1, "", "StructureVis"], [284, 4, 1, "", "make_movie"]], "pymatgen.vis.structure_vtk.MultiStructuresInteractorStyle": [[284, 2, 1, "", "keyPressEvent"]], "pymatgen.vis.structure_vtk.MultiStructuresVis": [[284, 5, 1, "", "DEFAULT_ANIMATED_MOVIE_OPTIONS"], [284, 2, 1, "", "apply_tags"], [284, 2, 1, "", "display_help"], [284, 2, 1, "", "display_info"], [284, 2, 1, "", "display_warning"], [284, 2, 1, "", "erase_info"], [284, 2, 1, "", "erase_warning"], [284, 2, 1, "", "set_animated_movie_options"], [284, 2, 1, "", "set_structure"], [284, 2, 1, "", "set_structures"]], "pymatgen.vis.structure_vtk.StructureInteractorStyle": [[284, 2, 1, "", "keyPressEvent"], [284, 2, 1, "", "leftButtonPressEvent"], [284, 2, 1, "", "leftButtonReleaseEvent"], [284, 2, 1, "", "mouseMoveEvent"]], "pymatgen.vis.structure_vtk.StructureVis": [[284, 2, 1, "", "add_bonds"], [284, 2, 1, "", "add_edges"], [284, 2, 1, "", "add_faces"], [284, 2, 1, "", "add_line"], [284, 2, 1, "", "add_partial_sphere"], [284, 2, 1, "", "add_picker"], [284, 2, 1, "", "add_picker_fixed"], [284, 2, 1, "", "add_polyhedron"], [284, 2, 1, "", "add_site"], [284, 2, 1, "", "add_text"], [284, 2, 1, "", "add_triangle"], [284, 2, 1, "", "display_help"], [284, 2, 1, "", "orthongonalize_structure"], [284, 2, 1, "", "redraw"], [284, 2, 1, "", "rotate_view"], [284, 2, 1, "", "set_structure"], [284, 2, 1, "", "show"], [284, 2, 1, "", "write_image"], [284, 2, 1, "", "zoom"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute", "6": "py:exception", "7": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "exception", "Python exception"], "7": ["py", "data", "Python data"]}, "titleterms": {"pymatgen": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287], "add": [0, 3], "ons": [0, 3], "extern": 0, "tool": [0, 3], "analysi": [0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 285, 287], "input": [0, 177, 189, 195, 197, 206, 212, 221, 230, 238, 287], "output": [0, 190, 198, 207, 214, 222, 232, 239, 287], "servic": 0, "chang": [1, 2, 4, 6, 7], "log": [1, 4, 6, 7], "v2023": [1, 4, 6, 7], "6": [1, 4, 6, 7], "28": [1, 4, 6, 7], "23": 1, "5": 1, "31": 1, "10": [1, 2], "8": [1, 2], "The": [1, 287], "yb_2": 1, "deprec": 1, "releas": 1, "3": [1, 2, 5], "2": [1, 2, 5], "22": 1, "1": [1, 2, 5, 286], "30": 1, "20": [1, 2], "9": 1, "v2022": [1, 2, 4, 6], "11": 1, "7": 1, "21": 1, "25": 1, "24": 1, "19": 1, "26": 1, "18": 1, "17": 1, "4": [1, 5, 286], "29": 1, "0": [1, 2, 4, 5, 6], "16": 1, "15": 1, "14": 1, "13": 1, "12": 1, "v2021": [1, 2], "yank": 1, "v2020": [1, 2], "v2019": 1, "27": 1, "v2018": 1, "v2017": 1, "v4": 1, "v3": 1, "v2": [1, 5], "v1": 1, "compat": [2, 163, 285, 287], "depend": [2, 5], "minimum": 2, "python": [2, 5], "version": 2, "recent": 2, "break": 2, "01": 2, "08": 2, "contribut": [3, 4, 6], "direct": 3, "main": 3, "distribut": 3, "write": [3, 287], "exist": 3, "ecosystem": 3, "code": 3, "guidelin": 3, "introduct": [4, 6], "major": [4, 6], "announc": [4, 6], "matgeni": [4, 6], "exampl": [4, 6, 287], "why": [4, 6], "us": [4, 5, 6], "get": [4, 6], "usag": [4, 6, 287], "report": [4, 6], "bug": [4, 6], "develop": [4, 5, 6, 286], "new": [4, 6], "function": [4, 6], "how": [4, 6], "cite": [4, 6], "licens": [4, 6], "about": [4, 6], "team": [4, 6, 286], "copyright": [4, 6], "polici": [4, 6], "indic": [4, 6], "tabl": [4, 6], "instal": [5, 241], "requir": 5, "option": 5, "non": 5, "program": 5, "conda": 5, "base": 5, "step": [5, 241], "2b": 5, "creat": [5, 287], "environ": 5, "enumlib": 5, "bader": 5, "onli": 5, "osx": 5, "linux": 5, "potcar": 5, "setup": 5, "pypi": 5, "support": 5, "github": 5, "prepar": 5, "your": 5, "system": 5, "window": 5, "mac": 5, "development": 5, "mode": 5, "tip": 5, "librari": 5, "vtk": 5, "o": 5, "x": 5, "test": [5, 279], "v7": 5, "openbabel": 5, "zeo": [5, 241, 285], "namespac": [9, 14, 169, 173], "subpackag": [9, 10, 14, 18, 19, 24, 31, 42, 49, 57, 61, 67, 72, 87, 91, 98, 102, 105, 106, 112, 127, 135, 154, 162, 169, 173, 174, 188, 194, 196, 203, 211, 220, 228, 237, 242, 246, 253, 262, 267, 281], "submodul": [9, 10, 14, 19, 24, 31, 42, 49, 57, 61, 67, 72, 87, 91, 98, 102, 106, 112, 115, 127, 135, 154, 162, 169, 173, 174, 188, 194, 196, 203, 211, 220, 228, 237, 242, 246, 253, 262, 267, 281], "alchemi": [10, 11, 12, 13, 287], "packag": [10, 18, 19, 24, 27, 31, 42, 49, 57, 61, 67, 72, 87, 91, 98, 102, 105, 106, 112, 115, 127, 135, 154, 162, 174, 188, 194, 196, 203, 211, 220, 228, 237, 242, 246, 253, 262, 267, 281], "modul": [10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284], "content": [10, 18, 19, 24, 27, 31, 42, 49, 57, 61, 67, 72, 87, 91, 98, 102, 105, 106, 112, 115, 127, 135, 154, 162, 174, 188, 194, 196, 203, 211, 220, 228, 237, 242, 246, 253, 262, 267, 281], "filter": 11, "materi": [12, 287], "transmut": 13, "adsorpt": 15, "bond_dissoci": 16, "bond_val": 17, "chemenv": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "connect": [19, 20, 21, 22, 23], "connected_compon": 20, "connectivity_find": 21, "environment_nod": 22, "structure_connect": 23, "coordination_environ": [24, 25, 26, 27, 28, 29, 30], "chemenv_strategi": 25, "coordination_geometri": 26, "coordination_geometries_fil": 27, "coordination_geometry_find": 28, "structure_environ": 29, "voronoi": 30, "util": [31, 32, 33, 34, 35, 36, 37, 38, 39, 192, 209, 224, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "chemenv_config": 32, "chemenv_error": 33, "coordination_geometry_util": 34, "defs_util": 35, "func_util": 36, "graph_util": 37, "math_util": 38, "scripts_util": 39, "chempot_diagram": 40, "cost": 41, "diffract": [42, 43, 44, 45, 46], "core": [43, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 159, 187, 285], "neutron": 44, "tem": 45, "xrd": 46, "dimension": 47, "disord": 48, "elast": [49, 50, 51, 52], "strain": 51, "stress": 52, "energy_model": 53, "eo": 54, "ewald": 55, "excit": [56, 194, 195], "ferroelectr": [57, 58], "polar": 58, "fragment": 59, "functional_group": 60, "gb": [61, 62], "grain": 62, "graph": 63, "hhi": 64, "interfac": [65, 67, 68, 69, 70, 138], "interface_react": 66, "coherent_interfac": 68, "substrate_analyz": 69, "zsl": 70, "local_env": 71, "magnet": [72, 73, 74, 75], "analyz": [73, 107, 254], "heisenberg": 74, "jahntel": 75, "molecule_match": 76, "molecule_structure_compar": 77, "nmr": 78, "path_find": [79, 285], "phase_diagram": 80, "piezo": 81, "piezo_sensit": 82, "pourbaix_diagram": 83, "prototyp": 84, "quasiharmon": 85, "reaction_calcul": 86, "solar": [87, 88], "slme": 88, "structure_analyz": 89, "structure_match": 90, "structure_predict": [91, 92, 93, 94, 95], "dopant_predictor": 92, "substitution_prob": 93, "substitutor": 94, "volume_predictor": 95, "surface_analysi": 96, "thermochemistri": 97, "topolog": [98, 99], "spillag": 99, "transition_st": 100, "wulff": [101, 285], "xa": [102, 103], "spectrum": [103, 146], "xp": 104, "app": [105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "batteri": [106, 107, 108, 109, 110, 111], "battery_abc": 108, "conversion_batteri": 109, "insertion_batteri": 110, "plotter": [111, 161, 251, 282], "borg": [112, 113, 114, 287], "hive": 113, "queen": 114, "cli": [115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "feff_plot_cross_sect": 116, "feff_plot_do": 117, "gaussian_analyz": 118, "get_environ": 119, "pmg": 120, "pmg_analyz": 121, "pmg_config": 122, "pmg_plot": 123, "pmg_potcar": 124, "pmg_queri": 125, "pmg_structur": 126, "command_lin": [127, 128, 129, 130, 131, 132, 133, 134, 285], "bader_cal": [128, 285], "chargemol_cal": 129, "critic2_cal": 130, "enumlib_cal": 131, "gulp_cal": 132, "mcsqs_caller": 133, "vampire_cal": 134, "bond": 136, "composit": 137, "ion": 139, "lattic": 140, "libxcfunc": 141, "molecular_orbit": 142, "oper": 143, "periodic_t": 144, "site": 145, "structur": [147, 261, 287], "surfac": [148, 285], "tensor": 149, "trajectori": 150, "unit": [151, 287], "xcfunc": 152, "dao": 153, "electronic_structur": [154, 155, 156, 157, 158, 159, 160, 161], "bandstructur": [155, 247, 255], "boltztrap": 156, "boltztrap2": 157, "cohp": 158, "do": [160, 248, 287], "entri": [162, 163, 164, 165, 166, 167, 168, 285, 287], "computed_entri": 164, "correction_calcul": 165, "entry_tool": 166, "exp_entri": 167, "mixing_schem": 168, "ext": [169, 170, 171, 172], "cod": 170, "matproj": [171, 285, 287], "optimad": 172, "io": [173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 285, 287], "abinit": [174, 175, 176, 177, 178, 179, 180], "abiobject": 175, "abitim": 176, "netcdf": 178, "pseudo": 179, "variabl": 180, "adf": 181, "attribut": 181, "note": [181, 287], "ase": 182, "atat": 183, "babel": 184, "cif": 185, "common": 186, "cp2k": [188, 189, 190, 191, 192], "set": [191, 199, 208, 223, 233, 259, 285, 287], "cssr": 193, "feff": [196, 197, 198, 199, 285], "fiesta": 200, "gaussian": 201, "jarvi": 202, "lammp": [203, 204, 205, 206, 207, 208, 209], "data": [204, 287], "gener": 205, "lmto": 210, "lobster": [211, 212, 213, 214], "lobsterenv": 213, "nwchem": 215, "packmol": 216, "phonopi": 217, "prismat": 218, "pwscf": 219, "qchem": [220, 221, 222, 223, 224], "re": 225, "shengbt": 226, "templat": 227, "vasp": [228, 229, 230, 231, 232, 233, 285], "help": 229, "return": 230, "optic": 231, "wannier90": 234, "xcrysden": 235, "xr": 236, "xtb": [237, 238, 239], "xyz": 240, "zeopp": 241, "post": 241, "check": 241, "optim": [242, 243, 244, 245], "linear_assign": 243, "linear_assignment_numpi": 244, "neighbor": 245, "phonon": [246, 247, 248, 249, 250, 251, 252], "gruneisen": 249, "ir_spectra": 250, "thermal_displac": 252, "symmetri": [253, 254, 255, 256, 257, 258, 259, 260, 261, 285], "group": 256, "kpath": 257, "maggroup": 258, "site_symmetri": 260, "transform": [262, 263, 264, 265, 266, 287], "advanced_transform": 263, "site_transform": 264, "standard_transform": 265, "transformation_abc": 266, "converg": 268, "coord": 269, "coord_cython": 270, "due": 271, "graph_hash": 272, "io_util": 273, "num": 274, "numba": 275, "plot": 276, "proven": 277, "string": 278, "type": 280, "vi": [281, 282, 283, 284], "structure_chemview": 283, "structure_vtk": 284, "refer": 285, "phasediagram": 285, "maintain": 286, "lead": 286, "newest": 286, "contributor": 286, "list": 286, "A": 286, "z": 286, "year": 286, "activ": 286, "thank": 286, "side": 287, "as_dict": 287, "from_dict": 287, "montyencod": 287, "decod": 287, "molecul": 287, "manual": 287, "read": 287, "thing": 287, "you": 287, "can": 287, "modifi": 287, "basic": 287, "mix": 287, "gga": 287, "u": 287, "run": 287, "manag": 287, "calcul": 287, "high": 287, "throughput": 287, "assimil": 287, "simpl": 287, "make": 287, "phase": 287, "diagram": 287, "anoth": 287, "reaction": 287, "energi": 287, "rest": 287, "integr": 287, "project": 287, "api": 287, "queri": 287, "method": 287, "pmg_mapi_kei": 287, "config": 287, "file": 287}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Pymatgen Add-ons and External Tools": [[0, "pymatgen-add-ons-and-external-tools"]], "Add-ons": [[0, "add-ons"]], "Add-ons for Analysis": [[0, "add-ons-for-analysis"]], "Add-ons for Input/Output": [[0, "add-ons-for-input-output"]], "Add-ons for External Services": [[0, "add-ons-for-external-services"]], "External Tools": [[0, "external-tools"]], "Change log": [[1, "change-log"], [4, "change-log"], [6, "change-log"], [7, "change-log"]], "v2023.6.28": [[1, "v2023-6-28"], [4, "v2023-6-28"], [6, "v2023-6-28"], [7, "v2023-6-28"]], "v2023.6.23": [[1, "v2023-6-23"]], "v2023.5.31": [[1, "v2023-5-31"]], "v2023.5.10": [[1, "v2023-5-10"]], "v2023.5.8": [[1, "v2023-5-8"]], "\u2757 The Yb_2 deprecation release \u2757": [[1, "the-yb-2-deprecation-release"]], "v2023.3.23": [[1, "v2023-3-23"]], "v2023.3.10": [[1, "v2023-3-10"]], "v2023.2.28": [[1, "v2023-2-28"]], "v2023.2.22": [[1, "v2023-2-22"]], "v2023.1.30": [[1, "v2023-1-30"]], "v2023.1.20": [[1, "v2023-1-20"]], "v2023.1.9": [[1, "v2023-1-9"]], "v2022.11.7": [[1, "v2022-11-7"]], "v2022.11.1": [[1, "v2022-11-1"]], "v2022.10.22": [[1, "v2022-10-22"]], "v2022.9.21": [[1, "v2022-9-21"]], "v2022.9.8": [[1, "v2022-9-8"]], "v2022.8.23": [[1, "v2022-8-23"]], "v2022.7.25": [[1, "v2022-7-25"]], "v2022.7.24.1": [[1, "v2022-7-24-1"]], "v2022.7.24": [[1, "v2022-7-24"]], "v2022.7.19": [[1, "v2022-7-19"]], "v2022.7.8": [[1, "v2022-7-8"]], "v2022.5.26": [[1, "v2022-5-26"]], "v2022.5.19": [[1, "v2022-5-19"]], "v2022.5.18.1": [[1, "v2022-5-18-1"]], "v2022.5.18": [[1, "v2022-5-18"]], "v2022.5.17": [[1, "v2022-5-17"]], "v2022.4.26": [[1, "v2022-4-26"]], "v2022.4.19": [[1, "v2022-4-19"]], "v2022.3.29": [[1, "v2022-3-29"]], "v2022.3.24": [[1, "v2022-3-24"]], "v2022.3.22": [[1, "v2022-3-22"]], "v2022.3.7": [[1, "v2022-3-7"]], "v2022.2.10": [[1, "v2022-2-10"]], "v2022.2.7": [[1, "v2022-2-7"]], "v2022.2.1": [[1, "v2022-2-1"], [2, "v2022-2-1"]], "v2022.1.24": [[1, "v2022-1-24"]], "v2022.1.20": [[1, "v2022-1-20"]], "v2022.1.9": [[1, "v2022-1-9"]], "v2022.1.8": [[1, "v2022-1-8"]], "v2022.0.17": [[1, "v2022-0-17"]], "v2022.0.16": [[1, "v2022-0-16"]], "v2022.0.15": [[1, "v2022-0-15"]], "v2022.0.14": [[1, "v2022-0-14"]], "v2022.0.13": [[1, "v2022-0-13"]], "v2022.0.12": [[1, "v2022-0-12"]], "v2022.0.11": [[1, "v2022-0-11"]], "v2022.0.10": [[1, "v2022-0-10"]], "v2022.0.9": [[1, "v2022-0-9"]], "v2022.0.8": [[1, "v2022-0-8"]], "v2022.0.7": [[1, "v2022-0-7"]], "v2022.0.6": [[1, "v2022-0-6"]], "v2022.0.5": [[1, "v2022-0-5"]], "v2022.0.4 / v2021.3.9": [[1, "v2022-0-4-v2021-3-9"]], "v2022.0.3": [[1, "v2022-0-3"]], "v2022.0.2 (Yanked)": [[1, "v2022-0-2-yanked"]], "v2022.0.1 (Yanked)": [[1, "v2022-0-1-yanked"]], "v2022.0.0 (Yanked)": [[1, "v2022-0-0-yanked"]], "v2021.3.5": [[1, "v2021-3-5"]], "v2021.3.4 (Yanked)": [[1, "v2021-3-4-yanked"]], "v2021.3.3": [[1, "v2021-3-3"], [2, "v2021-3-3"]], "v2021.2.16": [[1, "v2021-2-16"]], "v2021.2.14": [[1, "v2021-2-14"]], "v2021.2.12": [[1, "v2021-2-12"]], "v2021.2.8.1": [[1, "v2021-2-8-1"], [2, "v2021-2-8-1"]], "v2021.2.8": [[1, "v2021-2-8"]], "v2021.1.28": [[1, "v2021-1-28"]], "v2020.12.31": [[1, "v2020-12-31"]], "v2020.12.18": [[1, "v2020-12-18"]], "v2020.12.3": [[1, "v2020-12-3"]], "v2020.11.11": [[1, "v2020-11-11"]], "v2020.10.20": [[1, "v2020-10-20"], [2, "v2020-10-20"]], "v2020.10.9": [[1, "v2020-10-9"]], "v2020.9.14": [[1, "v2020-9-14"]], "v2020.8.13": [[1, "v2020-8-13"]], "v2020.8.3": [[1, "v2020-8-3"]], "v2020.7.18": [[1, "v2020-7-18"]], "v2020.7.16": [[1, "v2020-7-16"]], "v2020.7.14": [[1, "v2020-7-14"]], "v2020.7.10": [[1, "v2020-7-10"]], "v2020.7.3": [[1, "v2020-7-3"]], "v2020.6.8": [[1, "v2020-6-8"]], "v2020.4.29": [[1, "v2020-4-29"]], "v2020.4.2": [[1, "v2020-4-2"]], "v2020.3.13": [[1, "v2020-3-13"]], "v2020.3.2": [[1, "v2020-3-2"]], "v2020.1.28": [[1, "v2020-1-28"]], "v2020.1.10": [[1, "v2020-1-10"]], "v2019.12.22": [[1, "v2019-12-22"]], "v2019.12.3": [[1, "v2019-12-3"]], "v2019.11.11": [[1, "v2019-11-11"]], "v2019.10.16": [[1, "v2019-10-16"]], "v2019.10.4": [[1, "v2019-10-4"]], "v2019.10.3": [[1, "v2019-10-3"]], "v2019.10.2": [[1, "v2019-10-2"]], "v2019.9.16": [[1, "v2019-9-16"]], "v2019.9.12": [[1, "v2019-9-12"]], "v2019.9.8": [[1, "v2019-9-8"]], "v2019.9.7": [[1, "v2019-9-7"]], "v2019.8.23": [[1, "v2019-8-23"]], "v2019.8.14": [[1, "v2019-8-14"]], "v2019.7.30": [[1, "v2019-7-30"]], "v2019.7.21": [[1, "v2019-7-21"]], "v2019.7.2": [[1, "v2019-7-2"]], "v2019.6.20": [[1, "v2019-6-20"]], "v2019.6.5": [[1, "v2019-6-5"]], "v2019.5.28": [[1, "v2019-5-28"]], "v2019.5.8": [[1, "v2019-5-8"]], "v2019.5.1": [[1, "v2019-5-1"]], "v2019.4.11": [[1, "v2019-4-11"]], "v2019.3.27": [[1, "v2019-3-27"]], "v2019.3.13": [[1, "v2019-3-13"]], "v2019.2.28": [[1, "v2019-2-28"]], "v2019.2.24": [[1, "v2019-2-24"]], "v2019.2.4": [[1, "v2019-2-4"]], "v2019.1.24": [[1, "v2019-1-24"]], "v2019.1.13": [[1, "v2019-1-13"]], "v2018.12.12": [[1, "v2018-12-12"]], "v2018.11.30": [[1, "v2018-11-30"]], "v2018.11.6": [[1, "v2018-11-6"]], "v2018.10.18": [[1, "v2018-10-18"]], "v2018.9.30": [[1, "v2018-9-30"]], "v2018.9.19": [[1, "v2018-9-19"]], "v2018.9.12": [[1, "v2018-9-12"]], "v2018.8.10": [[1, "v2018-8-10"]], "v2018.8.7": [[1, "v2018-8-7"]], "v2018.7.15": [[1, "v2018-7-15"]], "v2018.6.27": [[1, "v2018-6-27"]], "v2018.6.11": [[1, "v2018-6-11"]], "v2018.5.22": [[1, "v2018-5-22"]], "v2018.5.21": [[1, "v2018-5-21"]], "v2018.5.14": [[1, "v2018-5-14"]], "v2018.5.3": [[1, "v2018-5-3"]], "v2018.4.20": [[1, "v2018-4-20"]], "v2018.4.6": [[1, "v2018-4-6"]], "v2018.3.22": [[1, "v2018-3-22"]], "v2018.3.14": [[1, "v2018-3-14"]], "v2018.3.13": [[1, "v2018-3-13"]], "v2018.3.2": [[1, "v2018-3-2"]], "v2018.2.13": [[1, "v2018-2-13"]], "v2018.1.29": [[1, "v2018-1-29"]], "v2018.1.19": [[1, "v2018-1-19"]], "v2017.12.30": [[1, "v2017-12-30"]], "v2017.12.16": [[1, "v2017-12-16"]], "v2017.12.15": [[1, "v2017-12-15"]], "v2017.12.8": [[1, "v2017-12-8"]], "v2017.12.6": [[1, "v2017-12-6"]], "v2017.11.30": [[1, "v2017-11-30"]], "v2017.11.27": [[1, "v2017-11-27"]], "v2017.11.9": [[1, "v2017-11-9"]], "v2017.11.6": [[1, "v2017-11-6"]], "v2017.10.16": [[1, "v2017-10-16"]], "v2017.9.29": [[1, "v2017-9-29"]], "v2017.9.23": [[1, "v2017-9-23"]], "v2017.9.3": [[1, "v2017-9-3"]], "v2017.9.1": [[1, "v2017-9-1"]], "v2017.8.21": [[1, "v2017-8-21"]], "v2017.8.20": [[1, "v2017-8-20"]], "v2017.8.16": [[1, "v2017-8-16"]], "v2017.8.14": [[1, "v2017-8-14"]], "v2017.8.4": [[1, "v2017-8-4"]], "v2017.7.21": [[1, "v2017-7-21"]], "v2017.7.4": [[1, "v2017-7-4"]], "v2017.6.24": [[1, "v2017-6-24"]], "v2017.6.22": [[1, "v2017-6-22"]], "v2017.6.8": [[1, "v2017-6-8"]], "v4.7.7": [[1, "v4-7-7"]], "v4.7.6": [[1, "v4-7-6"]], "v4.7.5": [[1, "v4-7-5"]], "v4.7.4": [[1, "v4-7-4"]], "v4.7.3": [[1, "v4-7-3"]], "v4.7.2": [[1, "v4-7-2"]], "v4.7.1": [[1, "v4-7-1"]], "v4.7.0": [[1, "v4-7-0"]], "v4.6.2": [[1, "v4-6-2"]], "v4.6.1": [[1, "v4-6-1"]], "v4.6.0": [[1, "v4-6-0"]], "v4.5.7": [[1, "v4-5-7"]], "v4.5.6": [[1, "v4-5-6"]], "v4.5.5": [[1, "v4-5-5"]], "v4.5.4": [[1, "v4-5-4"]], "v4.5.3": [[1, "v4-5-3"]], "v4.5.2": [[1, "v4-5-2"]], "v4.5.1": [[1, "v4-5-1"]], "v4.5.0": [[1, "v4-5-0"]], "v4.4.12": [[1, "v4-4-12"]], "v4.4.11": [[1, "v4-4-11"]], "v4.4.10": [[1, "v4-4-10"]], "v4.4.9": [[1, "v4-4-9"]], "v4.4.8": [[1, "v4-4-8"]], "v4.4.7": [[1, "v4-4-7"]], "v4.4.6": [[1, "v4-4-6"]], "v4.4.5": [[1, "v4-4-5"]], "v4.4.4": [[1, "v4-4-4"]], "v4.4.3": [[1, "v4-4-3"]], "v4.4.2": [[1, "v4-4-2"]], "v4.4.1": [[1, "v4-4-1"]], "v4.4.0": [[1, "v4-4-0"]], "v4.3.2": [[1, "v4-3-2"]], "v4.3.1": [[1, "v4-3-1"]], "v4.3.0": [[1, "v4-3-0"]], "v4.2.5": [[1, "v4-2-5"]], "v4.2.4": [[1, "v4-2-4"]], "v4.2.3": [[1, "v4-2-3"]], "v4.2.2": [[1, "v4-2-2"]], "v4.2.1": [[1, "v4-2-1"]], "v4.2.0": [[1, "v4-2-0"]], "v4.1.1": [[1, "v4-1-1"]], "v4.1.0": [[1, "v4-1-0"]], "v4.0.2": [[1, "v4-0-2"]], "v4.0.1": [[1, "v4-0-1"]], "v4.0.0": [[1, "v4-0-0"]], "v3.7.1": [[1, "v3-7-1"]], "v3.7.0": [[1, "v3-7-0"]], "v3.6.1": [[1, "v3-6-1"]], "v3.6.0": [[1, "v3-6-0"]], "v3.5.3": [[1, "v3-5-3"]], "v3.5.2": [[1, "v3-5-2"]], "v3.5.1": [[1, "v3-5-1"]], "v3.5.0": [[1, "v3-5-0"]], "v3.4.0": [[1, "v3-4-0"]], "v3.3.6": [[1, "v3-3-6"]], "v3.3.5": [[1, "v3-3-5"]], "v3.3.4": [[1, "v3-3-4"]], "v3.3.3": [[1, "v3-3-3"]], "v3.3.2": [[1, "v3-3-2"]], "v3.3.1": [[1, "v3-3-1"]], "v3.3.0": [[1, "v3-3-0"]], "v3.2.10": [[1, "v3-2-10"]], "v3.2.9": [[1, "v3-2-9"]], "v3.2.8": [[1, "v3-2-8"]], "v3.2.7": [[1, "v3-2-7"]], "v3.2.6": [[1, "v3-2-6"]], "v3.2.5": [[1, "v3-2-5"]], "v3.2.4": [[1, "v3-2-4"]], "v3.2.3": [[1, "v3-2-3"]], "v3.2.1": [[1, "v3-2-1"]], "v3.2.0": [[1, "v3-2-0"]], "v3.1.9": [[1, "v3-1-9"]], "v3.1.7": [[1, "v3-1-7"]], "v3.1.6": [[1, "v3-1-6"]], "v3.1.5": [[1, "v3-1-5"]], "v3.1.4": [[1, "v3-1-4"]], "v3.1.3": [[1, "v3-1-3"]], "v3.1.2": [[1, "v3-1-2"]], "v3.1.1": [[1, "v3-1-1"]], "v3.1.0": [[1, "v3-1-0"]], "v3.0.13": [[1, "v3-0-13"]], "v3.0.11": [[1, "v3-0-11"]], "v3.0.10": [[1, "v3-0-10"]], "v3.0.9": [[1, "v3-0-9"]], "v3.0.8": [[1, "v3-0-8"]], "v3.0.7": [[1, "v3-0-7"]], "v3.0.6": [[1, "v3-0-6"]], "v3.0.5": [[1, "v3-0-5"]], "v3.0.4": [[1, "v3-0-4"]], "v3.0.3": [[1, "v3-0-3"]], "v3.0.2": [[1, "v3-0-2"]], "v3.0.1": [[1, "v3-0-1"]], "v3.0.0": [[1, "v3-0-0"]], "v2.10.6": [[1, "v2-10-6"]], "v2.10.5": [[1, "v2-10-5"]], "v2.10.3": [[1, "v2-10-3"]], "v2.10.2": [[1, "v2-10-2"]], "v2.10.1": [[1, "v2-10-1"]], "v2.10.0": [[1, "v2-10-0"]], "v2.9.14": [[1, "v2-9-14"]], "v2.9.13": [[1, "v2-9-13"]], "v2.9.12": [[1, "v2-9-12"]], "v2.9.11": [[1, "v2-9-11"]], "v2.9.10": [[1, "v2-9-10"]], "v2.9.9": [[1, "v2-9-9"]], "v2.9.8": [[1, "v2-9-8"]], "v2.9.7": [[1, "v2-9-7"]], "v2.9.6": [[1, "v2-9-6"]], "v2.9.5": [[1, "v2-9-5"]], "v2.9.4": [[1, "v2-9-4"]], "v2.9.3": [[1, "v2-9-3"]], "v2.9.2": [[1, "v2-9-2"]], "v2.9.1": [[1, "v2-9-1"]], "v2.9.0": [[1, "v2-9-0"]], "v2.8.10": [[1, "v2-8-10"]], "v2.8.9": [[1, "v2-8-9"]], "v2.8.8": [[1, "v2-8-8"]], "v2.8.7": [[1, "v2-8-7"]], "v2.8.6": [[1, "v2-8-6"]], "v2.8.4": [[1, "v2-8-4"]], "v2.8.3": [[1, "v2-8-3"]], "v2.8.2": [[1, "v2-8-2"]], "v2.8.1": [[1, "v2-8-1"]], "v2.8.0": [[1, "v2-8-0"]], "v2.7.9": [[1, "v2-7-9"]], "v2.7.7": [[1, "v2-7-7"]], "v2.7.6": [[1, "v2-7-6"]], "v2.7.5": [[1, "v2-7-5"]], "v2.7.4": [[1, "v2-7-4"]], "v2.7.2": [[1, "v2-7-2"]], "v2.7.1": [[1, "v2-7-1"]], "v2.7.0": [[1, "v2-7-0"]], "v2.6.6": [[1, "v2-6-6"]], "v2.6.5": [[1, "v2-6-5"]], "v2.6.4": [[1, "v2-6-4"]], "v2.6.3": [[1, "v2-6-3"]], "v2.6.2": [[1, "v2-6-2"]], "v2.6.1": [[1, "v2-6-1"]], "v2.5.5": [[1, "v2-5-5"]], "v2.5.4": [[1, "v2-5-4"]], "v2.5.3": [[1, "v2-5-3"]], "v2.5.1": [[1, "v2-5-1"]], "v2.5.0": [[1, "v2-5-0"]], "v2.4.3": [[1, "v2-4-3"]], "v2.4.0": [[1, "v2-4-0"]], "v2.3.2": [[1, "v2-3-2"]], "v2.3.1": [[1, "v2-3-1"]], "v2.3.0": [[1, "v2-3-0"]], "v2.2.6": [[1, "v2-2-6"]], "v2.2.4": [[1, "v2-2-4"]], "v2.2.3": [[1, "v2-2-3"]], "v2.2.2": [[1, "v2-2-2"]], "v2.2.1": [[1, "v2-2-1"]], "v2.2.0": [[1, "v2-2-0"]], "v2.1.2": [[1, "v2-1-2"]], "v2.0.0": [[1, "v2-0-0"]], "v1.9.0": [[1, "v1-9-0"]], "v1.8.3": [[1, "v1-8-3"]], "v1.8.1": [[1, "v1-8-1"]], "v1.8.0": [[1, "v1-8-0"]], "v1.7.2": [[1, "v1-7-2"]], "v1.7.0": [[1, "v1-7-0"]], "v1.6.0": [[1, "v1-6-0"]], "Compatibility": [[2, "compatibility"]], "Depending on Pymatgen": [[2, "depending-on-pymatgen"]], "Minimum Python Version": [[2, "minimum-python-version"]], "Recent Breaking Changes": [[2, "recent-breaking-changes"]], "v2022.01.08": [[2, "v2022-01-08"]], "v2022.0.0": [[2, "v2022-0-0"]], "Contributing": [[3, "contributing"], [4, "contributing"], [6, "contributing"]], "Direct contributions to pymatgen main distribution": [[3, "direct-contributions-to-pymatgen-main-distribution"]], "Writing add-ons for pymatgen": [[3, "writing-add-ons-for-pymatgen"]], "Existing add-ons and ecosystem tools": [[3, "existing-add-ons-and-ecosystem-tools"]], "Coding Guidelines": [[3, "coding-guidelines"]], "Introduction": [[4, "introduction"], [6, "introduction"]], "Major Announcement (v2022.0.*)": [[4, "major-announcement-v2022-0"], [6, "major-announcement-v2022-0"]], "Matgenie & Examples": [[4, "matgenie-examples"], [6, "matgenie-examples"]], "Why use pymatgen?": [[4, "why-use-pymatgen"], [6, "why-use-pymatgen"]], "Getting pymatgen": [[4, "getting-pymatgen"], [6, "getting-pymatgen"]], "Usage": [[4, "usage"], [6, "usage"], [287, "usage"]], "Reporting bugs": [[4, "reporting-bugs"], [6, "reporting-bugs"]], "Developing new functionality": [[4, "developing-new-functionality"], [6, "developing-new-functionality"]], "How to cite pymatgen": [[4, "how-to-cite-pymatgen"], [6, "how-to-cite-pymatgen"]], "License": [[4, "license"], [6, "license"]], "About the Team": [[4, "about-the-team"], [6, "about-the-team"]], "Copyright Policy": [[4, "copyright-policy"], [6, "copyright-policy"]], "Indices and tables": [[4, "indices-and-tables"], [6, "indices-and-tables"]], "Installation": [[5, "installation"]], "Requirements": [[5, "requirements"]], "Optional dependencies": [[5, "optional-dependencies"]], "Optional non-Python programs": [[5, "optional-non-python-programs"]], "Conda-based install": [[5, "conda-based-install"]], "Step 1: Install conda": [[5, "step-1-install-conda"]], "Step 2b: (Optional) Create a conda environment": [[5, "step-2b-optional-create-a-conda-environment"]], "Step 3: Install pymatgen": [[5, "step-3-install-pymatgen"]], "Step 4: (Optional) Install enumlib and bader (only for OSX and Linux)": [[5, "step-4-optional-install-enumlib-and-bader-only-for-osx-and-linux"]], "POTCAR Setup": [[5, "potcar-setup"]], "PyPy Support": [[5, "pypy-support"]], "Setup for Developers (using GitHub)": [[5, "setup-for-developers-using-github"]], "Step 1: Preparing your system": [[5, "step-1-preparing-your-system"]], "Windows": [[5, "windows"]], "Mac OSX": [[5, "mac-osx"]], "Linux": [[5, "linux"]], "Step 2: Install pymatgen in developmental mode": [[5, "step-2-install-pymatgen-in-developmental-mode"]], "Installation tips for optional libraries": [[5, "installation-tips-for-optional-libraries"]], "VTK on Mac OS X (tested on v7.0)": [[5, "vtk-on-mac-os-x-tested-on-v7-0"]], "OpenBabel Mac OS X (tested on v2.3.2)": [[5, "openbabel-mac-os-x-tested-on-v2-3-2"]], "Zeo++": [[5, "zeo"]], "pymatgen": [[8, "pymatgen"]], "pymatgen namespace": [[9, "module-pymatgen"]], "Subpackages": [[9, "subpackages"], [10, "subpackages"], [14, "subpackages"], [18, "subpackages"], [19, "subpackages"], [24, "subpackages"], [31, "subpackages"], [42, "subpackages"], [49, "subpackages"], [57, "subpackages"], [61, "subpackages"], [67, "subpackages"], [72, "subpackages"], [87, "subpackages"], [91, "subpackages"], [98, "subpackages"], [102, "subpackages"], [105, "subpackages"], [106, "subpackages"], [112, "subpackages"], [127, "subpackages"], [135, "subpackages"], [154, "subpackages"], [162, "subpackages"], [169, "subpackages"], [173, "subpackages"], [174, "subpackages"], [188, "subpackages"], [194, "subpackages"], [196, "subpackages"], [203, "subpackages"], [211, "subpackages"], [220, "subpackages"], [228, "subpackages"], [237, "subpackages"], [242, "subpackages"], [246, "subpackages"], [253, "subpackages"], [262, "subpackages"], [267, "subpackages"], [281, "subpackages"]], "Submodules": [[9, "submodules"], [10, "submodules"], [14, "submodules"], [19, "submodules"], [24, "submodules"], [31, "submodules"], [42, "submodules"], [49, "submodules"], [57, "submodules"], [61, "submodules"], [67, "submodules"], [72, "submodules"], [87, "submodules"], [91, "submodules"], [98, "submodules"], [102, "submodules"], [106, "submodules"], [112, "submodules"], [115, "submodules"], [127, "submodules"], [135, "submodules"], [154, "submodules"], [162, "submodules"], [169, "submodules"], [173, "submodules"], [174, "submodules"], [188, "submodules"], [194, "submodules"], [196, "submodules"], [203, "submodules"], [211, "submodules"], [220, "submodules"], [228, "submodules"], [237, "submodules"], [242, "submodules"], [246, "submodules"], [253, "submodules"], [262, "submodules"], [267, "submodules"], [281, "submodules"]], "pymatgen.alchemy package": [[10, "pymatgen-alchemy-package"]], "Module contents": [[10, "module-pymatgen.alchemy"], [18, "module-pymatgen.analysis.chemenv"], [19, "module-pymatgen.analysis.chemenv.connectivity"], [24, "module-pymatgen.analysis.chemenv.coordination_environments"], [27, "module-pymatgen.analysis.chemenv.coordination_environments.coordination_geometries_files"], [31, "module-pymatgen.analysis.chemenv.utils"], [42, "module-pymatgen.analysis.diffraction"], [49, "module-pymatgen.analysis.elasticity"], [57, "module-pymatgen.analysis.ferroelectricity"], [61, "module-pymatgen.analysis.gb"], [67, "module-pymatgen.analysis.interfaces"], [72, "module-pymatgen.analysis.magnetism"], [87, "module-pymatgen.analysis.solar"], [91, "module-pymatgen.analysis.structure_prediction"], [98, "module-pymatgen.analysis.topological"], [102, "module-pymatgen.analysis.xas"], [105, "module-pymatgen.apps"], [106, "module-pymatgen.apps.battery"], [112, "module-pymatgen.apps.borg"], [115, "module-pymatgen.cli"], [127, "module-pymatgen.command_line"], [135, "module-pymatgen.core"], [154, "module-pymatgen.electronic_structure"], [162, "module-pymatgen.entries"], [174, "module-pymatgen.io.abinit"], [188, "module-pymatgen.io.cp2k"], [194, "module-pymatgen.io.exciting"], [196, "module-pymatgen.io.feff"], [203, "module-pymatgen.io.lammps"], [211, "module-pymatgen.io.lobster"], [220, "module-pymatgen.io.qchem"], [228, "module-pymatgen.io.vasp"], [237, "module-pymatgen.io.xtb"], [242, "module-pymatgen.optimization"], [246, "module-pymatgen.phonon"], [253, "module-pymatgen.symmetry"], [262, "module-pymatgen.transformations"], [267, "module-pymatgen.util"], [281, "module-pymatgen.vis"]], "pymatgen.alchemy.filters module": [[11, "module-pymatgen.alchemy.filters"]], "pymatgen.alchemy.materials module": [[12, "module-pymatgen.alchemy.materials"]], "pymatgen.alchemy.transmuters module": [[13, "module-pymatgen.alchemy.transmuters"]], "pymatgen.analysis namespace": [[14, "module-pymatgen.analysis"]], "pymatgen.analysis.adsorption module": [[15, "module-pymatgen.analysis.adsorption"]], "pymatgen.analysis.bond_dissociation module": [[16, "module-pymatgen.analysis.bond_dissociation"]], "pymatgen.analysis.bond_valence module": [[17, "module-pymatgen.analysis.bond_valence"]], "pymatgen.analysis.chemenv package": [[18, "pymatgen-analysis-chemenv-package"]], "pymatgen.analysis.chemenv.connectivity package": [[19, "pymatgen-analysis-chemenv-connectivity-package"]], "pymatgen.analysis.chemenv.connectivity.connected_components module": [[20, "module-pymatgen.analysis.chemenv.connectivity.connected_components"]], "pymatgen.analysis.chemenv.connectivity.connectivity_finder module": [[21, "module-pymatgen.analysis.chemenv.connectivity.connectivity_finder"]], "pymatgen.analysis.chemenv.connectivity.environment_nodes module": [[22, "module-pymatgen.analysis.chemenv.connectivity.environment_nodes"]], "pymatgen.analysis.chemenv.connectivity.structure_connectivity module": [[23, "module-pymatgen.analysis.chemenv.connectivity.structure_connectivity"]], "pymatgen.analysis.chemenv.coordination_environments package": [[24, "pymatgen-analysis-chemenv-coordination-environments-package"]], "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies module": [[25, "module-pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies"]], "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries module": [[26, "module-pymatgen.analysis.chemenv.coordination_environments.coordination_geometries"]], "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries_files package": [[27, "pymatgen-analysis-chemenv-coordination-environments-coordination-geometries-files-package"]], "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder module": [[28, "module-pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder"]], "pymatgen.analysis.chemenv.coordination_environments.structure_environments module": [[29, "module-pymatgen.analysis.chemenv.coordination_environments.structure_environments"]], "pymatgen.analysis.chemenv.coordination_environments.voronoi module": [[30, "module-pymatgen.analysis.chemenv.coordination_environments.voronoi"]], "pymatgen.analysis.chemenv.utils package": [[31, "pymatgen-analysis-chemenv-utils-package"]], "pymatgen.analysis.chemenv.utils.chemenv_config module": [[32, "module-pymatgen.analysis.chemenv.utils.chemenv_config"]], "pymatgen.analysis.chemenv.utils.chemenv_errors module": [[33, "module-pymatgen.analysis.chemenv.utils.chemenv_errors"]], "pymatgen.analysis.chemenv.utils.coordination_geometry_utils module": [[34, "module-pymatgen.analysis.chemenv.utils.coordination_geometry_utils"]], "pymatgen.analysis.chemenv.utils.defs_utils module": [[35, "module-pymatgen.analysis.chemenv.utils.defs_utils"]], "pymatgen.analysis.chemenv.utils.func_utils module": [[36, "module-pymatgen.analysis.chemenv.utils.func_utils"]], "pymatgen.analysis.chemenv.utils.graph_utils module": [[37, "module-pymatgen.analysis.chemenv.utils.graph_utils"]], "pymatgen.analysis.chemenv.utils.math_utils module": [[38, "module-pymatgen.analysis.chemenv.utils.math_utils"]], "pymatgen.analysis.chemenv.utils.scripts_utils module": [[39, "module-pymatgen.analysis.chemenv.utils.scripts_utils"]], "pymatgen.analysis.chempot_diagram module": [[40, "module-pymatgen.analysis.chempot_diagram"]], "pymatgen.analysis.cost module": [[41, "module-pymatgen.analysis.cost"]], "pymatgen.analysis.diffraction package": [[42, "pymatgen-analysis-diffraction-package"]], "pymatgen.analysis.diffraction.core module": [[43, "module-pymatgen.analysis.diffraction.core"]], "pymatgen.analysis.diffraction.neutron module": [[44, "module-pymatgen.analysis.diffraction.neutron"]], "pymatgen.analysis.diffraction.tem module": [[45, "module-pymatgen.analysis.diffraction.tem"]], "pymatgen.analysis.diffraction.xrd module": [[46, "module-pymatgen.analysis.diffraction.xrd"]], "pymatgen.analysis.dimensionality module": [[47, "module-pymatgen.analysis.dimensionality"]], "pymatgen.analysis.disorder module": [[48, "module-pymatgen.analysis.disorder"]], "pymatgen.analysis.elasticity package": [[49, "pymatgen-analysis-elasticity-package"]], "pymatgen.analysis.elasticity.elastic module": [[50, "module-pymatgen.analysis.elasticity.elastic"]], "pymatgen.analysis.elasticity.strain module": [[51, "module-pymatgen.analysis.elasticity.strain"]], "pymatgen.analysis.elasticity.stress module": [[52, "module-pymatgen.analysis.elasticity.stress"]], "pymatgen.analysis.energy_models module": [[53, "module-pymatgen.analysis.energy_models"]], "pymatgen.analysis.eos module": [[54, "module-pymatgen.analysis.eos"]], "pymatgen.analysis.ewald module": [[55, "module-pymatgen.analysis.ewald"]], "pymatgen.analysis.excitation module": [[56, "module-pymatgen.analysis.excitation"]], "pymatgen.analysis.ferroelectricity package": [[57, "pymatgen-analysis-ferroelectricity-package"]], "pymatgen.analysis.ferroelectricity.polarization module": [[58, "module-pymatgen.analysis.ferroelectricity.polarization"]], "pymatgen.analysis.fragmenter module": [[59, "module-pymatgen.analysis.fragmenter"]], "pymatgen.analysis.functional_groups module": [[60, "module-pymatgen.analysis.functional_groups"]], "pymatgen.analysis.gb package": [[61, "pymatgen-analysis-gb-package"]], "pymatgen.analysis.gb.grain module": [[62, "module-pymatgen.analysis.gb.grain"]], "pymatgen.analysis.graphs module": [[63, "module-pymatgen.analysis.graphs"]], "pymatgen.analysis.hhi module": [[64, "module-pymatgen.analysis.hhi"]], "pymatgen.analysis.interface module": [[65, "module-pymatgen.analysis.interface"]], "pymatgen.analysis.interface_reactions module": [[66, "module-pymatgen.analysis.interface_reactions"]], "pymatgen.analysis.interfaces package": [[67, "pymatgen-analysis-interfaces-package"]], "pymatgen.analysis.interfaces.coherent_interfaces module": [[68, "module-pymatgen.analysis.interfaces.coherent_interfaces"]], "pymatgen.analysis.interfaces.substrate_analyzer module": [[69, "module-pymatgen.analysis.interfaces.substrate_analyzer"]], "pymatgen.analysis.interfaces.zsl module": [[70, "module-pymatgen.analysis.interfaces.zsl"]], "pymatgen.analysis.local_env module": [[71, "module-pymatgen.analysis.local_env"]], "pymatgen.analysis.magnetism package": [[72, "pymatgen-analysis-magnetism-package"]], "pymatgen.analysis.magnetism.analyzer module": [[73, "module-pymatgen.analysis.magnetism.analyzer"]], "pymatgen.analysis.magnetism.heisenberg module": [[74, "module-pymatgen.analysis.magnetism.heisenberg"]], "pymatgen.analysis.magnetism.jahnteller module": [[75, "module-pymatgen.analysis.magnetism.jahnteller"]], "pymatgen.analysis.molecule_matcher module": [[76, "module-pymatgen.analysis.molecule_matcher"]], "pymatgen.analysis.molecule_structure_comparator module": [[77, "module-pymatgen.analysis.molecule_structure_comparator"]], "pymatgen.analysis.nmr module": [[78, "module-pymatgen.analysis.nmr"]], "pymatgen.analysis.path_finder module": [[79, "module-pymatgen.analysis.path_finder"]], "pymatgen.analysis.phase_diagram module": [[80, "module-pymatgen.analysis.phase_diagram"]], "pymatgen.analysis.piezo module": [[81, "module-pymatgen.analysis.piezo"]], "pymatgen.analysis.piezo_sensitivity module": [[82, "module-pymatgen.analysis.piezo_sensitivity"]], "pymatgen.analysis.pourbaix_diagram module": [[83, "module-pymatgen.analysis.pourbaix_diagram"]], "pymatgen.analysis.prototypes module": [[84, "module-pymatgen.analysis.prototypes"]], "pymatgen.analysis.quasiharmonic module": [[85, "module-pymatgen.analysis.quasiharmonic"]], "pymatgen.analysis.reaction_calculator module": [[86, "module-pymatgen.analysis.reaction_calculator"]], "pymatgen.analysis.solar package": [[87, "pymatgen-analysis-solar-package"]], "pymatgen.analysis.solar.slme module": [[88, "module-pymatgen.analysis.solar.slme"]], "pymatgen.analysis.structure_analyzer module": [[89, "module-pymatgen.analysis.structure_analyzer"]], "pymatgen.analysis.structure_matcher module": [[90, "module-pymatgen.analysis.structure_matcher"]], "pymatgen.analysis.structure_prediction package": [[91, "pymatgen-analysis-structure-prediction-package"]], "pymatgen.analysis.structure_prediction.dopant_predictor module": [[92, "module-pymatgen.analysis.structure_prediction.dopant_predictor"]], "pymatgen.analysis.structure_prediction.substitution_probability module": [[93, "module-pymatgen.analysis.structure_prediction.substitution_probability"]], "pymatgen.analysis.structure_prediction.substitutor module": [[94, "module-pymatgen.analysis.structure_prediction.substitutor"]], "pymatgen.analysis.structure_prediction.volume_predictor module": [[95, "module-pymatgen.analysis.structure_prediction.volume_predictor"]], "pymatgen.analysis.surface_analysis module": [[96, "module-pymatgen.analysis.surface_analysis"]], "pymatgen.analysis.thermochemistry module": [[97, "module-pymatgen.analysis.thermochemistry"]], "pymatgen.analysis.topological package": [[98, "pymatgen-analysis-topological-package"]], "pymatgen.analysis.topological.spillage module": [[99, "module-pymatgen.analysis.topological.spillage"]], "pymatgen.analysis.transition_state module": [[100, "module-pymatgen.analysis.transition_state"]], "pymatgen.analysis.wulff module": [[101, "module-pymatgen.analysis.wulff"]], "pymatgen.analysis.xas package": [[102, "pymatgen-analysis-xas-package"]], "pymatgen.analysis.xas.spectrum module": [[103, "module-pymatgen.analysis.xas.spectrum"]], "pymatgen.analysis.xps module": [[104, "module-pymatgen.analysis.xps"]], "pymatgen.apps package": [[105, "pymatgen-apps-package"]], "pymatgen.apps.battery package": [[106, "pymatgen-apps-battery-package"]], "pymatgen.apps.battery.analyzer module": [[107, "module-pymatgen.apps.battery.analyzer"]], "pymatgen.apps.battery.battery_abc module": [[108, "module-pymatgen.apps.battery.battery_abc"]], "pymatgen.apps.battery.conversion_battery module": [[109, "module-pymatgen.apps.battery.conversion_battery"]], "pymatgen.apps.battery.insertion_battery module": [[110, "module-pymatgen.apps.battery.insertion_battery"]], "pymatgen.apps.battery.plotter module": [[111, "module-pymatgen.apps.battery.plotter"]], "pymatgen.apps.borg package": [[112, "pymatgen-apps-borg-package"]], "pymatgen.apps.borg.hive module": [[113, "module-pymatgen.apps.borg.hive"]], "pymatgen.apps.borg.queen module": [[114, "module-pymatgen.apps.borg.queen"]], "pymatgen.cli package": [[115, "pymatgen-cli-package"]], "pymatgen.cli.feff_plot_cross_section module": [[116, "module-pymatgen.cli.feff_plot_cross_section"]], "pymatgen.cli.feff_plot_dos module": [[117, "module-pymatgen.cli.feff_plot_dos"]], "pymatgen.cli.gaussian_analyzer module": [[118, "module-pymatgen.cli.gaussian_analyzer"]], "pymatgen.cli.get_environment module": [[119, "module-pymatgen.cli.get_environment"]], "pymatgen.cli.pmg module": [[120, "module-pymatgen.cli.pmg"]], "pymatgen.cli.pmg_analyze module": [[121, "module-pymatgen.cli.pmg_analyze"]], "pymatgen.cli.pmg_config module": [[122, "module-pymatgen.cli.pmg_config"]], "pymatgen.cli.pmg_plot module": [[123, "module-pymatgen.cli.pmg_plot"]], "pymatgen.cli.pmg_potcar module": [[124, "module-pymatgen.cli.pmg_potcar"]], "pymatgen.cli.pmg_query module": [[125, "module-pymatgen.cli.pmg_query"]], "pymatgen.cli.pmg_structure module": [[126, "module-pymatgen.cli.pmg_structure"]], "pymatgen.command_line package": [[127, "pymatgen-command-line-package"]], "pymatgen.command_line.bader_caller module": [[128, "module-pymatgen.command_line.bader_caller"]], "pymatgen.command_line.chargemol_caller module": [[129, "module-pymatgen.command_line.chargemol_caller"]], "pymatgen.command_line.critic2_caller module": [[130, "module-pymatgen.command_line.critic2_caller"]], "pymatgen.command_line.enumlib_caller module": [[131, "module-pymatgen.command_line.enumlib_caller"]], "pymatgen.command_line.gulp_caller module": [[132, "module-pymatgen.command_line.gulp_caller"]], "pymatgen.command_line.mcsqs_caller module": [[133, "module-pymatgen.command_line.mcsqs_caller"]], "pymatgen.command_line.vampire_caller module": [[134, "module-pymatgen.command_line.vampire_caller"]], "pymatgen.core package": [[135, "pymatgen-core-package"]], "pymatgen.core.bonds module": [[136, "module-pymatgen.core.bonds"]], "pymatgen.core.composition module": [[137, "module-pymatgen.core.composition"]], "pymatgen.core.interface module": [[138, "module-pymatgen.core.interface"]], "pymatgen.core.ion module": [[139, "module-pymatgen.core.ion"]], "pymatgen.core.lattice module": [[140, "module-pymatgen.core.lattice"]], "pymatgen.core.libxcfunc module": [[141, "module-pymatgen.core.libxcfunc"]], "pymatgen.core.molecular_orbitals module": [[142, "module-pymatgen.core.molecular_orbitals"]], "pymatgen.core.operations module": [[143, "module-pymatgen.core.operations"]], "pymatgen.core.periodic_table module": [[144, "module-pymatgen.core.periodic_table"]], "pymatgen.core.sites module": [[145, "module-pymatgen.core.sites"]], "pymatgen.core.spectrum module": [[146, "module-pymatgen.core.spectrum"]], "pymatgen.core.structure module": [[147, "module-pymatgen.core.structure"]], "pymatgen.core.surface module": [[148, "module-pymatgen.core.surface"]], "pymatgen.core.tensors module": [[149, "module-pymatgen.core.tensors"]], "pymatgen.core.trajectory module": [[150, "module-pymatgen.core.trajectory"]], "pymatgen.core.units module": [[151, "module-pymatgen.core.units"]], "pymatgen.core.xcfunc module": [[152, "module-pymatgen.core.xcfunc"]], "pymatgen.dao module": [[153, "module-pymatgen.dao"]], "pymatgen.electronic_structure package": [[154, "pymatgen-electronic-structure-package"]], "pymatgen.electronic_structure.bandstructure module": [[155, "module-pymatgen.electronic_structure.bandstructure"]], "pymatgen.electronic_structure.boltztrap module": [[156, "module-pymatgen.electronic_structure.boltztrap"]], "pymatgen.electronic_structure.boltztrap2 module": [[157, "pymatgen-electronic-structure-boltztrap2-module"]], "pymatgen.electronic_structure.cohp module": [[158, "module-pymatgen.electronic_structure.cohp"]], "pymatgen.electronic_structure.core module": [[159, "module-pymatgen.electronic_structure.core"]], "pymatgen.electronic_structure.dos module": [[160, "module-pymatgen.electronic_structure.dos"]], "pymatgen.electronic_structure.plotter module": [[161, "module-pymatgen.electronic_structure.plotter"]], "pymatgen.entries package": [[162, "pymatgen-entries-package"]], "pymatgen.entries.compatibility module": [[163, "module-pymatgen.entries.compatibility"]], "pymatgen.entries.computed_entries module": [[164, "module-pymatgen.entries.computed_entries"]], "pymatgen.entries.correction_calculator module": [[165, "module-pymatgen.entries.correction_calculator"]], "pymatgen.entries.entry_tools module": [[166, "module-pymatgen.entries.entry_tools"]], "pymatgen.entries.exp_entries module": [[167, "module-pymatgen.entries.exp_entries"]], "pymatgen.entries.mixing_scheme module": [[168, "module-pymatgen.entries.mixing_scheme"]], "pymatgen.ext namespace": [[169, "module-pymatgen.ext"]], "pymatgen.ext.cod module": [[170, "module-pymatgen.ext.cod"]], "pymatgen.ext.matproj module": [[171, "module-pymatgen.ext.matproj"]], "pymatgen.ext.optimade module": [[172, "module-pymatgen.ext.optimade"]], "pymatgen.io namespace": [[173, "module-pymatgen.io"]], "pymatgen.io.abinit package": [[174, "pymatgen-io-abinit-package"]], "pymatgen.io.abinit.abiobjects module": [[175, "module-pymatgen.io.abinit.abiobjects"]], "pymatgen.io.abinit.abitimer module": [[176, "module-pymatgen.io.abinit.abitimer"]], "pymatgen.io.abinit.inputs module": [[177, "module-pymatgen.io.abinit.inputs"]], "pymatgen.io.abinit.netcdf module": [[178, "module-pymatgen.io.abinit.netcdf"]], "pymatgen.io.abinit.pseudos module": [[179, "module-pymatgen.io.abinit.pseudos"]], "pymatgen.io.abinit.variable module": [[180, "module-pymatgen.io.abinit.variable"]], "pymatgen.io.adf module": [[181, "module-pymatgen.io.adf"]], "Attributes:": [[181, "attributes"]], "Notes:": [[181, "notes"]], "pymatgen.io.ase module": [[182, "module-pymatgen.io.ase"]], "pymatgen.io.atat module": [[183, "module-pymatgen.io.atat"]], "pymatgen.io.babel module": [[184, "module-pymatgen.io.babel"]], "pymatgen.io.cif module": [[185, "module-pymatgen.io.cif"]], "pymatgen.io.common module": [[186, "module-pymatgen.io.common"]], "pymatgen.io.core module": [[187, "module-pymatgen.io.core"]], "pymatgen.io.cp2k package": [[188, "pymatgen-io-cp2k-package"]], "pymatgen.io.cp2k.inputs module": [[189, "module-pymatgen.io.cp2k.inputs"]], "pymatgen.io.cp2k.outputs module": [[190, "module-pymatgen.io.cp2k.outputs"]], "pymatgen.io.cp2k.sets module": [[191, "module-pymatgen.io.cp2k.sets"]], "pymatgen.io.cp2k.utils module": [[192, "module-pymatgen.io.cp2k.utils"]], "pymatgen.io.cssr module": [[193, "module-pymatgen.io.cssr"]], "pymatgen.io.exciting package": [[194, "pymatgen-io-exciting-package"]], "pymatgen.io.exciting.inputs module": [[195, "module-pymatgen.io.exciting.inputs"]], "pymatgen.io.feff package": [[196, "pymatgen-io-feff-package"]], "pymatgen.io.feff.inputs module": [[197, "module-pymatgen.io.feff.inputs"]], "pymatgen.io.feff.outputs module": [[198, "module-pymatgen.io.feff.outputs"]], "pymatgen.io.feff.sets module": [[199, "module-pymatgen.io.feff.sets"]], "pymatgen.io.fiesta module": [[200, "module-pymatgen.io.fiesta"]], "pymatgen.io.gaussian module": [[201, "module-pymatgen.io.gaussian"]], "pymatgen.io.jarvis module": [[202, "module-pymatgen.io.jarvis"]], "pymatgen.io.lammps package": [[203, "pymatgen-io-lammps-package"]], "pymatgen.io.lammps.data module": [[204, "module-pymatgen.io.lammps.data"]], "pymatgen.io.lammps.generators module": [[205, "module-pymatgen.io.lammps.generators"]], "pymatgen.io.lammps.inputs module": [[206, "module-pymatgen.io.lammps.inputs"]], "]": [[206, "id3"], [206, "id16"]], ")": [[206, "id6"], [206, "id9"], [206, "id12"], [206, "id13"]], "or": [[206, "or"]], "pymatgen.io.lammps.outputs module": [[207, "module-pymatgen.io.lammps.outputs"]], "pymatgen.io.lammps.sets module": [[208, "module-pymatgen.io.lammps.sets"]], "pymatgen.io.lammps.utils module": [[209, "module-pymatgen.io.lammps.utils"]], "pymatgen.io.lmto module": [[210, "module-pymatgen.io.lmto"]], "pymatgen.io.lobster package": [[211, "pymatgen-io-lobster-package"]], "pymatgen.io.lobster.inputs module": [[212, "module-pymatgen.io.lobster.inputs"]], "pymatgen.io.lobster.lobsterenv module": [[213, "module-pymatgen.io.lobster.lobsterenv"]], "pymatgen.io.lobster.outputs module": [[214, "module-pymatgen.io.lobster.outputs"]], "pymatgen.io.nwchem module": [[215, "module-pymatgen.io.nwchem"]], "pymatgen.io.packmol module": [[216, "module-pymatgen.io.packmol"]], "pymatgen.io.phonopy module": [[217, "module-pymatgen.io.phonopy"]], "pymatgen.io.prismatic module": [[218, "module-pymatgen.io.prismatic"]], "pymatgen.io.pwscf module": [[219, "module-pymatgen.io.pwscf"]], "pymatgen.io.qchem package": [[220, "pymatgen-io-qchem-package"]], "pymatgen.io.qchem.inputs module": [[221, "module-pymatgen.io.qchem.inputs"]], "pymatgen.io.qchem.outputs module": [[222, "module-pymatgen.io.qchem.outputs"]], "pymatgen.io.qchem.sets module": [[223, "module-pymatgen.io.qchem.sets"]], "pymatgen.io.qchem.utils module": [[224, "module-pymatgen.io.qchem.utils"]], "pymatgen.io.res module": [[225, "module-pymatgen.io.res"]], "pymatgen.io.shengbte module": [[226, "module-pymatgen.io.shengbte"]], "pymatgen.io.template module": [[227, "module-pymatgen.io.template"]], "pymatgen.io.vasp package": [[228, "pymatgen-io-vasp-package"]], "pymatgen.io.vasp.help module": [[229, "module-pymatgen.io.vasp.help"]], "pymatgen.io.vasp.inputs module": [[230, "module-pymatgen.io.vasp.inputs"]], "Returns:": [[230, "returns"]], "pymatgen.io.vasp.optics module": [[231, "module-pymatgen.io.vasp.optics"]], "pymatgen.io.vasp.outputs module": [[232, "module-pymatgen.io.vasp.outputs"]], "pymatgen.io.vasp.sets module": [[233, "module-pymatgen.io.vasp.sets"]], "pymatgen.io.wannier90 module": [[234, "module-pymatgen.io.wannier90"]], "pymatgen.io.xcrysden module": [[235, "module-pymatgen.io.xcrysden"]], "pymatgen.io.xr module": [[236, "module-pymatgen.io.xr"]], "pymatgen.io.xtb package": [[237, "pymatgen-io-xtb-package"]], "pymatgen.io.xtb.inputs module": [[238, "module-pymatgen.io.xtb.inputs"]], "pymatgen.io.xtb.outputs module": [[239, "module-pymatgen.io.xtb.outputs"]], "pymatgen.io.xyz module": [[240, "module-pymatgen.io.xyz"]], "pymatgen.io.zeopp module": [[241, "module-pymatgen.io.zeopp"]], "Zeo++ Installation Steps:": [[241, "zeo-installation-steps"]], "Zeo++ Post-Installation Checking:": [[241, "zeo-post-installation-checking"]], "pymatgen.optimization package": [[242, "pymatgen-optimization-package"]], "pymatgen.optimization.linear_assignment module": [[243, "module-pymatgen.optimization.linear_assignment"]], "pymatgen.optimization.linear_assignment_numpy module": [[244, "module-pymatgen.optimization.linear_assignment_numpy"]], "pymatgen.optimization.neighbors module": [[245, "module-pymatgen.optimization.neighbors"]], "pymatgen.phonon package": [[246, "pymatgen-phonon-package"]], "pymatgen.phonon.bandstructure module": [[247, "module-pymatgen.phonon.bandstructure"]], "pymatgen.phonon.dos module": [[248, "module-pymatgen.phonon.dos"]], "pymatgen.phonon.gruneisen module": [[249, "module-pymatgen.phonon.gruneisen"]], "pymatgen.phonon.ir_spectra module": [[250, "module-pymatgen.phonon.ir_spectra"]], "pymatgen.phonon.plotter module": [[251, "module-pymatgen.phonon.plotter"]], "pymatgen.phonon.thermal_displacements module": [[252, "module-pymatgen.phonon.thermal_displacements"]], "pymatgen.symmetry package": [[253, "pymatgen-symmetry-package"]], "pymatgen.symmetry.analyzer module": [[254, "module-pymatgen.symmetry.analyzer"]], "pymatgen.symmetry.bandstructure module": [[255, "module-pymatgen.symmetry.bandstructure"]], "pymatgen.symmetry.groups module": [[256, "module-pymatgen.symmetry.groups"]], "pymatgen.symmetry.kpath module": [[257, "module-pymatgen.symmetry.kpath"]], "pymatgen.symmetry.maggroups module": [[258, "module-pymatgen.symmetry.maggroups"]], "pymatgen.symmetry.settings module": [[259, "module-pymatgen.symmetry.settings"]], "pymatgen.symmetry.site_symmetries module": [[260, "module-pymatgen.symmetry.site_symmetries"]], "pymatgen.symmetry.structure module": [[261, "module-pymatgen.symmetry.structure"]], "pymatgen.transformations package": [[262, "pymatgen-transformations-package"]], "pymatgen.transformations.advanced_transformations module": [[263, "module-pymatgen.transformations.advanced_transformations"]], "pymatgen.transformations.site_transformations module": [[264, "module-pymatgen.transformations.site_transformations"]], "pymatgen.transformations.standard_transformations module": [[265, "module-pymatgen.transformations.standard_transformations"]], "pymatgen.transformations.transformation_abc module": [[266, "module-pymatgen.transformations.transformation_abc"]], "pymatgen.util package": [[267, "pymatgen-util-package"]], "pymatgen.util.convergence module": [[268, "module-pymatgen.util.convergence"]], "pymatgen.util.coord module": [[269, "module-pymatgen.util.coord"]], "pymatgen.util.coord_cython module": [[270, "module-pymatgen.util.coord_cython"]], "pymatgen.util.due module": [[271, "module-pymatgen.util.due"]], "pymatgen.util.graph_hashing module": [[272, "module-pymatgen.util.graph_hashing"]], "pymatgen.util.io_utils module": [[273, "module-pymatgen.util.io_utils"]], "pymatgen.util.num module": [[274, "module-pymatgen.util.num"]], "pymatgen.util.numba module": [[275, "module-pymatgen.util.numba"]], "pymatgen.util.plotting module": [[276, "module-pymatgen.util.plotting"]], "pymatgen.util.provenance module": [[277, "module-pymatgen.util.provenance"]], "pymatgen.util.string module": [[278, "module-pymatgen.util.string"]], "pymatgen.util.testing module": [[279, "module-pymatgen.util.testing"]], "pymatgen.util.typing module": [[280, "module-pymatgen.util.typing"]], "pymatgen.vis package": [[281, "pymatgen-vis-package"]], "pymatgen.vis.plotters module": [[282, "module-pymatgen.vis.plotters"]], "pymatgen.vis.structure_chemview module": [[283, "module-pymatgen.vis.structure_chemview"]], "pymatgen.vis.structure_vtk module": [[284, "module-pymatgen.vis.structure_vtk"]], "References": [[285, "references"]], "pymatgen.analysis.path_finder": [[285, "pymatgen-analysis-path-finder"]], "pymatgen.core.surface and pymatgen.analysis.wulff": [[285, "pymatgen-core-surface-and-pymatgen-analysis-wulff"]], "pymatgen.io.vasp.sets": [[285, "pymatgen-io-vasp-sets"]], "pymatgen.phasediagram": [[285, "pymatgen-phasediagram"]], "pymatgen.entries.compatibility": [[285, "pymatgen-entries-compatibility"]], "pymatgen.matproj": [[285, "pymatgen-matproj"]], "pymatgen.symmetry": [[285, "pymatgen-symmetry"]], "pymatgen.command_line.bader_caller": [[285, "pymatgen-command-line-bader-caller"]], "pymatgen.io.feff": [[285, "pymatgen-io-feff"]], "pymatgen.io.zeo": [[285, "pymatgen-io-zeo"]], "Development Team": [[286, "development-team"]], "Maintainers": [[286, "maintainers"]], "Lead Maintainers": [[286, "lead-maintainers"]], "Newest Contributors": [[286, "newest-contributors"]], "List of Developers (A\u2013Z)": [[286, "list-of-developers-az"]], "4+ years active": [[286, "years-active"]], "1\u20134 years active": [[286, "id1"]], "< 1 year active": [[286, "year-active"]], "Thanks": [[286, "thanks"]], "Side-note : as_dict / from_dict": [[287, "side-note-as-dict-from-dict"]], "MontyEncoder/Decoder": [[287, "montyencoder-decoder"]], "Structures and Molecules": [[287, "structures-and-molecules"]], "Creating a Structure manually": [[287, "creating-a-structure-manually"]], "Reading and writing Structures/Molecules": [[287, "reading-and-writing-structures-molecules"]], "Things you can do with Structures": [[287, "things-you-can-do-with-structures"]], "Modifying Structures or Molecules": [[287, "modifying-structures-or-molecules"]], "Entries - Basic analysis unit": [[287, "entries-basic-analysis-unit"]], "Compatibility - Mixing GGA and GGA+U runs": [[287, "compatibility-mixing-gga-and-gga-u-runs"]], "pymatgen.io - Managing calculation inputs and outputs": [[287, "pymatgen-io-managing-calculation-inputs-and-outputs"]], "pymatgen.borg - High-throughput data assimilation": [[287, "pymatgen-borg-high-throughput-data-assimilation"]], "Simple example - Making a phase diagram": [[287, "simple-example-making-a-phase-diagram"]], "Another example - Calculating reaction energies": [[287, "another-example-calculating-reaction-energies"]], "pymatgen.transformations": [[287, "pymatgen-transformations"]], "pymatgen.alchemy - High-throughput transformations": [[287, "pymatgen-alchemy-high-throughput-transformations"]], "pymatgen.matproj.rest - Integration with the Materials Project REST API": [[287, "pymatgen-matproj-rest-integration-with-the-materials-project-rest-api"]], "The query method": [[287, "the-query-method"]], "Setting the PMG_MAPI_KEY in the config file": [[287, "setting-the-pmg-mapi-key-in-the-config-file"]]}, "indexentries": {"module": [[9, "module-pymatgen"], [10, "module-pymatgen.alchemy"], [11, "module-pymatgen.alchemy.filters"], [12, "module-pymatgen.alchemy.materials"], [13, "module-pymatgen.alchemy.transmuters"], [14, "module-pymatgen.analysis"], [15, "module-pymatgen.analysis.adsorption"], [16, "module-pymatgen.analysis.bond_dissociation"], [17, "module-pymatgen.analysis.bond_valence"], [18, "module-pymatgen.analysis.chemenv"], [19, "module-pymatgen.analysis.chemenv.connectivity"], [20, "module-pymatgen.analysis.chemenv.connectivity.connected_components"], [21, "module-pymatgen.analysis.chemenv.connectivity.connectivity_finder"], [22, "module-pymatgen.analysis.chemenv.connectivity.environment_nodes"], [23, "module-pymatgen.analysis.chemenv.connectivity.structure_connectivity"], [24, "module-pymatgen.analysis.chemenv.coordination_environments"], [25, "module-pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies"], [26, "module-pymatgen.analysis.chemenv.coordination_environments.coordination_geometries"], [27, "module-pymatgen.analysis.chemenv.coordination_environments.coordination_geometries_files"], [28, "module-pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder"], [29, "module-pymatgen.analysis.chemenv.coordination_environments.structure_environments"], [30, "module-pymatgen.analysis.chemenv.coordination_environments.voronoi"], [31, "module-pymatgen.analysis.chemenv.utils"], [32, "module-pymatgen.analysis.chemenv.utils.chemenv_config"], [33, "module-pymatgen.analysis.chemenv.utils.chemenv_errors"], [34, "module-pymatgen.analysis.chemenv.utils.coordination_geometry_utils"], [35, "module-pymatgen.analysis.chemenv.utils.defs_utils"], [36, "module-pymatgen.analysis.chemenv.utils.func_utils"], [37, "module-pymatgen.analysis.chemenv.utils.graph_utils"], [38, "module-pymatgen.analysis.chemenv.utils.math_utils"], [39, "module-pymatgen.analysis.chemenv.utils.scripts_utils"], [40, "module-pymatgen.analysis.chempot_diagram"], [41, "module-pymatgen.analysis.cost"], [42, "module-pymatgen.analysis.diffraction"], [43, "module-pymatgen.analysis.diffraction.core"], [44, "module-pymatgen.analysis.diffraction.neutron"], [45, "module-pymatgen.analysis.diffraction.tem"], [46, "module-pymatgen.analysis.diffraction.xrd"], [47, "module-pymatgen.analysis.dimensionality"], [48, "module-pymatgen.analysis.disorder"], [49, "module-pymatgen.analysis.elasticity"], [50, "module-pymatgen.analysis.elasticity.elastic"], [51, "module-pymatgen.analysis.elasticity.strain"], [52, "module-pymatgen.analysis.elasticity.stress"], [53, "module-pymatgen.analysis.energy_models"], [54, "module-pymatgen.analysis.eos"], [55, "module-pymatgen.analysis.ewald"], [56, "module-pymatgen.analysis.excitation"], [57, "module-pymatgen.analysis.ferroelectricity"], [58, "module-pymatgen.analysis.ferroelectricity.polarization"], [59, "module-pymatgen.analysis.fragmenter"], [60, "module-pymatgen.analysis.functional_groups"], [61, "module-pymatgen.analysis.gb"], [62, "module-pymatgen.analysis.gb.grain"], [63, "module-pymatgen.analysis.graphs"], [64, "module-pymatgen.analysis.hhi"], [65, "module-pymatgen.analysis.interface"], [66, "module-pymatgen.analysis.interface_reactions"], [67, "module-pymatgen.analysis.interfaces"], [68, "module-pymatgen.analysis.interfaces.coherent_interfaces"], [69, "module-pymatgen.analysis.interfaces.substrate_analyzer"], [70, "module-pymatgen.analysis.interfaces.zsl"], [71, "module-pymatgen.analysis.local_env"], [72, "module-pymatgen.analysis.magnetism"], [73, "module-pymatgen.analysis.magnetism.analyzer"], [74, "module-pymatgen.analysis.magnetism.heisenberg"], [75, "module-pymatgen.analysis.magnetism.jahnteller"], [76, "module-pymatgen.analysis.molecule_matcher"], [77, "module-pymatgen.analysis.molecule_structure_comparator"], [78, "module-pymatgen.analysis.nmr"], [79, "module-pymatgen.analysis.path_finder"], [80, "module-pymatgen.analysis.phase_diagram"], [81, "module-pymatgen.analysis.piezo"], [82, "module-pymatgen.analysis.piezo_sensitivity"], [83, "module-pymatgen.analysis.pourbaix_diagram"], [84, "module-pymatgen.analysis.prototypes"], [85, "module-pymatgen.analysis.quasiharmonic"], [86, "module-pymatgen.analysis.reaction_calculator"], [87, "module-pymatgen.analysis.solar"], [88, "module-pymatgen.analysis.solar.slme"], [89, "module-pymatgen.analysis.structure_analyzer"], [90, "module-pymatgen.analysis.structure_matcher"], [91, "module-pymatgen.analysis.structure_prediction"], [92, "module-pymatgen.analysis.structure_prediction.dopant_predictor"], [93, "module-pymatgen.analysis.structure_prediction.substitution_probability"], [94, "module-pymatgen.analysis.structure_prediction.substitutor"], [95, "module-pymatgen.analysis.structure_prediction.volume_predictor"], [96, "module-pymatgen.analysis.surface_analysis"], [97, "module-pymatgen.analysis.thermochemistry"], [98, "module-pymatgen.analysis.topological"], [99, "module-pymatgen.analysis.topological.spillage"], [100, "module-pymatgen.analysis.transition_state"], [101, "module-pymatgen.analysis.wulff"], [102, "module-pymatgen.analysis.xas"], [103, "module-pymatgen.analysis.xas.spectrum"], [104, "module-pymatgen.analysis.xps"], [105, "module-pymatgen.apps"], [106, "module-pymatgen.apps.battery"], [107, "module-pymatgen.apps.battery.analyzer"], [108, "module-pymatgen.apps.battery.battery_abc"], [109, "module-pymatgen.apps.battery.conversion_battery"], [110, "module-pymatgen.apps.battery.insertion_battery"], [111, "module-pymatgen.apps.battery.plotter"], [112, "module-pymatgen.apps.borg"], [113, "module-pymatgen.apps.borg.hive"], [114, "module-pymatgen.apps.borg.queen"], [115, "module-pymatgen.cli"], [116, "module-pymatgen.cli.feff_plot_cross_section"], [117, "module-pymatgen.cli.feff_plot_dos"], [118, "module-pymatgen.cli.gaussian_analyzer"], [119, "module-pymatgen.cli.get_environment"], [120, "module-pymatgen.cli.pmg"], [121, "module-pymatgen.cli.pmg_analyze"], [122, "module-pymatgen.cli.pmg_config"], [123, "module-pymatgen.cli.pmg_plot"], [124, "module-pymatgen.cli.pmg_potcar"], [125, "module-pymatgen.cli.pmg_query"], [126, "module-pymatgen.cli.pmg_structure"], [127, "module-pymatgen.command_line"], [128, "module-pymatgen.command_line.bader_caller"], [129, "module-pymatgen.command_line.chargemol_caller"], [130, "module-pymatgen.command_line.critic2_caller"], [131, "module-pymatgen.command_line.enumlib_caller"], [132, "module-pymatgen.command_line.gulp_caller"], [133, "module-pymatgen.command_line.mcsqs_caller"], [134, "module-pymatgen.command_line.vampire_caller"], [135, "module-pymatgen.core"], [136, "module-pymatgen.core.bonds"], [137, "module-pymatgen.core.composition"], [138, "module-pymatgen.core.interface"], [139, "module-pymatgen.core.ion"], [140, "module-pymatgen.core.lattice"], [141, "module-pymatgen.core.libxcfunc"], [142, "module-pymatgen.core.molecular_orbitals"], [143, "module-pymatgen.core.operations"], [144, "module-pymatgen.core.periodic_table"], [145, "module-pymatgen.core.sites"], [146, "module-pymatgen.core.spectrum"], [147, "module-pymatgen.core.structure"], [148, "module-pymatgen.core.surface"], [149, "module-pymatgen.core.tensors"], [150, "module-pymatgen.core.trajectory"], [151, "module-pymatgen.core.units"], [152, "module-pymatgen.core.xcfunc"], [153, "module-pymatgen.dao"], [154, "module-pymatgen.electronic_structure"], [155, "module-pymatgen.electronic_structure.bandstructure"], [156, "module-pymatgen.electronic_structure.boltztrap"], [158, "module-pymatgen.electronic_structure.cohp"], [159, "module-pymatgen.electronic_structure.core"], [160, "module-pymatgen.electronic_structure.dos"], [161, "module-pymatgen.electronic_structure.plotter"], [162, "module-pymatgen.entries"], [163, "module-pymatgen.entries.compatibility"], [164, "module-pymatgen.entries.computed_entries"], [165, "module-pymatgen.entries.correction_calculator"], [166, "module-pymatgen.entries.entry_tools"], [167, "module-pymatgen.entries.exp_entries"], [168, "module-pymatgen.entries.mixing_scheme"], [169, "module-pymatgen.ext"], [170, "module-pymatgen.ext.cod"], [171, "module-pymatgen.ext.matproj"], [172, "module-pymatgen.ext.optimade"], [173, "module-pymatgen.io"], [174, "module-pymatgen.io.abinit"], [175, "module-pymatgen.io.abinit.abiobjects"], [176, "module-pymatgen.io.abinit.abitimer"], [177, "module-pymatgen.io.abinit.inputs"], [178, "module-pymatgen.io.abinit.netcdf"], [179, "module-pymatgen.io.abinit.pseudos"], [180, "module-pymatgen.io.abinit.variable"], [181, "module-pymatgen.io.adf"], [182, "module-pymatgen.io.ase"], [183, "module-pymatgen.io.atat"], [184, "module-pymatgen.io.babel"], [185, "module-pymatgen.io.cif"], [186, "module-pymatgen.io.common"], [187, "module-pymatgen.io.core"], [188, "module-pymatgen.io.cp2k"], [189, "module-pymatgen.io.cp2k.inputs"], [190, "module-pymatgen.io.cp2k.outputs"], [191, "module-pymatgen.io.cp2k.sets"], [192, "module-pymatgen.io.cp2k.utils"], [193, "module-pymatgen.io.cssr"], [194, "module-pymatgen.io.exciting"], [195, "module-pymatgen.io.exciting.inputs"], [196, "module-pymatgen.io.feff"], [197, "module-pymatgen.io.feff.inputs"], [198, "module-pymatgen.io.feff.outputs"], [199, "module-pymatgen.io.feff.sets"], [200, "module-pymatgen.io.fiesta"], [201, "module-pymatgen.io.gaussian"], [202, "module-pymatgen.io.jarvis"], [203, "module-pymatgen.io.lammps"], [204, "module-pymatgen.io.lammps.data"], [205, "module-pymatgen.io.lammps.generators"], [206, "module-pymatgen.io.lammps.inputs"], [207, "module-pymatgen.io.lammps.outputs"], [208, "module-pymatgen.io.lammps.sets"], [209, "module-pymatgen.io.lammps.utils"], [210, "module-pymatgen.io.lmto"], [211, "module-pymatgen.io.lobster"], [212, "module-pymatgen.io.lobster.inputs"], [213, "module-pymatgen.io.lobster.lobsterenv"], [214, "module-pymatgen.io.lobster.outputs"], [215, "module-pymatgen.io.nwchem"], [216, "module-pymatgen.io.packmol"], [217, "module-pymatgen.io.phonopy"], [218, "module-pymatgen.io.prismatic"], [219, "module-pymatgen.io.pwscf"], [220, "module-pymatgen.io.qchem"], [221, "module-pymatgen.io.qchem.inputs"], [222, "module-pymatgen.io.qchem.outputs"], [223, "module-pymatgen.io.qchem.sets"], [224, "module-pymatgen.io.qchem.utils"], [225, "module-pymatgen.io.res"], [226, "module-pymatgen.io.shengbte"], [227, "module-pymatgen.io.template"], [228, "module-pymatgen.io.vasp"], [229, "module-pymatgen.io.vasp.help"], [230, "module-pymatgen.io.vasp.inputs"], [231, "module-pymatgen.io.vasp.optics"], [232, "module-pymatgen.io.vasp.outputs"], [233, "module-pymatgen.io.vasp.sets"], [234, "module-pymatgen.io.wannier90"], [235, "module-pymatgen.io.xcrysden"], [236, "module-pymatgen.io.xr"], [237, "module-pymatgen.io.xtb"], [238, "module-pymatgen.io.xtb.inputs"], [239, "module-pymatgen.io.xtb.outputs"], [240, "module-pymatgen.io.xyz"], [241, "module-pymatgen.io.zeopp"], [242, "module-pymatgen.optimization"], [243, "module-pymatgen.optimization.linear_assignment"], [244, "module-pymatgen.optimization.linear_assignment_numpy"], [245, "module-pymatgen.optimization.neighbors"], [246, "module-pymatgen.phonon"], [247, "module-pymatgen.phonon.bandstructure"], [248, "module-pymatgen.phonon.dos"], [249, "module-pymatgen.phonon.gruneisen"], [250, "module-pymatgen.phonon.ir_spectra"], [251, "module-pymatgen.phonon.plotter"], [252, "module-pymatgen.phonon.thermal_displacements"], [253, "module-pymatgen.symmetry"], [254, "module-pymatgen.symmetry.analyzer"], [255, "module-pymatgen.symmetry.bandstructure"], [256, "module-pymatgen.symmetry.groups"], [257, "module-pymatgen.symmetry.kpath"], [258, "module-pymatgen.symmetry.maggroups"], [259, "module-pymatgen.symmetry.settings"], [260, "module-pymatgen.symmetry.site_symmetries"], [261, "module-pymatgen.symmetry.structure"], [262, "module-pymatgen.transformations"], [263, "module-pymatgen.transformations.advanced_transformations"], [264, "module-pymatgen.transformations.site_transformations"], [265, "module-pymatgen.transformations.standard_transformations"], [266, "module-pymatgen.transformations.transformation_abc"], [267, "module-pymatgen.util"], [268, "module-pymatgen.util.convergence"], [269, "module-pymatgen.util.coord"], [270, "module-pymatgen.util.coord_cython"], [271, "module-pymatgen.util.due"], [272, "module-pymatgen.util.graph_hashing"], [273, "module-pymatgen.util.io_utils"], [274, "module-pymatgen.util.num"], [275, "module-pymatgen.util.numba"], [276, "module-pymatgen.util.plotting"], [277, "module-pymatgen.util.provenance"], [278, "module-pymatgen.util.string"], [279, "module-pymatgen.util.testing"], [280, "module-pymatgen.util.typing"], [281, "module-pymatgen.vis"], [282, "module-pymatgen.vis.plotters"], [283, "module-pymatgen.vis.structure_chemview"], [284, "module-pymatgen.vis.structure_vtk"]], "pymatgen": [[9, "module-pymatgen"]], "pymatgen.alchemy": [[10, "module-pymatgen.alchemy"]], "abstractstructurefilter (class in pymatgen.alchemy.filters)": [[11, "pymatgen.alchemy.filters.AbstractStructureFilter"]], "chargebalancefilter (class in pymatgen.alchemy.filters)": [[11, "pymatgen.alchemy.filters.ChargeBalanceFilter"]], "containsspeciefilter (class in pymatgen.alchemy.filters)": [[11, "pymatgen.alchemy.filters.ContainsSpecieFilter"]], "removeduplicatesfilter (class in pymatgen.alchemy.filters)": [[11, "pymatgen.alchemy.filters.RemoveDuplicatesFilter"]], "removeexistingfilter (class in pymatgen.alchemy.filters)": [[11, "pymatgen.alchemy.filters.RemoveExistingFilter"]], "specieproximityfilter (class in pymatgen.alchemy.filters)": [[11, "pymatgen.alchemy.filters.SpecieProximityFilter"]], "speciesmaxdistfilter (class in pymatgen.alchemy.filters)": [[11, "pymatgen.alchemy.filters.SpeciesMaxDistFilter"]], "as_dict() (containsspeciefilter method)": [[11, "pymatgen.alchemy.filters.ContainsSpecieFilter.as_dict"]], "as_dict() (removeexistingfilter method)": [[11, "pymatgen.alchemy.filters.RemoveExistingFilter.as_dict"]], "as_dict() (specieproximityfilter method)": [[11, "pymatgen.alchemy.filters.SpecieProximityFilter.as_dict"]], "from_dict() (containsspeciefilter class method)": [[11, "pymatgen.alchemy.filters.ContainsSpecieFilter.from_dict"]], "from_dict() (specieproximityfilter class method)": [[11, "pymatgen.alchemy.filters.SpecieProximityFilter.from_dict"]], "pymatgen.alchemy.filters": [[11, "module-pymatgen.alchemy.filters"]], "test() (abstractstructurefilter method)": [[11, "pymatgen.alchemy.filters.AbstractStructureFilter.test"]], "test() (chargebalancefilter method)": [[11, "pymatgen.alchemy.filters.ChargeBalanceFilter.test"]], "test() (containsspeciefilter method)": [[11, "pymatgen.alchemy.filters.ContainsSpecieFilter.test"]], "test() (removeduplicatesfilter method)": [[11, "pymatgen.alchemy.filters.RemoveDuplicatesFilter.test"]], "test() (removeexistingfilter method)": [[11, "pymatgen.alchemy.filters.RemoveExistingFilter.test"]], "test() (specieproximityfilter method)": [[11, "pymatgen.alchemy.filters.SpecieProximityFilter.test"]], "test() (speciesmaxdistfilter method)": [[11, "pymatgen.alchemy.filters.SpeciesMaxDistFilter.test"]], "transformedstructure (class in pymatgen.alchemy.materials)": [[12, "pymatgen.alchemy.materials.TransformedStructure"]], "append_filter() (transformedstructure method)": [[12, "pymatgen.alchemy.materials.TransformedStructure.append_filter"]], "append_transformation() (transformedstructure method)": [[12, "pymatgen.alchemy.materials.TransformedStructure.append_transformation"]], "as_dict() (transformedstructure method)": [[12, "pymatgen.alchemy.materials.TransformedStructure.as_dict"]], "extend_transformations() (transformedstructure method)": [[12, "pymatgen.alchemy.materials.TransformedStructure.extend_transformations"]], "from_cif_string() (transformedstructure static method)": [[12, "pymatgen.alchemy.materials.TransformedStructure.from_cif_string"]], "from_dict() (transformedstructure class method)": [[12, "pymatgen.alchemy.materials.TransformedStructure.from_dict"]], "from_poscar_string() (transformedstructure static method)": [[12, "pymatgen.alchemy.materials.TransformedStructure.from_poscar_string"]], "from_snl() (transformedstructure class method)": [[12, "pymatgen.alchemy.materials.TransformedStructure.from_snl"]], "get_vasp_input() (transformedstructure method)": [[12, "pymatgen.alchemy.materials.TransformedStructure.get_vasp_input"]], "pymatgen.alchemy.materials": [[12, "module-pymatgen.alchemy.materials"]], "redo_next_change() (transformedstructure method)": [[12, "pymatgen.alchemy.materials.TransformedStructure.redo_next_change"]], "set_parameter() (transformedstructure method)": [[12, "pymatgen.alchemy.materials.TransformedStructure.set_parameter"]], "structures (transformedstructure property)": [[12, "pymatgen.alchemy.materials.TransformedStructure.structures"]], "to_snl() (transformedstructure method)": [[12, "pymatgen.alchemy.materials.TransformedStructure.to_snl"]], "undo_last_change() (transformedstructure method)": [[12, "pymatgen.alchemy.materials.TransformedStructure.undo_last_change"]], "was_modified (transformedstructure property)": [[12, "pymatgen.alchemy.materials.TransformedStructure.was_modified"]], "write_vasp_input() (transformedstructure method)": [[12, "pymatgen.alchemy.materials.TransformedStructure.write_vasp_input"]], "ciftransmuter (class in pymatgen.alchemy.transmuters)": [[13, "pymatgen.alchemy.transmuters.CifTransmuter"]], "poscartransmuter (class in pymatgen.alchemy.transmuters)": [[13, "pymatgen.alchemy.transmuters.PoscarTransmuter"]], "standardtransmuter (class in pymatgen.alchemy.transmuters)": [[13, "pymatgen.alchemy.transmuters.StandardTransmuter"]], "add_tags() (standardtransmuter method)": [[13, "pymatgen.alchemy.transmuters.StandardTransmuter.add_tags"]], "append_transformation() (standardtransmuter method)": [[13, "pymatgen.alchemy.transmuters.StandardTransmuter.append_transformation"]], "append_transformed_structures() (standardtransmuter method)": [[13, "pymatgen.alchemy.transmuters.StandardTransmuter.append_transformed_structures"]], "apply_filter() (standardtransmuter method)": [[13, "pymatgen.alchemy.transmuters.StandardTransmuter.apply_filter"]], "batch_write_vasp_input() (in module pymatgen.alchemy.transmuters)": [[13, "pymatgen.alchemy.transmuters.batch_write_vasp_input"]], "extend_transformations() (standardtransmuter method)": [[13, "pymatgen.alchemy.transmuters.StandardTransmuter.extend_transformations"]], "from_filenames() (ciftransmuter static method)": [[13, "pymatgen.alchemy.transmuters.CifTransmuter.from_filenames"]], "from_filenames() (poscartransmuter static method)": [[13, "pymatgen.alchemy.transmuters.PoscarTransmuter.from_filenames"]], "from_structures() (standardtransmuter static method)": [[13, "pymatgen.alchemy.transmuters.StandardTransmuter.from_structures"]], "pymatgen.alchemy.transmuters": [[13, "module-pymatgen.alchemy.transmuters"]], "redo_next_change() (standardtransmuter method)": [[13, "pymatgen.alchemy.transmuters.StandardTransmuter.redo_next_change"]], "set_parameter() (standardtransmuter method)": [[13, "pymatgen.alchemy.transmuters.StandardTransmuter.set_parameter"]], "undo_last_change() (standardtransmuter method)": [[13, "pymatgen.alchemy.transmuters.StandardTransmuter.undo_last_change"]], "write_vasp_input() (standardtransmuter method)": [[13, "pymatgen.alchemy.transmuters.StandardTransmuter.write_vasp_input"]], "pymatgen.analysis": [[14, "module-pymatgen.analysis"]], "adsorbatesitefinder (class in pymatgen.analysis.adsorption)": [[15, "pymatgen.analysis.adsorption.AdsorbateSiteFinder"]], "add_adsorbate() (adsorbatesitefinder method)": [[15, "pymatgen.analysis.adsorption.AdsorbateSiteFinder.add_adsorbate"]], "adsorb_both_surfaces() (adsorbatesitefinder method)": [[15, "pymatgen.analysis.adsorption.AdsorbateSiteFinder.adsorb_both_surfaces"]], "assign_selective_dynamics() (adsorbatesitefinder class method)": [[15, "pymatgen.analysis.adsorption.AdsorbateSiteFinder.assign_selective_dynamics"]], "assign_site_properties() (adsorbatesitefinder method)": [[15, "pymatgen.analysis.adsorption.AdsorbateSiteFinder.assign_site_properties"]], "ensemble_center() (adsorbatesitefinder class method)": [[15, "pymatgen.analysis.adsorption.AdsorbateSiteFinder.ensemble_center"]], "find_adsorption_sites() (adsorbatesitefinder method)": [[15, "pymatgen.analysis.adsorption.AdsorbateSiteFinder.find_adsorption_sites"]], "find_surface_sites_by_height() (adsorbatesitefinder method)": [[15, "pymatgen.analysis.adsorption.AdsorbateSiteFinder.find_surface_sites_by_height"]], "from_bulk_and_miller() (adsorbatesitefinder class method)": [[15, "pymatgen.analysis.adsorption.AdsorbateSiteFinder.from_bulk_and_miller"]], "generate_adsorption_structures() (adsorbatesitefinder method)": [[15, "pymatgen.analysis.adsorption.AdsorbateSiteFinder.generate_adsorption_structures"]], "generate_substitution_structures() (adsorbatesitefinder method)": [[15, "pymatgen.analysis.adsorption.AdsorbateSiteFinder.generate_substitution_structures"]], "get_extended_surface_mesh() (adsorbatesitefinder method)": [[15, "pymatgen.analysis.adsorption.AdsorbateSiteFinder.get_extended_surface_mesh"]], "get_mi_vec() (in module pymatgen.analysis.adsorption)": [[15, "pymatgen.analysis.adsorption.get_mi_vec"]], "get_rot() (in module pymatgen.analysis.adsorption)": [[15, "pymatgen.analysis.adsorption.get_rot"]], "near_reduce() (adsorbatesitefinder method)": [[15, "pymatgen.analysis.adsorption.AdsorbateSiteFinder.near_reduce"]], "plot_slab() (in module pymatgen.analysis.adsorption)": [[15, "pymatgen.analysis.adsorption.plot_slab"]], "put_coord_inside() (in module pymatgen.analysis.adsorption)": [[15, "pymatgen.analysis.adsorption.put_coord_inside"]], "pymatgen.analysis.adsorption": [[15, "module-pymatgen.analysis.adsorption"]], "reorient_z() (in module pymatgen.analysis.adsorption)": [[15, "pymatgen.analysis.adsorption.reorient_z"]], "subsurface_sites() (adsorbatesitefinder method)": [[15, "pymatgen.analysis.adsorption.AdsorbateSiteFinder.subsurface_sites"]], "surface_sites (adsorbatesitefinder property)": [[15, "pymatgen.analysis.adsorption.AdsorbateSiteFinder.surface_sites"]], "symm_reduce() (adsorbatesitefinder method)": [[15, "pymatgen.analysis.adsorption.AdsorbateSiteFinder.symm_reduce"]], "bonddissociationenergies (class in pymatgen.analysis.bond_dissociation)": [[16, "pymatgen.analysis.bond_dissociation.BondDissociationEnergies"]], "build_new_entry() (bonddissociationenergies method)": [[16, "pymatgen.analysis.bond_dissociation.BondDissociationEnergies.build_new_entry"]], "filter_fragment_entries() (bonddissociationenergies method)": [[16, "pymatgen.analysis.bond_dissociation.BondDissociationEnergies.filter_fragment_entries"]], "fragment_and_process() (bonddissociationenergies method)": [[16, "pymatgen.analysis.bond_dissociation.BondDissociationEnergies.fragment_and_process"]], "pymatgen.analysis.bond_dissociation": [[16, "module-pymatgen.analysis.bond_dissociation"]], "search_fragment_entries() (bonddissociationenergies method)": [[16, "pymatgen.analysis.bond_dissociation.BondDissociationEnergies.search_fragment_entries"]], "bvanalyzer (class in pymatgen.analysis.bond_valence)": [[17, "pymatgen.analysis.bond_valence.BVAnalyzer"]], "charge_neutrality_tolerance (bvanalyzer attribute)": [[17, "pymatgen.analysis.bond_valence.BVAnalyzer.CHARGE_NEUTRALITY_TOLERANCE"]], "add_oxidation_state_by_site_fraction() (in module pymatgen.analysis.bond_valence)": [[17, "pymatgen.analysis.bond_valence.add_oxidation_state_by_site_fraction"]], "calculate_bv_sum() (in module pymatgen.analysis.bond_valence)": [[17, "pymatgen.analysis.bond_valence.calculate_bv_sum"]], "calculate_bv_sum_unordered() (in module pymatgen.analysis.bond_valence)": [[17, "pymatgen.analysis.bond_valence.calculate_bv_sum_unordered"]], "get_oxi_state_decorated_structure() (bvanalyzer method)": [[17, "pymatgen.analysis.bond_valence.BVAnalyzer.get_oxi_state_decorated_structure"]], "get_valences() (bvanalyzer method)": [[17, "pymatgen.analysis.bond_valence.BVAnalyzer.get_valences"]], "get_z_ordered_elmap() (in module pymatgen.analysis.bond_valence)": [[17, "pymatgen.analysis.bond_valence.get_z_ordered_elmap"]], "pymatgen.analysis.bond_valence": [[17, "module-pymatgen.analysis.bond_valence"]], "pymatgen.analysis.chemenv": [[18, "module-pymatgen.analysis.chemenv"]], "pymatgen.analysis.chemenv.connectivity": [[19, "module-pymatgen.analysis.chemenv.connectivity"]], "connectedcomponent (class in pymatgen.analysis.chemenv.connectivity.connected_components)": [[20, "pymatgen.analysis.chemenv.connectivity.connected_components.ConnectedComponent"]], "as_dict() (connectedcomponent method)": [[20, "pymatgen.analysis.chemenv.connectivity.connected_components.ConnectedComponent.as_dict"]], "compute_periodicity() (connectedcomponent method)": [[20, "pymatgen.analysis.chemenv.connectivity.connected_components.ConnectedComponent.compute_periodicity"]], "compute_periodicity_all_simple_paths_algorithm() (connectedcomponent method)": [[20, "pymatgen.analysis.chemenv.connectivity.connected_components.ConnectedComponent.compute_periodicity_all_simple_paths_algorithm"]], "compute_periodicity_cycle_basis() (connectedcomponent method)": [[20, "pymatgen.analysis.chemenv.connectivity.connected_components.ConnectedComponent.compute_periodicity_cycle_basis"]], "coordination_sequence() (connectedcomponent method)": [[20, "pymatgen.analysis.chemenv.connectivity.connected_components.ConnectedComponent.coordination_sequence"]], "description() (connectedcomponent method)": [[20, "pymatgen.analysis.chemenv.connectivity.connected_components.ConnectedComponent.description"]], "draw_network() (in module pymatgen.analysis.chemenv.connectivity.connected_components)": [[20, "pymatgen.analysis.chemenv.connectivity.connected_components.draw_network"]], "elastic_centered_graph() (connectedcomponent method)": [[20, "pymatgen.analysis.chemenv.connectivity.connected_components.ConnectedComponent.elastic_centered_graph"]], "from_dict() (connectedcomponent class method)": [[20, "pymatgen.analysis.chemenv.connectivity.connected_components.ConnectedComponent.from_dict"]], "from_graph() (connectedcomponent class method)": [[20, "pymatgen.analysis.chemenv.connectivity.connected_components.ConnectedComponent.from_graph"]], "graph (connectedcomponent property)": [[20, "pymatgen.analysis.chemenv.connectivity.connected_components.ConnectedComponent.graph"]], "is_0d (connectedcomponent property)": [[20, "pymatgen.analysis.chemenv.connectivity.connected_components.ConnectedComponent.is_0d"]], "is_1d (connectedcomponent property)": [[20, "pymatgen.analysis.chemenv.connectivity.connected_components.ConnectedComponent.is_1d"]], "is_2d (connectedcomponent property)": [[20, "pymatgen.analysis.chemenv.connectivity.connected_components.ConnectedComponent.is_2d"]], "is_3d (connectedcomponent property)": [[20, "pymatgen.analysis.chemenv.connectivity.connected_components.ConnectedComponent.is_3d"]], "is_periodic (connectedcomponent property)": [[20, "pymatgen.analysis.chemenv.connectivity.connected_components.ConnectedComponent.is_periodic"]], "make_supergraph() (connectedcomponent method)": [[20, "pymatgen.analysis.chemenv.connectivity.connected_components.ConnectedComponent.make_supergraph"]], "make_supergraph() (in module pymatgen.analysis.chemenv.connectivity.connected_components)": [[20, "pymatgen.analysis.chemenv.connectivity.connected_components.make_supergraph"]], "periodicity (connectedcomponent property)": [[20, "pymatgen.analysis.chemenv.connectivity.connected_components.ConnectedComponent.periodicity"]], "periodicity_vectors (connectedcomponent property)": [[20, "pymatgen.analysis.chemenv.connectivity.connected_components.ConnectedComponent.periodicity_vectors"]], "pymatgen.analysis.chemenv.connectivity.connected_components": [[20, "module-pymatgen.analysis.chemenv.connectivity.connected_components"]], "show_graph() (connectedcomponent method)": [[20, "pymatgen.analysis.chemenv.connectivity.connected_components.ConnectedComponent.show_graph"]], "connectivityfinder (class in pymatgen.analysis.chemenv.connectivity.connectivity_finder)": [[21, "pymatgen.analysis.chemenv.connectivity.connectivity_finder.ConnectivityFinder"]], "get_structure_connectivity() (connectivityfinder method)": [[21, "pymatgen.analysis.chemenv.connectivity.connectivity_finder.ConnectivityFinder.get_structure_connectivity"]], "pymatgen.analysis.chemenv.connectivity.connectivity_finder": [[21, "module-pymatgen.analysis.chemenv.connectivity.connectivity_finder"]], "setup_parameters() (connectivityfinder method)": [[21, "pymatgen.analysis.chemenv.connectivity.connectivity_finder.ConnectivityFinder.setup_parameters"]], "atom (abstractenvironmentnode attribute)": [[22, "pymatgen.analysis.chemenv.connectivity.environment_nodes.AbstractEnvironmentNode.ATOM"]], "abstractenvironmentnode (class in pymatgen.analysis.chemenv.connectivity.environment_nodes)": [[22, "pymatgen.analysis.chemenv.connectivity.environment_nodes.AbstractEnvironmentNode"]], "ce_nnbces_nbces_ligands (abstractenvironmentnode attribute)": [[22, "pymatgen.analysis.chemenv.connectivity.environment_nodes.AbstractEnvironmentNode.CE_NNBCES_NBCES_LIGANDS"]], "coordination_environment (abstractenvironmentnode attribute)": [[22, "pymatgen.analysis.chemenv.connectivity.environment_nodes.AbstractEnvironmentNode.COORDINATION_ENVIRONMENT"]], "default_extensions (abstractenvironmentnode attribute)": [[22, "pymatgen.analysis.chemenv.connectivity.environment_nodes.AbstractEnvironmentNode.DEFAULT_EXTENSIONS"]], "environmentnode (class in pymatgen.analysis.chemenv.connectivity.environment_nodes)": [[22, "pymatgen.analysis.chemenv.connectivity.environment_nodes.EnvironmentNode"]], "ligands_arrangement (abstractenvironmentnode attribute)": [[22, "pymatgen.analysis.chemenv.connectivity.environment_nodes.AbstractEnvironmentNode.LIGANDS_ARRANGEMENT"]], "neighboring_ces (abstractenvironmentnode attribute)": [[22, "pymatgen.analysis.chemenv.connectivity.environment_nodes.AbstractEnvironmentNode.NEIGHBORING_CES"]], "neighboring_coordination_environments (abstractenvironmentnode attribute)": [[22, "pymatgen.analysis.chemenv.connectivity.environment_nodes.AbstractEnvironmentNode.NEIGHBORING_COORDINATION_ENVIRONMENTS"]], "neighbors_ligands_arrangement (abstractenvironmentnode attribute)": [[22, "pymatgen.analysis.chemenv.connectivity.environment_nodes.AbstractEnvironmentNode.NEIGHBORS_LIGANDS_ARRANGEMENT"]], "number_of_ligands_for_each_neighboring_ce (abstractenvironmentnode attribute)": [[22, "pymatgen.analysis.chemenv.connectivity.environment_nodes.AbstractEnvironmentNode.NUMBER_OF_LIGANDS_FOR_EACH_NEIGHBORING_CE"]], "number_of_ligands_for_each_neighboring_coordination_environment (abstractenvironmentnode attribute)": [[22, "pymatgen.analysis.chemenv.connectivity.environment_nodes.AbstractEnvironmentNode.NUMBER_OF_LIGANDS_FOR_EACH_NEIGHBORING_COORDINATION_ENVIRONMENT"]], "number_of_neighboring_ces (abstractenvironmentnode attribute)": [[22, "pymatgen.analysis.chemenv.connectivity.environment_nodes.AbstractEnvironmentNode.NUMBER_OF_NEIGHBORING_CES"]], "number_of_neighboring_coordination_environments (abstractenvironmentnode attribute)": [[22, "pymatgen.analysis.chemenv.connectivity.environment_nodes.AbstractEnvironmentNode.NUMBER_OF_NEIGHBORING_COORDINATION_ENVIRONMENTS"]], "atom_symbol (abstractenvironmentnode property)": [[22, "pymatgen.analysis.chemenv.connectivity.environment_nodes.AbstractEnvironmentNode.atom_symbol"]], "ce (abstractenvironmentnode property)": [[22, "pymatgen.analysis.chemenv.connectivity.environment_nodes.AbstractEnvironmentNode.ce"]], "ce_symbol (abstractenvironmentnode property)": [[22, "pymatgen.analysis.chemenv.connectivity.environment_nodes.AbstractEnvironmentNode.ce_symbol"]], "coordination_environment (abstractenvironmentnode property)": [[22, "pymatgen.analysis.chemenv.connectivity.environment_nodes.AbstractEnvironmentNode.coordination_environment"]], "coordination_environment (environmentnode property)": [[22, "pymatgen.analysis.chemenv.connectivity.environment_nodes.EnvironmentNode.coordination_environment"]], "everything_equal() (abstractenvironmentnode method)": [[22, "pymatgen.analysis.chemenv.connectivity.environment_nodes.AbstractEnvironmentNode.everything_equal"]], "everything_equal() (environmentnode method)": [[22, "pymatgen.analysis.chemenv.connectivity.environment_nodes.EnvironmentNode.everything_equal"]], "get_environment_node() (in module pymatgen.analysis.chemenv.connectivity.environment_nodes)": [[22, "pymatgen.analysis.chemenv.connectivity.environment_nodes.get_environment_node"]], "isite (abstractenvironmentnode property)": [[22, "pymatgen.analysis.chemenv.connectivity.environment_nodes.AbstractEnvironmentNode.isite"]], "mp_symbol (abstractenvironmentnode property)": [[22, "pymatgen.analysis.chemenv.connectivity.environment_nodes.AbstractEnvironmentNode.mp_symbol"]], "pymatgen.analysis.chemenv.connectivity.environment_nodes": [[22, "module-pymatgen.analysis.chemenv.connectivity.environment_nodes"]], "structureconnectivity (class in pymatgen.analysis.chemenv.connectivity.structure_connectivity)": [[23, "pymatgen.analysis.chemenv.connectivity.structure_connectivity.StructureConnectivity"]], "add_bonds() (structureconnectivity method)": [[23, "pymatgen.analysis.chemenv.connectivity.structure_connectivity.StructureConnectivity.add_bonds"]], "add_sites() (structureconnectivity method)": [[23, "pymatgen.analysis.chemenv.connectivity.structure_connectivity.StructureConnectivity.add_sites"]], "as_dict() (structureconnectivity method)": [[23, "pymatgen.analysis.chemenv.connectivity.structure_connectivity.StructureConnectivity.as_dict"]], "environment_subgraph() (structureconnectivity method)": [[23, "pymatgen.analysis.chemenv.connectivity.structure_connectivity.StructureConnectivity.environment_subgraph"]], "from_dict() (structureconnectivity class method)": [[23, "pymatgen.analysis.chemenv.connectivity.structure_connectivity.StructureConnectivity.from_dict"]], "get_connected_components() (structureconnectivity method)": [[23, "pymatgen.analysis.chemenv.connectivity.structure_connectivity.StructureConnectivity.get_connected_components"]], "get_delta_image() (in module pymatgen.analysis.chemenv.connectivity.structure_connectivity)": [[23, "pymatgen.analysis.chemenv.connectivity.structure_connectivity.get_delta_image"]], "print_links() (structureconnectivity method)": [[23, "pymatgen.analysis.chemenv.connectivity.structure_connectivity.StructureConnectivity.print_links"]], "pymatgen.analysis.chemenv.connectivity.structure_connectivity": [[23, "module-pymatgen.analysis.chemenv.connectivity.structure_connectivity"]], "setup_atom_environment_subgraph() (structureconnectivity method)": [[23, "pymatgen.analysis.chemenv.connectivity.structure_connectivity.StructureConnectivity.setup_atom_environment_subgraph"]], "setup_atom_environments_subgraph() (structureconnectivity method)": [[23, "pymatgen.analysis.chemenv.connectivity.structure_connectivity.StructureConnectivity.setup_atom_environments_subgraph"]], "setup_connectivity_description() (structureconnectivity method)": [[23, "pymatgen.analysis.chemenv.connectivity.structure_connectivity.StructureConnectivity.setup_connectivity_description"]], "setup_environment_subgraph() (structureconnectivity method)": [[23, "pymatgen.analysis.chemenv.connectivity.structure_connectivity.StructureConnectivity.setup_environment_subgraph"]], "setup_environments_subgraph() (structureconnectivity method)": [[23, "pymatgen.analysis.chemenv.connectivity.structure_connectivity.StructureConnectivity.setup_environments_subgraph"]], "pymatgen.analysis.chemenv.coordination_environments": [[24, "module-pymatgen.analysis.chemenv.coordination_environments"]], "ac (abstractchemenvstrategy attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AbstractChemenvStrategy.AC"]], "ac (distanceangleareanbsetweight attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DistanceAngleAreaNbSetWeight.AC"]], "abstractchemenvstrategy (class in pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AbstractChemenvStrategy"]], "additionalconditionint (class in pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AdditionalConditionInt"]], "anglecutofffloat (class in pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AngleCutoffFloat"]], "anglenbsetweight (class in pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AngleNbSetWeight"]], "angleplateaunbsetweight (class in pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AnglePlateauNbSetWeight"]], "cnbiasnbsetweight (class in pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.CNBiasNbSetWeight"]], "csmfloat (class in pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.CSMFloat"]], "default_additional_condition (simpleabundancechemenvstrategy attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimpleAbundanceChemenvStrategy.DEFAULT_ADDITIONAL_CONDITION"]], "default_additional_condition (simplestchemenvstrategy attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimplestChemenvStrategy.DEFAULT_ADDITIONAL_CONDITION"]], "default_angle_cutoff (simplestchemenvstrategy attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimplestChemenvStrategy.DEFAULT_ANGLE_CUTOFF"]], "default_ce_estimator (multiweightschemenvstrategy attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.MultiWeightsChemenvStrategy.DEFAULT_CE_ESTIMATOR"]], "default_ce_estimator (weightednbsetchemenvstrategy attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.WeightedNbSetChemenvStrategy.DEFAULT_CE_ESTIMATOR"]], "default_continuous_symmetry_measure_cutoff (simplestchemenvstrategy attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimplestChemenvStrategy.DEFAULT_CONTINUOUS_SYMMETRY_MEASURE_CUTOFF"]], "default_distance_cutoff (simplestchemenvstrategy attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimplestChemenvStrategy.DEFAULT_DISTANCE_CUTOFF"]], "default_effective_csm_estimator (deltacsmnbsetweight attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DeltaCSMNbSetWeight.DEFAULT_EFFECTIVE_CSM_ESTIMATOR"]], "default_effective_csm_estimator (selfcsmnbsetweight attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SelfCSMNbSetWeight.DEFAULT_EFFECTIVE_CSM_ESTIMATOR"]], "default_max_dist (simpleabundancechemenvstrategy attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimpleAbundanceChemenvStrategy.DEFAULT_MAX_DIST"]], "default_surface_definition (distanceangleareanbsetweight attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DistanceAngleAreaNbSetWeight.DEFAULT_SURFACE_DEFINITION"]], "default_symmetry_measure_type (abstractchemenvstrategy attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AbstractChemenvStrategy.DEFAULT_SYMMETRY_MEASURE_TYPE"]], "default_symmetry_measure_type (deltacsmnbsetweight attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DeltaCSMNbSetWeight.DEFAULT_SYMMETRY_MEASURE_TYPE"]], "default_symmetry_measure_type (selfcsmnbsetweight attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SelfCSMNbSetWeight.DEFAULT_SYMMETRY_MEASURE_TYPE"]], "default_target_environments (targettedpenaltiedabundancechemenvstrategy attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.TargettedPenaltiedAbundanceChemenvStrategy.DEFAULT_TARGET_ENVIRONMENTS"]], "default_weight_estimator (deltacsmnbsetweight attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DeltaCSMNbSetWeight.DEFAULT_WEIGHT_ESTIMATOR"]], "default_weight_estimator (selfcsmnbsetweight attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SelfCSMNbSetWeight.DEFAULT_WEIGHT_ESTIMATOR"]], "deltacsmnbsetweight (class in pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DeltaCSMNbSetWeight"]], "deltadistancenbsetweight (class in pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DeltaDistanceNbSetWeight"]], "distanceangleareanbsetweight (class in pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DistanceAngleAreaNbSetWeight"]], "distancecutofffloat (class in pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DistanceCutoffFloat"]], "distancenbsetweight (class in pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DistanceNbSetWeight"]], "distanceplateaunbsetweight (class in pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DistancePlateauNbSetWeight"]], "multiweightschemenvstrategy (class in pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.MultiWeightsChemenvStrategy"]], "nbsetweight (class in pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.NbSetWeight"]], "normalizedangledistancenbsetweight (class in pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.NormalizedAngleDistanceNbSetWeight"]], "short_name (anglenbsetweight attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AngleNbSetWeight.SHORT_NAME"]], "short_name (angleplateaunbsetweight attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AnglePlateauNbSetWeight.SHORT_NAME"]], "short_name (cnbiasnbsetweight attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.CNBiasNbSetWeight.SHORT_NAME"]], "short_name (deltacsmnbsetweight attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DeltaCSMNbSetWeight.SHORT_NAME"]], "short_name (deltadistancenbsetweight attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DeltaDistanceNbSetWeight.SHORT_NAME"]], "short_name (distanceangleareanbsetweight attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DistanceAngleAreaNbSetWeight.SHORT_NAME"]], "short_name (distancenbsetweight attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DistanceNbSetWeight.SHORT_NAME"]], "short_name (distanceplateaunbsetweight attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DistancePlateauNbSetWeight.SHORT_NAME"]], "short_name (normalizedangledistancenbsetweight attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.NormalizedAngleDistanceNbSetWeight.SHORT_NAME"]], "short_name (selfcsmnbsetweight attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SelfCSMNbSetWeight.SHORT_NAME"]], "strategy_description (abstractchemenvstrategy attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AbstractChemenvStrategy.STRATEGY_DESCRIPTION"]], "strategy_description (multiweightschemenvstrategy attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.MultiWeightsChemenvStrategy.STRATEGY_DESCRIPTION"]], "strategy_description (simpleabundancechemenvstrategy attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimpleAbundanceChemenvStrategy.STRATEGY_DESCRIPTION"]], "strategy_description (simplestchemenvstrategy attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimplestChemenvStrategy.STRATEGY_DESCRIPTION"]], "strategy_description (weightednbsetchemenvstrategy attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.WeightedNbSetChemenvStrategy.STRATEGY_DESCRIPTION"]], "strategy_info_fields (abstractchemenvstrategy attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AbstractChemenvStrategy.STRATEGY_INFO_FIELDS"]], "strategy_options (abstractchemenvstrategy attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AbstractChemenvStrategy.STRATEGY_OPTIONS"]], "strategy_options (simpleabundancechemenvstrategy attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimpleAbundanceChemenvStrategy.STRATEGY_OPTIONS"]], "strategy_options (simplestchemenvstrategy attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimplestChemenvStrategy.STRATEGY_OPTIONS"]], "selfcsmnbsetweight (class in pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SelfCSMNbSetWeight"]], "simpleabundancechemenvstrategy (class in pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimpleAbundanceChemenvStrategy"]], "simplestchemenvstrategy (class in pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimplestChemenvStrategy"]], "strategyoption (class in pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.StrategyOption"]], "targettedpenaltiedabundancechemenvstrategy (class in pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.TargettedPenaltiedAbundanceChemenvStrategy"]], "weightednbsetchemenvstrategy (class in pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.WeightedNbSetChemenvStrategy"]], "add_strategy_visualization_to_subplot() (simplestchemenvstrategy method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimplestChemenvStrategy.add_strategy_visualization_to_subplot"]], "additional_condition (simplestchemenvstrategy property)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimplestChemenvStrategy.additional_condition"]], "allowed_values (additionalconditionint attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AdditionalConditionInt.allowed_values"]], "allowed_values (anglecutofffloat attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AngleCutoffFloat.allowed_values"]], "allowed_values (csmfloat attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.CSMFloat.allowed_values"]], "allowed_values (distancecutofffloat attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DistanceCutoffFloat.allowed_values"]], "allowed_values (strategyoption attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.StrategyOption.allowed_values"]], "ang() (normalizedangledistancenbsetweight static method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.NormalizedAngleDistanceNbSetWeight.ang"]], "anginvdist() (normalizedangledistancenbsetweight static method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.NormalizedAngleDistanceNbSetWeight.anginvdist"]], "anginvndist() (normalizedangledistancenbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.NormalizedAngleDistanceNbSetWeight.anginvndist"]], "angle_cutoff (simplestchemenvstrategy property)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimplestChemenvStrategy.angle_cutoff"]], "angle_sum() (anglenbsetweight static method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AngleNbSetWeight.angle_sum"]], "angle_sumn() (anglenbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AngleNbSetWeight.angle_sumn"]], "angn() (normalizedangledistancenbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.NormalizedAngleDistanceNbSetWeight.angn"]], "angninvdist() (normalizedangledistancenbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.NormalizedAngleDistanceNbSetWeight.angninvdist"]], "angninvndist() (normalizedangledistancenbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.NormalizedAngleDistanceNbSetWeight.angninvndist"]], "as_dict() (abstractchemenvstrategy method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AbstractChemenvStrategy.as_dict"]], "as_dict() (additionalconditionint method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AdditionalConditionInt.as_dict"]], "as_dict() (anglecutofffloat method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AngleCutoffFloat.as_dict"]], "as_dict() (anglenbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AngleNbSetWeight.as_dict"]], "as_dict() (angleplateaunbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AnglePlateauNbSetWeight.as_dict"]], "as_dict() (cnbiasnbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.CNBiasNbSetWeight.as_dict"]], "as_dict() (csmfloat method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.CSMFloat.as_dict"]], "as_dict() (deltacsmnbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DeltaCSMNbSetWeight.as_dict"]], "as_dict() (deltadistancenbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DeltaDistanceNbSetWeight.as_dict"]], "as_dict() (distanceangleareanbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DistanceAngleAreaNbSetWeight.as_dict"]], "as_dict() (distancecutofffloat method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DistanceCutoffFloat.as_dict"]], "as_dict() (distancenbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DistanceNbSetWeight.as_dict"]], "as_dict() (distanceplateaunbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DistancePlateauNbSetWeight.as_dict"]], "as_dict() (multiweightschemenvstrategy method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.MultiWeightsChemenvStrategy.as_dict"]], "as_dict() (nbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.NbSetWeight.as_dict"]], "as_dict() (normalizedangledistancenbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.NormalizedAngleDistanceNbSetWeight.as_dict"]], "as_dict() (selfcsmnbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SelfCSMNbSetWeight.as_dict"]], "as_dict() (simpleabundancechemenvstrategy method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimpleAbundanceChemenvStrategy.as_dict"]], "as_dict() (simplestchemenvstrategy method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimplestChemenvStrategy.as_dict"]], "as_dict() (strategyoption method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.StrategyOption.as_dict"]], "as_dict() (targettedpenaltiedabundancechemenvstrategy method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.TargettedPenaltiedAbundanceChemenvStrategy.as_dict"]], "as_dict() (weightednbsetchemenvstrategy method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.WeightedNbSetChemenvStrategy.as_dict"]], "aweight() (normalizedangledistancenbsetweight static method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.NormalizedAngleDistanceNbSetWeight.aweight"]], "continuous_symmetry_measure_cutoff (simplestchemenvstrategy property)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimplestChemenvStrategy.continuous_symmetry_measure_cutoff"]], "delta_cn_specifics() (deltacsmnbsetweight class method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DeltaCSMNbSetWeight.delta_cn_specifics"]], "description (additionalconditionint attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AdditionalConditionInt.description"]], "distance_cutoff (simplestchemenvstrategy property)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimplestChemenvStrategy.distance_cutoff"]], "equivalent_site_index_and_transform() (abstractchemenvstrategy method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AbstractChemenvStrategy.equivalent_site_index_and_transform"]], "explicit() (cnbiasnbsetweight class method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.CNBiasNbSetWeight.explicit"]], "from_description() (cnbiasnbsetweight class method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.CNBiasNbSetWeight.from_description"]], "from_dict() (abstractchemenvstrategy class method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AbstractChemenvStrategy.from_dict"]], "from_dict() (additionalconditionint class method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AdditionalConditionInt.from_dict"]], "from_dict() (anglecutofffloat class method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AngleCutoffFloat.from_dict"]], "from_dict() (anglenbsetweight class method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AngleNbSetWeight.from_dict"]], "from_dict() (angleplateaunbsetweight class method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AnglePlateauNbSetWeight.from_dict"]], "from_dict() (cnbiasnbsetweight class method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.CNBiasNbSetWeight.from_dict"]], "from_dict() (csmfloat class method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.CSMFloat.from_dict"]], "from_dict() (deltacsmnbsetweight class method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DeltaCSMNbSetWeight.from_dict"]], "from_dict() (deltadistancenbsetweight class method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DeltaDistanceNbSetWeight.from_dict"]], "from_dict() (distanceangleareanbsetweight class method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DistanceAngleAreaNbSetWeight.from_dict"]], "from_dict() (distancecutofffloat class method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DistanceCutoffFloat.from_dict"]], "from_dict() (distancenbsetweight class method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DistanceNbSetWeight.from_dict"]], "from_dict() (distanceplateaunbsetweight class method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DistancePlateauNbSetWeight.from_dict"]], "from_dict() (multiweightschemenvstrategy class method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.MultiWeightsChemenvStrategy.from_dict"]], "from_dict() (normalizedangledistancenbsetweight class method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.NormalizedAngleDistanceNbSetWeight.from_dict"]], "from_dict() (selfcsmnbsetweight class method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SelfCSMNbSetWeight.from_dict"]], "from_dict() (simpleabundancechemenvstrategy class method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimpleAbundanceChemenvStrategy.from_dict"]], "from_dict() (simplestchemenvstrategy class method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimplestChemenvStrategy.from_dict"]], "from_dict() (targettedpenaltiedabundancechemenvstrategy class method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.TargettedPenaltiedAbundanceChemenvStrategy.from_dict"]], "from_dict() (weightednbsetchemenvstrategy class method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.WeightedNbSetChemenvStrategy.from_dict"]], "geometrically_equidistant() (cnbiasnbsetweight class method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.CNBiasNbSetWeight.geometrically_equidistant"]], "get_effective_csm() (in module pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.get_effective_csm"]], "get_site_ce_fractions_and_neighbors() (abstractchemenvstrategy method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AbstractChemenvStrategy.get_site_ce_fractions_and_neighbors"]], "get_site_coordination_environment() (abstractchemenvstrategy method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AbstractChemenvStrategy.get_site_coordination_environment"]], "get_site_coordination_environment() (simpleabundancechemenvstrategy method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimpleAbundanceChemenvStrategy.get_site_coordination_environment"]], "get_site_coordination_environment() (simplestchemenvstrategy method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimplestChemenvStrategy.get_site_coordination_environment"]], "get_site_coordination_environment() (targettedpenaltiedabundancechemenvstrategy method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.TargettedPenaltiedAbundanceChemenvStrategy.get_site_coordination_environment"]], "get_site_coordination_environment() (weightednbsetchemenvstrategy method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.WeightedNbSetChemenvStrategy.get_site_coordination_environment"]], "get_site_coordination_environments() (abstractchemenvstrategy method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AbstractChemenvStrategy.get_site_coordination_environments"]], "get_site_coordination_environments() (simpleabundancechemenvstrategy method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimpleAbundanceChemenvStrategy.get_site_coordination_environments"]], "get_site_coordination_environments() (simplestchemenvstrategy method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimplestChemenvStrategy.get_site_coordination_environments"]], "get_site_coordination_environments() (weightednbsetchemenvstrategy method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.WeightedNbSetChemenvStrategy.get_site_coordination_environments"]], "get_site_coordination_environments_fractions() (abstractchemenvstrategy method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AbstractChemenvStrategy.get_site_coordination_environments_fractions"]], "get_site_coordination_environments_fractions() (simplestchemenvstrategy method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimplestChemenvStrategy.get_site_coordination_environments_fractions"]], "get_site_coordination_environments_fractions() (weightednbsetchemenvstrategy method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.WeightedNbSetChemenvStrategy.get_site_coordination_environments_fractions"]], "get_site_neighbors() (abstractchemenvstrategy method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AbstractChemenvStrategy.get_site_neighbors"]], "get_site_neighbors() (simpleabundancechemenvstrategy method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimpleAbundanceChemenvStrategy.get_site_neighbors"]], "get_site_neighbors() (simplestchemenvstrategy method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimplestChemenvStrategy.get_site_neighbors"]], "get_site_neighbors() (weightednbsetchemenvstrategy method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.WeightedNbSetChemenvStrategy.get_site_neighbors"]], "gweight() (normalizedangledistancenbsetweight static method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.NormalizedAngleDistanceNbSetWeight.gweight"]], "integer (additionalconditionint attribute)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AdditionalConditionInt.integer"]], "invdist() (normalizedangledistancenbsetweight static method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.NormalizedAngleDistanceNbSetWeight.invdist"]], "invndist() (normalizedangledistancenbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.NormalizedAngleDistanceNbSetWeight.invndist"]], "linearly_equidistant() (cnbiasnbsetweight class method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.CNBiasNbSetWeight.linearly_equidistant"]], "prepare_symmetries() (abstractchemenvstrategy method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AbstractChemenvStrategy.prepare_symmetries"]], "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies": [[25, "module-pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies"]], "rectangle_crosses_area() (distanceangleareanbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DistanceAngleAreaNbSetWeight.rectangle_crosses_area"]], "set_info() (in module pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.set_info"]], "set_option() (abstractchemenvstrategy method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AbstractChemenvStrategy.set_option"]], "set_structure_environments() (abstractchemenvstrategy method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AbstractChemenvStrategy.set_structure_environments"]], "setup_options() (abstractchemenvstrategy method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AbstractChemenvStrategy.setup_options"]], "stats_article_weights_parameters() (multiweightschemenvstrategy class method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.MultiWeightsChemenvStrategy.stats_article_weights_parameters"]], "symmetry_measure_type (abstractchemenvstrategy property)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AbstractChemenvStrategy.symmetry_measure_type"]], "uniquely_determines_coordination_environments (abstractchemenvstrategy property)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AbstractChemenvStrategy.uniquely_determines_coordination_environments"]], "uniquely_determines_coordination_environments (multiweightschemenvstrategy property)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.MultiWeightsChemenvStrategy.uniquely_determines_coordination_environments"]], "uniquely_determines_coordination_environments (simpleabundancechemenvstrategy property)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimpleAbundanceChemenvStrategy.uniquely_determines_coordination_environments"]], "uniquely_determines_coordination_environments (simplestchemenvstrategy property)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SimplestChemenvStrategy.uniquely_determines_coordination_environments"]], "uniquely_determines_coordination_environments (targettedpenaltiedabundancechemenvstrategy property)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.TargettedPenaltiedAbundanceChemenvStrategy.uniquely_determines_coordination_environments"]], "uniquely_determines_coordination_environments (weightednbsetchemenvstrategy property)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.WeightedNbSetChemenvStrategy.uniquely_determines_coordination_environments"]], "w_area_has_intersection() (distanceangleareanbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DistanceAngleAreaNbSetWeight.w_area_has_intersection"]], "w_area_has_intersection_smoothstep() (distanceangleareanbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DistanceAngleAreaNbSetWeight.w_area_has_intersection_smoothstep"]], "w_area_intersection_nbsfh_fbs_onb0() (distanceangleareanbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DistanceAngleAreaNbSetWeight.w_area_intersection_nbsfh_fbs_onb0"]], "weight() (anglenbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AngleNbSetWeight.weight"]], "weight() (angleplateaunbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.AnglePlateauNbSetWeight.weight"]], "weight() (cnbiasnbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.CNBiasNbSetWeight.weight"]], "weight() (deltacsmnbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DeltaCSMNbSetWeight.weight"]], "weight() (deltadistancenbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DeltaDistanceNbSetWeight.weight"]], "weight() (distanceangleareanbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DistanceAngleAreaNbSetWeight.weight"]], "weight() (distancenbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DistanceNbSetWeight.weight"]], "weight() (distanceplateaunbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.DistancePlateauNbSetWeight.weight"]], "weight() (nbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.NbSetWeight.weight"]], "weight() (normalizedangledistancenbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.NormalizedAngleDistanceNbSetWeight.weight"]], "weight() (selfcsmnbsetweight method)": [[25, "pymatgen.analysis.chemenv.coordination_environments.chemenv_strategies.SelfCSMNbSetWeight.weight"]], "allowed_hints_types (coordinationgeometry.neighborssetshints attribute)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.NeighborsSetsHints.ALLOWED_HINTS_TYPES"]], "abstractchemenvalgorithm (class in pymatgen.analysis.chemenv.coordination_environments.coordination_geometries)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.AbstractChemenvAlgorithm"]], "allcoordinationgeometries (class in pymatgen.analysis.chemenv.coordination_environments.coordination_geometries)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.AllCoordinationGeometries"]], "csm_skip_separation_plane_algo (coordinationgeometry attribute)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.CSM_SKIP_SEPARATION_PLANE_ALGO"]], "coordinationgeometry (class in pymatgen.analysis.chemenv.coordination_environments.coordination_geometries)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry"]], "coordinationgeometry.neighborssetshints (class in pymatgen.analysis.chemenv.coordination_environments.coordination_geometries)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.NeighborsSetsHints"]], "explicitpermutationsalgorithm (class in pymatgen.analysis.chemenv.coordination_environments.coordination_geometries)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.ExplicitPermutationsAlgorithm"]], "iucr_symbol (coordinationgeometry property)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.IUCr_symbol"]], "iucr_symbol_str (coordinationgeometry property)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.IUCr_symbol_str"]], "iupac_symbol (coordinationgeometry property)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.IUPAC_symbol"]], "iupac_symbol_str (coordinationgeometry property)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.IUPAC_symbol_str"]], "separationplane (class in pymatgen.analysis.chemenv.coordination_environments.coordination_geometries)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.SeparationPlane"]], "algorithm_type (abstractchemenvalgorithm property)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.AbstractChemenvAlgorithm.algorithm_type"]], "algorithms (coordinationgeometry property)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.algorithms"]], "argsorted_ref_separation_perm (separationplane property)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.SeparationPlane.argsorted_ref_separation_perm"]], "as_dict (explicitpermutationsalgorithm property)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.ExplicitPermutationsAlgorithm.as_dict"]], "as_dict (separationplane property)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.SeparationPlane.as_dict"]], "as_dict() (abstractchemenvalgorithm method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.AbstractChemenvAlgorithm.as_dict"]], "as_dict() (coordinationgeometry method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.as_dict"]], "as_dict() (coordinationgeometry.neighborssetshints method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.NeighborsSetsHints.as_dict"]], "ce_symbol (coordinationgeometry property)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.ce_symbol"]], "coordination_number (coordinationgeometry property)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.coordination_number"]], "distfactor_max (coordinationgeometry property)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.distfactor_max"]], "double_cap_hints() (coordinationgeometry.neighborssetshints method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.NeighborsSetsHints.double_cap_hints"]], "edges() (coordinationgeometry method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.edges"]], "faces() (coordinationgeometry method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.faces"]], "from_dict() (coordinationgeometry class method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.from_dict"]], "from_dict() (coordinationgeometry.neighborssetshints class method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.NeighborsSetsHints.from_dict"]], "from_dict() (explicitpermutationsalgorithm class method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.ExplicitPermutationsAlgorithm.from_dict"]], "from_dict() (separationplane class method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.SeparationPlane.from_dict"]], "get_central_site() (coordinationgeometry method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.get_central_site"]], "get_coordination_number() (coordinationgeometry method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.get_coordination_number"]], "get_geometries() (allcoordinationgeometries method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.AllCoordinationGeometries.get_geometries"]], "get_geometry_from_iucr_symbol() (allcoordinationgeometries method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.AllCoordinationGeometries.get_geometry_from_IUCr_symbol"]], "get_geometry_from_iupac_symbol() (allcoordinationgeometries method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.AllCoordinationGeometries.get_geometry_from_IUPAC_symbol"]], "get_geometry_from_mp_symbol() (allcoordinationgeometries method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.AllCoordinationGeometries.get_geometry_from_mp_symbol"]], "get_geometry_from_name() (allcoordinationgeometries method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.AllCoordinationGeometries.get_geometry_from_name"]], "get_implemented_geometries() (allcoordinationgeometries method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.AllCoordinationGeometries.get_implemented_geometries"]], "get_name() (coordinationgeometry method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.get_name"]], "get_not_implemented_geometries() (allcoordinationgeometries method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.AllCoordinationGeometries.get_not_implemented_geometries"]], "get_pmeshes() (coordinationgeometry method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.get_pmeshes"]], "get_symbol_cn_mapping() (allcoordinationgeometries method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.AllCoordinationGeometries.get_symbol_cn_mapping"]], "get_symbol_name_mapping() (allcoordinationgeometries method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.AllCoordinationGeometries.get_symbol_name_mapping"]], "hints() (coordinationgeometry.neighborssetshints method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.NeighborsSetsHints.hints"]], "is_a_valid_coordination_geometry() (allcoordinationgeometries method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.AllCoordinationGeometries.is_a_valid_coordination_geometry"]], "is_implemented() (coordinationgeometry method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.is_implemented"]], "mp_symbol (coordinationgeometry property)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.mp_symbol"]], "number_of_permutations (coordinationgeometry property)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.number_of_permutations"]], "pauling_stability_ratio (coordinationgeometry property)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.pauling_stability_ratio"]], "permutations (explicitpermutationsalgorithm property)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.ExplicitPermutationsAlgorithm.permutations"]], "permutations (separationplane property)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.SeparationPlane.permutations"]], "pretty_print() (allcoordinationgeometries method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.AllCoordinationGeometries.pretty_print"]], "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries": [[26, "module-pymatgen.analysis.chemenv.coordination_environments.coordination_geometries"]], "ref_permutation() (coordinationgeometry method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.ref_permutation"]], "ref_separation_perm (separationplane property)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.SeparationPlane.ref_separation_perm"]], "safe_separation_permutations() (separationplane method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.SeparationPlane.safe_separation_permutations"]], "set_permutations_safe_override() (coordinationgeometry method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.set_permutations_safe_override"]], "single_cap_hints() (coordinationgeometry.neighborssetshints method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.NeighborsSetsHints.single_cap_hints"]], "solid_angles() (coordinationgeometry method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.solid_angles"]], "triple_cap_hints() (coordinationgeometry.neighborssetshints method)": [[26, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries.CoordinationGeometry.NeighborsSetsHints.triple_cap_hints"]], "pymatgen.analysis.chemenv.coordination_environments.coordination_geometries_files": [[27, "module-pymatgen.analysis.chemenv.coordination_environments.coordination_geometries_files"]], "abstractgeometry (class in pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.AbstractGeometry"]], "bva_distance_scale_factors (localgeometryfinder attribute)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder.BVA_DISTANCE_SCALE_FACTORS"]], "default_bva_distance_scale_factor (localgeometryfinder attribute)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder.DEFAULT_BVA_DISTANCE_SCALE_FACTOR"]], "default_spg_analyzer_options (localgeometryfinder attribute)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder.DEFAULT_SPG_ANALYZER_OPTIONS"]], "default_strategy (localgeometryfinder attribute)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder.DEFAULT_STRATEGY"]], "localgeometryfinder (class in pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder"]], "presets (localgeometryfinder attribute)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder.PRESETS"]], "structure_refinement_none (localgeometryfinder attribute)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder.STRUCTURE_REFINEMENT_NONE"]], "structure_refinement_refined (localgeometryfinder attribute)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder.STRUCTURE_REFINEMENT_REFINED"]], "structure_refinement_symmetrized (localgeometryfinder attribute)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder.STRUCTURE_REFINEMENT_SYMMETRIZED"]], "cn (abstractgeometry property)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.AbstractGeometry.cn"]], "compute_coordination_environments() (localgeometryfinder method)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder.compute_coordination_environments"]], "compute_structure_environments() (localgeometryfinder method)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder.compute_structure_environments"]], "coordination_geometry_symmetry_measures() (localgeometryfinder method)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder.coordination_geometry_symmetry_measures"]], "coordination_geometry_symmetry_measures_fallback_random() (localgeometryfinder method)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder.coordination_geometry_symmetry_measures_fallback_random"]], "coordination_geometry_symmetry_measures_separation_plane() (localgeometryfinder method)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder.coordination_geometry_symmetry_measures_separation_plane"]], "coordination_geometry_symmetry_measures_separation_plane_optim() (localgeometryfinder method)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder.coordination_geometry_symmetry_measures_separation_plane_optim"]], "coordination_geometry_symmetry_measures_sepplane_optim() (localgeometryfinder method)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder.coordination_geometry_symmetry_measures_sepplane_optim"]], "coordination_geometry_symmetry_measures_standard() (localgeometryfinder method)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder.coordination_geometry_symmetry_measures_standard"]], "coordination_number (abstractgeometry property)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.AbstractGeometry.coordination_number"]], "find_rotation() (in module pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.find_rotation"]], "find_scaling_factor() (in module pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.find_scaling_factor"]], "from_cg() (abstractgeometry class method)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.AbstractGeometry.from_cg"]], "get_coordination_symmetry_measures() (localgeometryfinder method)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder.get_coordination_symmetry_measures"]], "get_coordination_symmetry_measures_optim() (localgeometryfinder method)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder.get_coordination_symmetry_measures_optim"]], "get_structure() (localgeometryfinder method)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder.get_structure"]], "points_wcs_csc() (abstractgeometry method)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.AbstractGeometry.points_wcs_csc"]], "points_wcs_ctwcc() (abstractgeometry method)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.AbstractGeometry.points_wcs_ctwcc"]], "points_wcs_ctwocc() (abstractgeometry method)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.AbstractGeometry.points_wcs_ctwocc"]], "points_wocs_csc() (abstractgeometry method)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.AbstractGeometry.points_wocs_csc"]], "points_wocs_ctwcc() (abstractgeometry method)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.AbstractGeometry.points_wocs_ctwcc"]], "points_wocs_ctwocc() (abstractgeometry method)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.AbstractGeometry.points_wocs_ctwocc"]], "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder": [[28, "module-pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder"]], "set_structure() (localgeometryfinder method)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder.set_structure"]], "setup_explicit_indices_local_geometry() (localgeometryfinder method)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder.setup_explicit_indices_local_geometry"]], "setup_local_geometry() (localgeometryfinder method)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder.setup_local_geometry"]], "setup_ordered_indices_local_geometry() (localgeometryfinder method)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder.setup_ordered_indices_local_geometry"]], "setup_parameter() (localgeometryfinder method)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder.setup_parameter"]], "setup_parameters() (localgeometryfinder method)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder.setup_parameters"]], "setup_random_indices_local_geometry() (localgeometryfinder method)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder.setup_random_indices_local_geometry"]], "setup_random_structure() (localgeometryfinder method)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder.setup_random_structure"]], "setup_structure() (localgeometryfinder method)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder.setup_structure"]], "setup_test_perfect_environment() (localgeometryfinder method)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder.setup_test_perfect_environment"]], "symmetry_measure() (in module pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.symmetry_measure"]], "update_nb_set_environments() (localgeometryfinder method)": [[28, "pymatgen.analysis.chemenv.coordination_environments.coordination_geometry_finder.LocalGeometryFinder.update_nb_set_environments"]], "ac (structureenvironments attribute)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.AC"]], "chemicalenvironments (class in pymatgen.analysis.chemenv.coordination_environments.structure_environments)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.ChemicalEnvironments"]], "default_statistics_fields (lightstructureenvironments attribute)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.LightStructureEnvironments.DEFAULT_STATISTICS_FIELDS"]], "delta_max_oxidation_state (lightstructureenvironments attribute)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.LightStructureEnvironments.DELTA_MAX_OXIDATION_STATE"]], "lightstructureenvironments (class in pymatgen.analysis.chemenv.coordination_environments.structure_environments)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.LightStructureEnvironments"]], "lightstructureenvironments.neighborsset (class in pymatgen.analysis.chemenv.coordination_environments.structure_environments)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.LightStructureEnvironments.NeighborsSet"]], "structureenvironments (class in pymatgen.analysis.chemenv.coordination_environments.structure_environments)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments"]], "structureenvironments.neighborsset (class in pymatgen.analysis.chemenv.coordination_environments.structure_environments)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.NeighborsSet"]], "add_coord_geom() (chemicalenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.ChemicalEnvironments.add_coord_geom"]], "add_neighbors_set() (structureenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.add_neighbors_set"]], "add_source() (structureenvironments.neighborsset method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.NeighborsSet.add_source"]], "angle_plateau() (structureenvironments.neighborsset method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.NeighborsSet.angle_plateau"]], "angles (structureenvironments.neighborsset property)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.NeighborsSet.angles"]], "as_dict() (chemicalenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.ChemicalEnvironments.as_dict"]], "as_dict() (lightstructureenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.LightStructureEnvironments.as_dict"]], "as_dict() (lightstructureenvironments.neighborsset method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.LightStructureEnvironments.NeighborsSet.as_dict"]], "as_dict() (structureenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.as_dict"]], "as_dict() (structureenvironments.neighborsset method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.NeighborsSet.as_dict"]], "clear_environments() (lightstructureenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.LightStructureEnvironments.clear_environments"]], "contains_only_one_anion() (lightstructureenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.LightStructureEnvironments.contains_only_one_anion"]], "contains_only_one_anion_atom() (lightstructureenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.LightStructureEnvironments.contains_only_one_anion_atom"]], "coords (structureenvironments.neighborsset property)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.NeighborsSet.coords"]], "differences_wrt() (structureenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.differences_wrt"]], "distance_plateau() (structureenvironments.neighborsset method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.NeighborsSet.distance_plateau"]], "distances (structureenvironments.neighborsset property)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.NeighborsSet.distances"]], "environments_identified() (lightstructureenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.LightStructureEnvironments.environments_identified"]], "from_dict() (chemicalenvironments class method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.ChemicalEnvironments.from_dict"]], "from_dict() (lightstructureenvironments class method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.LightStructureEnvironments.from_dict"]], "from_dict() (lightstructureenvironments.neighborsset class method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.LightStructureEnvironments.NeighborsSet.from_dict"]], "from_dict() (structureenvironments class method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.from_dict"]], "from_dict() (structureenvironments.neighborsset class method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.NeighborsSet.from_dict"]], "from_structure_environments() (lightstructureenvironments class method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.LightStructureEnvironments.from_structure_environments"]], "get_coordination_environments() (structureenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.get_coordination_environments"]], "get_csm() (structureenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.get_csm"]], "get_csm_and_maps() (structureenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.get_csm_and_maps"]], "get_csms() (structureenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.get_csms"]], "get_environments_figure() (structureenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.get_environments_figure"]], "get_neighb_voronoi_indices() (structureenvironments.neighborsset method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.NeighborsSet.get_neighb_voronoi_indices"]], "get_site_info_for_specie_allces() (lightstructureenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.LightStructureEnvironments.get_site_info_for_specie_allces"]], "get_site_info_for_specie_ce() (lightstructureenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.LightStructureEnvironments.get_site_info_for_specie_ce"]], "get_statistics() (lightstructureenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.LightStructureEnvironments.get_statistics"]], "info (structureenvironments.neighborsset property)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.NeighborsSet.info"]], "init_neighbors_sets() (structureenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.init_neighbors_sets"]], "is_close_to() (chemicalenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.ChemicalEnvironments.is_close_to"]], "minimum_geometries() (chemicalenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.ChemicalEnvironments.minimum_geometries"]], "minimum_geometry() (chemicalenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.ChemicalEnvironments.minimum_geometry"]], "neighb_coords (lightstructureenvironments.neighborsset property)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.LightStructureEnvironments.NeighborsSet.neighb_coords"]], "neighb_coords (structureenvironments.neighborsset property)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.NeighborsSet.neighb_coords"]], "neighb_coordsopt (structureenvironments.neighborsset property)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.NeighborsSet.neighb_coordsOpt"]], "neighb_indices_and_images (lightstructureenvironments.neighborsset property)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.LightStructureEnvironments.NeighborsSet.neighb_indices_and_images"]], "neighb_sites (lightstructureenvironments.neighborsset property)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.LightStructureEnvironments.NeighborsSet.neighb_sites"]], "neighb_sites (structureenvironments.neighborsset property)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.NeighborsSet.neighb_sites"]], "neighb_sites_and_indices (lightstructureenvironments.neighborsset property)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.LightStructureEnvironments.NeighborsSet.neighb_sites_and_indices"]], "neighb_sites_and_indices (structureenvironments.neighborsset property)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.NeighborsSet.neighb_sites_and_indices"]], "normalized_angles (structureenvironments.neighborsset property)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.NeighborsSet.normalized_angles"]], "normalized_distances (structureenvironments.neighborsset property)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.NeighborsSet.normalized_distances"]], "plot_csm_and_maps() (structureenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.plot_csm_and_maps"]], "plot_environments() (structureenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.plot_environments"]], "pymatgen.analysis.chemenv.coordination_environments.structure_environments": [[29, "module-pymatgen.analysis.chemenv.coordination_environments.structure_environments"]], "save_environments_figure() (structureenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.save_environments_figure"]], "setup_statistic_lists() (lightstructureenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.LightStructureEnvironments.setup_statistic_lists"]], "site_contains_environment() (lightstructureenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.LightStructureEnvironments.site_contains_environment"]], "site_has_clear_environment() (lightstructureenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.LightStructureEnvironments.site_has_clear_environment"]], "source (structureenvironments.neighborsset property)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.NeighborsSet.source"]], "structure_contains_atom_environment() (lightstructureenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.LightStructureEnvironments.structure_contains_atom_environment"]], "structure_has_clear_environments() (lightstructureenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.LightStructureEnvironments.structure_has_clear_environments"]], "uniquely_determines_coordination_environments (lightstructureenvironments property)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.LightStructureEnvironments.uniquely_determines_coordination_environments"]], "update_coordination_environments() (structureenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.update_coordination_environments"]], "update_site_info() (structureenvironments method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.update_site_info"]], "voronoi_grid_surface_points() (structureenvironments.neighborsset method)": [[29, "pymatgen.analysis.chemenv.coordination_environments.structure_environments.StructureEnvironments.NeighborsSet.voronoi_grid_surface_points"]], "ac (detailedvoronoicontainer attribute)": [[30, "pymatgen.analysis.chemenv.coordination_environments.voronoi.DetailedVoronoiContainer.AC"]], "detailedvoronoicontainer (class in pymatgen.analysis.chemenv.coordination_environments.voronoi)": [[30, "pymatgen.analysis.chemenv.coordination_environments.voronoi.DetailedVoronoiContainer"]], "as_dict() (detailedvoronoicontainer method)": [[30, "pymatgen.analysis.chemenv.coordination_environments.voronoi.DetailedVoronoiContainer.as_dict"]], "default_normalized_angle_tolerance (detailedvoronoicontainer attribute)": [[30, "pymatgen.analysis.chemenv.coordination_environments.voronoi.DetailedVoronoiContainer.default_normalized_angle_tolerance"]], "default_normalized_distance_tolerance (detailedvoronoicontainer attribute)": [[30, "pymatgen.analysis.chemenv.coordination_environments.voronoi.DetailedVoronoiContainer.default_normalized_distance_tolerance"]], "default_voronoi_cutoff (detailedvoronoicontainer attribute)": [[30, "pymatgen.analysis.chemenv.coordination_environments.voronoi.DetailedVoronoiContainer.default_voronoi_cutoff"]], "from_bson_voronoi_list2() (in module pymatgen.analysis.chemenv.coordination_environments.voronoi)": [[30, "pymatgen.analysis.chemenv.coordination_environments.voronoi.from_bson_voronoi_list2"]], "from_dict() (detailedvoronoicontainer class method)": [[30, "pymatgen.analysis.chemenv.coordination_environments.voronoi.DetailedVoronoiContainer.from_dict"]], "get_rdf_figure() (detailedvoronoicontainer method)": [[30, "pymatgen.analysis.chemenv.coordination_environments.voronoi.DetailedVoronoiContainer.get_rdf_figure"]], "get_sadf_figure() (detailedvoronoicontainer method)": [[30, "pymatgen.analysis.chemenv.coordination_environments.voronoi.DetailedVoronoiContainer.get_sadf_figure"]], "is_close_to() (detailedvoronoicontainer method)": [[30, "pymatgen.analysis.chemenv.coordination_environments.voronoi.DetailedVoronoiContainer.is_close_to"]], "maps_and_surfaces() (detailedvoronoicontainer method)": [[30, "pymatgen.analysis.chemenv.coordination_environments.voronoi.DetailedVoronoiContainer.maps_and_surfaces"]], "maps_and_surfaces_bounded() (detailedvoronoicontainer method)": [[30, "pymatgen.analysis.chemenv.coordination_environments.voronoi.DetailedVoronoiContainer.maps_and_surfaces_bounded"]], "neighbors() (detailedvoronoicontainer method)": [[30, "pymatgen.analysis.chemenv.coordination_environments.voronoi.DetailedVoronoiContainer.neighbors"]], "neighbors_surfaces() (detailedvoronoicontainer method)": [[30, "pymatgen.analysis.chemenv.coordination_environments.voronoi.DetailedVoronoiContainer.neighbors_surfaces"]], "neighbors_surfaces_bounded() (detailedvoronoicontainer method)": [[30, "pymatgen.analysis.chemenv.coordination_environments.voronoi.DetailedVoronoiContainer.neighbors_surfaces_bounded"]], "pymatgen.analysis.chemenv.coordination_environments.voronoi": [[30, "module-pymatgen.analysis.chemenv.coordination_environments.voronoi"]], "setup_neighbors_distances_and_angles() (detailedvoronoicontainer method)": [[30, "pymatgen.analysis.chemenv.coordination_environments.voronoi.DetailedVoronoiContainer.setup_neighbors_distances_and_angles"]], "setup_voronoi_list() (detailedvoronoicontainer method)": [[30, "pymatgen.analysis.chemenv.coordination_environments.voronoi.DetailedVoronoiContainer.setup_voronoi_list"]], "to_bson_voronoi_list2() (detailedvoronoicontainer method)": [[30, "pymatgen.analysis.chemenv.coordination_environments.voronoi.DetailedVoronoiContainer.to_bson_voronoi_list2"]], "voronoi_parameters_bounds_and_limits() (detailedvoronoicontainer method)": [[30, "pymatgen.analysis.chemenv.coordination_environments.voronoi.DetailedVoronoiContainer.voronoi_parameters_bounds_and_limits"]], "pymatgen.analysis.chemenv.utils": [[31, "module-pymatgen.analysis.chemenv.utils"]], "chemenvconfig (class in pymatgen.analysis.chemenv.utils.chemenv_config)": [[32, "pymatgen.analysis.chemenv.utils.chemenv_config.ChemEnvConfig"]], "default_package_options (chemenvconfig attribute)": [[32, "pymatgen.analysis.chemenv.utils.chemenv_config.ChemEnvConfig.DEFAULT_PACKAGE_OPTIONS"]], "auto_load() (chemenvconfig class method)": [[32, "pymatgen.analysis.chemenv.utils.chemenv_config.ChemEnvConfig.auto_load"]], "has_materials_project_access (chemenvconfig property)": [[32, "pymatgen.analysis.chemenv.utils.chemenv_config.ChemEnvConfig.has_materials_project_access"]], "package_options_description() (chemenvconfig method)": [[32, "pymatgen.analysis.chemenv.utils.chemenv_config.ChemEnvConfig.package_options_description"]], "pymatgen.analysis.chemenv.utils.chemenv_config": [[32, "module-pymatgen.analysis.chemenv.utils.chemenv_config"]], "save() (chemenvconfig method)": [[32, "pymatgen.analysis.chemenv.utils.chemenv_config.ChemEnvConfig.save"]], "setup() (chemenvconfig method)": [[32, "pymatgen.analysis.chemenv.utils.chemenv_config.ChemEnvConfig.setup"]], "setup_package_options() (chemenvconfig method)": [[32, "pymatgen.analysis.chemenv.utils.chemenv_config.ChemEnvConfig.setup_package_options"]], "abstractchemenverror": [[33, "pymatgen.analysis.chemenv.utils.chemenv_errors.AbstractChemenvError"]], "chemenverror": [[33, "pymatgen.analysis.chemenv.utils.chemenv_errors.ChemenvError"]], "equivalentsitesearcherror": [[33, "pymatgen.analysis.chemenv.utils.chemenv_errors.EquivalentSiteSearchError"]], "neighborsnotcomputedchemenverror": [[33, "pymatgen.analysis.chemenv.utils.chemenv_errors.NeighborsNotComputedChemenvError"]], "solidangleerror": [[33, "pymatgen.analysis.chemenv.utils.chemenv_errors.SolidAngleError"]], "pymatgen.analysis.chemenv.utils.chemenv_errors": [[33, "module-pymatgen.analysis.chemenv.utils.chemenv_errors"]], "plane (class in pymatgen.analysis.chemenv.utils.coordination_geometry_utils)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane"]], "test_2d_points (plane attribute)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.TEST_2D_POINTS"]], "a (plane property)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.a"]], "abcd (plane property)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.abcd"]], "anticlockwise_sort() (in module pymatgen.analysis.chemenv.utils.coordination_geometry_utils)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.anticlockwise_sort"]], "anticlockwise_sort_indices() (in module pymatgen.analysis.chemenv.utils.coordination_geometry_utils)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.anticlockwise_sort_indices"]], "b (plane property)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.b"]], "c (plane property)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.c"]], "changebasis() (in module pymatgen.analysis.chemenv.utils.coordination_geometry_utils)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.changebasis"]], "coefficients (plane property)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.coefficients"]], "collinear() (in module pymatgen.analysis.chemenv.utils.coordination_geometry_utils)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.collinear"]], "crosses_origin (plane property)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.crosses_origin"]], "d (plane property)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.d"]], "diamond_functions() (in module pymatgen.analysis.chemenv.utils.coordination_geometry_utils)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.diamond_functions"]], "distance_to_origin (plane property)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.distance_to_origin"]], "distance_to_point() (plane method)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.distance_to_point"]], "distances() (plane method)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.distances"]], "distances_indices_groups() (plane method)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.distances_indices_groups"]], "distances_indices_sorted() (plane method)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.distances_indices_sorted"]], "fit_error() (plane method)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.fit_error"]], "fit_least_square_distance_error() (plane method)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.fit_least_square_distance_error"]], "fit_maximum_distance_error() (plane method)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.fit_maximum_distance_error"]], "from_2points_and_origin() (plane class method)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.from_2points_and_origin"]], "from_3points() (plane class method)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.from_3points"]], "from_coefficients() (plane class method)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.from_coefficients"]], "from_npoints() (plane class method)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.from_npoints"]], "from_npoints_least_square_distance() (plane class method)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.from_npoints_least_square_distance"]], "from_npoints_maximum_distance() (plane class method)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.from_npoints_maximum_distance"]], "function_comparison() (in module pymatgen.analysis.chemenv.utils.coordination_geometry_utils)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.function_comparison"]], "get_lower_and_upper_f() (in module pymatgen.analysis.chemenv.utils.coordination_geometry_utils)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.get_lower_and_upper_f"]], "indices_separate() (plane method)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.indices_separate"]], "init_3points() (plane method)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.init_3points"]], "is_anion_cation_bond() (in module pymatgen.analysis.chemenv.utils.coordination_geometry_utils)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.is_anion_cation_bond"]], "is_in_list() (plane method)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.is_in_list"]], "is_in_plane() (plane method)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.is_in_plane"]], "is_same_plane_as() (plane method)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.is_same_plane_as"]], "matrixtimesvector() (in module pymatgen.analysis.chemenv.utils.coordination_geometry_utils)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.matrixTimesVector"]], "my_solid_angle() (in module pymatgen.analysis.chemenv.utils.coordination_geometry_utils)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.my_solid_angle"]], "orthonormal_vectors() (plane method)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.orthonormal_vectors"]], "perpendicular_bisector() (plane class method)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.perpendicular_bisector"]], "project_and_to2dim() (plane method)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.project_and_to2dim"]], "project_and_to2dim_ordered_indices() (plane method)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.project_and_to2dim_ordered_indices"]], "projectionpoints() (plane method)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.Plane.projectionpoints"]], "pymatgen.analysis.chemenv.utils.coordination_geometry_utils": [[34, "module-pymatgen.analysis.chemenv.utils.coordination_geometry_utils"]], "quarter_ellipsis_functions() (in module pymatgen.analysis.chemenv.utils.coordination_geometry_utils)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.quarter_ellipsis_functions"]], "rectangle_surface_intersection() (in module pymatgen.analysis.chemenv.utils.coordination_geometry_utils)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.rectangle_surface_intersection"]], "rotatecoords() (in module pymatgen.analysis.chemenv.utils.coordination_geometry_utils)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.rotateCoords"]], "rotatecoordsopt() (in module pymatgen.analysis.chemenv.utils.coordination_geometry_utils)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.rotateCoordsOpt"]], "separation_in_list() (in module pymatgen.analysis.chemenv.utils.coordination_geometry_utils)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.separation_in_list"]], "sort_separation() (in module pymatgen.analysis.chemenv.utils.coordination_geometry_utils)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.sort_separation"]], "sort_separation_tuple() (in module pymatgen.analysis.chemenv.utils.coordination_geometry_utils)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.sort_separation_tuple"]], "spline_functions() (in module pymatgen.analysis.chemenv.utils.coordination_geometry_utils)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.spline_functions"]], "vectorstomatrix() (in module pymatgen.analysis.chemenv.utils.coordination_geometry_utils)": [[34, "pymatgen.analysis.chemenv.utils.coordination_geometry_utils.vectorsToMatrix"]], "all (additionalconditions attribute)": [[35, "pymatgen.analysis.chemenv.utils.defs_utils.AdditionalConditions.ALL"]], "additionalconditions (class in pymatgen.analysis.chemenv.utils.defs_utils)": [[35, "pymatgen.analysis.chemenv.utils.defs_utils.AdditionalConditions"]], "condition_description (additionalconditions attribute)": [[35, "pymatgen.analysis.chemenv.utils.defs_utils.AdditionalConditions.CONDITION_DESCRIPTION"]], "none (additionalconditions attribute)": [[35, "pymatgen.analysis.chemenv.utils.defs_utils.AdditionalConditions.NONE"]], "no_ac (additionalconditions attribute)": [[35, "pymatgen.analysis.chemenv.utils.defs_utils.AdditionalConditions.NO_AC"]], "no_additional_condition (additionalconditions attribute)": [[35, "pymatgen.analysis.chemenv.utils.defs_utils.AdditionalConditions.NO_ADDITIONAL_CONDITION"]], "no_e2seb (additionalconditions attribute)": [[35, "pymatgen.analysis.chemenv.utils.defs_utils.AdditionalConditions.NO_E2SEB"]], "no_element_to_same_element_bonds (additionalconditions attribute)": [[35, "pymatgen.analysis.chemenv.utils.defs_utils.AdditionalConditions.NO_ELEMENT_TO_SAME_ELEMENT_BONDS"]], "only_acb (additionalconditions attribute)": [[35, "pymatgen.analysis.chemenv.utils.defs_utils.AdditionalConditions.ONLY_ACB"]], "only_acb_and_no_e2seb (additionalconditions attribute)": [[35, "pymatgen.analysis.chemenv.utils.defs_utils.AdditionalConditions.ONLY_ACB_AND_NO_E2SEB"]], "only_anion_cation_bonds (additionalconditions attribute)": [[35, "pymatgen.analysis.chemenv.utils.defs_utils.AdditionalConditions.ONLY_ANION_CATION_BONDS"]], "only_anion_cation_bonds_and_no_element_to_same_element_bonds (additionalconditions attribute)": [[35, "pymatgen.analysis.chemenv.utils.defs_utils.AdditionalConditions.ONLY_ANION_CATION_BONDS_AND_NO_ELEMENT_TO_SAME_ELEMENT_BONDS"]], "only_e2ob (additionalconditions attribute)": [[35, "pymatgen.analysis.chemenv.utils.defs_utils.AdditionalConditions.ONLY_E2OB"]], "only_element_to_oxygen_bonds (additionalconditions attribute)": [[35, "pymatgen.analysis.chemenv.utils.defs_utils.AdditionalConditions.ONLY_ELEMENT_TO_OXYGEN_BONDS"]], "check_condition() (additionalconditions method)": [[35, "pymatgen.analysis.chemenv.utils.defs_utils.AdditionalConditions.check_condition"]], "pymatgen.analysis.chemenv.utils.defs_utils": [[35, "module-pymatgen.analysis.chemenv.utils.defs_utils"]], "allowed_functions (abstractratiofunction attribute)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.AbstractRatioFunction.ALLOWED_FUNCTIONS"]], "allowed_functions (csmfiniteratiofunction attribute)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.CSMFiniteRatioFunction.ALLOWED_FUNCTIONS"]], "allowed_functions (csminfiniteratiofunction attribute)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.CSMInfiniteRatioFunction.ALLOWED_FUNCTIONS"]], "allowed_functions (deltacsmratiofunction attribute)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.DeltaCSMRatioFunction.ALLOWED_FUNCTIONS"]], "allowed_functions (ratiofunction attribute)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.RatioFunction.ALLOWED_FUNCTIONS"]], "abstractratiofunction (class in pymatgen.analysis.chemenv.utils.func_utils)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.AbstractRatioFunction"]], "csmfiniteratiofunction (class in pymatgen.analysis.chemenv.utils.func_utils)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.CSMFiniteRatioFunction"]], "csminfiniteratiofunction (class in pymatgen.analysis.chemenv.utils.func_utils)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.CSMInfiniteRatioFunction"]], "deltacsmratiofunction (class in pymatgen.analysis.chemenv.utils.func_utils)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.DeltaCSMRatioFunction"]], "ratiofunction (class in pymatgen.analysis.chemenv.utils.func_utils)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.RatioFunction"]], "evaluate() (abstractratiofunction method)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.AbstractRatioFunction.evaluate"]], "fractions() (csmfiniteratiofunction method)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.CSMFiniteRatioFunction.fractions"]], "fractions() (csminfiniteratiofunction method)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.CSMInfiniteRatioFunction.fractions"]], "from_dict() (abstractratiofunction class method)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.AbstractRatioFunction.from_dict"]], "inverse_smootherstep() (ratiofunction method)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.RatioFunction.inverse_smootherstep"]], "inverse_smoothstep() (ratiofunction method)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.RatioFunction.inverse_smoothstep"]], "mean_estimator() (csmfiniteratiofunction method)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.CSMFiniteRatioFunction.mean_estimator"]], "mean_estimator() (csminfiniteratiofunction method)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.CSMInfiniteRatioFunction.mean_estimator"]], "power2_decreasing_exp() (csmfiniteratiofunction method)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.CSMFiniteRatioFunction.power2_decreasing_exp"]], "power2_decreasing_exp() (ratiofunction method)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.RatioFunction.power2_decreasing_exp"]], "power2_inverse_decreasing() (csminfiniteratiofunction method)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.CSMInfiniteRatioFunction.power2_inverse_decreasing"]], "power2_inverse_decreasing() (ratiofunction method)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.RatioFunction.power2_inverse_decreasing"]], "power2_inverse_power2_decreasing() (csminfiniteratiofunction method)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.CSMInfiniteRatioFunction.power2_inverse_power2_decreasing"]], "power2_inverse_power2_decreasing() (ratiofunction method)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.RatioFunction.power2_inverse_power2_decreasing"]], "pymatgen.analysis.chemenv.utils.func_utils": [[36, "module-pymatgen.analysis.chemenv.utils.func_utils"]], "ratios() (csmfiniteratiofunction method)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.CSMFiniteRatioFunction.ratios"]], "ratios() (csminfiniteratiofunction method)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.CSMInfiniteRatioFunction.ratios"]], "setup_parameters() (abstractratiofunction method)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.AbstractRatioFunction.setup_parameters"]], "smootherstep() (csmfiniteratiofunction method)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.CSMFiniteRatioFunction.smootherstep"]], "smootherstep() (deltacsmratiofunction method)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.DeltaCSMRatioFunction.smootherstep"]], "smootherstep() (ratiofunction method)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.RatioFunction.smootherstep"]], "smoothstep() (csmfiniteratiofunction method)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.CSMFiniteRatioFunction.smoothstep"]], "smoothstep() (ratiofunction method)": [[36, "pymatgen.analysis.chemenv.utils.func_utils.RatioFunction.smoothstep"]], "multigraphcycle (class in pymatgen.analysis.chemenv.utils.graph_utils)": [[37, "pymatgen.analysis.chemenv.utils.graph_utils.MultiGraphCycle"]], "simplegraphcycle (class in pymatgen.analysis.chemenv.utils.graph_utils)": [[37, "pymatgen.analysis.chemenv.utils.graph_utils.SimpleGraphCycle"]], "as_dict() (simplegraphcycle method)": [[37, "pymatgen.analysis.chemenv.utils.graph_utils.SimpleGraphCycle.as_dict"]], "from_dict() (simplegraphcycle class method)": [[37, "pymatgen.analysis.chemenv.utils.graph_utils.SimpleGraphCycle.from_dict"]], "from_edges() (simplegraphcycle class method)": [[37, "pymatgen.analysis.chemenv.utils.graph_utils.SimpleGraphCycle.from_edges"]], "get_all_elementary_cycles() (in module pymatgen.analysis.chemenv.utils.graph_utils)": [[37, "pymatgen.analysis.chemenv.utils.graph_utils.get_all_elementary_cycles"]], "get_all_simple_paths_edges() (in module pymatgen.analysis.chemenv.utils.graph_utils)": [[37, "pymatgen.analysis.chemenv.utils.graph_utils.get_all_simple_paths_edges"]], "get_delta() (in module pymatgen.analysis.chemenv.utils.graph_utils)": [[37, "pymatgen.analysis.chemenv.utils.graph_utils.get_delta"]], "order() (multigraphcycle method)": [[37, "pymatgen.analysis.chemenv.utils.graph_utils.MultiGraphCycle.order"]], "order() (simplegraphcycle method)": [[37, "pymatgen.analysis.chemenv.utils.graph_utils.SimpleGraphCycle.order"]], "pymatgen.analysis.chemenv.utils.graph_utils": [[37, "module-pymatgen.analysis.chemenv.utils.graph_utils"]], "validate() (multigraphcycle method)": [[37, "pymatgen.analysis.chemenv.utils.graph_utils.MultiGraphCycle.validate"]], "validate() (simplegraphcycle method)": [[37, "pymatgen.analysis.chemenv.utils.graph_utils.SimpleGraphCycle.validate"]], "cosinus_step() (in module pymatgen.analysis.chemenv.utils.math_utils)": [[38, "pymatgen.analysis.chemenv.utils.math_utils.cosinus_step"]], "divisors() (in module pymatgen.analysis.chemenv.utils.math_utils)": [[38, "pymatgen.analysis.chemenv.utils.math_utils.divisors"]], "get_center_of_arc() (in module pymatgen.analysis.chemenv.utils.math_utils)": [[38, "pymatgen.analysis.chemenv.utils.math_utils.get_center_of_arc"]], "get_linearly_independent_vectors() (in module pymatgen.analysis.chemenv.utils.math_utils)": [[38, "pymatgen.analysis.chemenv.utils.math_utils.get_linearly_independent_vectors"]], "normal_cdf_step() (in module pymatgen.analysis.chemenv.utils.math_utils)": [[38, "pymatgen.analysis.chemenv.utils.math_utils.normal_cdf_step"]], "power2_decreasing_exp() (in module pymatgen.analysis.chemenv.utils.math_utils)": [[38, "pymatgen.analysis.chemenv.utils.math_utils.power2_decreasing_exp"]], "power2_inverse_decreasing() (in module pymatgen.analysis.chemenv.utils.math_utils)": [[38, "pymatgen.analysis.chemenv.utils.math_utils.power2_inverse_decreasing"]], "power2_inverse_power2_decreasing() (in module pymatgen.analysis.chemenv.utils.math_utils)": [[38, "pymatgen.analysis.chemenv.utils.math_utils.power2_inverse_power2_decreasing"]], "power2_inverse_powern_decreasing() (in module pymatgen.analysis.chemenv.utils.math_utils)": [[38, "pymatgen.analysis.chemenv.utils.math_utils.power2_inverse_powern_decreasing"]], "power2_tangent_decreasing() (in module pymatgen.analysis.chemenv.utils.math_utils)": [[38, "pymatgen.analysis.chemenv.utils.math_utils.power2_tangent_decreasing"]], "power3_step() (in module pymatgen.analysis.chemenv.utils.math_utils)": [[38, "pymatgen.analysis.chemenv.utils.math_utils.power3_step"]], "powern_decreasing() (in module pymatgen.analysis.chemenv.utils.math_utils)": [[38, "pymatgen.analysis.chemenv.utils.math_utils.powern_decreasing"]], "powern_parts_step() (in module pymatgen.analysis.chemenv.utils.math_utils)": [[38, "pymatgen.analysis.chemenv.utils.math_utils.powern_parts_step"]], "prime_factors() (in module pymatgen.analysis.chemenv.utils.math_utils)": [[38, "pymatgen.analysis.chemenv.utils.math_utils.prime_factors"]], "pymatgen.analysis.chemenv.utils.math_utils": [[38, "module-pymatgen.analysis.chemenv.utils.math_utils"]], "scale_and_clamp() (in module pymatgen.analysis.chemenv.utils.math_utils)": [[38, "pymatgen.analysis.chemenv.utils.math_utils.scale_and_clamp"]], "smootherstep() (in module pymatgen.analysis.chemenv.utils.math_utils)": [[38, "pymatgen.analysis.chemenv.utils.math_utils.smootherstep"]], "smoothstep() (in module pymatgen.analysis.chemenv.utils.math_utils)": [[38, "pymatgen.analysis.chemenv.utils.math_utils.smoothstep"]], "compute_environments() (in module pymatgen.analysis.chemenv.utils.scripts_utils)": [[39, "pymatgen.analysis.chemenv.utils.scripts_utils.compute_environments"]], "draw_cg() (in module pymatgen.analysis.chemenv.utils.scripts_utils)": [[39, "pymatgen.analysis.chemenv.utils.scripts_utils.draw_cg"]], "pymatgen.analysis.chemenv.utils.scripts_utils": [[39, "module-pymatgen.analysis.chemenv.utils.scripts_utils"]], "visualize() (in module pymatgen.analysis.chemenv.utils.scripts_utils)": [[39, "pymatgen.analysis.chemenv.utils.scripts_utils.visualize"]], "chemicalpotentialdiagram (class in pymatgen.analysis.chempot_diagram)": [[40, "pymatgen.analysis.chempot_diagram.ChemicalPotentialDiagram"]], "border_hyperplanes (chemicalpotentialdiagram property)": [[40, "pymatgen.analysis.chempot_diagram.ChemicalPotentialDiagram.border_hyperplanes"]], "chemical_system (chemicalpotentialdiagram property)": [[40, "pymatgen.analysis.chempot_diagram.ChemicalPotentialDiagram.chemical_system"]], "domains (chemicalpotentialdiagram property)": [[40, "pymatgen.analysis.chempot_diagram.ChemicalPotentialDiagram.domains"]], "el_refs (chemicalpotentialdiagram property)": [[40, "pymatgen.analysis.chempot_diagram.ChemicalPotentialDiagram.el_refs"]], "entry_dict (chemicalpotentialdiagram property)": [[40, "pymatgen.analysis.chempot_diagram.ChemicalPotentialDiagram.entry_dict"]], "get_2d_orthonormal_vector() (in module pymatgen.analysis.chempot_diagram)": [[40, "pymatgen.analysis.chempot_diagram.get_2d_orthonormal_vector"]], "get_centroid_2d() (in module pymatgen.analysis.chempot_diagram)": [[40, "pymatgen.analysis.chempot_diagram.get_centroid_2d"]], "get_plot() (chemicalpotentialdiagram method)": [[40, "pymatgen.analysis.chempot_diagram.ChemicalPotentialDiagram.get_plot"]], "hyperplane_entries (chemicalpotentialdiagram property)": [[40, "pymatgen.analysis.chempot_diagram.ChemicalPotentialDiagram.hyperplane_entries"]], "hyperplanes (chemicalpotentialdiagram property)": [[40, "pymatgen.analysis.chempot_diagram.ChemicalPotentialDiagram.hyperplanes"]], "lims (chemicalpotentialdiagram property)": [[40, "pymatgen.analysis.chempot_diagram.ChemicalPotentialDiagram.lims"]], "pymatgen.analysis.chempot_diagram": [[40, "module-pymatgen.analysis.chempot_diagram"]], "simple_pca() (in module pymatgen.analysis.chempot_diagram)": [[40, "pymatgen.analysis.chempot_diagram.simple_pca"]], "costanalyzer (class in pymatgen.analysis.cost)": [[41, "pymatgen.analysis.cost.CostAnalyzer"]], "costdb (class in pymatgen.analysis.cost)": [[41, "pymatgen.analysis.cost.CostDB"]], "costdbcsv (class in pymatgen.analysis.cost)": [[41, "pymatgen.analysis.cost.CostDBCSV"]], "costentry (class in pymatgen.analysis.cost)": [[41, "pymatgen.analysis.cost.CostEntry"]], "get_cost_per_kg() (costanalyzer method)": [[41, "pymatgen.analysis.cost.CostAnalyzer.get_cost_per_kg"]], "get_cost_per_mol() (costanalyzer method)": [[41, "pymatgen.analysis.cost.CostAnalyzer.get_cost_per_mol"]], "get_entries() (costdb method)": [[41, "pymatgen.analysis.cost.CostDB.get_entries"]], "get_entries() (costdbcsv method)": [[41, "pymatgen.analysis.cost.CostDBCSV.get_entries"]], "get_lowest_decomposition() (costanalyzer method)": [[41, "pymatgen.analysis.cost.CostAnalyzer.get_lowest_decomposition"]], "pymatgen.analysis.cost": [[41, "module-pymatgen.analysis.cost"]], "pymatgen.analysis.diffraction": [[42, "module-pymatgen.analysis.diffraction"]], "abstractdiffractionpatterncalculator (class in pymatgen.analysis.diffraction.core)": [[43, "pymatgen.analysis.diffraction.core.AbstractDiffractionPatternCalculator"]], "diffractionpattern (class in pymatgen.analysis.diffraction.core)": [[43, "pymatgen.analysis.diffraction.core.DiffractionPattern"]], "scaled_intensity_tol (abstractdiffractionpatterncalculator attribute)": [[43, "pymatgen.analysis.diffraction.core.AbstractDiffractionPatternCalculator.SCALED_INTENSITY_TOL"]], "two_theta_tol (abstractdiffractionpatterncalculator attribute)": [[43, "pymatgen.analysis.diffraction.core.AbstractDiffractionPatternCalculator.TWO_THETA_TOL"]], "xlabel (diffractionpattern attribute)": [[43, "pymatgen.analysis.diffraction.core.DiffractionPattern.XLABEL"]], "ylabel (diffractionpattern attribute)": [[43, "pymatgen.analysis.diffraction.core.DiffractionPattern.YLABEL"]], "get_pattern() (abstractdiffractionpatterncalculator method)": [[43, "pymatgen.analysis.diffraction.core.AbstractDiffractionPatternCalculator.get_pattern"]], "get_plot() (abstractdiffractionpatterncalculator method)": [[43, "pymatgen.analysis.diffraction.core.AbstractDiffractionPatternCalculator.get_plot"]], "get_unique_families() (in module pymatgen.analysis.diffraction.core)": [[43, "pymatgen.analysis.diffraction.core.get_unique_families"]], "plot_structures() (abstractdiffractionpatterncalculator method)": [[43, "pymatgen.analysis.diffraction.core.AbstractDiffractionPatternCalculator.plot_structures"]], "pymatgen.analysis.diffraction.core": [[43, "module-pymatgen.analysis.diffraction.core"]], "show_plot() (abstractdiffractionpatterncalculator method)": [[43, "pymatgen.analysis.diffraction.core.AbstractDiffractionPatternCalculator.show_plot"]], "ndcalculator (class in pymatgen.analysis.diffraction.neutron)": [[44, "pymatgen.analysis.diffraction.neutron.NDCalculator"]], "get_pattern() (ndcalculator method)": [[44, "pymatgen.analysis.diffraction.neutron.NDCalculator.get_pattern"]], "pymatgen.analysis.diffraction.neutron": [[44, "module-pymatgen.analysis.diffraction.neutron"]], "temcalculator (class in pymatgen.analysis.diffraction.tem)": [[45, "pymatgen.analysis.diffraction.tem.TEMCalculator"]], "bragg_angles() (temcalculator method)": [[45, "pymatgen.analysis.diffraction.tem.TEMCalculator.bragg_angles"]], "cell_intensity() (temcalculator method)": [[45, "pymatgen.analysis.diffraction.tem.TEMCalculator.cell_intensity"]], "cell_scattering_factors() (temcalculator method)": [[45, "pymatgen.analysis.diffraction.tem.TEMCalculator.cell_scattering_factors"]], "electron_scattering_factors() (temcalculator method)": [[45, "pymatgen.analysis.diffraction.tem.TEMCalculator.electron_scattering_factors"]], "generate_points() (temcalculator static method)": [[45, "pymatgen.analysis.diffraction.tem.TEMCalculator.generate_points"]], "get_first_point() (temcalculator method)": [[45, "pymatgen.analysis.diffraction.tem.TEMCalculator.get_first_point"]], "get_interplanar_angle() (temcalculator static method)": [[45, "pymatgen.analysis.diffraction.tem.TEMCalculator.get_interplanar_angle"]], "get_interplanar_spacings() (temcalculator method)": [[45, "pymatgen.analysis.diffraction.tem.TEMCalculator.get_interplanar_spacings"]], "get_pattern() (temcalculator method)": [[45, "pymatgen.analysis.diffraction.tem.TEMCalculator.get_pattern"]], "get_plot_2d() (temcalculator method)": [[45, "pymatgen.analysis.diffraction.tem.TEMCalculator.get_plot_2d"]], "get_plot_2d_concise() (temcalculator method)": [[45, "pymatgen.analysis.diffraction.tem.TEMCalculator.get_plot_2d_concise"]], "get_plot_coeffs() (temcalculator static method)": [[45, "pymatgen.analysis.diffraction.tem.TEMCalculator.get_plot_coeffs"]], "get_positions() (temcalculator method)": [[45, "pymatgen.analysis.diffraction.tem.TEMCalculator.get_positions"]], "get_s2() (temcalculator method)": [[45, "pymatgen.analysis.diffraction.tem.TEMCalculator.get_s2"]], "is_parallel() (temcalculator method)": [[45, "pymatgen.analysis.diffraction.tem.TEMCalculator.is_parallel"]], "normalized_cell_intensity() (temcalculator method)": [[45, "pymatgen.analysis.diffraction.tem.TEMCalculator.normalized_cell_intensity"]], "pymatgen.analysis.diffraction.tem": [[45, "module-pymatgen.analysis.diffraction.tem"]], "tem_dots() (temcalculator method)": [[45, "pymatgen.analysis.diffraction.tem.TEMCalculator.tem_dots"]], "wavelength_rel() (temcalculator method)": [[45, "pymatgen.analysis.diffraction.tem.TEMCalculator.wavelength_rel"]], "x_ray_factors() (temcalculator method)": [[45, "pymatgen.analysis.diffraction.tem.TEMCalculator.x_ray_factors"]], "zone_axis_filter() (temcalculator method)": [[45, "pymatgen.analysis.diffraction.tem.TEMCalculator.zone_axis_filter"]], "available_radiation (xrdcalculator attribute)": [[46, "pymatgen.analysis.diffraction.xrd.XRDCalculator.AVAILABLE_RADIATION"]], "xrdcalculator (class in pymatgen.analysis.diffraction.xrd)": [[46, "pymatgen.analysis.diffraction.xrd.XRDCalculator"]], "get_pattern() (xrdcalculator method)": [[46, "pymatgen.analysis.diffraction.xrd.XRDCalculator.get_pattern"]], "pymatgen.analysis.diffraction.xrd": [[46, "module-pymatgen.analysis.diffraction.xrd"]], "calculate_dimensionality_of_site() (in module pymatgen.analysis.dimensionality)": [[47, "pymatgen.analysis.dimensionality.calculate_dimensionality_of_site"]], "find_clusters() (in module pymatgen.analysis.dimensionality)": [[47, "pymatgen.analysis.dimensionality.find_clusters"]], "find_connected_atoms() (in module pymatgen.analysis.dimensionality)": [[47, "pymatgen.analysis.dimensionality.find_connected_atoms"]], "get_dimensionality_cheon() (in module pymatgen.analysis.dimensionality)": [[47, "pymatgen.analysis.dimensionality.get_dimensionality_cheon"]], "get_dimensionality_gorai() (in module pymatgen.analysis.dimensionality)": [[47, "pymatgen.analysis.dimensionality.get_dimensionality_gorai"]], "get_dimensionality_larsen() (in module pymatgen.analysis.dimensionality)": [[47, "pymatgen.analysis.dimensionality.get_dimensionality_larsen"]], "get_structure_components() (in module pymatgen.analysis.dimensionality)": [[47, "pymatgen.analysis.dimensionality.get_structure_components"]], "pymatgen.analysis.dimensionality": [[47, "module-pymatgen.analysis.dimensionality"]], "zero_d_graph_to_molecule_graph() (in module pymatgen.analysis.dimensionality)": [[47, "pymatgen.analysis.dimensionality.zero_d_graph_to_molecule_graph"]], "get_warren_cowley_parameters() (in module pymatgen.analysis.disorder)": [[48, "pymatgen.analysis.disorder.get_warren_cowley_parameters"]], "pymatgen.analysis.disorder": [[48, "module-pymatgen.analysis.disorder"]], "pymatgen.analysis.elasticity": [[49, "module-pymatgen.analysis.elasticity"]], "compliancetensor (class in pymatgen.analysis.elasticity.elastic)": [[50, "pymatgen.analysis.elasticity.elastic.ComplianceTensor"]], "elastictensor (class in pymatgen.analysis.elasticity.elastic)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensor"]], "elastictensorexpansion (class in pymatgen.analysis.elasticity.elastic)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensorExpansion"]], "gpa_to_ev_a3 (nthorderelastictensor attribute)": [[50, "pymatgen.analysis.elasticity.elastic.NthOrderElasticTensor.GPa_to_eV_A3"]], "nthorderelastictensor (class in pymatgen.analysis.elasticity.elastic)": [[50, "pymatgen.analysis.elasticity.elastic.NthOrderElasticTensor"]], "cahill_thermalcond() (elastictensor method)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensor.cahill_thermalcond"]], "calculate_stress() (elastictensorexpansion method)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensorExpansion.calculate_stress"]], "calculate_stress() (nthorderelastictensor method)": [[50, "pymatgen.analysis.elasticity.elastic.NthOrderElasticTensor.calculate_stress"]], "clarke_thermalcond() (elastictensor method)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensor.clarke_thermalcond"]], "compliance_tensor (elastictensor property)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensor.compliance_tensor"]], "debye_temperature() (elastictensor method)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensor.debye_temperature"]], "diff_fit() (in module pymatgen.analysis.elasticity.elastic)": [[50, "pymatgen.analysis.elasticity.elastic.diff_fit"]], "directional_elastic_mod() (elastictensor method)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensor.directional_elastic_mod"]], "directional_poisson_ratio() (elastictensor method)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensor.directional_poisson_ratio"]], "energy_density() (elastictensorexpansion method)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensorExpansion.energy_density"]], "energy_density() (nthorderelastictensor method)": [[50, "pymatgen.analysis.elasticity.elastic.NthOrderElasticTensor.energy_density"]], "find_eq_stress() (in module pymatgen.analysis.elasticity.elastic)": [[50, "pymatgen.analysis.elasticity.elastic.find_eq_stress"]], "from_diff_fit() (elastictensorexpansion class method)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensorExpansion.from_diff_fit"]], "from_diff_fit() (nthorderelastictensor class method)": [[50, "pymatgen.analysis.elasticity.elastic.NthOrderElasticTensor.from_diff_fit"]], "from_independent_strains() (elastictensor class method)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensor.from_independent_strains"]], "from_pseudoinverse() (elastictensor class method)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensor.from_pseudoinverse"]], "g_reuss (elastictensor property)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensor.g_reuss"]], "g_voigt (elastictensor property)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensor.g_voigt"]], "g_vrh (elastictensor property)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensor.g_vrh"]], "generate_pseudo() (in module pymatgen.analysis.elasticity.elastic)": [[50, "pymatgen.analysis.elasticity.elastic.generate_pseudo"]], "get_compliance_expansion() (elastictensorexpansion method)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensorExpansion.get_compliance_expansion"]], "get_diff_coeff() (in module pymatgen.analysis.elasticity.elastic)": [[50, "pymatgen.analysis.elasticity.elastic.get_diff_coeff"]], "get_effective_ecs() (elastictensorexpansion method)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensorExpansion.get_effective_ecs"]], "get_ggt() (elastictensorexpansion method)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensorExpansion.get_ggt"]], "get_gruneisen_parameter() (elastictensorexpansion method)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensorExpansion.get_gruneisen_parameter"]], "get_heat_capacity() (elastictensorexpansion method)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensorExpansion.get_heat_capacity"]], "get_stability_criteria() (elastictensorexpansion method)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensorExpansion.get_stability_criteria"]], "get_strain_from_stress() (elastictensorexpansion method)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensorExpansion.get_strain_from_stress"]], "get_strain_state_dict() (in module pymatgen.analysis.elasticity.elastic)": [[50, "pymatgen.analysis.elasticity.elastic.get_strain_state_dict"]], "get_structure_property_dict() (elastictensor method)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensor.get_structure_property_dict"]], "get_symbol_list() (in module pymatgen.analysis.elasticity.elastic)": [[50, "pymatgen.analysis.elasticity.elastic.get_symbol_list"]], "get_symmetric_wallace_tensor() (elastictensorexpansion method)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensorExpansion.get_symmetric_wallace_tensor"]], "get_tgt() (elastictensorexpansion method)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensorExpansion.get_tgt"]], "get_wallace_tensor() (elastictensorexpansion method)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensorExpansion.get_wallace_tensor"]], "get_yield_stress() (elastictensorexpansion method)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensorExpansion.get_yield_stress"]], "green_kristoffel() (elastictensor method)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensor.green_kristoffel"]], "homogeneous_poisson (elastictensor property)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensor.homogeneous_poisson"]], "k_reuss (elastictensor property)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensor.k_reuss"]], "k_voigt (elastictensor property)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensor.k_voigt"]], "k_vrh (elastictensor property)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensor.k_vrh"]], "long_v() (elastictensor method)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensor.long_v"]], "omega() (elastictensorexpansion method)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensorExpansion.omega"]], "order (elastictensorexpansion property)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensorExpansion.order"]], "order (nthorderelastictensor property)": [[50, "pymatgen.analysis.elasticity.elastic.NthOrderElasticTensor.order"]], "property_dict (elastictensor property)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensor.property_dict"]], "pymatgen.analysis.elasticity.elastic": [[50, "module-pymatgen.analysis.elasticity.elastic"]], "raise_error_if_unphysical() (in module pymatgen.analysis.elasticity.elastic)": [[50, "pymatgen.analysis.elasticity.elastic.raise_error_if_unphysical"]], "snyder_ac() (elastictensor method)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensor.snyder_ac"]], "snyder_opt() (elastictensor method)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensor.snyder_opt"]], "snyder_total() (elastictensor method)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensor.snyder_total"]], "subs() (in module pymatgen.analysis.elasticity.elastic)": [[50, "pymatgen.analysis.elasticity.elastic.subs"]], "symbol (nthorderelastictensor attribute)": [[50, "pymatgen.analysis.elasticity.elastic.NthOrderElasticTensor.symbol"]], "thermal_expansion_coeff() (elastictensorexpansion method)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensorExpansion.thermal_expansion_coeff"]], "trans_v() (elastictensor method)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensor.trans_v"]], "universal_anisotropy (elastictensor property)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensor.universal_anisotropy"]], "y_mod (elastictensor property)": [[50, "pymatgen.analysis.elasticity.elastic.ElasticTensor.y_mod"]], "deformation (class in pymatgen.analysis.elasticity.strain)": [[51, "pymatgen.analysis.elasticity.strain.Deformation"]], "deformedstructureset (class in pymatgen.analysis.elasticity.strain)": [[51, "pymatgen.analysis.elasticity.strain.DeformedStructureSet"]], "strain (class in pymatgen.analysis.elasticity.strain)": [[51, "pymatgen.analysis.elasticity.strain.Strain"]], "apply_to_structure() (deformation method)": [[51, "pymatgen.analysis.elasticity.strain.Deformation.apply_to_structure"]], "convert_strain_to_deformation() (in module pymatgen.analysis.elasticity.strain)": [[51, "pymatgen.analysis.elasticity.strain.convert_strain_to_deformation"]], "from_deformation() (strain class method)": [[51, "pymatgen.analysis.elasticity.strain.Strain.from_deformation"]], "from_index_amount() (deformation class method)": [[51, "pymatgen.analysis.elasticity.strain.Deformation.from_index_amount"]], "from_index_amount() (strain class method)": [[51, "pymatgen.analysis.elasticity.strain.Strain.from_index_amount"]], "get_deformation_matrix() (strain method)": [[51, "pymatgen.analysis.elasticity.strain.Strain.get_deformation_matrix"]], "get_perturbed_indices() (deformation method)": [[51, "pymatgen.analysis.elasticity.strain.Deformation.get_perturbed_indices"]], "green_lagrange_strain (deformation property)": [[51, "pymatgen.analysis.elasticity.strain.Deformation.green_lagrange_strain"]], "is_independent() (deformation method)": [[51, "pymatgen.analysis.elasticity.strain.Deformation.is_independent"]], "pymatgen.analysis.elasticity.strain": [[51, "module-pymatgen.analysis.elasticity.strain"]], "symbol (deformation attribute)": [[51, "pymatgen.analysis.elasticity.strain.Deformation.symbol"]], "symbol (strain attribute)": [[51, "pymatgen.analysis.elasticity.strain.Strain.symbol"]], "von_mises_strain (strain property)": [[51, "pymatgen.analysis.elasticity.strain.Strain.von_mises_strain"]], "stress (class in pymatgen.analysis.elasticity.stress)": [[52, "pymatgen.analysis.elasticity.stress.Stress"]], "dev_principal_invariants (stress property)": [[52, "pymatgen.analysis.elasticity.stress.Stress.dev_principal_invariants"]], "deviator_stress (stress property)": [[52, "pymatgen.analysis.elasticity.stress.Stress.deviator_stress"]], "mean_stress (stress property)": [[52, "pymatgen.analysis.elasticity.stress.Stress.mean_stress"]], "piola_kirchoff_1() (stress method)": [[52, "pymatgen.analysis.elasticity.stress.Stress.piola_kirchoff_1"]], "piola_kirchoff_2() (stress method)": [[52, "pymatgen.analysis.elasticity.stress.Stress.piola_kirchoff_2"]], "pymatgen.analysis.elasticity.stress": [[52, "module-pymatgen.analysis.elasticity.stress"]], "symbol (stress attribute)": [[52, "pymatgen.analysis.elasticity.stress.Stress.symbol"]], "von_mises (stress property)": [[52, "pymatgen.analysis.elasticity.stress.Stress.von_mises"]], "energymodel (class in pymatgen.analysis.energy_models)": [[53, "pymatgen.analysis.energy_models.EnergyModel"]], "ewaldelectrostaticmodel (class in pymatgen.analysis.energy_models)": [[53, "pymatgen.analysis.energy_models.EwaldElectrostaticModel"]], "isingmodel (class in pymatgen.analysis.energy_models)": [[53, "pymatgen.analysis.energy_models.IsingModel"]], "nsitesmodel (class in pymatgen.analysis.energy_models)": [[53, "pymatgen.analysis.energy_models.NsitesModel"]], "symmetrymodel (class in pymatgen.analysis.energy_models)": [[53, "pymatgen.analysis.energy_models.SymmetryModel"]], "as_dict() (ewaldelectrostaticmodel method)": [[53, "pymatgen.analysis.energy_models.EwaldElectrostaticModel.as_dict"]], "as_dict() (isingmodel method)": [[53, "pymatgen.analysis.energy_models.IsingModel.as_dict"]], "as_dict() (nsitesmodel method)": [[53, "pymatgen.analysis.energy_models.NsitesModel.as_dict"]], "as_dict() (symmetrymodel method)": [[53, "pymatgen.analysis.energy_models.SymmetryModel.as_dict"]], "from_dict() (energymodel class method)": [[53, "pymatgen.analysis.energy_models.EnergyModel.from_dict"]], "get_energy() (energymodel method)": [[53, "pymatgen.analysis.energy_models.EnergyModel.get_energy"]], "get_energy() (ewaldelectrostaticmodel method)": [[53, "pymatgen.analysis.energy_models.EwaldElectrostaticModel.get_energy"]], "get_energy() (isingmodel method)": [[53, "pymatgen.analysis.energy_models.IsingModel.get_energy"]], "get_energy() (nsitesmodel method)": [[53, "pymatgen.analysis.energy_models.NsitesModel.get_energy"]], "get_energy() (symmetrymodel method)": [[53, "pymatgen.analysis.energy_models.SymmetryModel.get_energy"]], "pymatgen.analysis.energy_models": [[53, "module-pymatgen.analysis.energy_models"]], "birch (class in pymatgen.analysis.eos)": [[54, "pymatgen.analysis.eos.Birch"]], "birchmurnaghan (class in pymatgen.analysis.eos)": [[54, "pymatgen.analysis.eos.BirchMurnaghan"]], "deltafactor (class in pymatgen.analysis.eos)": [[54, "pymatgen.analysis.eos.DeltaFactor"]], "eos (class in pymatgen.analysis.eos)": [[54, "pymatgen.analysis.eos.EOS"]], "eosbase (class in pymatgen.analysis.eos)": [[54, "pymatgen.analysis.eos.EOSBase"]], "eoserror": [[54, "pymatgen.analysis.eos.EOSError"]], "models (eos attribute)": [[54, "pymatgen.analysis.eos.EOS.MODELS"]], "murnaghan (class in pymatgen.analysis.eos)": [[54, "pymatgen.analysis.eos.Murnaghan"]], "numericaleos (class in pymatgen.analysis.eos)": [[54, "pymatgen.analysis.eos.NumericalEOS"]], "polynomialeos (class in pymatgen.analysis.eos)": [[54, "pymatgen.analysis.eos.PolynomialEOS"]], "pouriertarantola (class in pymatgen.analysis.eos)": [[54, "pymatgen.analysis.eos.PourierTarantola"]], "vinet (class in pymatgen.analysis.eos)": [[54, "pymatgen.analysis.eos.Vinet"]], "b0 (eosbase property)": [[54, "pymatgen.analysis.eos.EOSBase.b0"]], "b0_gpa (eosbase property)": [[54, "pymatgen.analysis.eos.EOSBase.b0_GPa"]], "b1 (eosbase property)": [[54, "pymatgen.analysis.eos.EOSBase.b1"]], "e0 (eosbase property)": [[54, "pymatgen.analysis.eos.EOSBase.e0"]], "fit() (deltafactor method)": [[54, "pymatgen.analysis.eos.DeltaFactor.fit"]], "fit() (eos method)": [[54, "pymatgen.analysis.eos.EOS.fit"]], "fit() (eosbase method)": [[54, "pymatgen.analysis.eos.EOSBase.fit"]], "fit() (numericaleos method)": [[54, "pymatgen.analysis.eos.NumericalEOS.fit"]], "fit() (polynomialeos method)": [[54, "pymatgen.analysis.eos.PolynomialEOS.fit"]], "func() (eosbase method)": [[54, "pymatgen.analysis.eos.EOSBase.func"]], "plot() (eosbase method)": [[54, "pymatgen.analysis.eos.EOSBase.plot"]], "plot_ax() (eosbase method)": [[54, "pymatgen.analysis.eos.EOSBase.plot_ax"]], "pymatgen.analysis.eos": [[54, "module-pymatgen.analysis.eos"]], "results (eosbase property)": [[54, "pymatgen.analysis.eos.EOSBase.results"]], "v0 (eosbase property)": [[54, "pymatgen.analysis.eos.EOSBase.v0"]], "algo_best_first (ewaldminimizer attribute)": [[55, "pymatgen.analysis.ewald.EwaldMinimizer.ALGO_BEST_FIRST"]], "algo_complete (ewaldminimizer attribute)": [[55, "pymatgen.analysis.ewald.EwaldMinimizer.ALGO_COMPLETE"]], "algo_fast (ewaldminimizer attribute)": [[55, "pymatgen.analysis.ewald.EwaldMinimizer.ALGO_FAST"]], "algo_time_limit (ewaldminimizer attribute)": [[55, "pymatgen.analysis.ewald.EwaldMinimizer.ALGO_TIME_LIMIT"]], "conv_fact (ewaldsummation attribute)": [[55, "pymatgen.analysis.ewald.EwaldSummation.CONV_FACT"]], "ewaldminimizer (class in pymatgen.analysis.ewald)": [[55, "pymatgen.analysis.ewald.EwaldMinimizer"]], "ewaldsummation (class in pymatgen.analysis.ewald)": [[55, "pymatgen.analysis.ewald.EwaldSummation"]], "add_m_list() (ewaldminimizer method)": [[55, "pymatgen.analysis.ewald.EwaldMinimizer.add_m_list"]], "as_dict() (ewaldsummation method)": [[55, "pymatgen.analysis.ewald.EwaldSummation.as_dict"]], "best_case() (ewaldminimizer method)": [[55, "pymatgen.analysis.ewald.EwaldMinimizer.best_case"]], "best_m_list (ewaldminimizer property)": [[55, "pymatgen.analysis.ewald.EwaldMinimizer.best_m_list"]], "compute_average_oxidation_state() (in module pymatgen.analysis.ewald)": [[55, "pymatgen.analysis.ewald.compute_average_oxidation_state"]], "compute_partial_energy() (ewaldsummation method)": [[55, "pymatgen.analysis.ewald.EwaldSummation.compute_partial_energy"]], "compute_sub_structure() (ewaldsummation method)": [[55, "pymatgen.analysis.ewald.EwaldSummation.compute_sub_structure"]], "eta (ewaldsummation property)": [[55, "pymatgen.analysis.ewald.EwaldSummation.eta"]], "forces (ewaldsummation property)": [[55, "pymatgen.analysis.ewald.EwaldSummation.forces"]], "from_dict() (ewaldsummation class method)": [[55, "pymatgen.analysis.ewald.EwaldSummation.from_dict"]], "get_next_index() (ewaldminimizer class method)": [[55, "pymatgen.analysis.ewald.EwaldMinimizer.get_next_index"]], "get_site_energy() (ewaldsummation method)": [[55, "pymatgen.analysis.ewald.EwaldSummation.get_site_energy"]], "minimize_matrix() (ewaldminimizer method)": [[55, "pymatgen.analysis.ewald.EwaldMinimizer.minimize_matrix"]], "minimized_sum (ewaldminimizer property)": [[55, "pymatgen.analysis.ewald.EwaldMinimizer.minimized_sum"]], "output_lists (ewaldminimizer property)": [[55, "pymatgen.analysis.ewald.EwaldMinimizer.output_lists"]], "point_energy (ewaldsummation property)": [[55, "pymatgen.analysis.ewald.EwaldSummation.point_energy"]], "point_energy_matrix (ewaldsummation property)": [[55, "pymatgen.analysis.ewald.EwaldSummation.point_energy_matrix"]], "pymatgen.analysis.ewald": [[55, "module-pymatgen.analysis.ewald"]], "real_space_energy (ewaldsummation property)": [[55, "pymatgen.analysis.ewald.EwaldSummation.real_space_energy"]], "real_space_energy_matrix (ewaldsummation property)": [[55, "pymatgen.analysis.ewald.EwaldSummation.real_space_energy_matrix"]], "reciprocal_space_energy (ewaldsummation property)": [[55, "pymatgen.analysis.ewald.EwaldSummation.reciprocal_space_energy"]], "reciprocal_space_energy_matrix (ewaldsummation property)": [[55, "pymatgen.analysis.ewald.EwaldSummation.reciprocal_space_energy_matrix"]], "total_energy (ewaldsummation property)": [[55, "pymatgen.analysis.ewald.EwaldSummation.total_energy"]], "total_energy_matrix (ewaldsummation property)": [[55, "pymatgen.analysis.ewald.EwaldSummation.total_energy_matrix"]], "excitationspectrum (class in pymatgen.analysis.excitation)": [[56, "pymatgen.analysis.excitation.ExcitationSpectrum"]], "xlabel (excitationspectrum attribute)": [[56, "pymatgen.analysis.excitation.ExcitationSpectrum.XLABEL"]], "ylabel (excitationspectrum attribute)": [[56, "pymatgen.analysis.excitation.ExcitationSpectrum.YLABEL"]], "pymatgen.analysis.excitation": [[56, "module-pymatgen.analysis.excitation"]], "pymatgen.analysis.ferroelectricity": [[57, "module-pymatgen.analysis.ferroelectricity"]], "energytrend (class in pymatgen.analysis.ferroelectricity.polarization)": [[58, "pymatgen.analysis.ferroelectricity.polarization.EnergyTrend"]], "polarization (class in pymatgen.analysis.ferroelectricity.polarization)": [[58, "pymatgen.analysis.ferroelectricity.polarization.Polarization"]], "polarizationlattice (class in pymatgen.analysis.ferroelectricity.polarization)": [[58, "pymatgen.analysis.ferroelectricity.polarization.PolarizationLattice"]], "calc_ionic() (in module pymatgen.analysis.ferroelectricity.polarization)": [[58, "pymatgen.analysis.ferroelectricity.polarization.calc_ionic"]], "endpoints_minima() (energytrend method)": [[58, "pymatgen.analysis.ferroelectricity.polarization.EnergyTrend.endpoints_minima"]], "from_outcars_and_structures() (polarization class method)": [[58, "pymatgen.analysis.ferroelectricity.polarization.Polarization.from_outcars_and_structures"]], "get_lattice_quanta() (polarization method)": [[58, "pymatgen.analysis.ferroelectricity.polarization.Polarization.get_lattice_quanta"]], "get_nearest_site() (polarizationlattice method)": [[58, "pymatgen.analysis.ferroelectricity.polarization.PolarizationLattice.get_nearest_site"]], "get_pelecs_and_pions() (polarization method)": [[58, "pymatgen.analysis.ferroelectricity.polarization.Polarization.get_pelecs_and_pions"]], "get_polarization_change() (polarization method)": [[58, "pymatgen.analysis.ferroelectricity.polarization.Polarization.get_polarization_change"]], "get_polarization_change_norm() (polarization method)": [[58, "pymatgen.analysis.ferroelectricity.polarization.Polarization.get_polarization_change_norm"]], "get_same_branch_polarization_data() (polarization method)": [[58, "pymatgen.analysis.ferroelectricity.polarization.Polarization.get_same_branch_polarization_data"]], "get_total_ionic_dipole() (in module pymatgen.analysis.ferroelectricity.polarization)": [[58, "pymatgen.analysis.ferroelectricity.polarization.get_total_ionic_dipole"]], "max_spline_jump() (energytrend method)": [[58, "pymatgen.analysis.ferroelectricity.polarization.EnergyTrend.max_spline_jump"]], "max_spline_jumps() (polarization method)": [[58, "pymatgen.analysis.ferroelectricity.polarization.Polarization.max_spline_jumps"]], "pymatgen.analysis.ferroelectricity.polarization": [[58, "module-pymatgen.analysis.ferroelectricity.polarization"]], "same_branch_splines() (polarization method)": [[58, "pymatgen.analysis.ferroelectricity.polarization.Polarization.same_branch_splines"]], "smoothness() (energytrend method)": [[58, "pymatgen.analysis.ferroelectricity.polarization.EnergyTrend.smoothness"]], "smoothness() (polarization method)": [[58, "pymatgen.analysis.ferroelectricity.polarization.Polarization.smoothness"]], "spline() (energytrend method)": [[58, "pymatgen.analysis.ferroelectricity.polarization.EnergyTrend.spline"]], "zval_dict_from_potcar() (in module pymatgen.analysis.ferroelectricity.polarization)": [[58, "pymatgen.analysis.ferroelectricity.polarization.zval_dict_from_potcar"]], "fragmenter (class in pymatgen.analysis.fragmenter)": [[59, "pymatgen.analysis.fragmenter.Fragmenter"]], "open_ring() (in module pymatgen.analysis.fragmenter)": [[59, "pymatgen.analysis.fragmenter.open_ring"]], "pymatgen.analysis.fragmenter": [[59, "module-pymatgen.analysis.fragmenter"]], "functionalgroupextractor (class in pymatgen.analysis.functional_groups)": [[60, "pymatgen.analysis.functional_groups.FunctionalGroupExtractor"]], "categorize_functional_groups() (functionalgroupextractor method)": [[60, "pymatgen.analysis.functional_groups.FunctionalGroupExtractor.categorize_functional_groups"]], "get_all_functional_groups() (functionalgroupextractor method)": [[60, "pymatgen.analysis.functional_groups.FunctionalGroupExtractor.get_all_functional_groups"]], "get_basic_functional_groups() (functionalgroupextractor method)": [[60, "pymatgen.analysis.functional_groups.FunctionalGroupExtractor.get_basic_functional_groups"]], "get_heteroatoms() (functionalgroupextractor method)": [[60, "pymatgen.analysis.functional_groups.FunctionalGroupExtractor.get_heteroatoms"]], "get_special_carbon() (functionalgroupextractor method)": [[60, "pymatgen.analysis.functional_groups.FunctionalGroupExtractor.get_special_carbon"]], "link_marked_atoms() (functionalgroupextractor method)": [[60, "pymatgen.analysis.functional_groups.FunctionalGroupExtractor.link_marked_atoms"]], "pymatgen.analysis.functional_groups": [[60, "module-pymatgen.analysis.functional_groups"]], "pymatgen.analysis.gb": [[61, "module-pymatgen.analysis.gb"]], "grainboundary (class in pymatgen.analysis.gb.grain)": [[62, "pymatgen.analysis.gb.grain.GrainBoundary"]], "grainboundarygenerator (class in pymatgen.analysis.gb.grain)": [[62, "pymatgen.analysis.gb.grain.GrainBoundaryGenerator"]], "as_dict() (grainboundary method)": [[62, "pymatgen.analysis.gb.grain.GrainBoundary.as_dict"]], "bottom_grain (grainboundary property)": [[62, "pymatgen.analysis.gb.grain.GrainBoundary.bottom_grain"]], "coincidents (grainboundary property)": [[62, "pymatgen.analysis.gb.grain.GrainBoundary.coincidents"]], "copy() (grainboundary method)": [[62, "pymatgen.analysis.gb.grain.GrainBoundary.copy"]], "enum_possible_plane_cubic() (grainboundarygenerator static method)": [[62, "pymatgen.analysis.gb.grain.GrainBoundaryGenerator.enum_possible_plane_cubic"]], "enum_sigma_cubic() (grainboundarygenerator static method)": [[62, "pymatgen.analysis.gb.grain.GrainBoundaryGenerator.enum_sigma_cubic"]], "enum_sigma_hex() (grainboundarygenerator static method)": [[62, "pymatgen.analysis.gb.grain.GrainBoundaryGenerator.enum_sigma_hex"]], "enum_sigma_ort() (grainboundarygenerator static method)": [[62, "pymatgen.analysis.gb.grain.GrainBoundaryGenerator.enum_sigma_ort"]], "enum_sigma_rho() (grainboundarygenerator static method)": [[62, "pymatgen.analysis.gb.grain.GrainBoundaryGenerator.enum_sigma_rho"]], "enum_sigma_tet() (grainboundarygenerator static method)": [[62, "pymatgen.analysis.gb.grain.GrainBoundaryGenerator.enum_sigma_tet"]], "fix_pbc() (in module pymatgen.analysis.gb.grain)": [[62, "pymatgen.analysis.gb.grain.fix_pbc"]], "from_dict() (grainboundary class method)": [[62, "pymatgen.analysis.gb.grain.GrainBoundary.from_dict"]], "gb_from_parameters() (grainboundarygenerator method)": [[62, "pymatgen.analysis.gb.grain.GrainBoundaryGenerator.gb_from_parameters"]], "get_ratio() (grainboundarygenerator method)": [[62, "pymatgen.analysis.gb.grain.GrainBoundaryGenerator.get_ratio"]], "get_rotation_angle_from_sigma() (grainboundarygenerator static method)": [[62, "pymatgen.analysis.gb.grain.GrainBoundaryGenerator.get_rotation_angle_from_sigma"]], "get_sorted_structure() (grainboundary method)": [[62, "pymatgen.analysis.gb.grain.GrainBoundary.get_sorted_structure"]], "get_trans_mat() (grainboundarygenerator static method)": [[62, "pymatgen.analysis.gb.grain.GrainBoundaryGenerator.get_trans_mat"]], "pymatgen.analysis.gb.grain": [[62, "module-pymatgen.analysis.gb.grain"]], "reduce_mat() (grainboundarygenerator static method)": [[62, "pymatgen.analysis.gb.grain.GrainBoundaryGenerator.reduce_mat"]], "sigma (grainboundary property)": [[62, "pymatgen.analysis.gb.grain.GrainBoundary.sigma"]], "sigma_from_site_prop (grainboundary property)": [[62, "pymatgen.analysis.gb.grain.GrainBoundary.sigma_from_site_prop"]], "slab_from_csl() (grainboundarygenerator static method)": [[62, "pymatgen.analysis.gb.grain.GrainBoundaryGenerator.slab_from_csl"]], "symm_group_cubic() (in module pymatgen.analysis.gb.grain)": [[62, "pymatgen.analysis.gb.grain.symm_group_cubic"]], "top_grain (grainboundary property)": [[62, "pymatgen.analysis.gb.grain.GrainBoundary.top_grain"]], "vec_to_surface() (grainboundarygenerator static method)": [[62, "pymatgen.analysis.gb.grain.GrainBoundaryGenerator.vec_to_surface"]], "connectedsite (class in pymatgen.analysis.graphs)": [[63, "pymatgen.analysis.graphs.ConnectedSite"]], "molgraphspliterror": [[63, "pymatgen.analysis.graphs.MolGraphSplitError"]], "moleculegraph (class in pymatgen.analysis.graphs)": [[63, "pymatgen.analysis.graphs.MoleculeGraph"]], "structuregraph (class in pymatgen.analysis.graphs)": [[63, "pymatgen.analysis.graphs.StructureGraph"]], "add_edge() (moleculegraph method)": [[63, "pymatgen.analysis.graphs.MoleculeGraph.add_edge"]], "add_edge() (structuregraph method)": [[63, "pymatgen.analysis.graphs.StructureGraph.add_edge"]], "alter_edge() (moleculegraph method)": [[63, "pymatgen.analysis.graphs.MoleculeGraph.alter_edge"]], "alter_edge() (structuregraph method)": [[63, "pymatgen.analysis.graphs.StructureGraph.alter_edge"]], "as_dict() (moleculegraph method)": [[63, "pymatgen.analysis.graphs.MoleculeGraph.as_dict"]], "as_dict() (structuregraph method)": [[63, "pymatgen.analysis.graphs.StructureGraph.as_dict"]], "break_edge() (moleculegraph method)": [[63, "pymatgen.analysis.graphs.MoleculeGraph.break_edge"]], "break_edge() (structuregraph method)": [[63, "pymatgen.analysis.graphs.StructureGraph.break_edge"]], "build_unique_fragments() (moleculegraph method)": [[63, "pymatgen.analysis.graphs.MoleculeGraph.build_unique_fragments"]], "diff() (moleculegraph method)": [[63, "pymatgen.analysis.graphs.MoleculeGraph.diff"]], "diff() (structuregraph method)": [[63, "pymatgen.analysis.graphs.StructureGraph.diff"]], "dist (connectedsite attribute)": [[63, "pymatgen.analysis.graphs.ConnectedSite.dist"]], "draw_graph_to_file() (moleculegraph method)": [[63, "pymatgen.analysis.graphs.MoleculeGraph.draw_graph_to_file"]], "draw_graph_to_file() (structuregraph method)": [[63, "pymatgen.analysis.graphs.StructureGraph.draw_graph_to_file"]], "edge_weight_name (moleculegraph property)": [[63, "pymatgen.analysis.graphs.MoleculeGraph.edge_weight_name"]], "edge_weight_name (structuregraph property)": [[63, "pymatgen.analysis.graphs.StructureGraph.edge_weight_name"]], "edge_weight_unit (moleculegraph property)": [[63, "pymatgen.analysis.graphs.MoleculeGraph.edge_weight_unit"]], "edge_weight_unit (structuregraph property)": [[63, "pymatgen.analysis.graphs.StructureGraph.edge_weight_unit"]], "find_rings() (moleculegraph method)": [[63, "pymatgen.analysis.graphs.MoleculeGraph.find_rings"]], "from_dict() (moleculegraph class method)": [[63, "pymatgen.analysis.graphs.MoleculeGraph.from_dict"]], "from_dict() (structuregraph class method)": [[63, "pymatgen.analysis.graphs.StructureGraph.from_dict"]], "get_connected_sites() (moleculegraph method)": [[63, "pymatgen.analysis.graphs.MoleculeGraph.get_connected_sites"]], "get_connected_sites() (structuregraph method)": [[63, "pymatgen.analysis.graphs.StructureGraph.get_connected_sites"]], "get_coordination_of_site() (moleculegraph method)": [[63, "pymatgen.analysis.graphs.MoleculeGraph.get_coordination_of_site"]], "get_coordination_of_site() (structuregraph method)": [[63, "pymatgen.analysis.graphs.StructureGraph.get_coordination_of_site"]], "get_disconnected_fragments() (moleculegraph method)": [[63, "pymatgen.analysis.graphs.MoleculeGraph.get_disconnected_fragments"]], "get_subgraphs_as_molecules() (structuregraph method)": [[63, "pymatgen.analysis.graphs.StructureGraph.get_subgraphs_as_molecules"]], "index (connectedsite attribute)": [[63, "pymatgen.analysis.graphs.ConnectedSite.index"]], "insert_node() (moleculegraph method)": [[63, "pymatgen.analysis.graphs.MoleculeGraph.insert_node"]], "insert_node() (structuregraph method)": [[63, "pymatgen.analysis.graphs.StructureGraph.insert_node"]], "isomorphic_to() (moleculegraph method)": [[63, "pymatgen.analysis.graphs.MoleculeGraph.isomorphic_to"]], "jimage (connectedsite attribute)": [[63, "pymatgen.analysis.graphs.ConnectedSite.jimage"]], "name (moleculegraph property)": [[63, "pymatgen.analysis.graphs.MoleculeGraph.name"]], "name (structuregraph property)": [[63, "pymatgen.analysis.graphs.StructureGraph.name"]], "pymatgen.analysis.graphs": [[63, "module-pymatgen.analysis.graphs"]], "remove_nodes() (moleculegraph method)": [[63, "pymatgen.analysis.graphs.MoleculeGraph.remove_nodes"]], "remove_nodes() (structuregraph method)": [[63, "pymatgen.analysis.graphs.StructureGraph.remove_nodes"]], "replace_group() (moleculegraph method)": [[63, "pymatgen.analysis.graphs.MoleculeGraph.replace_group"]], "set_node_attributes() (moleculegraph method)": [[63, "pymatgen.analysis.graphs.MoleculeGraph.set_node_attributes"]], "set_node_attributes() (structuregraph method)": [[63, "pymatgen.analysis.graphs.StructureGraph.set_node_attributes"]], "site (connectedsite attribute)": [[63, "pymatgen.analysis.graphs.ConnectedSite.site"]], "sort() (moleculegraph method)": [[63, "pymatgen.analysis.graphs.MoleculeGraph.sort"]], "sort() (structuregraph method)": [[63, "pymatgen.analysis.graphs.StructureGraph.sort"]], "split_molecule_subgraphs() (moleculegraph method)": [[63, "pymatgen.analysis.graphs.MoleculeGraph.split_molecule_subgraphs"]], "substitute_group() (moleculegraph method)": [[63, "pymatgen.analysis.graphs.MoleculeGraph.substitute_group"]], "substitute_group() (structuregraph method)": [[63, "pymatgen.analysis.graphs.StructureGraph.substitute_group"]], "types_and_weights_of_connections (structuregraph property)": [[63, "pymatgen.analysis.graphs.StructureGraph.types_and_weights_of_connections"]], "types_of_coordination_environments() (structuregraph method)": [[63, "pymatgen.analysis.graphs.StructureGraph.types_of_coordination_environments"]], "weight (connectedsite attribute)": [[63, "pymatgen.analysis.graphs.ConnectedSite.weight"]], "weight_statistics (structuregraph property)": [[63, "pymatgen.analysis.graphs.StructureGraph.weight_statistics"]], "with_edges() (moleculegraph static method)": [[63, "pymatgen.analysis.graphs.MoleculeGraph.with_edges"]], "with_edges() (structuregraph static method)": [[63, "pymatgen.analysis.graphs.StructureGraph.with_edges"]], "with_empty_graph() (moleculegraph class method)": [[63, "pymatgen.analysis.graphs.MoleculeGraph.with_empty_graph"]], "with_empty_graph() (structuregraph class method)": [[63, "pymatgen.analysis.graphs.StructureGraph.with_empty_graph"]], "with_local_env_strategy() (moleculegraph static method)": [[63, "pymatgen.analysis.graphs.MoleculeGraph.with_local_env_strategy"]], "with_local_env_strategy() (structuregraph static method)": [[63, "pymatgen.analysis.graphs.StructureGraph.with_local_env_strategy"]], "pymatgen.analysis.hhi": [[64, "module-pymatgen.analysis.hhi"]], "pymatgen.analysis.interface": [[65, "module-pymatgen.analysis.interface"]], "ev_to_kj_per_mol (interfacialreactivity attribute)": [[66, "pymatgen.analysis.interface_reactions.InterfacialReactivity.EV_TO_KJ_PER_MOL"]], "grandpotentialinterfacialreactivity (class in pymatgen.analysis.interface_reactions)": [[66, "pymatgen.analysis.interface_reactions.GrandPotentialInterfacialReactivity"]], "interfacialreactivity (class in pymatgen.analysis.interface_reactions)": [[66, "pymatgen.analysis.interface_reactions.InterfacialReactivity"]], "get_chempot_correction() (interfacialreactivity class method)": [[66, "pymatgen.analysis.interface_reactions.InterfacialReactivity.get_chempot_correction"]], "get_critical_original_kink_ratio() (interfacialreactivity method)": [[66, "pymatgen.analysis.interface_reactions.InterfacialReactivity.get_critical_original_kink_ratio"]], "get_dataframe() (interfacialreactivity method)": [[66, "pymatgen.analysis.interface_reactions.InterfacialReactivity.get_dataframe"]], "get_kinks() (interfacialreactivity method)": [[66, "pymatgen.analysis.interface_reactions.InterfacialReactivity.get_kinks"]], "get_no_mixing_energy() (grandpotentialinterfacialreactivity method)": [[66, "pymatgen.analysis.interface_reactions.GrandPotentialInterfacialReactivity.get_no_mixing_energy"]], "labels (interfacialreactivity property)": [[66, "pymatgen.analysis.interface_reactions.InterfacialReactivity.labels"]], "minimum (interfacialreactivity property)": [[66, "pymatgen.analysis.interface_reactions.InterfacialReactivity.minimum"]], "plot() (interfacialreactivity method)": [[66, "pymatgen.analysis.interface_reactions.InterfacialReactivity.plot"]], "products (interfacialreactivity property)": [[66, "pymatgen.analysis.interface_reactions.InterfacialReactivity.products"]], "pymatgen.analysis.interface_reactions": [[66, "module-pymatgen.analysis.interface_reactions"]], "pymatgen.analysis.interfaces": [[67, "module-pymatgen.analysis.interfaces"]], "coherentinterfacebuilder (class in pymatgen.analysis.interfaces.coherent_interfaces)": [[68, "pymatgen.analysis.interfaces.coherent_interfaces.CoherentInterfaceBuilder"]], "from_2d_to_3d() (in module pymatgen.analysis.interfaces.coherent_interfaces)": [[68, "pymatgen.analysis.interfaces.coherent_interfaces.from_2d_to_3d"]], "get_2d_transform() (in module pymatgen.analysis.interfaces.coherent_interfaces)": [[68, "pymatgen.analysis.interfaces.coherent_interfaces.get_2d_transform"]], "get_interfaces() (coherentinterfacebuilder method)": [[68, "pymatgen.analysis.interfaces.coherent_interfaces.CoherentInterfaceBuilder.get_interfaces"]], "get_rot_3d_for_2d() (in module pymatgen.analysis.interfaces.coherent_interfaces)": [[68, "pymatgen.analysis.interfaces.coherent_interfaces.get_rot_3d_for_2d"]], "pymatgen.analysis.interfaces.coherent_interfaces": [[68, "module-pymatgen.analysis.interfaces.coherent_interfaces"]], "substrateanalyzer (class in pymatgen.analysis.interfaces.substrate_analyzer)": [[69, "pymatgen.analysis.interfaces.substrate_analyzer.SubstrateAnalyzer"]], "substratematch (class in pymatgen.analysis.interfaces.substrate_analyzer)": [[69, "pymatgen.analysis.interfaces.substrate_analyzer.SubstrateMatch"]], "calculate() (substrateanalyzer method)": [[69, "pymatgen.analysis.interfaces.substrate_analyzer.SubstrateAnalyzer.calculate"]], "elastic_energy (substratematch attribute)": [[69, "pymatgen.analysis.interfaces.substrate_analyzer.SubstrateMatch.elastic_energy"]], "film_miller (substratematch attribute)": [[69, "pymatgen.analysis.interfaces.substrate_analyzer.SubstrateMatch.film_miller"]], "from_zsl() (substratematch class method)": [[69, "pymatgen.analysis.interfaces.substrate_analyzer.SubstrateMatch.from_zsl"]], "generate_surface_vectors() (substrateanalyzer method)": [[69, "pymatgen.analysis.interfaces.substrate_analyzer.SubstrateAnalyzer.generate_surface_vectors"]], "ground_state_energy (substratematch attribute)": [[69, "pymatgen.analysis.interfaces.substrate_analyzer.SubstrateMatch.ground_state_energy"]], "pymatgen.analysis.interfaces.substrate_analyzer": [[69, "module-pymatgen.analysis.interfaces.substrate_analyzer"]], "strain (substratematch attribute)": [[69, "pymatgen.analysis.interfaces.substrate_analyzer.SubstrateMatch.strain"]], "substrate_miller (substratematch attribute)": [[69, "pymatgen.analysis.interfaces.substrate_analyzer.SubstrateMatch.substrate_miller"]], "total_energy (substratematch property)": [[69, "pymatgen.analysis.interfaces.substrate_analyzer.SubstrateMatch.total_energy"]], "von_mises_strain (substratematch attribute)": [[69, "pymatgen.analysis.interfaces.substrate_analyzer.SubstrateMatch.von_mises_strain"]], "zslgenerator (class in pymatgen.analysis.interfaces.zsl)": [[70, "pymatgen.analysis.interfaces.zsl.ZSLGenerator"]], "zslmatch (class in pymatgen.analysis.interfaces.zsl)": [[70, "pymatgen.analysis.interfaces.zsl.ZSLMatch"]], "fast_norm() (in module pymatgen.analysis.interfaces.zsl)": [[70, "pymatgen.analysis.interfaces.zsl.fast_norm"]], "film_sl_vectors (zslmatch attribute)": [[70, "pymatgen.analysis.interfaces.zsl.ZSLMatch.film_sl_vectors"]], "film_transformation (zslmatch attribute)": [[70, "pymatgen.analysis.interfaces.zsl.ZSLMatch.film_transformation"]], "film_vectors (zslmatch attribute)": [[70, "pymatgen.analysis.interfaces.zsl.ZSLMatch.film_vectors"]], "gen_sl_transform_matrices() (in module pymatgen.analysis.interfaces.zsl)": [[70, "pymatgen.analysis.interfaces.zsl.gen_sl_transform_matrices"]], "generate_sl_transformation_sets() (zslgenerator method)": [[70, "pymatgen.analysis.interfaces.zsl.ZSLGenerator.generate_sl_transformation_sets"]], "get_equiv_transformations() (zslgenerator method)": [[70, "pymatgen.analysis.interfaces.zsl.ZSLGenerator.get_equiv_transformations"]], "get_factors() (in module pymatgen.analysis.interfaces.zsl)": [[70, "pymatgen.analysis.interfaces.zsl.get_factors"]], "is_same_vectors() (in module pymatgen.analysis.interfaces.zsl)": [[70, "pymatgen.analysis.interfaces.zsl.is_same_vectors"]], "match_area (zslmatch property)": [[70, "pymatgen.analysis.interfaces.zsl.ZSLMatch.match_area"]], "match_transformation (zslmatch property)": [[70, "pymatgen.analysis.interfaces.zsl.ZSLMatch.match_transformation"]], "pymatgen.analysis.interfaces.zsl": [[70, "module-pymatgen.analysis.interfaces.zsl"]], "reduce_vectors() (in module pymatgen.analysis.interfaces.zsl)": [[70, "pymatgen.analysis.interfaces.zsl.reduce_vectors"]], "rel_angle() (in module pymatgen.analysis.interfaces.zsl)": [[70, "pymatgen.analysis.interfaces.zsl.rel_angle"]], "rel_strain() (in module pymatgen.analysis.interfaces.zsl)": [[70, "pymatgen.analysis.interfaces.zsl.rel_strain"]], "substrate_sl_vectors (zslmatch attribute)": [[70, "pymatgen.analysis.interfaces.zsl.ZSLMatch.substrate_sl_vectors"]], "substrate_transformation (zslmatch attribute)": [[70, "pymatgen.analysis.interfaces.zsl.ZSLMatch.substrate_transformation"]], "substrate_vectors (zslmatch attribute)": [[70, "pymatgen.analysis.interfaces.zsl.ZSLMatch.substrate_vectors"]], "vec_angle() (in module pymatgen.analysis.interfaces.zsl)": [[70, "pymatgen.analysis.interfaces.zsl.vec_angle"]], "vec_area() (in module pymatgen.analysis.interfaces.zsl)": [[70, "pymatgen.analysis.interfaces.zsl.vec_area"]], "brunnernn_real (class in pymatgen.analysis.local_env)": [[71, "pymatgen.analysis.local_env.BrunnerNN_real"]], "brunnernn_reciprocal (class in pymatgen.analysis.local_env)": [[71, "pymatgen.analysis.local_env.BrunnerNN_reciprocal"]], "brunnernn_relative (class in pymatgen.analysis.local_env)": [[71, "pymatgen.analysis.local_env.BrunnerNN_relative"]], "covalentbondnn (class in pymatgen.analysis.local_env)": [[71, "pymatgen.analysis.local_env.CovalentBondNN"]], "critic2nn (class in pymatgen.analysis.local_env)": [[71, "pymatgen.analysis.local_env.Critic2NN"]], "crystalnn (class in pymatgen.analysis.local_env)": [[71, "pymatgen.analysis.local_env.CrystalNN"]], "crystalnn.nndata (class in pymatgen.analysis.local_env)": [[71, "pymatgen.analysis.local_env.CrystalNN.NNData"]], "cutoffdictnn (class in pymatgen.analysis.local_env)": [[71, "pymatgen.analysis.local_env.CutOffDictNN"]], "econnn (class in pymatgen.analysis.local_env)": [[71, "pymatgen.analysis.local_env.EconNN"]], "isayevnn (class in pymatgen.analysis.local_env)": [[71, "pymatgen.analysis.local_env.IsayevNN"]], "jmolnn (class in pymatgen.analysis.local_env)": [[71, "pymatgen.analysis.local_env.JmolNN"]], "localstructorderparams (class in pymatgen.analysis.local_env)": [[71, "pymatgen.analysis.local_env.LocalStructOrderParams"]], "minimumdistancenn (class in pymatgen.analysis.local_env)": [[71, "pymatgen.analysis.local_env.MinimumDistanceNN"]], "minimumokeeffenn (class in pymatgen.analysis.local_env)": [[71, "pymatgen.analysis.local_env.MinimumOKeeffeNN"]], "minimumvirenn (class in pymatgen.analysis.local_env)": [[71, "pymatgen.analysis.local_env.MinimumVIRENN"]], "nearneighbors (class in pymatgen.analysis.local_env)": [[71, "pymatgen.analysis.local_env.NearNeighbors"]], "openbabelnn (class in pymatgen.analysis.local_env)": [[71, "pymatgen.analysis.local_env.OpenBabelNN"]], "valenceionicradiusevaluator (class in pymatgen.analysis.local_env)": [[71, "pymatgen.analysis.local_env.ValenceIonicRadiusEvaluator"]], "voronoinn (class in pymatgen.analysis.local_env)": [[71, "pymatgen.analysis.local_env.VoronoiNN"]], "all_nninfo (crystalnn.nndata attribute)": [[71, "pymatgen.analysis.local_env.CrystalNN.NNData.all_nninfo"]], "cn_nninfo (crystalnn.nndata attribute)": [[71, "pymatgen.analysis.local_env.CrystalNN.NNData.cn_nninfo"]], "cn_weights (crystalnn.nndata attribute)": [[71, "pymatgen.analysis.local_env.CrystalNN.NNData.cn_weights"]], "compute_trigonometric_terms() (localstructorderparams method)": [[71, "pymatgen.analysis.local_env.LocalStructOrderParams.compute_trigonometric_terms"]], "extend_structure_molecules (covalentbondnn property)": [[71, "pymatgen.analysis.local_env.CovalentBondNN.extend_structure_molecules"]], "extend_structure_molecules (critic2nn property)": [[71, "pymatgen.analysis.local_env.Critic2NN.extend_structure_molecules"]], "extend_structure_molecules (cutoffdictnn property)": [[71, "pymatgen.analysis.local_env.CutOffDictNN.extend_structure_molecules"]], "extend_structure_molecules (econnn property)": [[71, "pymatgen.analysis.local_env.EconNN.extend_structure_molecules"]], "extend_structure_molecules (jmolnn property)": [[71, "pymatgen.analysis.local_env.JmolNN.extend_structure_molecules"]], "extend_structure_molecules (minimumdistancenn property)": [[71, "pymatgen.analysis.local_env.MinimumDistanceNN.extend_structure_molecules"]], "extend_structure_molecules (minimumokeeffenn property)": [[71, "pymatgen.analysis.local_env.MinimumOKeeffeNN.extend_structure_molecules"]], "extend_structure_molecules (nearneighbors property)": [[71, "pymatgen.analysis.local_env.NearNeighbors.extend_structure_molecules"]], "extend_structure_molecules (openbabelnn property)": [[71, "pymatgen.analysis.local_env.OpenBabelNN.extend_structure_molecules"]], "from_preset() (cutoffdictnn static method)": [[71, "pymatgen.analysis.local_env.CutOffDictNN.from_preset"]], "get_all_nn_info() (isayevnn method)": [[71, "pymatgen.analysis.local_env.IsayevNN.get_all_nn_info"]], "get_all_nn_info() (nearneighbors method)": [[71, "pymatgen.analysis.local_env.NearNeighbors.get_all_nn_info"]], "get_all_nn_info() (voronoinn method)": [[71, "pymatgen.analysis.local_env.VoronoiNN.get_all_nn_info"]], "get_all_voronoi_polyhedra() (voronoinn method)": [[71, "pymatgen.analysis.local_env.VoronoiNN.get_all_voronoi_polyhedra"]], "get_bonded_structure() (covalentbondnn method)": [[71, "pymatgen.analysis.local_env.CovalentBondNN.get_bonded_structure"]], "get_bonded_structure() (critic2nn method)": [[71, "pymatgen.analysis.local_env.Critic2NN.get_bonded_structure"]], "get_bonded_structure() (nearneighbors method)": [[71, "pymatgen.analysis.local_env.NearNeighbors.get_bonded_structure"]], "get_bonded_structure() (openbabelnn method)": [[71, "pymatgen.analysis.local_env.OpenBabelNN.get_bonded_structure"]], "get_cn() (crystalnn method)": [[71, "pymatgen.analysis.local_env.CrystalNN.get_cn"]], "get_cn() (nearneighbors method)": [[71, "pymatgen.analysis.local_env.NearNeighbors.get_cn"]], "get_cn_dict() (crystalnn method)": [[71, "pymatgen.analysis.local_env.CrystalNN.get_cn_dict"]], "get_cn_dict() (nearneighbors method)": [[71, "pymatgen.analysis.local_env.NearNeighbors.get_cn_dict"]], "get_local_order_parameters() (nearneighbors method)": [[71, "pymatgen.analysis.local_env.NearNeighbors.get_local_order_parameters"]], "get_max_bond_distance() (jmolnn method)": [[71, "pymatgen.analysis.local_env.JmolNN.get_max_bond_distance"]], "get_neighbors_of_site_with_index() (in module pymatgen.analysis.local_env)": [[71, "pymatgen.analysis.local_env.get_neighbors_of_site_with_index"]], "get_nn() (nearneighbors method)": [[71, "pymatgen.analysis.local_env.NearNeighbors.get_nn"]], "get_nn_data() (crystalnn method)": [[71, "pymatgen.analysis.local_env.CrystalNN.get_nn_data"]], "get_nn_images() (nearneighbors method)": [[71, "pymatgen.analysis.local_env.NearNeighbors.get_nn_images"]], "get_nn_info() (brunnernn_real method)": [[71, "pymatgen.analysis.local_env.BrunnerNN_real.get_nn_info"]], "get_nn_info() (brunnernn_reciprocal method)": [[71, "pymatgen.analysis.local_env.BrunnerNN_reciprocal.get_nn_info"]], "get_nn_info() (brunnernn_relative method)": [[71, "pymatgen.analysis.local_env.BrunnerNN_relative.get_nn_info"]], "get_nn_info() (covalentbondnn method)": [[71, "pymatgen.analysis.local_env.CovalentBondNN.get_nn_info"]], "get_nn_info() (critic2nn method)": [[71, "pymatgen.analysis.local_env.Critic2NN.get_nn_info"]], "get_nn_info() (crystalnn method)": [[71, "pymatgen.analysis.local_env.CrystalNN.get_nn_info"]], "get_nn_info() (cutoffdictnn method)": [[71, "pymatgen.analysis.local_env.CutOffDictNN.get_nn_info"]], "get_nn_info() (econnn method)": [[71, "pymatgen.analysis.local_env.EconNN.get_nn_info"]], "get_nn_info() (isayevnn method)": [[71, "pymatgen.analysis.local_env.IsayevNN.get_nn_info"]], "get_nn_info() (jmolnn method)": [[71, "pymatgen.analysis.local_env.JmolNN.get_nn_info"]], "get_nn_info() (minimumdistancenn method)": [[71, "pymatgen.analysis.local_env.MinimumDistanceNN.get_nn_info"]], "get_nn_info() (minimumokeeffenn method)": [[71, "pymatgen.analysis.local_env.MinimumOKeeffeNN.get_nn_info"]], "get_nn_info() (minimumvirenn method)": [[71, "pymatgen.analysis.local_env.MinimumVIRENN.get_nn_info"]], "get_nn_info() (nearneighbors method)": [[71, "pymatgen.analysis.local_env.NearNeighbors.get_nn_info"]], "get_nn_info() (openbabelnn method)": [[71, "pymatgen.analysis.local_env.OpenBabelNN.get_nn_info"]], "get_nn_info() (voronoinn method)": [[71, "pymatgen.analysis.local_env.VoronoiNN.get_nn_info"]], "get_nn_shell_info() (covalentbondnn method)": [[71, "pymatgen.analysis.local_env.CovalentBondNN.get_nn_shell_info"]], "get_nn_shell_info() (nearneighbors method)": [[71, "pymatgen.analysis.local_env.NearNeighbors.get_nn_shell_info"]], "get_nn_shell_info() (openbabelnn method)": [[71, "pymatgen.analysis.local_env.OpenBabelNN.get_nn_shell_info"]], "get_okeeffe_distance_prediction() (in module pymatgen.analysis.local_env)": [[71, "pymatgen.analysis.local_env.get_okeeffe_distance_prediction"]], "get_okeeffe_params() (in module pymatgen.analysis.local_env)": [[71, "pymatgen.analysis.local_env.get_okeeffe_params"]], "get_order_parameters() (localstructorderparams method)": [[71, "pymatgen.analysis.local_env.LocalStructOrderParams.get_order_parameters"]], "get_parameters() (localstructorderparams method)": [[71, "pymatgen.analysis.local_env.LocalStructOrderParams.get_parameters"]], "get_q2() (localstructorderparams method)": [[71, "pymatgen.analysis.local_env.LocalStructOrderParams.get_q2"]], "get_q4() (localstructorderparams method)": [[71, "pymatgen.analysis.local_env.LocalStructOrderParams.get_q4"]], "get_q6() (localstructorderparams method)": [[71, "pymatgen.analysis.local_env.LocalStructOrderParams.get_q6"]], "get_type() (localstructorderparams method)": [[71, "pymatgen.analysis.local_env.LocalStructOrderParams.get_type"]], "get_voronoi_polyhedra() (voronoinn method)": [[71, "pymatgen.analysis.local_env.VoronoiNN.get_voronoi_polyhedra"]], "get_weights_of_nn_sites() (nearneighbors method)": [[71, "pymatgen.analysis.local_env.NearNeighbors.get_weights_of_nn_sites"]], "gramschmidt() (in module pymatgen.analysis.local_env)": [[71, "pymatgen.analysis.local_env.gramschmidt"]], "last_nneigh (localstructorderparams property)": [[71, "pymatgen.analysis.local_env.LocalStructOrderParams.last_nneigh"]], "metal_edge_extender() (in module pymatgen.analysis.local_env)": [[71, "pymatgen.analysis.local_env.metal_edge_extender"]], "molecules_allowed (brunnernn_real property)": [[71, "pymatgen.analysis.local_env.BrunnerNN_real.molecules_allowed"]], "molecules_allowed (brunnernn_reciprocal property)": [[71, "pymatgen.analysis.local_env.BrunnerNN_reciprocal.molecules_allowed"]], "molecules_allowed (brunnernn_relative property)": [[71, "pymatgen.analysis.local_env.BrunnerNN_relative.molecules_allowed"]], "molecules_allowed (covalentbondnn property)": [[71, "pymatgen.analysis.local_env.CovalentBondNN.molecules_allowed"]], "molecules_allowed (critic2nn property)": [[71, "pymatgen.analysis.local_env.Critic2NN.molecules_allowed"]], "molecules_allowed (crystalnn property)": [[71, "pymatgen.analysis.local_env.CrystalNN.molecules_allowed"]], "molecules_allowed (cutoffdictnn property)": [[71, "pymatgen.analysis.local_env.CutOffDictNN.molecules_allowed"]], "molecules_allowed (econnn property)": [[71, "pymatgen.analysis.local_env.EconNN.molecules_allowed"]], "molecules_allowed (jmolnn property)": [[71, "pymatgen.analysis.local_env.JmolNN.molecules_allowed"]], "molecules_allowed (minimumdistancenn property)": [[71, "pymatgen.analysis.local_env.MinimumDistanceNN.molecules_allowed"]], "molecules_allowed (minimumokeeffenn property)": [[71, "pymatgen.analysis.local_env.MinimumOKeeffeNN.molecules_allowed"]], "molecules_allowed (minimumvirenn property)": [[71, "pymatgen.analysis.local_env.MinimumVIRENN.molecules_allowed"]], "molecules_allowed (nearneighbors property)": [[71, "pymatgen.analysis.local_env.NearNeighbors.molecules_allowed"]], "molecules_allowed (openbabelnn property)": [[71, "pymatgen.analysis.local_env.OpenBabelNN.molecules_allowed"]], "molecules_allowed (voronoinn property)": [[71, "pymatgen.analysis.local_env.VoronoiNN.molecules_allowed"]], "num_ops (localstructorderparams property)": [[71, "pymatgen.analysis.local_env.LocalStructOrderParams.num_ops"]], "oxygen_edge_extender() (in module pymatgen.analysis.local_env)": [[71, "pymatgen.analysis.local_env.oxygen_edge_extender"]], "pymatgen.analysis.local_env": [[71, "module-pymatgen.analysis.local_env"]], "radii (valenceionicradiusevaluator property)": [[71, "pymatgen.analysis.local_env.ValenceIonicRadiusEvaluator.radii"]], "site_is_of_motif_type() (in module pymatgen.analysis.local_env)": [[71, "pymatgen.analysis.local_env.site_is_of_motif_type"]], "solid_angle() (in module pymatgen.analysis.local_env)": [[71, "pymatgen.analysis.local_env.solid_angle"]], "structure (valenceionicradiusevaluator property)": [[71, "pymatgen.analysis.local_env.ValenceIonicRadiusEvaluator.structure"]], "structures_allowed (brunnernn_real property)": [[71, "pymatgen.analysis.local_env.BrunnerNN_real.structures_allowed"]], "structures_allowed (brunnernn_reciprocal property)": [[71, "pymatgen.analysis.local_env.BrunnerNN_reciprocal.structures_allowed"]], "structures_allowed (brunnernn_relative property)": [[71, "pymatgen.analysis.local_env.BrunnerNN_relative.structures_allowed"]], "structures_allowed (covalentbondnn property)": [[71, "pymatgen.analysis.local_env.CovalentBondNN.structures_allowed"]], "structures_allowed (critic2nn property)": [[71, "pymatgen.analysis.local_env.Critic2NN.structures_allowed"]], "structures_allowed (crystalnn property)": [[71, "pymatgen.analysis.local_env.CrystalNN.structures_allowed"]], "structures_allowed (cutoffdictnn property)": [[71, "pymatgen.analysis.local_env.CutOffDictNN.structures_allowed"]], "structures_allowed (econnn property)": [[71, "pymatgen.analysis.local_env.EconNN.structures_allowed"]], "structures_allowed (jmolnn property)": [[71, "pymatgen.analysis.local_env.JmolNN.structures_allowed"]], "structures_allowed (minimumdistancenn property)": [[71, "pymatgen.analysis.local_env.MinimumDistanceNN.structures_allowed"]], "structures_allowed (minimumokeeffenn property)": [[71, "pymatgen.analysis.local_env.MinimumOKeeffeNN.structures_allowed"]], "structures_allowed (minimumvirenn property)": [[71, "pymatgen.analysis.local_env.MinimumVIRENN.structures_allowed"]], "structures_allowed (nearneighbors property)": [[71, "pymatgen.analysis.local_env.NearNeighbors.structures_allowed"]], "structures_allowed (openbabelnn property)": [[71, "pymatgen.analysis.local_env.OpenBabelNN.structures_allowed"]], "structures_allowed (voronoinn property)": [[71, "pymatgen.analysis.local_env.VoronoiNN.structures_allowed"]], "transform_to_length() (crystalnn static method)": [[71, "pymatgen.analysis.local_env.CrystalNN.transform_to_length"]], "valences (valenceionicradiusevaluator property)": [[71, "pymatgen.analysis.local_env.ValenceIonicRadiusEvaluator.valences"]], "vol_tetra() (in module pymatgen.analysis.local_env)": [[71, "pymatgen.analysis.local_env.vol_tetra"]], "pymatgen.analysis.magnetism": [[72, "module-pymatgen.analysis.magnetism"]], "afm (ordering attribute)": [[73, "pymatgen.analysis.magnetism.analyzer.Ordering.AFM"]], "collinearmagneticstructureanalyzer (class in pymatgen.analysis.magnetism.analyzer)": [[73, "pymatgen.analysis.magnetism.analyzer.CollinearMagneticStructureAnalyzer"]], "fm (ordering attribute)": [[73, "pymatgen.analysis.magnetism.analyzer.Ordering.FM"]], "fim (ordering attribute)": [[73, "pymatgen.analysis.magnetism.analyzer.Ordering.FiM"]], "magneticdeformation (class in pymatgen.analysis.magnetism.analyzer)": [[73, "pymatgen.analysis.magnetism.analyzer.MagneticDeformation"]], "magneticstructureenumerator (class in pymatgen.analysis.magnetism.analyzer)": [[73, "pymatgen.analysis.magnetism.analyzer.MagneticStructureEnumerator"]], "nm (ordering attribute)": [[73, "pymatgen.analysis.magnetism.analyzer.Ordering.NM"]], "ordering (class in pymatgen.analysis.magnetism.analyzer)": [[73, "pymatgen.analysis.magnetism.analyzer.Ordering"]], "overwritemagmommode (class in pymatgen.analysis.magnetism.analyzer)": [[73, "pymatgen.analysis.magnetism.analyzer.OverwriteMagmomMode"]], "unknown (ordering attribute)": [[73, "pymatgen.analysis.magnetism.analyzer.Ordering.Unknown"]], "available_strategies (magneticstructureenumerator attribute)": [[73, "pymatgen.analysis.magnetism.analyzer.MagneticStructureEnumerator.available_strategies"]], "deformation (magneticdeformation attribute)": [[73, "pymatgen.analysis.magnetism.analyzer.MagneticDeformation.deformation"]], "get_exchange_group_info() (collinearmagneticstructureanalyzer method)": [[73, "pymatgen.analysis.magnetism.analyzer.CollinearMagneticStructureAnalyzer.get_exchange_group_info"]], "get_ferromagnetic_structure() (collinearmagneticstructureanalyzer method)": [[73, "pymatgen.analysis.magnetism.analyzer.CollinearMagneticStructureAnalyzer.get_ferromagnetic_structure"]], "get_nonmagnetic_structure() (collinearmagneticstructureanalyzer method)": [[73, "pymatgen.analysis.magnetism.analyzer.CollinearMagneticStructureAnalyzer.get_nonmagnetic_structure"]], "get_structure_with_only_magnetic_atoms() (collinearmagneticstructureanalyzer method)": [[73, "pymatgen.analysis.magnetism.analyzer.CollinearMagneticStructureAnalyzer.get_structure_with_only_magnetic_atoms"]], "get_structure_with_spin() (collinearmagneticstructureanalyzer method)": [[73, "pymatgen.analysis.magnetism.analyzer.CollinearMagneticStructureAnalyzer.get_structure_with_spin"]], "is_magnetic (collinearmagneticstructureanalyzer property)": [[73, "pymatgen.analysis.magnetism.analyzer.CollinearMagneticStructureAnalyzer.is_magnetic"]], "magmoms (collinearmagneticstructureanalyzer property)": [[73, "pymatgen.analysis.magnetism.analyzer.CollinearMagneticStructureAnalyzer.magmoms"]], "magnetic_deformation() (in module pymatgen.analysis.magnetism.analyzer)": [[73, "pymatgen.analysis.magnetism.analyzer.magnetic_deformation"]], "magnetic_species_and_magmoms (collinearmagneticstructureanalyzer property)": [[73, "pymatgen.analysis.magnetism.analyzer.CollinearMagneticStructureAnalyzer.magnetic_species_and_magmoms"]], "matches_ordering() (collinearmagneticstructureanalyzer method)": [[73, "pymatgen.analysis.magnetism.analyzer.CollinearMagneticStructureAnalyzer.matches_ordering"]], "none (overwritemagmommode attribute)": [[73, "pymatgen.analysis.magnetism.analyzer.OverwriteMagmomMode.none"]], "normalize (overwritemagmommode attribute)": [[73, "pymatgen.analysis.magnetism.analyzer.OverwriteMagmomMode.normalize"]], "number_of_magnetic_sites (collinearmagneticstructureanalyzer property)": [[73, "pymatgen.analysis.magnetism.analyzer.CollinearMagneticStructureAnalyzer.number_of_magnetic_sites"]], "number_of_unique_magnetic_sites() (collinearmagneticstructureanalyzer method)": [[73, "pymatgen.analysis.magnetism.analyzer.CollinearMagneticStructureAnalyzer.number_of_unique_magnetic_sites"]], "ordering (collinearmagneticstructureanalyzer property)": [[73, "pymatgen.analysis.magnetism.analyzer.CollinearMagneticStructureAnalyzer.ordering"]], "pymatgen.analysis.magnetism.analyzer": [[73, "module-pymatgen.analysis.magnetism.analyzer"]], "replace_all (overwritemagmommode attribute)": [[73, "pymatgen.analysis.magnetism.analyzer.OverwriteMagmomMode.replace_all"]], "respect_sign (overwritemagmommode attribute)": [[73, "pymatgen.analysis.magnetism.analyzer.OverwriteMagmomMode.respect_sign"]], "respect_zero (overwritemagmommode attribute)": [[73, "pymatgen.analysis.magnetism.analyzer.OverwriteMagmomMode.respect_zero"]], "type (magneticdeformation attribute)": [[73, "pymatgen.analysis.magnetism.analyzer.MagneticDeformation.type"]], "types_of_magnetic_specie (collinearmagneticstructureanalyzer property)": [[73, "pymatgen.analysis.magnetism.analyzer.CollinearMagneticStructureAnalyzer.types_of_magnetic_specie"]], "types_of_magnetic_species (collinearmagneticstructureanalyzer property)": [[73, "pymatgen.analysis.magnetism.analyzer.CollinearMagneticStructureAnalyzer.types_of_magnetic_species"]], "heisenbergmapper (class in pymatgen.analysis.magnetism.heisenberg)": [[74, "pymatgen.analysis.magnetism.heisenberg.HeisenbergMapper"]], "heisenbergmodel (class in pymatgen.analysis.magnetism.heisenberg)": [[74, "pymatgen.analysis.magnetism.heisenberg.HeisenbergModel"]], "heisenbergscreener (class in pymatgen.analysis.magnetism.heisenberg)": [[74, "pymatgen.analysis.magnetism.heisenberg.HeisenbergScreener"]], "as_dict() (heisenbergmodel method)": [[74, "pymatgen.analysis.magnetism.heisenberg.HeisenbergModel.as_dict"]], "estimate_exchange() (heisenbergmapper method)": [[74, "pymatgen.analysis.magnetism.heisenberg.HeisenbergMapper.estimate_exchange"]], "from_dict() (heisenbergmodel class method)": [[74, "pymatgen.analysis.magnetism.heisenberg.HeisenbergModel.from_dict"]], "get_exchange() (heisenbergmapper method)": [[74, "pymatgen.analysis.magnetism.heisenberg.HeisenbergMapper.get_exchange"]], "get_heisenberg_model() (heisenbergmapper method)": [[74, "pymatgen.analysis.magnetism.heisenberg.HeisenbergMapper.get_heisenberg_model"]], "get_interaction_graph() (heisenbergmapper method)": [[74, "pymatgen.analysis.magnetism.heisenberg.HeisenbergMapper.get_interaction_graph"]], "get_low_energy_orderings() (heisenbergmapper method)": [[74, "pymatgen.analysis.magnetism.heisenberg.HeisenbergMapper.get_low_energy_orderings"]], "get_mft_temperature() (heisenbergmapper method)": [[74, "pymatgen.analysis.magnetism.heisenberg.HeisenbergMapper.get_mft_temperature"]], "pymatgen.analysis.magnetism.heisenberg": [[74, "module-pymatgen.analysis.magnetism.heisenberg"]], "screened_energies (heisenbergscreener attribute)": [[74, "pymatgen.analysis.magnetism.heisenberg.HeisenbergScreener.screened_energies"]], "screened_structures (heisenbergscreener attribute)": [[74, "pymatgen.analysis.magnetism.heisenberg.HeisenbergScreener.screened_structures"]], "jahntelleranalyzer (class in pymatgen.analysis.magnetism.jahnteller)": [[75, "pymatgen.analysis.magnetism.jahnteller.JahnTellerAnalyzer"]], "get_analysis() (jahntelleranalyzer method)": [[75, "pymatgen.analysis.magnetism.jahnteller.JahnTellerAnalyzer.get_analysis"]], "get_analysis_and_structure() (jahntelleranalyzer method)": [[75, "pymatgen.analysis.magnetism.jahnteller.JahnTellerAnalyzer.get_analysis_and_structure"]], "get_magnitude_of_effect_from_species() (jahntelleranalyzer method)": [[75, "pymatgen.analysis.magnetism.jahnteller.JahnTellerAnalyzer.get_magnitude_of_effect_from_species"]], "get_magnitude_of_effect_from_spin_config() (jahntelleranalyzer static method)": [[75, "pymatgen.analysis.magnetism.jahnteller.JahnTellerAnalyzer.get_magnitude_of_effect_from_spin_config"]], "is_jahn_teller_active() (jahntelleranalyzer method)": [[75, "pymatgen.analysis.magnetism.jahnteller.JahnTellerAnalyzer.is_jahn_teller_active"]], "mu_so() (jahntelleranalyzer static method)": [[75, "pymatgen.analysis.magnetism.jahnteller.JahnTellerAnalyzer.mu_so"]], "pymatgen.analysis.magnetism.jahnteller": [[75, "module-pymatgen.analysis.magnetism.jahnteller"]], "tag_structure() (jahntelleranalyzer method)": [[75, "pymatgen.analysis.magnetism.jahnteller.JahnTellerAnalyzer.tag_structure"]], "abstractmolatommapper (class in pymatgen.analysis.molecule_matcher)": [[76, "pymatgen.analysis.molecule_matcher.AbstractMolAtomMapper"]], "bruteforceordermatcher (class in pymatgen.analysis.molecule_matcher)": [[76, "pymatgen.analysis.molecule_matcher.BruteForceOrderMatcher"]], "geneticordermatcher (class in pymatgen.analysis.molecule_matcher)": [[76, "pymatgen.analysis.molecule_matcher.GeneticOrderMatcher"]], "hungarianordermatcher (class in pymatgen.analysis.molecule_matcher)": [[76, "pymatgen.analysis.molecule_matcher.HungarianOrderMatcher"]], "inchimolatommapper (class in pymatgen.analysis.molecule_matcher)": [[76, "pymatgen.analysis.molecule_matcher.InchiMolAtomMapper"]], "isomorphismmolatommapper (class in pymatgen.analysis.molecule_matcher)": [[76, "pymatgen.analysis.molecule_matcher.IsomorphismMolAtomMapper"]], "kabschmatcher (class in pymatgen.analysis.molecule_matcher)": [[76, "pymatgen.analysis.molecule_matcher.KabschMatcher"]], "moleculematcher (class in pymatgen.analysis.molecule_matcher)": [[76, "pymatgen.analysis.molecule_matcher.MoleculeMatcher"]], "as_dict() (inchimolatommapper method)": [[76, "pymatgen.analysis.molecule_matcher.InchiMolAtomMapper.as_dict"]], "as_dict() (isomorphismmolatommapper method)": [[76, "pymatgen.analysis.molecule_matcher.IsomorphismMolAtomMapper.as_dict"]], "as_dict() (moleculematcher method)": [[76, "pymatgen.analysis.molecule_matcher.MoleculeMatcher.as_dict"]], "fit() (bruteforceordermatcher method)": [[76, "pymatgen.analysis.molecule_matcher.BruteForceOrderMatcher.fit"]], "fit() (geneticordermatcher method)": [[76, "pymatgen.analysis.molecule_matcher.GeneticOrderMatcher.fit"]], "fit() (hungarianordermatcher method)": [[76, "pymatgen.analysis.molecule_matcher.HungarianOrderMatcher.fit"]], "fit() (kabschmatcher method)": [[76, "pymatgen.analysis.molecule_matcher.KabschMatcher.fit"]], "fit() (moleculematcher method)": [[76, "pymatgen.analysis.molecule_matcher.MoleculeMatcher.fit"]], "from_dict() (abstractmolatommapper class method)": [[76, "pymatgen.analysis.molecule_matcher.AbstractMolAtomMapper.from_dict"]], "from_dict() (inchimolatommapper class method)": [[76, "pymatgen.analysis.molecule_matcher.InchiMolAtomMapper.from_dict"]], "from_dict() (isomorphismmolatommapper class method)": [[76, "pymatgen.analysis.molecule_matcher.IsomorphismMolAtomMapper.from_dict"]], "from_dict() (moleculematcher class method)": [[76, "pymatgen.analysis.molecule_matcher.MoleculeMatcher.from_dict"]], "get_molecule_hash() (abstractmolatommapper method)": [[76, "pymatgen.analysis.molecule_matcher.AbstractMolAtomMapper.get_molecule_hash"]], "get_molecule_hash() (inchimolatommapper method)": [[76, "pymatgen.analysis.molecule_matcher.InchiMolAtomMapper.get_molecule_hash"]], "get_molecule_hash() (isomorphismmolatommapper method)": [[76, "pymatgen.analysis.molecule_matcher.IsomorphismMolAtomMapper.get_molecule_hash"]], "get_principal_axis() (hungarianordermatcher static method)": [[76, "pymatgen.analysis.molecule_matcher.HungarianOrderMatcher.get_principal_axis"]], "get_rmsd() (moleculematcher method)": [[76, "pymatgen.analysis.molecule_matcher.MoleculeMatcher.get_rmsd"]], "group_molecules() (moleculematcher method)": [[76, "pymatgen.analysis.molecule_matcher.MoleculeMatcher.group_molecules"]], "kabsch() (kabschmatcher static method)": [[76, "pymatgen.analysis.molecule_matcher.KabschMatcher.kabsch"]], "match() (bruteforceordermatcher method)": [[76, "pymatgen.analysis.molecule_matcher.BruteForceOrderMatcher.match"]], "match() (geneticordermatcher method)": [[76, "pymatgen.analysis.molecule_matcher.GeneticOrderMatcher.match"]], "match() (hungarianordermatcher method)": [[76, "pymatgen.analysis.molecule_matcher.HungarianOrderMatcher.match"]], "match() (kabschmatcher method)": [[76, "pymatgen.analysis.molecule_matcher.KabschMatcher.match"]], "permutations() (bruteforceordermatcher static method)": [[76, "pymatgen.analysis.molecule_matcher.BruteForceOrderMatcher.permutations"]], "permutations() (geneticordermatcher method)": [[76, "pymatgen.analysis.molecule_matcher.GeneticOrderMatcher.permutations"]], "permutations() (hungarianordermatcher static method)": [[76, "pymatgen.analysis.molecule_matcher.HungarianOrderMatcher.permutations"]], "pymatgen.analysis.molecule_matcher": [[76, "module-pymatgen.analysis.molecule_matcher"]], "rotation_matrix_vectors() (hungarianordermatcher static method)": [[76, "pymatgen.analysis.molecule_matcher.HungarianOrderMatcher.rotation_matrix_vectors"]], "uniform_labels() (abstractmolatommapper method)": [[76, "pymatgen.analysis.molecule_matcher.AbstractMolAtomMapper.uniform_labels"]], "uniform_labels() (inchimolatommapper method)": [[76, "pymatgen.analysis.molecule_matcher.InchiMolAtomMapper.uniform_labels"]], "uniform_labels() (isomorphismmolatommapper method)": [[76, "pymatgen.analysis.molecule_matcher.IsomorphismMolAtomMapper.uniform_labels"]], "covalentradius (class in pymatgen.analysis.molecule_structure_comparator)": [[77, "pymatgen.analysis.molecule_structure_comparator.CovalentRadius"]], "moleculestructurecomparator (class in pymatgen.analysis.molecule_structure_comparator)": [[77, "pymatgen.analysis.molecule_structure_comparator.MoleculeStructureComparator"]], "are_equal() (moleculestructurecomparator method)": [[77, "pymatgen.analysis.molecule_structure_comparator.MoleculeStructureComparator.are_equal"]], "as_dict() (moleculestructurecomparator method)": [[77, "pymatgen.analysis.molecule_structure_comparator.MoleculeStructureComparator.as_dict"]], "from_dict() (moleculestructurecomparator class method)": [[77, "pymatgen.analysis.molecule_structure_comparator.MoleculeStructureComparator.from_dict"]], "get_13_bonds() (moleculestructurecomparator static method)": [[77, "pymatgen.analysis.molecule_structure_comparator.MoleculeStructureComparator.get_13_bonds"]], "halogen_list (moleculestructurecomparator attribute)": [[77, "pymatgen.analysis.molecule_structure_comparator.MoleculeStructureComparator.halogen_list"]], "ionic_element_list (moleculestructurecomparator attribute)": [[77, "pymatgen.analysis.molecule_structure_comparator.MoleculeStructureComparator.ionic_element_list"]], "pymatgen.analysis.molecule_structure_comparator": [[77, "module-pymatgen.analysis.molecule_structure_comparator"]], "radius (covalentradius attribute)": [[77, "pymatgen.analysis.molecule_structure_comparator.CovalentRadius.radius"]], "chemicalshielding (class in pymatgen.analysis.nmr)": [[78, "pymatgen.analysis.nmr.ChemicalShielding"]], "chemicalshielding.haeberlennotation (class in pymatgen.analysis.nmr)": [[78, "pymatgen.analysis.nmr.ChemicalShielding.HaeberlenNotation"]], "chemicalshielding.marylandnotation (class in pymatgen.analysis.nmr)": [[78, "pymatgen.analysis.nmr.ChemicalShielding.MarylandNotation"]], "chemicalshielding.mehringnotation (class in pymatgen.analysis.nmr)": [[78, "pymatgen.analysis.nmr.ChemicalShielding.MehringNotation"]], "electricfieldgradient (class in pymatgen.analysis.nmr)": [[78, "pymatgen.analysis.nmr.ElectricFieldGradient"]], "v_xx (electricfieldgradient property)": [[78, "pymatgen.analysis.nmr.ElectricFieldGradient.V_xx"]], "v_yy (electricfieldgradient property)": [[78, "pymatgen.analysis.nmr.ElectricFieldGradient.V_yy"]], "v_zz (electricfieldgradient property)": [[78, "pymatgen.analysis.nmr.ElectricFieldGradient.V_zz"]], "asymmetry (electricfieldgradient property)": [[78, "pymatgen.analysis.nmr.ElectricFieldGradient.asymmetry"]], "coupling_constant() (electricfieldgradient method)": [[78, "pymatgen.analysis.nmr.ElectricFieldGradient.coupling_constant"]], "delta_sigma_iso (chemicalshielding.haeberlennotation attribute)": [[78, "pymatgen.analysis.nmr.ChemicalShielding.HaeberlenNotation.delta_sigma_iso"]], "eta (chemicalshielding.haeberlennotation attribute)": [[78, "pymatgen.analysis.nmr.ChemicalShielding.HaeberlenNotation.eta"]], "from_maryland_notation() (chemicalshielding class method)": [[78, "pymatgen.analysis.nmr.ChemicalShielding.from_maryland_notation"]], "haeberlen_values (chemicalshielding property)": [[78, "pymatgen.analysis.nmr.ChemicalShielding.haeberlen_values"]], "kappa (chemicalshielding.marylandnotation attribute)": [[78, "pymatgen.analysis.nmr.ChemicalShielding.MarylandNotation.kappa"]], "maryland_values (chemicalshielding property)": [[78, "pymatgen.analysis.nmr.ChemicalShielding.maryland_values"]], "mehring_values (chemicalshielding property)": [[78, "pymatgen.analysis.nmr.ChemicalShielding.mehring_values"]], "omega (chemicalshielding.marylandnotation attribute)": [[78, "pymatgen.analysis.nmr.ChemicalShielding.MarylandNotation.omega"]], "principal_axis_system (chemicalshielding property)": [[78, "pymatgen.analysis.nmr.ChemicalShielding.principal_axis_system"]], "principal_axis_system (electricfieldgradient property)": [[78, "pymatgen.analysis.nmr.ElectricFieldGradient.principal_axis_system"]], "pymatgen.analysis.nmr": [[78, "module-pymatgen.analysis.nmr"]], "sigma_11 (chemicalshielding.mehringnotation attribute)": [[78, "pymatgen.analysis.nmr.ChemicalShielding.MehringNotation.sigma_11"]], "sigma_22 (chemicalshielding.mehringnotation attribute)": [[78, "pymatgen.analysis.nmr.ChemicalShielding.MehringNotation.sigma_22"]], "sigma_33 (chemicalshielding.mehringnotation attribute)": [[78, "pymatgen.analysis.nmr.ChemicalShielding.MehringNotation.sigma_33"]], "sigma_iso (chemicalshielding.haeberlennotation attribute)": [[78, "pymatgen.analysis.nmr.ChemicalShielding.HaeberlenNotation.sigma_iso"]], "sigma_iso (chemicalshielding.marylandnotation attribute)": [[78, "pymatgen.analysis.nmr.ChemicalShielding.MarylandNotation.sigma_iso"]], "sigma_iso (chemicalshielding.mehringnotation attribute)": [[78, "pymatgen.analysis.nmr.ChemicalShielding.MehringNotation.sigma_iso"]], "zeta (chemicalshielding.haeberlennotation attribute)": [[78, "pymatgen.analysis.nmr.ChemicalShielding.HaeberlenNotation.zeta"]], "chgcarpotential (class in pymatgen.analysis.path_finder)": [[79, "pymatgen.analysis.path_finder.ChgcarPotential"]], "freevolumepotential (class in pymatgen.analysis.path_finder)": [[79, "pymatgen.analysis.path_finder.FreeVolumePotential"]], "mixedpotential (class in pymatgen.analysis.path_finder)": [[79, "pymatgen.analysis.path_finder.MixedPotential"]], "nebpathfinder (class in pymatgen.analysis.path_finder)": [[79, "pymatgen.analysis.path_finder.NEBPathfinder"]], "staticpotential (class in pymatgen.analysis.path_finder)": [[79, "pymatgen.analysis.path_finder.StaticPotential"]], "gaussian_smear() (staticpotential method)": [[79, "pymatgen.analysis.path_finder.StaticPotential.gaussian_smear"]], "get_v() (staticpotential method)": [[79, "pymatgen.analysis.path_finder.StaticPotential.get_v"]], "images (nebpathfinder property)": [[79, "pymatgen.analysis.path_finder.NEBPathfinder.images"]], "interpolate() (nebpathfinder method)": [[79, "pymatgen.analysis.path_finder.NEBPathfinder.interpolate"]], "normalize() (staticpotential method)": [[79, "pymatgen.analysis.path_finder.StaticPotential.normalize"]], "plot_images() (nebpathfinder method)": [[79, "pymatgen.analysis.path_finder.NEBPathfinder.plot_images"]], "pymatgen.analysis.path_finder": [[79, "module-pymatgen.analysis.path_finder"]], "rescale_field() (staticpotential method)": [[79, "pymatgen.analysis.path_finder.StaticPotential.rescale_field"]], "string_relax() (nebpathfinder static method)": [[79, "pymatgen.analysis.path_finder.NEBPathfinder.string_relax"]], "compoundphasediagram (class in pymatgen.analysis.phase_diagram)": [[80, "pymatgen.analysis.phase_diagram.CompoundPhaseDiagram"]], "grandpotpdentry (class in pymatgen.analysis.phase_diagram)": [[80, "pymatgen.analysis.phase_diagram.GrandPotPDEntry"]], "grandpotentialphasediagram (class in pymatgen.analysis.phase_diagram)": [[80, "pymatgen.analysis.phase_diagram.GrandPotentialPhaseDiagram"]], "pdentry (class in pymatgen.analysis.phase_diagram)": [[80, "pymatgen.analysis.phase_diagram.PDEntry"]], "pdplotter (class in pymatgen.analysis.phase_diagram)": [[80, "pymatgen.analysis.phase_diagram.PDPlotter"]], "patchedphasediagram (class in pymatgen.analysis.phase_diagram)": [[80, "pymatgen.analysis.phase_diagram.PatchedPhaseDiagram"]], "phasediagram (class in pymatgen.analysis.phase_diagram)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram"]], "phasediagramerror": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagramError"]], "reactiondiagram (class in pymatgen.analysis.phase_diagram)": [[80, "pymatgen.analysis.phase_diagram.ReactionDiagram"]], "transformedpdentry (class in pymatgen.analysis.phase_diagram)": [[80, "pymatgen.analysis.phase_diagram.TransformedPDEntry"]], "transformedpdentryerror": [[80, "pymatgen.analysis.phase_diagram.TransformedPDEntryError"]], "all_entries (patchedphasediagram attribute)": [[80, "pymatgen.analysis.phase_diagram.PatchedPhaseDiagram.all_entries"]], "all_entries (phasediagram attribute)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.all_entries"]], "all_entries_hulldata (phasediagram property)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.all_entries_hulldata"]], "amount_tol (compoundphasediagram attribute)": [[80, "pymatgen.analysis.phase_diagram.CompoundPhaseDiagram.amount_tol"]], "amount_tol (transformedpdentry attribute)": [[80, "pymatgen.analysis.phase_diagram.TransformedPDEntry.amount_tol"]], "as_dict() (compoundphasediagram method)": [[80, "pymatgen.analysis.phase_diagram.CompoundPhaseDiagram.as_dict"]], "as_dict() (grandpotpdentry method)": [[80, "pymatgen.analysis.phase_diagram.GrandPotPDEntry.as_dict"]], "as_dict() (grandpotentialphasediagram method)": [[80, "pymatgen.analysis.phase_diagram.GrandPotentialPhaseDiagram.as_dict"]], "as_dict() (pdentry method)": [[80, "pymatgen.analysis.phase_diagram.PDEntry.as_dict"]], "as_dict() (patchedphasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PatchedPhaseDiagram.as_dict"]], "as_dict() (phasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.as_dict"]], "as_dict() (transformedpdentry method)": [[80, "pymatgen.analysis.phase_diagram.TransformedPDEntry.as_dict"]], "attribute (pdentry attribute)": [[80, "pymatgen.analysis.phase_diagram.PDEntry.attribute"]], "chemical_energy (grandpotpdentry property)": [[80, "pymatgen.analysis.phase_diagram.GrandPotPDEntry.chemical_energy"]], "composition (grandpotpdentry property)": [[80, "pymatgen.analysis.phase_diagram.GrandPotPDEntry.composition"]], "composition (pdentry attribute)": [[80, "pymatgen.analysis.phase_diagram.PDEntry.composition"]], "composition (transformedpdentry property)": [[80, "pymatgen.analysis.phase_diagram.TransformedPDEntry.composition"]], "dim (phasediagram attribute)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.dim"]], "el_refs (patchedphasediagram attribute)": [[80, "pymatgen.analysis.phase_diagram.PatchedPhaseDiagram.el_refs"]], "el_refs (phasediagram attribute)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.el_refs"]], "elements (patchedphasediagram attribute)": [[80, "pymatgen.analysis.phase_diagram.PatchedPhaseDiagram.elements"]], "elements (phasediagram attribute)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.elements"]], "energy (grandpotpdentry property)": [[80, "pymatgen.analysis.phase_diagram.GrandPotPDEntry.energy"]], "energy (pdentry attribute)": [[80, "pymatgen.analysis.phase_diagram.PDEntry.energy"]], "energy (pdentry property)": [[80, "id0"]], "facets (phasediagram attribute)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.facets"]], "formation_energy_tol (phasediagram attribute)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.formation_energy_tol"]], "from_dict() (compoundphasediagram class method)": [[80, "pymatgen.analysis.phase_diagram.CompoundPhaseDiagram.from_dict"]], "from_dict() (grandpotpdentry class method)": [[80, "pymatgen.analysis.phase_diagram.GrandPotPDEntry.from_dict"]], "from_dict() (grandpotentialphasediagram class method)": [[80, "pymatgen.analysis.phase_diagram.GrandPotentialPhaseDiagram.from_dict"]], "from_dict() (pdentry class method)": [[80, "pymatgen.analysis.phase_diagram.PDEntry.from_dict"]], "from_dict() (patchedphasediagram class method)": [[80, "pymatgen.analysis.phase_diagram.PatchedPhaseDiagram.from_dict"]], "from_dict() (phasediagram class method)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.from_dict"]], "from_dict() (transformedpdentry class method)": [[80, "pymatgen.analysis.phase_diagram.TransformedPDEntry.from_dict"]], "get_all_chempots() (patchedphasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PatchedPhaseDiagram.get_all_chempots"]], "get_all_chempots() (phasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.get_all_chempots"]], "get_chempot_range_map() (patchedphasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PatchedPhaseDiagram.get_chempot_range_map"]], "get_chempot_range_map() (phasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.get_chempot_range_map"]], "get_chempot_range_map_plot() (pdplotter method)": [[80, "pymatgen.analysis.phase_diagram.PDPlotter.get_chempot_range_map_plot"]], "get_chempot_range_stability_phase() (patchedphasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PatchedPhaseDiagram.get_chempot_range_stability_phase"]], "get_chempot_range_stability_phase() (phasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.get_chempot_range_stability_phase"]], "get_composition_chempots() (patchedphasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PatchedPhaseDiagram.get_composition_chempots"]], "get_composition_chempots() (phasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.get_composition_chempots"]], "get_compound_pd() (reactiondiagram method)": [[80, "pymatgen.analysis.phase_diagram.ReactionDiagram.get_compound_pd"]], "get_contour_pd_plot() (pdplotter method)": [[80, "pymatgen.analysis.phase_diagram.PDPlotter.get_contour_pd_plot"]], "get_critical_compositions() (patchedphasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PatchedPhaseDiagram.get_critical_compositions"]], "get_critical_compositions() (phasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.get_critical_compositions"]], "get_decomp_and_e_above_hull() (patchedphasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PatchedPhaseDiagram.get_decomp_and_e_above_hull"]], "get_decomp_and_e_above_hull() (phasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.get_decomp_and_e_above_hull"]], "get_decomp_and_hull_energy_per_atom() (phasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.get_decomp_and_hull_energy_per_atom"]], "get_decomp_and_phase_separation_energy() (phasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.get_decomp_and_phase_separation_energy"]], "get_decomposition() (patchedphasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PatchedPhaseDiagram.get_decomposition"]], "get_decomposition() (phasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.get_decomposition"]], "get_e_above_hull() (phasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.get_e_above_hull"]], "get_element_profile() (patchedphasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PatchedPhaseDiagram.get_element_profile"]], "get_element_profile() (phasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.get_element_profile"]], "get_equilibrium_reaction_energy() (patchedphasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PatchedPhaseDiagram.get_equilibrium_reaction_energy"]], "get_equilibrium_reaction_energy() (phasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.get_equilibrium_reaction_energy"]], "get_facets() (in module pymatgen.analysis.phase_diagram)": [[80, "pymatgen.analysis.phase_diagram.get_facets"]], "get_form_energy() (phasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.get_form_energy"]], "get_form_energy_per_atom() (phasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.get_form_energy_per_atom"]], "get_hull_energy() (phasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.get_hull_energy"]], "get_hull_energy_per_atom() (phasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.get_hull_energy_per_atom"]], "get_pd_for_entry() (patchedphasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PatchedPhaseDiagram.get_pd_for_entry"]], "get_phase_separation_energy() (phasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.get_phase_separation_energy"]], "get_plot() (pdplotter method)": [[80, "pymatgen.analysis.phase_diagram.PDPlotter.get_plot"]], "get_plot() (phasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.get_plot"]], "get_reference_energy_per_atom() (phasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.get_reference_energy_per_atom"]], "get_transition_chempots() (patchedphasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PatchedPhaseDiagram.get_transition_chempots"]], "get_transition_chempots() (phasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.get_transition_chempots"]], "getmu_vertices_stability_phase() (patchedphasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PatchedPhaseDiagram.getmu_vertices_stability_phase"]], "getmu_vertices_stability_phase() (phasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.getmu_vertices_stability_phase"]], "min_entries (patchedphasediagram attribute)": [[80, "pymatgen.analysis.phase_diagram.PatchedPhaseDiagram.min_entries"]], "name (pdentry attribute)": [[80, "pymatgen.analysis.phase_diagram.PDEntry.name"]], "numerical_tol (phasediagram attribute)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.numerical_tol"]], "order_phase_diagram() (in module pymatgen.analysis.phase_diagram)": [[80, "pymatgen.analysis.phase_diagram.order_phase_diagram"]], "pd_coords() (phasediagram method)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.pd_coords"]], "pd_plot_data (pdplotter property)": [[80, "pymatgen.analysis.phase_diagram.PDPlotter.pd_plot_data"]], "plot_chempot_range_map() (pdplotter method)": [[80, "pymatgen.analysis.phase_diagram.PDPlotter.plot_chempot_range_map"]], "plot_element_profile() (pdplotter method)": [[80, "pymatgen.analysis.phase_diagram.PDPlotter.plot_element_profile"]], "pymatgen.analysis.phase_diagram": [[80, "module-pymatgen.analysis.phase_diagram"]], "qhull_data (phasediagram attribute)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.qhull_data"]], "qhull_entries (phasediagram attribute)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.qhull_entries"]], "show() (pdplotter method)": [[80, "pymatgen.analysis.phase_diagram.PDPlotter.show"]], "simplices (phasediagram attribute)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.simplices"]], "stable_entries (phasediagram property)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.stable_entries"]], "tet_coord() (in module pymatgen.analysis.phase_diagram)": [[80, "pymatgen.analysis.phase_diagram.tet_coord"]], "transform_entries() (compoundphasediagram method)": [[80, "pymatgen.analysis.phase_diagram.CompoundPhaseDiagram.transform_entries"]], "triangular_coord() (in module pymatgen.analysis.phase_diagram)": [[80, "pymatgen.analysis.phase_diagram.triangular_coord"]], "uniquelines() (in module pymatgen.analysis.phase_diagram)": [[80, "pymatgen.analysis.phase_diagram.uniquelines"]], "unstable_entries (phasediagram property)": [[80, "pymatgen.analysis.phase_diagram.PhaseDiagram.unstable_entries"]], "write_image() (pdplotter method)": [[80, "pymatgen.analysis.phase_diagram.PDPlotter.write_image"]], "piezotensor (class in pymatgen.analysis.piezo)": [[81, "pymatgen.analysis.piezo.PiezoTensor"]], "from_vasp_voigt() (piezotensor class method)": [[81, "pymatgen.analysis.piezo.PiezoTensor.from_vasp_voigt"]], "pymatgen.analysis.piezo": [[81, "module-pymatgen.analysis.piezo"]], "borneffectivecharge (class in pymatgen.analysis.piezo_sensitivity)": [[82, "pymatgen.analysis.piezo_sensitivity.BornEffectiveCharge"]], "forceconstantmatrix (class in pymatgen.analysis.piezo_sensitivity)": [[82, "pymatgen.analysis.piezo_sensitivity.ForceConstantMatrix"]], "internalstraintensor (class in pymatgen.analysis.piezo_sensitivity)": [[82, "pymatgen.analysis.piezo_sensitivity.InternalStrainTensor"]], "get_bec_operations() (borneffectivecharge method)": [[82, "pymatgen.analysis.piezo_sensitivity.BornEffectiveCharge.get_BEC_operations"]], "get_fcm_operations() (forceconstantmatrix method)": [[82, "pymatgen.analysis.piezo_sensitivity.ForceConstantMatrix.get_FCM_operations"]], "get_ist_operations() (internalstraintensor method)": [[82, "pymatgen.analysis.piezo_sensitivity.InternalStrainTensor.get_IST_operations"]], "get_asum_fcm() (forceconstantmatrix method)": [[82, "pymatgen.analysis.piezo_sensitivity.ForceConstantMatrix.get_asum_FCM"]], "get_piezo() (in module pymatgen.analysis.piezo_sensitivity)": [[82, "pymatgen.analysis.piezo_sensitivity.get_piezo"]], "get_rand_bec() (borneffectivecharge method)": [[82, "pymatgen.analysis.piezo_sensitivity.BornEffectiveCharge.get_rand_BEC"]], "get_rand_fcm() (forceconstantmatrix method)": [[82, "pymatgen.analysis.piezo_sensitivity.ForceConstantMatrix.get_rand_FCM"]], "get_rand_ist() (internalstraintensor method)": [[82, "pymatgen.analysis.piezo_sensitivity.InternalStrainTensor.get_rand_IST"]], "get_stable_fcm() (forceconstantmatrix method)": [[82, "pymatgen.analysis.piezo_sensitivity.ForceConstantMatrix.get_stable_FCM"]], "get_symmetrized_fcm() (forceconstantmatrix method)": [[82, "pymatgen.analysis.piezo_sensitivity.ForceConstantMatrix.get_symmetrized_FCM"]], "get_unstable_fcm() (forceconstantmatrix method)": [[82, "pymatgen.analysis.piezo_sensitivity.ForceConstantMatrix.get_unstable_FCM"]], "pymatgen.analysis.piezo_sensitivity": [[82, "module-pymatgen.analysis.piezo_sensitivity"]], "rand_piezo() (in module pymatgen.analysis.piezo_sensitivity)": [[82, "pymatgen.analysis.piezo_sensitivity.rand_piezo"]], "ionentry (class in pymatgen.analysis.pourbaix_diagram)": [[83, "pymatgen.analysis.pourbaix_diagram.IonEntry"]], "multientry (class in pymatgen.analysis.pourbaix_diagram)": [[83, "pymatgen.analysis.pourbaix_diagram.MultiEntry"]], "pourbaixdiagram (class in pymatgen.analysis.pourbaix_diagram)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixDiagram"]], "pourbaixentry (class in pymatgen.analysis.pourbaix_diagram)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixEntry"]], "pourbaixplotter (class in pymatgen.analysis.pourbaix_diagram)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixPlotter"]], "all_entries (pourbaixdiagram property)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixDiagram.all_entries"]], "as_dict() (ionentry method)": [[83, "pymatgen.analysis.pourbaix_diagram.IonEntry.as_dict"]], "as_dict() (multientry method)": [[83, "pymatgen.analysis.pourbaix_diagram.MultiEntry.as_dict"]], "as_dict() (pourbaixdiagram method)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixDiagram.as_dict"]], "as_dict() (pourbaixentry method)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixEntry.as_dict"]], "composition (pourbaixentry property)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixEntry.composition"]], "conc_term (pourbaixentry property)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixEntry.conc_term"]], "domain_vertices() (pourbaixplotter method)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixPlotter.domain_vertices"]], "energy (pourbaixentry property)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixEntry.energy"]], "energy_at_conditions() (pourbaixentry method)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixEntry.energy_at_conditions"]], "energy_per_atom (pourbaixentry property)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixEntry.energy_per_atom"]], "find_stable_entry() (pourbaixdiagram method)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixDiagram.find_stable_entry"]], "from_dict() (ionentry class method)": [[83, "pymatgen.analysis.pourbaix_diagram.IonEntry.from_dict"]], "from_dict() (multientry class method)": [[83, "pymatgen.analysis.pourbaix_diagram.MultiEntry.from_dict"]], "from_dict() (pourbaixdiagram class method)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixDiagram.from_dict"]], "from_dict() (pourbaixentry class method)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixEntry.from_dict"]], "generate_entry_label() (in module pymatgen.analysis.pourbaix_diagram)": [[83, "pymatgen.analysis.pourbaix_diagram.generate_entry_label"]], "get_decomposition_energy() (pourbaixdiagram method)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixDiagram.get_decomposition_energy"]], "get_element_fraction() (pourbaixentry method)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixEntry.get_element_fraction"]], "get_hull_energy() (pourbaixdiagram method)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixDiagram.get_hull_energy"]], "get_pourbaix_domains() (pourbaixdiagram static method)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixDiagram.get_pourbaix_domains"]], "get_pourbaix_plot() (pourbaixplotter method)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixPlotter.get_pourbaix_plot"]], "get_stable_entry() (pourbaixdiagram method)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixDiagram.get_stable_entry"]], "ion_or_solid_comp_object() (in module pymatgen.analysis.pourbaix_diagram)": [[83, "pymatgen.analysis.pourbaix_diagram.ion_or_solid_comp_object"]], "nh2o (pourbaixentry property)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixEntry.nH2O"]], "nphi (pourbaixentry property)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixEntry.nPhi"]], "name (ionentry attribute)": [[83, "pymatgen.analysis.pourbaix_diagram.IonEntry.name"]], "name (multientry property)": [[83, "pymatgen.analysis.pourbaix_diagram.MultiEntry.name"]], "name (pourbaixentry property)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixEntry.name"]], "normalization_factor (pourbaixentry property)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixEntry.normalization_factor"]], "normalized_energy (pourbaixentry property)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixEntry.normalized_energy"]], "normalized_energy_at_conditions() (pourbaixentry method)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixEntry.normalized_energy_at_conditions"]], "nph (pourbaixentry property)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixEntry.npH"]], "num_atoms (pourbaixentry property)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixEntry.num_atoms"]], "plot_entry_stability() (pourbaixplotter method)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixPlotter.plot_entry_stability"]], "process_multientry() (pourbaixdiagram static method)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixDiagram.process_multientry"]], "pymatgen.analysis.pourbaix_diagram": [[83, "module-pymatgen.analysis.pourbaix_diagram"]], "show() (pourbaixplotter method)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixPlotter.show"]], "stable_entries (pourbaixdiagram property)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixDiagram.stable_entries"]], "to_pretty_string() (pourbaixentry method)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixEntry.to_pretty_string"]], "unprocessed_entries (pourbaixdiagram property)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixDiagram.unprocessed_entries"]], "unstable_entries (pourbaixdiagram property)": [[83, "pymatgen.analysis.pourbaix_diagram.PourbaixDiagram.unstable_entries"]], "aflowprototypematcher (class in pymatgen.analysis.prototypes)": [[84, "pymatgen.analysis.prototypes.AflowPrototypeMatcher"]], "get_prototypes() (aflowprototypematcher method)": [[84, "pymatgen.analysis.prototypes.AflowPrototypeMatcher.get_prototypes"]], "pymatgen.analysis.prototypes": [[84, "module-pymatgen.analysis.prototypes"]], "quasiharmonicdebyeapprox (class in pymatgen.analysis.quasiharmonic)": [[85, "pymatgen.analysis.quasiharmonic.QuasiharmonicDebyeApprox"]], "debye_integral() (quasiharmonicdebyeapprox static method)": [[85, "pymatgen.analysis.quasiharmonic.QuasiharmonicDebyeApprox.debye_integral"]], "debye_temperature() (quasiharmonicdebyeapprox method)": [[85, "pymatgen.analysis.quasiharmonic.QuasiharmonicDebyeApprox.debye_temperature"]], "get_summary_dict() (quasiharmonicdebyeapprox method)": [[85, "pymatgen.analysis.quasiharmonic.QuasiharmonicDebyeApprox.get_summary_dict"]], "gruneisen_parameter() (quasiharmonicdebyeapprox method)": [[85, "pymatgen.analysis.quasiharmonic.QuasiharmonicDebyeApprox.gruneisen_parameter"]], "optimize_gibbs_free_energy() (quasiharmonicdebyeapprox method)": [[85, "pymatgen.analysis.quasiharmonic.QuasiharmonicDebyeApprox.optimize_gibbs_free_energy"]], "optimizer() (quasiharmonicdebyeapprox method)": [[85, "pymatgen.analysis.quasiharmonic.QuasiharmonicDebyeApprox.optimizer"]], "pymatgen.analysis.quasiharmonic": [[85, "module-pymatgen.analysis.quasiharmonic"]], "thermal_conductivity() (quasiharmonicdebyeapprox method)": [[85, "pymatgen.analysis.quasiharmonic.QuasiharmonicDebyeApprox.thermal_conductivity"]], "vibrational_free_energy() (quasiharmonicdebyeapprox method)": [[85, "pymatgen.analysis.quasiharmonic.QuasiharmonicDebyeApprox.vibrational_free_energy"]], "vibrational_internal_energy() (quasiharmonicdebyeapprox method)": [[85, "pymatgen.analysis.quasiharmonic.QuasiharmonicDebyeApprox.vibrational_internal_energy"]], "balancedreaction (class in pymatgen.analysis.reaction_calculator)": [[86, "pymatgen.analysis.reaction_calculator.BalancedReaction"]], "computedreaction (class in pymatgen.analysis.reaction_calculator)": [[86, "pymatgen.analysis.reaction_calculator.ComputedReaction"]], "reaction (class in pymatgen.analysis.reaction_calculator)": [[86, "pymatgen.analysis.reaction_calculator.Reaction"]], "reactionerror": [[86, "pymatgen.analysis.reaction_calculator.ReactionError"]], "tolerance (balancedreaction attribute)": [[86, "pymatgen.analysis.reaction_calculator.BalancedReaction.TOLERANCE"]], "all_comp (balancedreaction property)": [[86, "pymatgen.analysis.reaction_calculator.BalancedReaction.all_comp"]], "all_entries (computedreaction property)": [[86, "pymatgen.analysis.reaction_calculator.ComputedReaction.all_entries"]], "as_dict() (balancedreaction method)": [[86, "pymatgen.analysis.reaction_calculator.BalancedReaction.as_dict"]], "as_dict() (computedreaction method)": [[86, "pymatgen.analysis.reaction_calculator.ComputedReaction.as_dict"]], "as_dict() (reaction method)": [[86, "pymatgen.analysis.reaction_calculator.Reaction.as_dict"]], "as_entry() (balancedreaction method)": [[86, "pymatgen.analysis.reaction_calculator.BalancedReaction.as_entry"]], "calculate_energy() (balancedreaction method)": [[86, "pymatgen.analysis.reaction_calculator.BalancedReaction.calculate_energy"]], "calculated_reaction_energy (computedreaction property)": [[86, "pymatgen.analysis.reaction_calculator.ComputedReaction.calculated_reaction_energy"]], "calculated_reaction_energy_uncertainty (computedreaction property)": [[86, "pymatgen.analysis.reaction_calculator.ComputedReaction.calculated_reaction_energy_uncertainty"]], "coeffs (balancedreaction property)": [[86, "pymatgen.analysis.reaction_calculator.BalancedReaction.coeffs"]], "copy() (reaction method)": [[86, "pymatgen.analysis.reaction_calculator.Reaction.copy"]], "elements (balancedreaction property)": [[86, "pymatgen.analysis.reaction_calculator.BalancedReaction.elements"]], "from_dict() (balancedreaction class method)": [[86, "pymatgen.analysis.reaction_calculator.BalancedReaction.from_dict"]], "from_dict() (computedreaction class method)": [[86, "pymatgen.analysis.reaction_calculator.ComputedReaction.from_dict"]], "from_dict() (reaction class method)": [[86, "pymatgen.analysis.reaction_calculator.Reaction.from_dict"]], "from_string() (balancedreaction static method)": [[86, "pymatgen.analysis.reaction_calculator.BalancedReaction.from_string"]], "get_coeff() (balancedreaction method)": [[86, "pymatgen.analysis.reaction_calculator.BalancedReaction.get_coeff"]], "get_el_amount() (balancedreaction method)": [[86, "pymatgen.analysis.reaction_calculator.BalancedReaction.get_el_amount"]], "normalize_to() (balancedreaction method)": [[86, "pymatgen.analysis.reaction_calculator.BalancedReaction.normalize_to"]], "normalize_to_element() (balancedreaction method)": [[86, "pymatgen.analysis.reaction_calculator.BalancedReaction.normalize_to_element"]], "normalized_repr (balancedreaction property)": [[86, "pymatgen.analysis.reaction_calculator.BalancedReaction.normalized_repr"]], "normalized_repr_and_factor() (balancedreaction method)": [[86, "pymatgen.analysis.reaction_calculator.BalancedReaction.normalized_repr_and_factor"]], "products (balancedreaction property)": [[86, "pymatgen.analysis.reaction_calculator.BalancedReaction.products"]], "pymatgen.analysis.reaction_calculator": [[86, "module-pymatgen.analysis.reaction_calculator"]], "reactants (balancedreaction property)": [[86, "pymatgen.analysis.reaction_calculator.BalancedReaction.reactants"]], "pymatgen.analysis.solar": [[87, "module-pymatgen.analysis.solar"]], "absorption_coefficient() (in module pymatgen.analysis.solar.slme)": [[88, "pymatgen.analysis.solar.slme.absorption_coefficient"]], "get_dir_indir_gap() (in module pymatgen.analysis.solar.slme)": [[88, "pymatgen.analysis.solar.slme.get_dir_indir_gap"]], "matrix_eigvals() (in module pymatgen.analysis.solar.slme)": [[88, "pymatgen.analysis.solar.slme.matrix_eigvals"]], "optics() (in module pymatgen.analysis.solar.slme)": [[88, "pymatgen.analysis.solar.slme.optics"]], "parse_dielectric_data() (in module pymatgen.analysis.solar.slme)": [[88, "pymatgen.analysis.solar.slme.parse_dielectric_data"]], "pymatgen.analysis.solar.slme": [[88, "module-pymatgen.analysis.solar.slme"]], "slme() (in module pymatgen.analysis.solar.slme)": [[88, "pymatgen.analysis.solar.slme.slme"]], "to_matrix() (in module pymatgen.analysis.solar.slme)": [[88, "pymatgen.analysis.solar.slme.to_matrix"]], "oxidetype (class in pymatgen.analysis.structure_analyzer)": [[89, "pymatgen.analysis.structure_analyzer.OxideType"]], "relaxationanalyzer (class in pymatgen.analysis.structure_analyzer)": [[89, "pymatgen.analysis.structure_analyzer.RelaxationAnalyzer"]], "voronoianalyzer (class in pymatgen.analysis.structure_analyzer)": [[89, "pymatgen.analysis.structure_analyzer.VoronoiAnalyzer"]], "voronoiconnectivity (class in pymatgen.analysis.structure_analyzer)": [[89, "pymatgen.analysis.structure_analyzer.VoronoiConnectivity"]], "analyze() (voronoianalyzer method)": [[89, "pymatgen.analysis.structure_analyzer.VoronoiAnalyzer.analyze"]], "analyze_structures() (voronoianalyzer method)": [[89, "pymatgen.analysis.structure_analyzer.VoronoiAnalyzer.analyze_structures"]], "average_coordination_number() (in module pymatgen.analysis.structure_analyzer)": [[89, "pymatgen.analysis.structure_analyzer.average_coordination_number"]], "connectivity_array (voronoiconnectivity property)": [[89, "pymatgen.analysis.structure_analyzer.VoronoiConnectivity.connectivity_array"]], "contains_peroxide() (in module pymatgen.analysis.structure_analyzer)": [[89, "pymatgen.analysis.structure_analyzer.contains_peroxide"]], "get_connections() (voronoiconnectivity method)": [[89, "pymatgen.analysis.structure_analyzer.VoronoiConnectivity.get_connections"]], "get_max_bond_lengths() (in module pymatgen.analysis.structure_analyzer)": [[89, "pymatgen.analysis.structure_analyzer.get_max_bond_lengths"]], "get_percentage_bond_dist_changes() (relaxationanalyzer method)": [[89, "pymatgen.analysis.structure_analyzer.RelaxationAnalyzer.get_percentage_bond_dist_changes"]], "get_percentage_lattice_parameter_changes() (relaxationanalyzer method)": [[89, "pymatgen.analysis.structure_analyzer.RelaxationAnalyzer.get_percentage_lattice_parameter_changes"]], "get_percentage_volume_change() (relaxationanalyzer method)": [[89, "pymatgen.analysis.structure_analyzer.RelaxationAnalyzer.get_percentage_volume_change"]], "get_sitej() (voronoiconnectivity method)": [[89, "pymatgen.analysis.structure_analyzer.VoronoiConnectivity.get_sitej"]], "max_connectivity (voronoiconnectivity property)": [[89, "pymatgen.analysis.structure_analyzer.VoronoiConnectivity.max_connectivity"]], "oxide_type() (in module pymatgen.analysis.structure_analyzer)": [[89, "pymatgen.analysis.structure_analyzer.oxide_type"]], "parse_oxide() (oxidetype method)": [[89, "pymatgen.analysis.structure_analyzer.OxideType.parse_oxide"]], "plot_vor_analysis() (voronoianalyzer static method)": [[89, "pymatgen.analysis.structure_analyzer.VoronoiAnalyzer.plot_vor_analysis"]], "pymatgen.analysis.structure_analyzer": [[89, "module-pymatgen.analysis.structure_analyzer"]], "solid_angle() (in module pymatgen.analysis.structure_analyzer)": [[89, "pymatgen.analysis.structure_analyzer.solid_angle"]], "sulfide_type() (in module pymatgen.analysis.structure_analyzer)": [[89, "pymatgen.analysis.structure_analyzer.sulfide_type"]], "abstractcomparator (class in pymatgen.analysis.structure_matcher)": [[90, "pymatgen.analysis.structure_matcher.AbstractComparator"]], "elementcomparator (class in pymatgen.analysis.structure_matcher)": [[90, "pymatgen.analysis.structure_matcher.ElementComparator"]], "frameworkcomparator (class in pymatgen.analysis.structure_matcher)": [[90, "pymatgen.analysis.structure_matcher.FrameworkComparator"]], "occupancycomparator (class in pymatgen.analysis.structure_matcher)": [[90, "pymatgen.analysis.structure_matcher.OccupancyComparator"]], "orderdisorderelementcomparator (class in pymatgen.analysis.structure_matcher)": [[90, "pymatgen.analysis.structure_matcher.OrderDisorderElementComparator"]], "speciescomparator (class in pymatgen.analysis.structure_matcher)": [[90, "pymatgen.analysis.structure_matcher.SpeciesComparator"]], "spincomparator (class in pymatgen.analysis.structure_matcher)": [[90, "pymatgen.analysis.structure_matcher.SpinComparator"]], "structurematcher (class in pymatgen.analysis.structure_matcher)": [[90, "pymatgen.analysis.structure_matcher.StructureMatcher"]], "are_equal() (abstractcomparator method)": [[90, "pymatgen.analysis.structure_matcher.AbstractComparator.are_equal"]], "are_equal() (elementcomparator method)": [[90, "pymatgen.analysis.structure_matcher.ElementComparator.are_equal"]], "are_equal() (frameworkcomparator method)": [[90, "pymatgen.analysis.structure_matcher.FrameworkComparator.are_equal"]], "are_equal() (occupancycomparator method)": [[90, "pymatgen.analysis.structure_matcher.OccupancyComparator.are_equal"]], "are_equal() (orderdisorderelementcomparator method)": [[90, "pymatgen.analysis.structure_matcher.OrderDisorderElementComparator.are_equal"]], "are_equal() (speciescomparator method)": [[90, "pymatgen.analysis.structure_matcher.SpeciesComparator.are_equal"]], "are_equal() (spincomparator method)": [[90, "pymatgen.analysis.structure_matcher.SpinComparator.are_equal"]], "as_dict() (abstractcomparator method)": [[90, "pymatgen.analysis.structure_matcher.AbstractComparator.as_dict"]], "as_dict() (structurematcher method)": [[90, "pymatgen.analysis.structure_matcher.StructureMatcher.as_dict"]], "fit() (structurematcher method)": [[90, "pymatgen.analysis.structure_matcher.StructureMatcher.fit"]], "fit_anonymous() (structurematcher method)": [[90, "pymatgen.analysis.structure_matcher.StructureMatcher.fit_anonymous"]], "from_dict() (abstractcomparator class method)": [[90, "pymatgen.analysis.structure_matcher.AbstractComparator.from_dict"]], "from_dict() (structurematcher class method)": [[90, "pymatgen.analysis.structure_matcher.StructureMatcher.from_dict"]], "get_all_anonymous_mappings() (structurematcher method)": [[90, "pymatgen.analysis.structure_matcher.StructureMatcher.get_all_anonymous_mappings"]], "get_best_electronegativity_anonymous_mapping() (structurematcher method)": [[90, "pymatgen.analysis.structure_matcher.StructureMatcher.get_best_electronegativity_anonymous_mapping"]], "get_hash() (abstractcomparator method)": [[90, "pymatgen.analysis.structure_matcher.AbstractComparator.get_hash"]], "get_hash() (elementcomparator method)": [[90, "pymatgen.analysis.structure_matcher.ElementComparator.get_hash"]], "get_hash() (frameworkcomparator method)": [[90, "pymatgen.analysis.structure_matcher.FrameworkComparator.get_hash"]], "get_hash() (occupancycomparator method)": [[90, "pymatgen.analysis.structure_matcher.OccupancyComparator.get_hash"]], "get_hash() (orderdisorderelementcomparator method)": [[90, "pymatgen.analysis.structure_matcher.OrderDisorderElementComparator.get_hash"]], "get_hash() (speciescomparator method)": [[90, "pymatgen.analysis.structure_matcher.SpeciesComparator.get_hash"]], "get_hash() (spincomparator method)": [[90, "pymatgen.analysis.structure_matcher.SpinComparator.get_hash"]], "get_mapping() (structurematcher method)": [[90, "pymatgen.analysis.structure_matcher.StructureMatcher.get_mapping"]], "get_rms_anonymous() (structurematcher method)": [[90, "pymatgen.analysis.structure_matcher.StructureMatcher.get_rms_anonymous"]], "get_rms_dist() (structurematcher method)": [[90, "pymatgen.analysis.structure_matcher.StructureMatcher.get_rms_dist"]], "get_s2_like_s1() (structurematcher method)": [[90, "pymatgen.analysis.structure_matcher.StructureMatcher.get_s2_like_s1"]], "get_supercell_matrix() (structurematcher method)": [[90, "pymatgen.analysis.structure_matcher.StructureMatcher.get_supercell_matrix"]], "get_transformation() (structurematcher method)": [[90, "pymatgen.analysis.structure_matcher.StructureMatcher.get_transformation"]], "group_structures() (structurematcher method)": [[90, "pymatgen.analysis.structure_matcher.StructureMatcher.group_structures"]], "pymatgen.analysis.structure_matcher": [[90, "module-pymatgen.analysis.structure_matcher"]], "pymatgen.analysis.structure_prediction": [[91, "module-pymatgen.analysis.structure_prediction"]], "get_dopants_from_shannon_radii() (in module pymatgen.analysis.structure_prediction.dopant_predictor)": [[92, "pymatgen.analysis.structure_prediction.dopant_predictor.get_dopants_from_shannon_radii"]], "get_dopants_from_substitution_probabilities() (in module pymatgen.analysis.structure_prediction.dopant_predictor)": [[92, "pymatgen.analysis.structure_prediction.dopant_predictor.get_dopants_from_substitution_probabilities"]], "pymatgen.analysis.structure_prediction.dopant_predictor": [[92, "module-pymatgen.analysis.structure_prediction.dopant_predictor"]], "substitutionpredictor (class in pymatgen.analysis.structure_prediction.substitution_probability)": [[93, "pymatgen.analysis.structure_prediction.substitution_probability.SubstitutionPredictor"]], "substitutionprobability (class in pymatgen.analysis.structure_prediction.substitution_probability)": [[93, "pymatgen.analysis.structure_prediction.substitution_probability.SubstitutionProbability"]], "composition_prediction() (substitutionpredictor method)": [[93, "pymatgen.analysis.structure_prediction.substitution_probability.SubstitutionPredictor.composition_prediction"]], "list_prediction() (substitutionpredictor method)": [[93, "pymatgen.analysis.structure_prediction.substitution_probability.SubstitutionPredictor.list_prediction"]], "pymatgen.analysis.structure_prediction.substitution_probability": [[93, "module-pymatgen.analysis.structure_prediction.substitution_probability"]], "substitutor (class in pymatgen.analysis.structure_prediction.substitutor)": [[94, "pymatgen.analysis.structure_prediction.substitutor.Substitutor"]], "as_dict() (substitutor method)": [[94, "pymatgen.analysis.structure_prediction.substitutor.Substitutor.as_dict"]], "from_dict() (substitutor class method)": [[94, "pymatgen.analysis.structure_prediction.substitutor.Substitutor.from_dict"]], "get_allowed_species() (substitutor method)": [[94, "pymatgen.analysis.structure_prediction.substitutor.Substitutor.get_allowed_species"]], "pred_from_comp() (substitutor method)": [[94, "pymatgen.analysis.structure_prediction.substitutor.Substitutor.pred_from_comp"]], "pred_from_list() (substitutor method)": [[94, "pymatgen.analysis.structure_prediction.substitutor.Substitutor.pred_from_list"]], "pred_from_structures() (substitutor method)": [[94, "pymatgen.analysis.structure_prediction.substitutor.Substitutor.pred_from_structures"]], "pymatgen.analysis.structure_prediction.substitutor": [[94, "module-pymatgen.analysis.structure_prediction.substitutor"]], "dlsvolumepredictor (class in pymatgen.analysis.structure_prediction.volume_predictor)": [[95, "pymatgen.analysis.structure_prediction.volume_predictor.DLSVolumePredictor"]], "rlsvolumepredictor (class in pymatgen.analysis.structure_prediction.volume_predictor)": [[95, "pymatgen.analysis.structure_prediction.volume_predictor.RLSVolumePredictor"]], "get_predicted_structure() (dlsvolumepredictor method)": [[95, "pymatgen.analysis.structure_prediction.volume_predictor.DLSVolumePredictor.get_predicted_structure"]], "get_predicted_structure() (rlsvolumepredictor method)": [[95, "pymatgen.analysis.structure_prediction.volume_predictor.RLSVolumePredictor.get_predicted_structure"]], "predict() (dlsvolumepredictor method)": [[95, "pymatgen.analysis.structure_prediction.volume_predictor.DLSVolumePredictor.predict"]], "predict() (rlsvolumepredictor method)": [[95, "pymatgen.analysis.structure_prediction.volume_predictor.RLSVolumePredictor.predict"]], "pymatgen.analysis.structure_prediction.volume_predictor": [[95, "module-pymatgen.analysis.structure_prediction.volume_predictor"]], "be_vs_clean_se() (surfaceenergyplotter method)": [[96, "pymatgen.analysis.surface_analysis.SurfaceEnergyPlotter.BE_vs_clean_SE"]], "nads_in_slab (slabentry property)": [[96, "pymatgen.analysis.surface_analysis.SlabEntry.Nads_in_slab"]], "nanoscalestability (class in pymatgen.analysis.surface_analysis)": [[96, "pymatgen.analysis.surface_analysis.NanoscaleStability"]], "nsurfs_ads_in_slab (slabentry property)": [[96, "pymatgen.analysis.surface_analysis.SlabEntry.Nsurfs_ads_in_slab"]], "slabentry (class in pymatgen.analysis.surface_analysis)": [[96, "pymatgen.analysis.surface_analysis.SlabEntry"]], "surfaceenergyplotter (class in pymatgen.analysis.surface_analysis)": [[96, "pymatgen.analysis.surface_analysis.SurfaceEnergyPlotter"]], "workfunctionanalyzer (class in pymatgen.analysis.surface_analysis)": [[96, "pymatgen.analysis.surface_analysis.WorkFunctionAnalyzer"]], "adsorbates (slabentry attribute)": [[96, "pymatgen.analysis.surface_analysis.SlabEntry.adsorbates"]], "all_slab_entries (surfaceenergyplotter attribute)": [[96, "pymatgen.analysis.surface_analysis.SurfaceEnergyPlotter.all_slab_entries"]], "along_c (workfunctionanalyzer attribute)": [[96, "pymatgen.analysis.surface_analysis.WorkFunctionAnalyzer.along_c"]], "area_frac_vs_chempot_plot() (surfaceenergyplotter method)": [[96, "pymatgen.analysis.surface_analysis.SurfaceEnergyPlotter.area_frac_vs_chempot_plot"]], "as_dict() (slabentry method)": [[96, "pymatgen.analysis.surface_analysis.SlabEntry.as_dict"]], "ave_bulk_p (workfunctionanalyzer attribute)": [[96, "pymatgen.analysis.surface_analysis.WorkFunctionAnalyzer.ave_bulk_p"]], "ave_locpot (workfunctionanalyzer attribute)": [[96, "pymatgen.analysis.surface_analysis.WorkFunctionAnalyzer.ave_locpot"]], "bulk_gform() (nanoscalestability static method)": [[96, "pymatgen.analysis.surface_analysis.NanoscaleStability.bulk_gform"]], "chempot_plot_addons() (surfaceenergyplotter static method)": [[96, "pymatgen.analysis.surface_analysis.SurfaceEnergyPlotter.chempot_plot_addons"]], "chempot_vs_gamma() (surfaceenergyplotter method)": [[96, "pymatgen.analysis.surface_analysis.SurfaceEnergyPlotter.chempot_vs_gamma"]], "chempot_vs_gamma_plot_one() (surfaceenergyplotter method)": [[96, "pymatgen.analysis.surface_analysis.SurfaceEnergyPlotter.chempot_vs_gamma_plot_one"]], "cleaned_up_slab (slabentry property)": [[96, "pymatgen.analysis.surface_analysis.SlabEntry.cleaned_up_slab"]], "color_dict (surfaceenergyplotter attribute)": [[96, "pymatgen.analysis.surface_analysis.SurfaceEnergyPlotter.color_dict"]], "color_palette_dict() (surfaceenergyplotter method)": [[96, "pymatgen.analysis.surface_analysis.SurfaceEnergyPlotter.color_palette_dict"]], "create_slab_label (slabentry property)": [[96, "pymatgen.analysis.surface_analysis.SlabEntry.create_slab_label"]], "efermi (workfunctionanalyzer attribute)": [[96, "pymatgen.analysis.surface_analysis.WorkFunctionAnalyzer.efermi"]], "entry_dict_from_list() (in module pymatgen.analysis.surface_analysis)": [[96, "pymatgen.analysis.surface_analysis.entry_dict_from_list"]], "from_computed_structure_entry() (slabentry static method)": [[96, "pymatgen.analysis.surface_analysis.SlabEntry.from_computed_structure_entry"]], "from_dict() (slabentry class method)": [[96, "pymatgen.analysis.surface_analysis.SlabEntry.from_dict"]], "from_files() (workfunctionanalyzer static method)": [[96, "pymatgen.analysis.surface_analysis.WorkFunctionAnalyzer.from_files"]], "get_labels() (workfunctionanalyzer method)": [[96, "pymatgen.analysis.surface_analysis.WorkFunctionAnalyzer.get_labels"]], "get_locpot_along_slab_plot() (workfunctionanalyzer method)": [[96, "pymatgen.analysis.surface_analysis.WorkFunctionAnalyzer.get_locpot_along_slab_plot"]], "get_monolayer (slabentry property)": [[96, "pymatgen.analysis.surface_analysis.SlabEntry.get_monolayer"]], "get_stable_entry_at_u() (surfaceenergyplotter method)": [[96, "pymatgen.analysis.surface_analysis.SurfaceEnergyPlotter.get_stable_entry_at_u"]], "get_surface_equilibrium() (surfaceenergyplotter method)": [[96, "pymatgen.analysis.surface_analysis.SurfaceEnergyPlotter.get_surface_equilibrium"]], "get_unit_primitive_area (slabentry property)": [[96, "pymatgen.analysis.surface_analysis.SlabEntry.get_unit_primitive_area"]], "gibbs_binding_energy() (slabentry method)": [[96, "pymatgen.analysis.surface_analysis.SlabEntry.gibbs_binding_energy"]], "is_converged() (workfunctionanalyzer method)": [[96, "pymatgen.analysis.surface_analysis.WorkFunctionAnalyzer.is_converged"]], "label (slabentry attribute)": [[96, "pymatgen.analysis.surface_analysis.SlabEntry.label"]], "locpot_along_c (workfunctionanalyzer attribute)": [[96, "pymatgen.analysis.surface_analysis.WorkFunctionAnalyzer.locpot_along_c"]], "miller_index (slabentry attribute)": [[96, "pymatgen.analysis.surface_analysis.SlabEntry.miller_index"]], "monolayer_vs_be() (surfaceenergyplotter method)": [[96, "pymatgen.analysis.surface_analysis.SurfaceEnergyPlotter.monolayer_vs_BE"]], "plot_all_stability_map() (nanoscalestability method)": [[96, "pymatgen.analysis.surface_analysis.NanoscaleStability.plot_all_stability_map"]], "plot_one_stability_map() (nanoscalestability method)": [[96, "pymatgen.analysis.surface_analysis.NanoscaleStability.plot_one_stability_map"]], "pymatgen.analysis.surface_analysis": [[96, "module-pymatgen.analysis.surface_analysis"]], "ref_entries (surfaceenergyplotter attribute)": [[96, "pymatgen.analysis.surface_analysis.SurfaceEnergyPlotter.ref_entries"]], "scaled_wulff() (nanoscalestability method)": [[96, "pymatgen.analysis.surface_analysis.NanoscaleStability.scaled_wulff"]], "se_analyzers (nanoscalestability attribute)": [[96, "pymatgen.analysis.surface_analysis.NanoscaleStability.se_analyzers"]], "set_all_variables() (surfaceenergyplotter method)": [[96, "pymatgen.analysis.surface_analysis.SurfaceEnergyPlotter.set_all_variables"]], "slab (workfunctionanalyzer attribute)": [[96, "pymatgen.analysis.surface_analysis.WorkFunctionAnalyzer.slab"]], "solve_equilibrium_point() (nanoscalestability method)": [[96, "pymatgen.analysis.surface_analysis.NanoscaleStability.solve_equilibrium_point"]], "sorted_sites (workfunctionanalyzer attribute)": [[96, "pymatgen.analysis.surface_analysis.WorkFunctionAnalyzer.sorted_sites"]], "stable_u_range_dict() (surfaceenergyplotter method)": [[96, "pymatgen.analysis.surface_analysis.SurfaceEnergyPlotter.stable_u_range_dict"]], "sub_chempots() (in module pymatgen.analysis.surface_analysis)": [[96, "pymatgen.analysis.surface_analysis.sub_chempots"]], "surface_area (slabentry property)": [[96, "pymatgen.analysis.surface_analysis.SlabEntry.surface_area"]], "surface_chempot_range_map() (surfaceenergyplotter method)": [[96, "pymatgen.analysis.surface_analysis.SurfaceEnergyPlotter.surface_chempot_range_map"]], "surface_energy() (slabentry method)": [[96, "pymatgen.analysis.surface_analysis.SlabEntry.surface_energy"]], "symprec (nanoscalestability attribute)": [[96, "pymatgen.analysis.surface_analysis.NanoscaleStability.symprec"]], "ucell_entry (surfaceenergyplotter attribute)": [[96, "pymatgen.analysis.surface_analysis.SurfaceEnergyPlotter.ucell_entry"]], "vacuum_locpot (workfunctionanalyzer attribute)": [[96, "pymatgen.analysis.surface_analysis.WorkFunctionAnalyzer.vacuum_locpot"]], "work_function (workfunctionanalyzer attribute)": [[96, "pymatgen.analysis.surface_analysis.WorkFunctionAnalyzer.work_function"]], "wulff_from_chempot() (surfaceenergyplotter method)": [[96, "pymatgen.analysis.surface_analysis.SurfaceEnergyPlotter.wulff_from_chempot"]], "wulff_gform_and_r() (nanoscalestability method)": [[96, "pymatgen.analysis.surface_analysis.NanoscaleStability.wulff_gform_and_r"]], "thermodata (class in pymatgen.analysis.thermochemistry)": [[97, "pymatgen.analysis.thermochemistry.ThermoData"]], "as_dict() (thermodata method)": [[97, "pymatgen.analysis.thermochemistry.ThermoData.as_dict"]], "from_dict() (thermodata class method)": [[97, "pymatgen.analysis.thermochemistry.ThermoData.from_dict"]], "pymatgen.analysis.thermochemistry": [[97, "module-pymatgen.analysis.thermochemistry"]], "pymatgen.analysis.topological": [[98, "module-pymatgen.analysis.topological"]], "socspillage (class in pymatgen.analysis.topological.spillage)": [[99, "pymatgen.analysis.topological.spillage.SOCSpillage"]], "isclose() (socspillage static method)": [[99, "pymatgen.analysis.topological.spillage.SOCSpillage.isclose"]], "orth() (socspillage static method)": [[99, "pymatgen.analysis.topological.spillage.SOCSpillage.orth"]], "overlap_so_spinpol() (socspillage method)": [[99, "pymatgen.analysis.topological.spillage.SOCSpillage.overlap_so_spinpol"]], "pymatgen.analysis.topological.spillage": [[99, "module-pymatgen.analysis.topological.spillage"]], "nebanalysis (class in pymatgen.analysis.transition_state)": [[100, "pymatgen.analysis.transition_state.NEBAnalysis"]], "as_dict() (nebanalysis method)": [[100, "pymatgen.analysis.transition_state.NEBAnalysis.as_dict"]], "combine_neb_plots() (in module pymatgen.analysis.transition_state)": [[100, "pymatgen.analysis.transition_state.combine_neb_plots"]], "from_dir() (nebanalysis class method)": [[100, "pymatgen.analysis.transition_state.NEBAnalysis.from_dir"]], "from_outcars() (nebanalysis class method)": [[100, "pymatgen.analysis.transition_state.NEBAnalysis.from_outcars"]], "get_extrema() (nebanalysis method)": [[100, "pymatgen.analysis.transition_state.NEBAnalysis.get_extrema"]], "get_plot() (nebanalysis method)": [[100, "pymatgen.analysis.transition_state.NEBAnalysis.get_plot"]], "pymatgen.analysis.transition_state": [[100, "module-pymatgen.analysis.transition_state"]], "setup_spline() (nebanalysis method)": [[100, "pymatgen.analysis.transition_state.NEBAnalysis.setup_spline"]], "wulfffacet (class in pymatgen.analysis.wulff)": [[101, "pymatgen.analysis.wulff.WulffFacet"]], "wulffshape (class in pymatgen.analysis.wulff)": [[101, "pymatgen.analysis.wulff.WulffShape"]], "alpha (wulffshape attribute)": [[101, "pymatgen.analysis.wulff.WulffShape.alpha"]], "anisotropy (wulffshape property)": [[101, "pymatgen.analysis.wulff.WulffShape.anisotropy"]], "area_fraction_dict (wulffshape property)": [[101, "pymatgen.analysis.wulff.WulffShape.area_fraction_dict"]], "axis_off (wulffshape attribute)": [[101, "pymatgen.analysis.wulff.WulffShape.axis_off"]], "color_area (wulffshape attribute)": [[101, "pymatgen.analysis.wulff.WulffShape.color_area"]], "color_set (wulffshape attribute)": [[101, "pymatgen.analysis.wulff.WulffShape.color_set"]], "debug (wulffshape attribute)": [[101, "pymatgen.analysis.wulff.WulffShape.debug"]], "dual_cv_simp (wulffshape attribute)": [[101, "pymatgen.analysis.wulff.WulffShape.dual_cv_simp"]], "e_surf_list (wulffshape attribute)": [[101, "pymatgen.analysis.wulff.WulffShape.e_surf_list"]], "effective_radius (wulffshape property)": [[101, "pymatgen.analysis.wulff.WulffShape.effective_radius"]], "facets (wulffshape attribute)": [[101, "pymatgen.analysis.wulff.WulffShape.facets"]], "get_line_in_facet() (wulffshape method)": [[101, "pymatgen.analysis.wulff.WulffShape.get_line_in_facet"]], "get_plot() (wulffshape method)": [[101, "pymatgen.analysis.wulff.WulffShape.get_plot"]], "get_plotly() (wulffshape method)": [[101, "pymatgen.analysis.wulff.WulffShape.get_plotly"]], "get_tri_area() (in module pymatgen.analysis.wulff)": [[101, "pymatgen.analysis.wulff.get_tri_area"]], "grid_off (wulffshape attribute)": [[101, "pymatgen.analysis.wulff.WulffShape.grid_off"]], "hkl_list (wulffshape attribute)": [[101, "pymatgen.analysis.wulff.WulffShape.hkl_list"]], "hkl_tuple_to_str() (in module pymatgen.analysis.wulff)": [[101, "pymatgen.analysis.wulff.hkl_tuple_to_str"]], "lattice (wulffshape attribute)": [[101, "pymatgen.analysis.wulff.WulffShape.lattice"]], "miller_area (wulffshape attribute)": [[101, "pymatgen.analysis.wulff.WulffShape.miller_area"]], "miller_area_dict (wulffshape property)": [[101, "pymatgen.analysis.wulff.WulffShape.miller_area_dict"]], "miller_energy_dict (wulffshape property)": [[101, "pymatgen.analysis.wulff.WulffShape.miller_energy_dict"]], "miller_list (wulffshape attribute)": [[101, "pymatgen.analysis.wulff.WulffShape.miller_list"]], "off_color (wulffshape attribute)": [[101, "pymatgen.analysis.wulff.WulffShape.off_color"]], "on_wulff (wulffshape attribute)": [[101, "pymatgen.analysis.wulff.WulffShape.on_wulff"]], "pymatgen.analysis.wulff": [[101, "module-pymatgen.analysis.wulff"]], "shape_factor (wulffshape property)": [[101, "pymatgen.analysis.wulff.WulffShape.shape_factor"]], "show() (wulffshape method)": [[101, "pymatgen.analysis.wulff.WulffShape.show"]], "show_area (wulffshape attribute)": [[101, "pymatgen.analysis.wulff.WulffShape.show_area"]], "structure (wulffshape attribute)": [[101, "pymatgen.analysis.wulff.WulffShape.structure"]], "surface_area (wulffshape property)": [[101, "pymatgen.analysis.wulff.WulffShape.surface_area"]], "tot_corner_sites (wulffshape property)": [[101, "pymatgen.analysis.wulff.WulffShape.tot_corner_sites"]], "tot_edges (wulffshape property)": [[101, "pymatgen.analysis.wulff.WulffShape.tot_edges"]], "total_surface_energy (wulffshape property)": [[101, "pymatgen.analysis.wulff.WulffShape.total_surface_energy"]], "transparency (wulffshape attribute)": [[101, "pymatgen.analysis.wulff.WulffShape.transparency"]], "volume (wulffshape property)": [[101, "pymatgen.analysis.wulff.WulffShape.volume"]], "weighted_surface_energy (wulffshape property)": [[101, "pymatgen.analysis.wulff.WulffShape.weighted_surface_energy"]], "wulff_cv_simp (wulffshape attribute)": [[101, "pymatgen.analysis.wulff.WulffShape.wulff_cv_simp"]], "wulff_pt_list (wulffshape attribute)": [[101, "pymatgen.analysis.wulff.WulffShape.wulff_pt_list"]], "pymatgen.analysis.xas": [[102, "module-pymatgen.analysis.xas"]], "xas (class in pymatgen.analysis.xas.spectrum)": [[103, "pymatgen.analysis.xas.spectrum.XAS"]], "xlabel (xas attribute)": [[103, "pymatgen.analysis.xas.spectrum.XAS.XLABEL"]], "ylabel (xas attribute)": [[103, "pymatgen.analysis.xas.spectrum.XAS.YLABEL"]], "pymatgen.analysis.xas.spectrum": [[103, "module-pymatgen.analysis.xas.spectrum"]], "site_weighted_spectrum() (in module pymatgen.analysis.xas.spectrum)": [[103, "pymatgen.analysis.xas.spectrum.site_weighted_spectrum"]], "stitch() (xas method)": [[103, "pymatgen.analysis.xas.spectrum.XAS.stitch"]], "xlabel (xps attribute)": [[104, "pymatgen.analysis.xps.XPS.XLABEL"]], "xps (class in pymatgen.analysis.xps)": [[104, "pymatgen.analysis.xps.XPS"]], "ylabel (xps attribute)": [[104, "pymatgen.analysis.xps.XPS.YLABEL"]], "from_dos() (xps class method)": [[104, "pymatgen.analysis.xps.XPS.from_dos"]], "pymatgen.analysis.xps": [[104, "module-pymatgen.analysis.xps"]], "pymatgen.apps": [[105, "module-pymatgen.apps"]], "pymatgen.apps.battery": [[106, "module-pymatgen.apps.battery"]], "batteryanalyzer (class in pymatgen.apps.battery.analyzer)": [[107, "pymatgen.apps.battery.analyzer.BatteryAnalyzer"]], "get_max_capgrav() (batteryanalyzer method)": [[107, "pymatgen.apps.battery.analyzer.BatteryAnalyzer.get_max_capgrav"]], "get_max_capvol() (batteryanalyzer method)": [[107, "pymatgen.apps.battery.analyzer.BatteryAnalyzer.get_max_capvol"]], "get_removals_int_oxid() (batteryanalyzer method)": [[107, "pymatgen.apps.battery.analyzer.BatteryAnalyzer.get_removals_int_oxid"]], "is_redox_active_intercalation() (in module pymatgen.apps.battery.analyzer)": [[107, "pymatgen.apps.battery.analyzer.is_redox_active_intercalation"]], "max_ion_insertion (batteryanalyzer property)": [[107, "pymatgen.apps.battery.analyzer.BatteryAnalyzer.max_ion_insertion"]], "max_ion_removal (batteryanalyzer property)": [[107, "pymatgen.apps.battery.analyzer.BatteryAnalyzer.max_ion_removal"]], "pymatgen.apps.battery.analyzer": [[107, "module-pymatgen.apps.battery.analyzer"]], "abstractelectrode (class in pymatgen.apps.battery.battery_abc)": [[108, "pymatgen.apps.battery.battery_abc.AbstractElectrode"]], "abstractvoltagepair (class in pymatgen.apps.battery.battery_abc)": [[108, "pymatgen.apps.battery.battery_abc.AbstractVoltagePair"]], "frac_charge (abstractvoltagepair attribute)": [[108, "id4"], [108, "pymatgen.apps.battery.battery_abc.AbstractVoltagePair.frac_charge"]], "frac_discharge (abstractvoltagepair attribute)": [[108, "id5"], [108, "pymatgen.apps.battery.battery_abc.AbstractVoltagePair.frac_discharge"]], "framework (abstractelectrode property)": [[108, "pymatgen.apps.battery.battery_abc.AbstractElectrode.framework"]], "framework (abstractvoltagepair property)": [[108, "pymatgen.apps.battery.battery_abc.AbstractVoltagePair.framework"]], "framework_formula (abstractelectrode attribute)": [[108, "id0"], [108, "pymatgen.apps.battery.battery_abc.AbstractElectrode.framework_formula"]], "framework_formula (abstractvoltagepair attribute)": [[108, "id6"], [108, "pymatgen.apps.battery.battery_abc.AbstractVoltagePair.framework_formula"]], "get_average_voltage() (abstractelectrode method)": [[108, "pymatgen.apps.battery.battery_abc.AbstractElectrode.get_average_voltage"]], "get_capacity_grav() (abstractelectrode method)": [[108, "pymatgen.apps.battery.battery_abc.AbstractElectrode.get_capacity_grav"]], "get_capacity_vol() (abstractelectrode method)": [[108, "pymatgen.apps.battery.battery_abc.AbstractElectrode.get_capacity_vol"]], "get_energy_density() (abstractelectrode method)": [[108, "pymatgen.apps.battery.battery_abc.AbstractElectrode.get_energy_density"]], "get_specific_energy() (abstractelectrode method)": [[108, "pymatgen.apps.battery.battery_abc.AbstractElectrode.get_specific_energy"]], "get_sub_electrodes() (abstractelectrode method)": [[108, "pymatgen.apps.battery.battery_abc.AbstractElectrode.get_sub_electrodes"]], "get_summary_dict() (abstractelectrode method)": [[108, "pymatgen.apps.battery.battery_abc.AbstractElectrode.get_summary_dict"]], "mah (abstractvoltagepair attribute)": [[108, "id7"], [108, "pymatgen.apps.battery.battery_abc.AbstractVoltagePair.mAh"]], "mass_charge (abstractvoltagepair attribute)": [[108, "id8"], [108, "pymatgen.apps.battery.battery_abc.AbstractVoltagePair.mass_charge"]], "mass_discharge (abstractvoltagepair attribute)": [[108, "id9"], [108, "pymatgen.apps.battery.battery_abc.AbstractVoltagePair.mass_discharge"]], "max_delta_volume (abstractelectrode property)": [[108, "pymatgen.apps.battery.battery_abc.AbstractElectrode.max_delta_volume"]], "max_voltage (abstractelectrode property)": [[108, "pymatgen.apps.battery.battery_abc.AbstractElectrode.max_voltage"]], "max_voltage_step (abstractelectrode property)": [[108, "pymatgen.apps.battery.battery_abc.AbstractElectrode.max_voltage_step"]], "min_voltage (abstractelectrode property)": [[108, "pymatgen.apps.battery.battery_abc.AbstractElectrode.min_voltage"]], "normalization_mass (abstractelectrode property)": [[108, "pymatgen.apps.battery.battery_abc.AbstractElectrode.normalization_mass"]], "normalization_volume (abstractelectrode property)": [[108, "pymatgen.apps.battery.battery_abc.AbstractElectrode.normalization_volume"]], "num_steps (abstractelectrode property)": [[108, "pymatgen.apps.battery.battery_abc.AbstractElectrode.num_steps"]], "pymatgen.apps.battery.battery_abc": [[108, "module-pymatgen.apps.battery.battery_abc"]], "vol_charge (abstractvoltagepair attribute)": [[108, "id10"], [108, "pymatgen.apps.battery.battery_abc.AbstractVoltagePair.vol_charge"]], "vol_discharge (abstractvoltagepair attribute)": [[108, "id11"], [108, "pymatgen.apps.battery.battery_abc.AbstractVoltagePair.vol_discharge"]], "voltage (abstractvoltagepair attribute)": [[108, "id12"], [108, "pymatgen.apps.battery.battery_abc.AbstractVoltagePair.voltage"]], "voltage_pairs (abstractelectrode attribute)": [[108, "id1"], [108, "pymatgen.apps.battery.battery_abc.AbstractElectrode.voltage_pairs"]], "working_ion (abstractelectrode attribute)": [[108, "pymatgen.apps.battery.battery_abc.AbstractElectrode.working_ion"]], "working_ion (abstractelectrode property)": [[108, "id2"]], "working_ion (abstractvoltagepair property)": [[108, "pymatgen.apps.battery.battery_abc.AbstractVoltagePair.working_ion"]], "working_ion_entry (abstractelectrode attribute)": [[108, "id3"], [108, "pymatgen.apps.battery.battery_abc.AbstractElectrode.working_ion_entry"]], "working_ion_entry (abstractvoltagepair attribute)": [[108, "id13"], [108, "pymatgen.apps.battery.battery_abc.AbstractVoltagePair.working_ion_entry"]], "x_charge (abstractelectrode property)": [[108, "pymatgen.apps.battery.battery_abc.AbstractElectrode.x_charge"]], "x_charge (abstractvoltagepair property)": [[108, "pymatgen.apps.battery.battery_abc.AbstractVoltagePair.x_charge"]], "x_discharge (abstractelectrode property)": [[108, "pymatgen.apps.battery.battery_abc.AbstractElectrode.x_discharge"]], "x_discharge (abstractvoltagepair property)": [[108, "pymatgen.apps.battery.battery_abc.AbstractVoltagePair.x_discharge"]], "conversionelectrode (class in pymatgen.apps.battery.conversion_battery)": [[109, "pymatgen.apps.battery.conversion_battery.ConversionElectrode"]], "conversionvoltagepair (class in pymatgen.apps.battery.conversion_battery)": [[109, "pymatgen.apps.battery.conversion_battery.ConversionVoltagePair"]], "entries_charge (conversionvoltagepair attribute)": [[109, "id0"], [109, "pymatgen.apps.battery.conversion_battery.ConversionVoltagePair.entries_charge"]], "entries_discharge (conversionvoltagepair attribute)": [[109, "id1"], [109, "pymatgen.apps.battery.conversion_battery.ConversionVoltagePair.entries_discharge"]], "frac_charge (conversionvoltagepair attribute)": [[109, "pymatgen.apps.battery.conversion_battery.ConversionVoltagePair.frac_charge"]], "frac_discharge (conversionvoltagepair attribute)": [[109, "pymatgen.apps.battery.conversion_battery.ConversionVoltagePair.frac_discharge"]], "from_composition_and_entries() (conversionelectrode class method)": [[109, "pymatgen.apps.battery.conversion_battery.ConversionElectrode.from_composition_and_entries"]], "from_composition_and_pd() (conversionelectrode class method)": [[109, "pymatgen.apps.battery.conversion_battery.ConversionElectrode.from_composition_and_pd"]], "from_steps() (conversionvoltagepair class method)": [[109, "pymatgen.apps.battery.conversion_battery.ConversionVoltagePair.from_steps"]], "get_sub_electrodes() (conversionelectrode method)": [[109, "pymatgen.apps.battery.conversion_battery.ConversionElectrode.get_sub_electrodes"]], "get_summary_dict() (conversionelectrode method)": [[109, "pymatgen.apps.battery.conversion_battery.ConversionElectrode.get_summary_dict"]], "initial_comp (conversionelectrode property)": [[109, "pymatgen.apps.battery.conversion_battery.ConversionElectrode.initial_comp"]], "initial_comp_formula (conversionelectrode attribute)": [[109, "pymatgen.apps.battery.conversion_battery.ConversionElectrode.initial_comp_formula"]], "is_super_electrode() (conversionelectrode method)": [[109, "pymatgen.apps.battery.conversion_battery.ConversionElectrode.is_super_electrode"]], "mah (conversionvoltagepair attribute)": [[109, "pymatgen.apps.battery.conversion_battery.ConversionVoltagePair.mAh"]], "mass_charge (conversionvoltagepair attribute)": [[109, "pymatgen.apps.battery.conversion_battery.ConversionVoltagePair.mass_charge"]], "mass_discharge (conversionvoltagepair attribute)": [[109, "pymatgen.apps.battery.conversion_battery.ConversionVoltagePair.mass_discharge"]], "pymatgen.apps.battery.conversion_battery": [[109, "module-pymatgen.apps.battery.conversion_battery"]], "rxn (conversionvoltagepair attribute)": [[109, "id2"], [109, "pymatgen.apps.battery.conversion_battery.ConversionVoltagePair.rxn"]], "vol_charge (conversionvoltagepair attribute)": [[109, "pymatgen.apps.battery.conversion_battery.ConversionVoltagePair.vol_charge"]], "vol_discharge (conversionvoltagepair attribute)": [[109, "pymatgen.apps.battery.conversion_battery.ConversionVoltagePair.vol_discharge"]], "voltage (conversionvoltagepair attribute)": [[109, "pymatgen.apps.battery.conversion_battery.ConversionVoltagePair.voltage"]], "working_ion_entry (conversionvoltagepair attribute)": [[109, "pymatgen.apps.battery.conversion_battery.ConversionVoltagePair.working_ion_entry"]], "insertionelectrode (class in pymatgen.apps.battery.insertion_battery)": [[110, "pymatgen.apps.battery.insertion_battery.InsertionElectrode"]], "insertionvoltagepair (class in pymatgen.apps.battery.insertion_battery)": [[110, "pymatgen.apps.battery.insertion_battery.InsertionVoltagePair"]], "as_dict_legacy() (insertionelectrode method)": [[110, "pymatgen.apps.battery.insertion_battery.InsertionElectrode.as_dict_legacy"]], "entry_charge (insertionvoltagepair attribute)": [[110, "pymatgen.apps.battery.insertion_battery.InsertionVoltagePair.entry_charge"]], "entry_discharge (insertionvoltagepair attribute)": [[110, "pymatgen.apps.battery.insertion_battery.InsertionVoltagePair.entry_discharge"]], "from_dict_legacy() (insertionelectrode class method)": [[110, "pymatgen.apps.battery.insertion_battery.InsertionElectrode.from_dict_legacy"]], "from_entries() (insertionelectrode class method)": [[110, "pymatgen.apps.battery.insertion_battery.InsertionElectrode.from_entries"]], "from_entries() (insertionvoltagepair class method)": [[110, "pymatgen.apps.battery.insertion_battery.InsertionVoltagePair.from_entries"]], "fully_charged_entry (insertionelectrode property)": [[110, "pymatgen.apps.battery.insertion_battery.InsertionElectrode.fully_charged_entry"]], "fully_discharged_entry (insertionelectrode property)": [[110, "pymatgen.apps.battery.insertion_battery.InsertionElectrode.fully_discharged_entry"]], "get_all_entries() (insertionelectrode method)": [[110, "pymatgen.apps.battery.insertion_battery.InsertionElectrode.get_all_entries"]], "get_max_instability() (insertionelectrode method)": [[110, "pymatgen.apps.battery.insertion_battery.InsertionElectrode.get_max_instability"]], "get_max_muo2() (insertionelectrode method)": [[110, "pymatgen.apps.battery.insertion_battery.InsertionElectrode.get_max_muO2"]], "get_min_instability() (insertionelectrode method)": [[110, "pymatgen.apps.battery.insertion_battery.InsertionElectrode.get_min_instability"]], "get_min_muo2() (insertionelectrode method)": [[110, "pymatgen.apps.battery.insertion_battery.InsertionElectrode.get_min_muO2"]], "get_stable_entries() (insertionelectrode method)": [[110, "pymatgen.apps.battery.insertion_battery.InsertionElectrode.get_stable_entries"]], "get_sub_electrodes() (insertionelectrode method)": [[110, "pymatgen.apps.battery.insertion_battery.InsertionElectrode.get_sub_electrodes"]], "get_summary_dict() (insertionelectrode method)": [[110, "pymatgen.apps.battery.insertion_battery.InsertionElectrode.get_summary_dict"]], "get_unstable_entries() (insertionelectrode method)": [[110, "pymatgen.apps.battery.insertion_battery.InsertionElectrode.get_unstable_entries"]], "pymatgen.apps.battery.insertion_battery": [[110, "module-pymatgen.apps.battery.insertion_battery"]], "stable_entries (insertionelectrode attribute)": [[110, "pymatgen.apps.battery.insertion_battery.InsertionElectrode.stable_entries"]], "unstable_entries (insertionelectrode attribute)": [[110, "pymatgen.apps.battery.insertion_battery.InsertionElectrode.unstable_entries"]], "voltageprofileplotter (class in pymatgen.apps.battery.plotter)": [[111, "pymatgen.apps.battery.plotter.VoltageProfilePlotter"]], "add_electrode() (voltageprofileplotter method)": [[111, "pymatgen.apps.battery.plotter.VoltageProfilePlotter.add_electrode"]], "get_plot() (voltageprofileplotter method)": [[111, "pymatgen.apps.battery.plotter.VoltageProfilePlotter.get_plot"]], "get_plot_data() (voltageprofileplotter method)": [[111, "pymatgen.apps.battery.plotter.VoltageProfilePlotter.get_plot_data"]], "get_plotly_figure() (voltageprofileplotter method)": [[111, "pymatgen.apps.battery.plotter.VoltageProfilePlotter.get_plotly_figure"]], "pymatgen.apps.battery.plotter": [[111, "module-pymatgen.apps.battery.plotter"]], "save() (voltageprofileplotter method)": [[111, "pymatgen.apps.battery.plotter.VoltageProfilePlotter.save"]], "show() (voltageprofileplotter method)": [[111, "pymatgen.apps.battery.plotter.VoltageProfilePlotter.show"]], "pymatgen.apps.borg": [[112, "module-pymatgen.apps.borg"]], "abstractdrone (class in pymatgen.apps.borg.hive)": [[113, "pymatgen.apps.borg.hive.AbstractDrone"]], "gaussiantocomputedentrydrone (class in pymatgen.apps.borg.hive)": [[113, "pymatgen.apps.borg.hive.GaussianToComputedEntryDrone"]], "simplevasptocomputedentrydrone (class in pymatgen.apps.borg.hive)": [[113, "pymatgen.apps.borg.hive.SimpleVaspToComputedEntryDrone"]], "vasptocomputedentrydrone (class in pymatgen.apps.borg.hive)": [[113, "pymatgen.apps.borg.hive.VaspToComputedEntryDrone"]], "as_dict() (gaussiantocomputedentrydrone method)": [[113, "pymatgen.apps.borg.hive.GaussianToComputedEntryDrone.as_dict"]], "as_dict() (simplevasptocomputedentrydrone method)": [[113, "pymatgen.apps.borg.hive.SimpleVaspToComputedEntryDrone.as_dict"]], "as_dict() (vasptocomputedentrydrone method)": [[113, "pymatgen.apps.borg.hive.VaspToComputedEntryDrone.as_dict"]], "assimilate() (abstractdrone method)": [[113, "pymatgen.apps.borg.hive.AbstractDrone.assimilate"]], "assimilate() (gaussiantocomputedentrydrone method)": [[113, "pymatgen.apps.borg.hive.GaussianToComputedEntryDrone.assimilate"]], "assimilate() (simplevasptocomputedentrydrone method)": [[113, "pymatgen.apps.borg.hive.SimpleVaspToComputedEntryDrone.assimilate"]], "assimilate() (vasptocomputedentrydrone method)": [[113, "pymatgen.apps.borg.hive.VaspToComputedEntryDrone.assimilate"]], "from_dict() (gaussiantocomputedentrydrone class method)": [[113, "pymatgen.apps.borg.hive.GaussianToComputedEntryDrone.from_dict"]], "from_dict() (simplevasptocomputedentrydrone class method)": [[113, "pymatgen.apps.borg.hive.SimpleVaspToComputedEntryDrone.from_dict"]], "from_dict() (vasptocomputedentrydrone class method)": [[113, "pymatgen.apps.borg.hive.VaspToComputedEntryDrone.from_dict"]], "get_valid_paths() (abstractdrone method)": [[113, "pymatgen.apps.borg.hive.AbstractDrone.get_valid_paths"]], "get_valid_paths() (gaussiantocomputedentrydrone method)": [[113, "pymatgen.apps.borg.hive.GaussianToComputedEntryDrone.get_valid_paths"]], "get_valid_paths() (vasptocomputedentrydrone method)": [[113, "pymatgen.apps.borg.hive.VaspToComputedEntryDrone.get_valid_paths"]], "pymatgen.apps.borg.hive": [[113, "module-pymatgen.apps.borg.hive"]], "borgqueen (class in pymatgen.apps.borg.queen)": [[114, "pymatgen.apps.borg.queen.BorgQueen"]], "get_data() (borgqueen method)": [[114, "pymatgen.apps.borg.queen.BorgQueen.get_data"]], "load_data() (borgqueen method)": [[114, "pymatgen.apps.borg.queen.BorgQueen.load_data"]], "order_assimilation() (in module pymatgen.apps.borg.queen)": [[114, "pymatgen.apps.borg.queen.order_assimilation"]], "parallel_assimilate() (borgqueen method)": [[114, "pymatgen.apps.borg.queen.BorgQueen.parallel_assimilate"]], "pymatgen.apps.borg.queen": [[114, "module-pymatgen.apps.borg.queen"]], "save_data() (borgqueen method)": [[114, "pymatgen.apps.borg.queen.BorgQueen.save_data"]], "serial_assimilate() (borgqueen method)": [[114, "pymatgen.apps.borg.queen.BorgQueen.serial_assimilate"]], "pymatgen.cli": [[115, "module-pymatgen.cli"]], "main() (in module pymatgen.cli.feff_plot_cross_section)": [[116, "pymatgen.cli.feff_plot_cross_section.main"]], "pymatgen.cli.feff_plot_cross_section": [[116, "module-pymatgen.cli.feff_plot_cross_section"]], "main() (in module pymatgen.cli.feff_plot_dos)": [[117, "pymatgen.cli.feff_plot_dos.main"]], "pymatgen.cli.feff_plot_dos": [[117, "module-pymatgen.cli.feff_plot_dos"]], "get_energies() (in module pymatgen.cli.gaussian_analyzer)": [[118, "pymatgen.cli.gaussian_analyzer.get_energies"]], "main() (in module pymatgen.cli.gaussian_analyzer)": [[118, "pymatgen.cli.gaussian_analyzer.main"]], "pymatgen.cli.gaussian_analyzer": [[118, "module-pymatgen.cli.gaussian_analyzer"]], "main() (in module pymatgen.cli.get_environment)": [[119, "pymatgen.cli.get_environment.main"]], "pymatgen.cli.get_environment": [[119, "module-pymatgen.cli.get_environment"]], "diff_incar() (in module pymatgen.cli.pmg)": [[120, "pymatgen.cli.pmg.diff_incar"]], "main() (in module pymatgen.cli.pmg)": [[120, "pymatgen.cli.pmg.main"]], "parse_view() (in module pymatgen.cli.pmg)": [[120, "pymatgen.cli.pmg.parse_view"]], "pymatgen.cli.pmg": [[120, "module-pymatgen.cli.pmg"]], "analyze() (in module pymatgen.cli.pmg_analyze)": [[121, "pymatgen.cli.pmg_analyze.analyze"]], "get_energies() (in module pymatgen.cli.pmg_analyze)": [[121, "pymatgen.cli.pmg_analyze.get_energies"]], "get_magnetizations() (in module pymatgen.cli.pmg_analyze)": [[121, "pymatgen.cli.pmg_analyze.get_magnetizations"]], "pymatgen.cli.pmg_analyze": [[121, "module-pymatgen.cli.pmg_analyze"]], "add_config_var() (in module pymatgen.cli.pmg_config)": [[122, "pymatgen.cli.pmg_config.add_config_var"]], "build_bader() (in module pymatgen.cli.pmg_config)": [[122, "pymatgen.cli.pmg_config.build_bader"]], "build_enum() (in module pymatgen.cli.pmg_config)": [[122, "pymatgen.cli.pmg_config.build_enum"]], "configure_pmg() (in module pymatgen.cli.pmg_config)": [[122, "pymatgen.cli.pmg_config.configure_pmg"]], "install_software() (in module pymatgen.cli.pmg_config)": [[122, "pymatgen.cli.pmg_config.install_software"]], "pymatgen.cli.pmg_config": [[122, "module-pymatgen.cli.pmg_config"]], "setup_cp2k_data() (in module pymatgen.cli.pmg_config)": [[122, "pymatgen.cli.pmg_config.setup_cp2k_data"]], "setup_potcars() (in module pymatgen.cli.pmg_config)": [[122, "pymatgen.cli.pmg_config.setup_potcars"]], "get_chgint_plot() (in module pymatgen.cli.pmg_plot)": [[123, "pymatgen.cli.pmg_plot.get_chgint_plot"]], "get_dos_plot() (in module pymatgen.cli.pmg_plot)": [[123, "pymatgen.cli.pmg_plot.get_dos_plot"]], "get_xrd_plot() (in module pymatgen.cli.pmg_plot)": [[123, "pymatgen.cli.pmg_plot.get_xrd_plot"]], "plot() (in module pymatgen.cli.pmg_plot)": [[123, "pymatgen.cli.pmg_plot.plot"]], "pymatgen.cli.pmg_plot": [[123, "module-pymatgen.cli.pmg_plot"]], "gen_potcar() (in module pymatgen.cli.pmg_potcar)": [[124, "pymatgen.cli.pmg_potcar.gen_potcar"]], "generate_potcar() (in module pymatgen.cli.pmg_potcar)": [[124, "pymatgen.cli.pmg_potcar.generate_potcar"]], "proc_dir() (in module pymatgen.cli.pmg_potcar)": [[124, "pymatgen.cli.pmg_potcar.proc_dir"]], "pymatgen.cli.pmg_potcar": [[124, "module-pymatgen.cli.pmg_potcar"]], "do_query() (in module pymatgen.cli.pmg_query)": [[125, "pymatgen.cli.pmg_query.do_query"]], "pymatgen.cli.pmg_query": [[125, "module-pymatgen.cli.pmg_query"]], "analyze_localenv() (in module pymatgen.cli.pmg_structure)": [[126, "pymatgen.cli.pmg_structure.analyze_localenv"]], "analyze_structures() (in module pymatgen.cli.pmg_structure)": [[126, "pymatgen.cli.pmg_structure.analyze_structures"]], "analyze_symmetry() (in module pymatgen.cli.pmg_structure)": [[126, "pymatgen.cli.pmg_structure.analyze_symmetry"]], "compare_structures() (in module pymatgen.cli.pmg_structure)": [[126, "pymatgen.cli.pmg_structure.compare_structures"]], "convert_fmt() (in module pymatgen.cli.pmg_structure)": [[126, "pymatgen.cli.pmg_structure.convert_fmt"]], "pymatgen.cli.pmg_structure": [[126, "module-pymatgen.cli.pmg_structure"]], "pymatgen.command_line": [[127, "module-pymatgen.command_line"]], "baderanalysis (class in pymatgen.command_line.bader_caller)": [[128, "pymatgen.command_line.bader_caller.BaderAnalysis"]], "bader_analysis_from_objects() (in module pymatgen.command_line.bader_caller)": [[128, "pymatgen.command_line.bader_caller.bader_analysis_from_objects"]], "bader_analysis_from_path() (in module pymatgen.command_line.bader_caller)": [[128, "pymatgen.command_line.bader_caller.bader_analysis_from_path"]], "from_path() (baderanalysis class method)": [[128, "pymatgen.command_line.bader_caller.BaderAnalysis.from_path"]], "get_charge() (baderanalysis method)": [[128, "pymatgen.command_line.bader_caller.BaderAnalysis.get_charge"]], "get_charge_decorated_structure() (baderanalysis method)": [[128, "pymatgen.command_line.bader_caller.BaderAnalysis.get_charge_decorated_structure"]], "get_charge_transfer() (baderanalysis method)": [[128, "pymatgen.command_line.bader_caller.BaderAnalysis.get_charge_transfer"]], "get_decorated_structure() (baderanalysis method)": [[128, "pymatgen.command_line.bader_caller.BaderAnalysis.get_decorated_structure"]], "get_oxidation_state_decorated_structure() (baderanalysis method)": [[128, "pymatgen.command_line.bader_caller.BaderAnalysis.get_oxidation_state_decorated_structure"]], "get_partial_charge() (baderanalysis method)": [[128, "pymatgen.command_line.bader_caller.BaderAnalysis.get_partial_charge"]], "pymatgen.command_line.bader_caller": [[128, "module-pymatgen.command_line.bader_caller"]], "summary (baderanalysis property)": [[128, "pymatgen.command_line.bader_caller.BaderAnalysis.summary"]], "chargemolanalysis (class in pymatgen.command_line.chargemol_caller)": [[129, "pymatgen.command_line.chargemol_caller.ChargemolAnalysis"]], "get_bond_order() (chargemolanalysis method)": [[129, "pymatgen.command_line.chargemol_caller.ChargemolAnalysis.get_bond_order"]], "get_charge() (chargemolanalysis method)": [[129, "pymatgen.command_line.chargemol_caller.ChargemolAnalysis.get_charge"]], "get_charge_transfer() (chargemolanalysis method)": [[129, "pymatgen.command_line.chargemol_caller.ChargemolAnalysis.get_charge_transfer"]], "get_partial_charge() (chargemolanalysis method)": [[129, "pymatgen.command_line.chargemol_caller.ChargemolAnalysis.get_partial_charge"]], "get_property_decorated_structure() (chargemolanalysis method)": [[129, "pymatgen.command_line.chargemol_caller.ChargemolAnalysis.get_property_decorated_structure"]], "pymatgen.command_line.chargemol_caller": [[129, "module-pymatgen.command_line.chargemol_caller"]], "summary (chargemolanalysis property)": [[129, "pymatgen.command_line.chargemol_caller.ChargemolAnalysis.summary"]], "critic2analysis (class in pymatgen.command_line.critic2_caller)": [[130, "pymatgen.command_line.critic2_caller.Critic2Analysis"]], "critic2caller (class in pymatgen.command_line.critic2_caller)": [[130, "pymatgen.command_line.critic2_caller.Critic2Caller"]], "criticalpoint (class in pymatgen.command_line.critic2_caller)": [[130, "pymatgen.command_line.critic2_caller.CriticalPoint"]], "criticalpointtype (class in pymatgen.command_line.critic2_caller)": [[130, "pymatgen.command_line.critic2_caller.CriticalPointType"]], "bond (criticalpointtype attribute)": [[130, "pymatgen.command_line.critic2_caller.CriticalPointType.bond"]], "cage (criticalpointtype attribute)": [[130, "pymatgen.command_line.critic2_caller.CriticalPointType.cage"]], "ellipticity (criticalpoint property)": [[130, "pymatgen.command_line.critic2_caller.CriticalPoint.ellipticity"]], "from_chgcar() (critic2caller class method)": [[130, "pymatgen.command_line.critic2_caller.Critic2Caller.from_chgcar"]], "from_path() (critic2caller class method)": [[130, "pymatgen.command_line.critic2_caller.Critic2Caller.from_path"]], "get_critical_point_for_site() (critic2analysis method)": [[130, "pymatgen.command_line.critic2_caller.Critic2Analysis.get_critical_point_for_site"]], "get_filepath() (in module pymatgen.command_line.critic2_caller)": [[130, "pymatgen.command_line.critic2_caller.get_filepath"]], "get_volume_and_charge_for_site() (critic2analysis method)": [[130, "pymatgen.command_line.critic2_caller.Critic2Analysis.get_volume_and_charge_for_site"]], "laplacian (criticalpoint property)": [[130, "pymatgen.command_line.critic2_caller.CriticalPoint.laplacian"]], "nnattr (criticalpointtype attribute)": [[130, "pymatgen.command_line.critic2_caller.CriticalPointType.nnattr"]], "nucleus (criticalpointtype attribute)": [[130, "pymatgen.command_line.critic2_caller.CriticalPointType.nucleus"]], "pymatgen.command_line.critic2_caller": [[130, "module-pymatgen.command_line.critic2_caller"]], "ring (criticalpointtype attribute)": [[130, "pymatgen.command_line.critic2_caller.CriticalPointType.ring"]], "structure_graph() (critic2analysis method)": [[130, "pymatgen.command_line.critic2_caller.Critic2Analysis.structure_graph"]], "type (criticalpoint property)": [[130, "pymatgen.command_line.critic2_caller.CriticalPoint.type"]], "enumerror": [[131, "pymatgen.command_line.enumlib_caller.EnumError"]], "pymatgen.command_line.enumlib_caller": [[131, "module-pymatgen.command_line.enumlib_caller"]], "buckinghampotential (class in pymatgen.command_line.gulp_caller)": [[132, "pymatgen.command_line.gulp_caller.BuckinghamPotential"]], "gulpcaller (class in pymatgen.command_line.gulp_caller)": [[132, "pymatgen.command_line.gulp_caller.GulpCaller"]], "gulpconvergenceerror": [[132, "pymatgen.command_line.gulp_caller.GulpConvergenceError"]], "gulperror": [[132, "pymatgen.command_line.gulp_caller.GulpError"]], "gulpio (class in pymatgen.command_line.gulp_caller)": [[132, "pymatgen.command_line.gulp_caller.GulpIO"]], "tersoffpotential (class in pymatgen.command_line.gulp_caller)": [[132, "pymatgen.command_line.gulp_caller.TersoffPotential"]], "buckingham_input() (gulpio method)": [[132, "pymatgen.command_line.gulp_caller.GulpIO.buckingham_input"]], "buckingham_potential() (gulpio static method)": [[132, "pymatgen.command_line.gulp_caller.GulpIO.buckingham_potential"]], "get_energy() (gulpio static method)": [[132, "pymatgen.command_line.gulp_caller.GulpIO.get_energy"]], "get_energy_buckingham() (in module pymatgen.command_line.gulp_caller)": [[132, "pymatgen.command_line.gulp_caller.get_energy_buckingham"]], "get_energy_relax_structure_buckingham() (in module pymatgen.command_line.gulp_caller)": [[132, "pymatgen.command_line.gulp_caller.get_energy_relax_structure_buckingham"]], "get_energy_tersoff() (in module pymatgen.command_line.gulp_caller)": [[132, "pymatgen.command_line.gulp_caller.get_energy_tersoff"]], "get_relaxed_structure() (gulpio static method)": [[132, "pymatgen.command_line.gulp_caller.GulpIO.get_relaxed_structure"]], "keyword_line() (gulpio static method)": [[132, "pymatgen.command_line.gulp_caller.GulpIO.keyword_line"]], "library_line() (gulpio static method)": [[132, "pymatgen.command_line.gulp_caller.GulpIO.library_line"]], "pymatgen.command_line.gulp_caller": [[132, "module-pymatgen.command_line.gulp_caller"]], "run() (gulpcaller method)": [[132, "pymatgen.command_line.gulp_caller.GulpCaller.run"]], "specie_potential_lines() (gulpio static method)": [[132, "pymatgen.command_line.gulp_caller.GulpIO.specie_potential_lines"]], "structure_lines() (gulpio static method)": [[132, "pymatgen.command_line.gulp_caller.GulpIO.structure_lines"]], "tersoff_input() (gulpio method)": [[132, "pymatgen.command_line.gulp_caller.GulpIO.tersoff_input"]], "tersoff_potential() (gulpio static method)": [[132, "pymatgen.command_line.gulp_caller.GulpIO.tersoff_potential"]], "sqs (class in pymatgen.command_line.mcsqs_caller)": [[133, "pymatgen.command_line.mcsqs_caller.Sqs"]], "allsqs (sqs attribute)": [[133, "pymatgen.command_line.mcsqs_caller.Sqs.allsqs"]], "bestsqs (sqs attribute)": [[133, "pymatgen.command_line.mcsqs_caller.Sqs.bestsqs"]], "clusters (sqs attribute)": [[133, "pymatgen.command_line.mcsqs_caller.Sqs.clusters"]], "directory (sqs attribute)": [[133, "pymatgen.command_line.mcsqs_caller.Sqs.directory"]], "objective_function (sqs attribute)": [[133, "pymatgen.command_line.mcsqs_caller.Sqs.objective_function"]], "pymatgen.command_line.mcsqs_caller": [[133, "module-pymatgen.command_line.mcsqs_caller"]], "run_mcsqs() (in module pymatgen.command_line.mcsqs_caller)": [[133, "pymatgen.command_line.mcsqs_caller.run_mcsqs"]], "vampirecaller (class in pymatgen.command_line.vampire_caller)": [[134, "pymatgen.command_line.vampire_caller.VampireCaller"]], "vampireoutput (class in pymatgen.command_line.vampire_caller)": [[134, "pymatgen.command_line.vampire_caller.VampireOutput"]], "parse_stdout() (vampirecaller static method)": [[134, "pymatgen.command_line.vampire_caller.VampireCaller.parse_stdout"]], "pymatgen.command_line.vampire_caller": [[134, "module-pymatgen.command_line.vampire_caller"]], "pymatgen.core": [[135, "module-pymatgen.core"]], "covalentbond (class in pymatgen.core.bonds)": [[136, "pymatgen.core.bonds.CovalentBond"]], "get_bond_length() (in module pymatgen.core.bonds)": [[136, "pymatgen.core.bonds.get_bond_length"]], "get_bond_order() (covalentbond method)": [[136, "pymatgen.core.bonds.CovalentBond.get_bond_order"]], "get_bond_order() (in module pymatgen.core.bonds)": [[136, "pymatgen.core.bonds.get_bond_order"]], "is_bonded() (covalentbond static method)": [[136, "pymatgen.core.bonds.CovalentBond.is_bonded"]], "length (covalentbond property)": [[136, "pymatgen.core.bonds.CovalentBond.length"]], "obtain_all_bond_lengths() (in module pymatgen.core.bonds)": [[136, "pymatgen.core.bonds.obtain_all_bond_lengths"]], "pymatgen.core.bonds": [[136, "module-pymatgen.core.bonds"]], "chemicalpotential (class in pymatgen.core.composition)": [[137, "pymatgen.core.composition.ChemicalPotential"]], "composition (class in pymatgen.core.composition)": [[137, "pymatgen.core.composition.Composition"]], "compositionerror": [[137, "pymatgen.core.composition.CompositionError"]], "add_charges_from_oxi_state_guesses() (composition method)": [[137, "pymatgen.core.composition.Composition.add_charges_from_oxi_state_guesses"]], "almost_equals() (composition method)": [[137, "pymatgen.core.composition.Composition.almost_equals"]], "alphabetical_formula (composition property)": [[137, "pymatgen.core.composition.Composition.alphabetical_formula"]], "amount_tolerance (composition attribute)": [[137, "pymatgen.core.composition.Composition.amount_tolerance"]], "anonymized_formula (composition property)": [[137, "pymatgen.core.composition.Composition.anonymized_formula"]], "as_dict() (composition method)": [[137, "pymatgen.core.composition.Composition.as_dict"]], "average_electroneg (composition property)": [[137, "pymatgen.core.composition.Composition.average_electroneg"]], "chemical_system (composition property)": [[137, "pymatgen.core.composition.Composition.chemical_system"]], "contains_element_type() (composition method)": [[137, "pymatgen.core.composition.Composition.contains_element_type"]], "copy() (composition method)": [[137, "pymatgen.core.composition.Composition.copy"]], "element_composition (composition property)": [[137, "pymatgen.core.composition.Composition.element_composition"]], "elements (composition property)": [[137, "pymatgen.core.composition.Composition.elements"]], "formula (composition property)": [[137, "pymatgen.core.composition.Composition.formula"]], "fractional_composition (composition property)": [[137, "pymatgen.core.composition.Composition.fractional_composition"]], "from_dict() (composition class method)": [[137, "pymatgen.core.composition.Composition.from_dict"]], "from_weight_dict() (composition class method)": [[137, "pymatgen.core.composition.Composition.from_weight_dict"]], "get_atomic_fraction() (composition method)": [[137, "pymatgen.core.composition.Composition.get_atomic_fraction"]], "get_el_amt_dict() (composition method)": [[137, "pymatgen.core.composition.Composition.get_el_amt_dict"]], "get_energy() (chemicalpotential method)": [[137, "pymatgen.core.composition.ChemicalPotential.get_energy"]], "get_integer_formula_and_factor() (composition method)": [[137, "pymatgen.core.composition.Composition.get_integer_formula_and_factor"]], "get_reduced_composition_and_factor() (composition method)": [[137, "pymatgen.core.composition.Composition.get_reduced_composition_and_factor"]], "get_reduced_formula_and_factor() (composition method)": [[137, "pymatgen.core.composition.Composition.get_reduced_formula_and_factor"]], "get_wt_fraction() (composition method)": [[137, "pymatgen.core.composition.Composition.get_wt_fraction"]], "hill_formula (composition property)": [[137, "pymatgen.core.composition.Composition.hill_formula"]], "is_element (composition property)": [[137, "pymatgen.core.composition.Composition.is_element"]], "iupac_formula (composition property)": [[137, "pymatgen.core.composition.Composition.iupac_formula"]], "num_atoms (composition property)": [[137, "pymatgen.core.composition.Composition.num_atoms"]], "oxi_prob (composition attribute)": [[137, "pymatgen.core.composition.Composition.oxi_prob"]], "oxi_state_guesses() (composition method)": [[137, "pymatgen.core.composition.Composition.oxi_state_guesses"]], "pymatgen.core.composition": [[137, "module-pymatgen.core.composition"]], "ranked_compositions_from_indeterminate_formula() (composition static method)": [[137, "pymatgen.core.composition.Composition.ranked_compositions_from_indeterminate_formula"]], "reduce_formula() (in module pymatgen.core.composition)": [[137, "pymatgen.core.composition.reduce_formula"]], "reduced_composition (composition property)": [[137, "pymatgen.core.composition.Composition.reduced_composition"]], "reduced_formula (composition property)": [[137, "pymatgen.core.composition.Composition.reduced_formula"]], "remove_charges() (composition method)": [[137, "pymatgen.core.composition.Composition.remove_charges"]], "replace() (composition method)": [[137, "pymatgen.core.composition.Composition.replace"]], "special_formulas (composition attribute)": [[137, "pymatgen.core.composition.Composition.special_formulas"]], "to_data_dict (composition property)": [[137, "pymatgen.core.composition.Composition.to_data_dict"]], "to_pretty_string() (composition method)": [[137, "pymatgen.core.composition.Composition.to_pretty_string"]], "to_reduced_dict (composition property)": [[137, "pymatgen.core.composition.Composition.to_reduced_dict"]], "to_weight_dict (composition property)": [[137, "pymatgen.core.composition.Composition.to_weight_dict"]], "total_electrons (composition property)": [[137, "pymatgen.core.composition.Composition.total_electrons"]], "valid (composition property)": [[137, "pymatgen.core.composition.Composition.valid"]], "weight (composition property)": [[137, "pymatgen.core.composition.Composition.weight"]], "interface (class in pymatgen.core.interface)": [[138, "pymatgen.core.interface.Interface"]], "as_dict() (interface method)": [[138, "pymatgen.core.interface.Interface.as_dict"]], "copy() (interface method)": [[138, "pymatgen.core.interface.Interface.copy"]], "count_layers() (in module pymatgen.core.interface)": [[138, "pymatgen.core.interface.count_layers"]], "film (interface property)": [[138, "pymatgen.core.interface.Interface.film"]], "film_indices (interface property)": [[138, "pymatgen.core.interface.Interface.film_indices"]], "film_layers (interface property)": [[138, "pymatgen.core.interface.Interface.film_layers"]], "film_sites (interface property)": [[138, "pymatgen.core.interface.Interface.film_sites"]], "film_termination (interface property)": [[138, "pymatgen.core.interface.Interface.film_termination"]], "from_dict() (interface class method)": [[138, "pymatgen.core.interface.Interface.from_dict"]], "from_slabs() (interface class method)": [[138, "pymatgen.core.interface.Interface.from_slabs"]], "gap (interface property)": [[138, "pymatgen.core.interface.Interface.gap"]], "get_shifts_based_on_adsorbate_sites() (interface method)": [[138, "pymatgen.core.interface.Interface.get_shifts_based_on_adsorbate_sites"]], "get_sorted_structure() (interface method)": [[138, "pymatgen.core.interface.Interface.get_sorted_structure"]], "in_plane_offset (interface property)": [[138, "pymatgen.core.interface.Interface.in_plane_offset"]], "label_termination() (in module pymatgen.core.interface)": [[138, "pymatgen.core.interface.label_termination"]], "pymatgen.core.interface": [[138, "module-pymatgen.core.interface"]], "substrate (interface property)": [[138, "pymatgen.core.interface.Interface.substrate"]], "substrate_indices (interface property)": [[138, "pymatgen.core.interface.Interface.substrate_indices"]], "substrate_layers (interface property)": [[138, "pymatgen.core.interface.Interface.substrate_layers"]], "substrate_sites (interface property)": [[138, "pymatgen.core.interface.Interface.substrate_sites"]], "substrate_termination (interface property)": [[138, "pymatgen.core.interface.Interface.substrate_termination"]], "vacuum_over_film (interface property)": [[138, "pymatgen.core.interface.Interface.vacuum_over_film"]], "ion (class in pymatgen.core.ion)": [[139, "pymatgen.core.ion.Ion"]], "alphabetical_formula (ion property)": [[139, "pymatgen.core.ion.Ion.alphabetical_formula"]], "anonymized_formula (ion property)": [[139, "pymatgen.core.ion.Ion.anonymized_formula"]], "as_dict() (ion method)": [[139, "pymatgen.core.ion.Ion.as_dict"]], "charge (ion property)": [[139, "pymatgen.core.ion.Ion.charge"]], "composition (ion property)": [[139, "pymatgen.core.ion.Ion.composition"]], "formula (ion property)": [[139, "pymatgen.core.ion.Ion.formula"]], "from_dict() (ion class method)": [[139, "pymatgen.core.ion.Ion.from_dict"]], "from_formula() (ion class method)": [[139, "pymatgen.core.ion.Ion.from_formula"]], "get_reduced_formula_and_factor() (ion method)": [[139, "pymatgen.core.ion.Ion.get_reduced_formula_and_factor"]], "oxi_state_guesses() (ion method)": [[139, "pymatgen.core.ion.Ion.oxi_state_guesses"]], "pymatgen.core.ion": [[139, "module-pymatgen.core.ion"]], "reduced_formula (ion property)": [[139, "pymatgen.core.ion.Ion.reduced_formula"]], "to_pretty_string() (ion method)": [[139, "pymatgen.core.ion.Ion.to_pretty_string"]], "to_reduced_dict (ion property)": [[139, "pymatgen.core.ion.Ion.to_reduced_dict"]], "lattice (class in pymatgen.core.lattice)": [[140, "pymatgen.core.lattice.Lattice"]], "a (lattice property)": [[140, "pymatgen.core.lattice.Lattice.a"]], "abc (lattice property)": [[140, "pymatgen.core.lattice.Lattice.abc"]], "alpha (lattice property)": [[140, "pymatgen.core.lattice.Lattice.alpha"]], "angles (lattice property)": [[140, "pymatgen.core.lattice.Lattice.angles"]], "as_dict() (lattice method)": [[140, "pymatgen.core.lattice.Lattice.as_dict"]], "b (lattice property)": [[140, "pymatgen.core.lattice.Lattice.b"]], "beta (lattice property)": [[140, "pymatgen.core.lattice.Lattice.beta"]], "c (lattice property)": [[140, "pymatgen.core.lattice.Lattice.c"]], "copy() (lattice method)": [[140, "pymatgen.core.lattice.Lattice.copy"]], "cubic() (lattice static method)": [[140, "pymatgen.core.lattice.Lattice.cubic"]], "d_hkl() (lattice method)": [[140, "pymatgen.core.lattice.Lattice.d_hkl"]], "dot() (lattice method)": [[140, "pymatgen.core.lattice.Lattice.dot"]], "find_all_mappings() (lattice method)": [[140, "pymatgen.core.lattice.Lattice.find_all_mappings"]], "find_mapping() (lattice method)": [[140, "pymatgen.core.lattice.Lattice.find_mapping"]], "find_neighbors() (in module pymatgen.core.lattice)": [[140, "pymatgen.core.lattice.find_neighbors"]], "from_dict() (lattice class method)": [[140, "pymatgen.core.lattice.Lattice.from_dict"]], "from_parameters() (lattice class method)": [[140, "pymatgen.core.lattice.Lattice.from_parameters"]], "gamma (lattice property)": [[140, "pymatgen.core.lattice.Lattice.gamma"]], "get_all_distances() (lattice method)": [[140, "pymatgen.core.lattice.Lattice.get_all_distances"]], "get_brillouin_zone() (lattice method)": [[140, "pymatgen.core.lattice.Lattice.get_brillouin_zone"]], "get_cartesian_coords() (lattice method)": [[140, "pymatgen.core.lattice.Lattice.get_cartesian_coords"]], "get_distance_and_image() (lattice method)": [[140, "pymatgen.core.lattice.Lattice.get_distance_and_image"]], "get_frac_coords_from_lll() (lattice method)": [[140, "pymatgen.core.lattice.Lattice.get_frac_coords_from_lll"]], "get_fractional_coords() (lattice method)": [[140, "pymatgen.core.lattice.Lattice.get_fractional_coords"]], "get_integer_index() (in module pymatgen.core.lattice)": [[140, "pymatgen.core.lattice.get_integer_index"]], "get_lll_frac_coords() (lattice method)": [[140, "pymatgen.core.lattice.Lattice.get_lll_frac_coords"]], "get_lll_reduced_lattice() (lattice method)": [[140, "pymatgen.core.lattice.Lattice.get_lll_reduced_lattice"]], "get_miller_index_from_coords() (lattice method)": [[140, "pymatgen.core.lattice.Lattice.get_miller_index_from_coords"]], "get_niggli_reduced_lattice() (lattice method)": [[140, "pymatgen.core.lattice.Lattice.get_niggli_reduced_lattice"]], "get_points_in_sphere() (lattice method)": [[140, "pymatgen.core.lattice.Lattice.get_points_in_sphere"]], "get_points_in_sphere_old() (lattice method)": [[140, "pymatgen.core.lattice.Lattice.get_points_in_sphere_old"]], "get_points_in_sphere_py() (lattice method)": [[140, "pymatgen.core.lattice.Lattice.get_points_in_sphere_py"]], "get_points_in_spheres() (in module pymatgen.core.lattice)": [[140, "pymatgen.core.lattice.get_points_in_spheres"]], "get_recp_symmetry_operation() (lattice method)": [[140, "pymatgen.core.lattice.Lattice.get_recp_symmetry_operation"]], "get_vector_along_lattice_directions() (lattice method)": [[140, "pymatgen.core.lattice.Lattice.get_vector_along_lattice_directions"]], "get_wigner_seitz_cell() (lattice method)": [[140, "pymatgen.core.lattice.Lattice.get_wigner_seitz_cell"]], "hexagonal() (lattice static method)": [[140, "pymatgen.core.lattice.Lattice.hexagonal"]], "inv_matrix (lattice property)": [[140, "pymatgen.core.lattice.Lattice.inv_matrix"]], "is_3d_periodic (lattice property)": [[140, "pymatgen.core.lattice.Lattice.is_3d_periodic"]], "is_hexagonal() (lattice method)": [[140, "pymatgen.core.lattice.Lattice.is_hexagonal"]], "is_orthogonal (lattice property)": [[140, "pymatgen.core.lattice.Lattice.is_orthogonal"]], "lengths (lattice property)": [[140, "pymatgen.core.lattice.Lattice.lengths"]], "lll_inverse (lattice property)": [[140, "pymatgen.core.lattice.Lattice.lll_inverse"]], "lll_mapping (lattice property)": [[140, "pymatgen.core.lattice.Lattice.lll_mapping"]], "lll_matrix (lattice property)": [[140, "pymatgen.core.lattice.Lattice.lll_matrix"]], "matrix (lattice property)": [[140, "pymatgen.core.lattice.Lattice.matrix"]], "metric_tensor (lattice property)": [[140, "pymatgen.core.lattice.Lattice.metric_tensor"]], "monoclinic() (lattice static method)": [[140, "pymatgen.core.lattice.Lattice.monoclinic"]], "norm() (lattice method)": [[140, "pymatgen.core.lattice.Lattice.norm"]], "orthorhombic() (lattice static method)": [[140, "pymatgen.core.lattice.Lattice.orthorhombic"]], "parameters (lattice property)": [[140, "pymatgen.core.lattice.Lattice.parameters"]], "pbc (lattice property)": [[140, "pymatgen.core.lattice.Lattice.pbc"]], "pymatgen.core.lattice": [[140, "module-pymatgen.core.lattice"]], "reciprocal_lattice (lattice property)": [[140, "pymatgen.core.lattice.Lattice.reciprocal_lattice"]], "reciprocal_lattice_crystallographic (lattice property)": [[140, "pymatgen.core.lattice.Lattice.reciprocal_lattice_crystallographic"]], "rhombohedral() (lattice static method)": [[140, "pymatgen.core.lattice.Lattice.rhombohedral"]], "scale() (lattice method)": [[140, "pymatgen.core.lattice.Lattice.scale"]], "selling_dist() (lattice method)": [[140, "pymatgen.core.lattice.Lattice.selling_dist"]], "selling_vector (lattice property)": [[140, "pymatgen.core.lattice.Lattice.selling_vector"]], "tetragonal() (lattice static method)": [[140, "pymatgen.core.lattice.Lattice.tetragonal"]], "volume (lattice property)": [[140, "pymatgen.core.lattice.Lattice.volume"]], "gga_c_am05 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_AM05"]], "gga_c_apbe (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_APBE"]], "gga_c_bgcp (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_BGCP"]], "gga_c_ft97 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_FT97"]], "gga_c_gam (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_GAM"]], "gga_c_hcth_a (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_HCTH_A"]], "gga_c_lm (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_LM"]], "gga_c_lyp (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_LYP"]], "gga_c_n12 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_N12"]], "gga_c_n12_sx (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_N12_SX"]], "gga_c_optc (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_OPTC"]], "gga_c_op_b88 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_OP_B88"]], "gga_c_op_g96 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_OP_G96"]], "gga_c_op_pbe (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_OP_PBE"]], "gga_c_op_pw91 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_OP_PW91"]], "gga_c_op_xalpha (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_OP_XALPHA"]], "gga_c_p86 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_P86"]], "gga_c_pbe (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_PBE"]], "gga_c_pbefe (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_PBEFE"]], "gga_c_pbeint (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_PBEINT"]], "gga_c_pbeloc (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_PBELOC"]], "gga_c_pbe_jrgx (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_PBE_JRGX"]], "gga_c_pbe_sol (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_PBE_SOL"]], "gga_c_pw91 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_PW91"]], "gga_c_q2d (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_Q2D"]], "gga_c_regtpss (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_REGTPSS"]], "gga_c_revtca (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_REVTCA"]], "gga_c_rge2 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_RGE2"]], "gga_c_sogga11 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_SOGGA11"]], "gga_c_sogga11_x (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_SOGGA11_X"]], "gga_c_spbe (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_SPBE"]], "gga_c_tca (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_TCA"]], "gga_c_wi (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_WI"]], "gga_c_wi0 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_WI0"]], "gga_c_wl (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_WL"]], "gga_c_xpbe (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_XPBE"]], "gga_c_zpbeint (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_ZPBEINT"]], "gga_c_zpbesol (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_C_ZPBESOL"]], "gga_k_absp1 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_ABSP1"]], "gga_k_absp2 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_ABSP2"]], "gga_k_apbe (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_APBE"]], "gga_k_apbeint (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_APBEINT"]], "gga_k_baltin (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_BALTIN"]], "gga_k_dk (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_DK"]], "gga_k_ernzerhof (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_ERNZERHOF"]], "gga_k_fr_b88 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_FR_B88"]], "gga_k_fr_pw86 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_FR_PW86"]], "gga_k_ge2 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_GE2"]], "gga_k_golden (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_GOLDEN"]], "gga_k_gp85 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_GP85"]], "gga_k_gr (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_GR"]], "gga_k_lc94 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_LC94"]], "gga_k_lieb (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_LIEB"]], "gga_k_llp (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_LLP"]], "gga_k_ludena (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_LUDENA"]], "gga_k_meyer (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_MEYER"]], "gga_k_ol1 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_OL1"]], "gga_k_ol2 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_OL2"]], "gga_k_pearson (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_PEARSON"]], "gga_k_perdew (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_PERDEW"]], "gga_k_revapbe (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_REVAPBE"]], "gga_k_revapbeint (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_REVAPBEINT"]], "gga_k_tfvw (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_TFVW"]], "gga_k_thakkar (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_THAKKAR"]], "gga_k_tw1 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_TW1"]], "gga_k_tw2 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_TW2"]], "gga_k_tw3 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_TW3"]], "gga_k_tw4 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_TW4"]], "gga_k_vjks (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_VJKS"]], "gga_k_vsk (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_VSK"]], "gga_k_vw (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_VW"]], "gga_k_yt65 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_K_YT65"]], "gga_xc_b97_d (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_XC_B97_D"]], "gga_xc_b97_gga1 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_XC_B97_GGA1"]], "gga_xc_edf1 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_XC_EDF1"]], "gga_xc_hcth_120 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_XC_HCTH_120"]], "gga_xc_hcth_147 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_XC_HCTH_147"]], "gga_xc_hcth_407 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_XC_HCTH_407"]], "gga_xc_hcth_407p (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_XC_HCTH_407P"]], "gga_xc_hcth_93 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_XC_HCTH_93"]], "gga_xc_hcth_p14 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_XC_HCTH_P14"]], "gga_xc_hcth_p76 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_XC_HCTH_P76"]], "gga_xc_kt2 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_XC_KT2"]], "gga_xc_mohlyp (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_XC_MOHLYP"]], "gga_xc_mohlyp2 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_XC_MOHLYP2"]], "gga_xc_mpwlyp1w (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_XC_MPWLYP1W"]], "gga_xc_oblyp_d (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_XC_OBLYP_D"]], "gga_xc_opbe_d (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_XC_OPBE_D"]], "gga_xc_opwlyp_d (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_XC_OPWLYP_D"]], "gga_xc_pbe1w (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_XC_PBE1W"]], "gga_xc_pbelyp1w (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_XC_PBELYP1W"]], "gga_xc_th1 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_XC_TH1"]], "gga_xc_th2 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_XC_TH2"]], "gga_xc_th3 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_XC_TH3"]], "gga_xc_th4 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_XC_TH4"]], "gga_xc_th_fc (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_XC_TH_FC"]], "gga_xc_th_fcfo (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_XC_TH_FCFO"]], "gga_xc_th_fco (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_XC_TH_FCO"]], "gga_xc_th_fl (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_XC_TH_FL"]], "gga_xc_vv10 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_XC_VV10"]], "gga_xc_xlyp (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_XC_XLYP"]], "gga_x_2d_b86 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_2D_B86"]], "gga_x_2d_b86_mgc (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_2D_B86_MGC"]], "gga_x_2d_b88 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_2D_B88"]], "gga_x_2d_pbe (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_2D_PBE"]], "gga_x_airy (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_AIRY"]], "gga_x_ak13 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_AK13"]], "gga_x_am05 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_AM05"]], "gga_x_apbe (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_APBE"]], "gga_x_b86 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_B86"]], "gga_x_b86_mgc (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_B86_MGC"]], "gga_x_b86_r (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_B86_R"]], "gga_x_b88 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_B88"]], "gga_x_bayesian (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_BAYESIAN"]], "gga_x_bgcp (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_BGCP"]], "gga_x_bpccac (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_BPCCAC"]], "gga_x_c09x (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_C09X"]], "gga_x_cap (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_CAP"]], "gga_x_dk87_r1 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_DK87_R1"]], "gga_x_dk87_r2 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_DK87_R2"]], "gga_x_ev93 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_EV93"]], "gga_x_ft97_a (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_FT97_A"]], "gga_x_ft97_b (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_FT97_B"]], "gga_x_g96 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_G96"]], "gga_x_gam (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_GAM"]], "gga_x_hcth_a (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_HCTH_A"]], "gga_x_herman (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_HERMAN"]], "gga_x_hjs_b88 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_HJS_B88"]], "gga_x_hjs_b88_v2 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_HJS_B88_V2"]], "gga_x_hjs_b97x (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_HJS_B97X"]], "gga_x_hjs_pbe (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_HJS_PBE"]], "gga_x_hjs_pbe_sol (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_HJS_PBE_SOL"]], "gga_x_htbs (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_HTBS"]], "gga_x_ityh (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_ITYH"]], "gga_x_kt1 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_KT1"]], "gga_x_lag (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_LAG"]], "gga_x_lambda_ch_n (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_LAMBDA_CH_N"]], "gga_x_lambda_lo_n (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_LAMBDA_LO_N"]], "gga_x_lambda_oc2_n (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_LAMBDA_OC2_N"]], "gga_x_lb (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_LB"]], "gga_x_lbm (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_LBM"]], "gga_x_lg93 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_LG93"]], "gga_x_lv_rpw86 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_LV_RPW86"]], "gga_x_mb88 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_MB88"]], "gga_x_mpbe (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_MPBE"]], "gga_x_mpw91 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_MPW91"]], "gga_x_n12 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_N12"]], "gga_x_ol2 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_OL2"]], "gga_x_optb88_vdw (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_OPTB88_VDW"]], "gga_x_optpbe_vdw (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_OPTPBE_VDW"]], "gga_x_optx (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_OPTX"]], "gga_x_pbe (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_PBE"]], "gga_x_pbea (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_PBEA"]], "gga_x_pbefe (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_PBEFE"]], "gga_x_pbeint (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_PBEINT"]], "gga_x_pbek1_vdw (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_PBEK1_VDW"]], "gga_x_pbe_jsjr (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_PBE_JSJR"]], "gga_x_pbe_mol (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_PBE_MOL"]], "gga_x_pbe_r (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_PBE_R"]], "gga_x_pbe_sol (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_PBE_SOL"]], "gga_x_pbe_tca (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_PBE_TCA"]], "gga_x_pw86 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_PW86"]], "gga_x_pw91 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_PW91"]], "gga_x_q2d (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_Q2D"]], "gga_x_rge2 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_RGE2"]], "gga_x_rpbe (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_RPBE"]], "gga_x_rpw86 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_RPW86"]], "gga_x_sfat (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_SFAT"]], "gga_x_sogga (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_SOGGA"]], "gga_x_sogga11 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_SOGGA11"]], "gga_x_ssb (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_SSB"]], "gga_x_ssb_d (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_SSB_D"]], "gga_x_ssb_sw (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_SSB_SW"]], "gga_x_vmt84_ge (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_VMT84_GE"]], "gga_x_vmt84_pbe (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_VMT84_PBE"]], "gga_x_vmt_ge (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_VMT_GE"]], "gga_x_vmt_pbe (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_VMT_PBE"]], "gga_x_wc (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_WC"]], "gga_x_wpbeh (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_WPBEH"]], "gga_x_xpbe (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.GGA_X_XPBE"]], "hyb_gga_xc_b1lyp (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_B1LYP"]], "hyb_gga_xc_b1pw91 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_B1PW91"]], "hyb_gga_xc_b1wc (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_B1WC"]], "hyb_gga_xc_b3lyp (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_B3LYP"]], "hyb_gga_xc_b3lyp5 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_B3LYP5"]], "hyb_gga_xc_b3lyps (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_B3LYPs"]], "hyb_gga_xc_b3p86 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_B3P86"]], "hyb_gga_xc_b3pw91 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_B3PW91"]], "hyb_gga_xc_b97 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_B97"]], "hyb_gga_xc_b97_1 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_B97_1"]], "hyb_gga_xc_b97_1p (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_B97_1p"]], "hyb_gga_xc_b97_2 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_B97_2"]], "hyb_gga_xc_b97_3 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_B97_3"]], "hyb_gga_xc_b97_k (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_B97_K"]], "hyb_gga_xc_bhandh (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_BHANDH"]], "hyb_gga_xc_bhandhlyp (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_BHANDHLYP"]], "hyb_gga_xc_camy_b3lyp (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_CAMY_B3LYP"]], "hyb_gga_xc_camy_blyp (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_CAMY_BLYP"]], "hyb_gga_xc_cam_b3lyp (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_CAM_B3LYP"]], "hyb_gga_xc_cap0 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_CAP0"]], "hyb_gga_xc_edf2 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_EDF2"]], "hyb_gga_xc_hjs_b88 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_HJS_B88"]], "hyb_gga_xc_hjs_b97x (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_HJS_B97X"]], "hyb_gga_xc_hjs_pbe (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_HJS_PBE"]], "hyb_gga_xc_hjs_pbe_sol (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_HJS_PBE_SOL"]], "hyb_gga_xc_hpbeint (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_HPBEINT"]], "hyb_gga_xc_hse03 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_HSE03"]], "hyb_gga_xc_hse06 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_HSE06"]], "hyb_gga_xc_lcy_blyp (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_LCY_BLYP"]], "hyb_gga_xc_lcy_pbe (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_LCY_PBE"]], "hyb_gga_xc_lc_vv10 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_LC_VV10"]], "hyb_gga_xc_lrc_wpbe (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_LRC_WPBE"]], "hyb_gga_xc_lrc_wpbeh (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_LRC_WPBEH"]], "hyb_gga_xc_mb3lyp_rc04 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_MB3LYP_RC04"]], "hyb_gga_xc_mpw3lyp (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_MPW3LYP"]], "hyb_gga_xc_mpw3pw (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_MPW3PW"]], "hyb_gga_xc_mpwlyp1m (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_MPWLYP1M"]], "hyb_gga_xc_o3lyp (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_O3LYP"]], "hyb_gga_xc_pbe0_13 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_PBE0_13"]], "hyb_gga_xc_pbeh (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_PBEH"]], "hyb_gga_xc_revb3lyp (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_REVB3LYP"]], "hyb_gga_xc_sb98_1a (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_SB98_1a"]], "hyb_gga_xc_sb98_1b (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_SB98_1b"]], "hyb_gga_xc_sb98_1c (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_SB98_1c"]], "hyb_gga_xc_sb98_2a (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_SB98_2a"]], "hyb_gga_xc_sb98_2b (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_SB98_2b"]], "hyb_gga_xc_sb98_2c (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_SB98_2c"]], "hyb_gga_xc_tuned_cam_b3lyp (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_TUNED_CAM_B3LYP"]], "hyb_gga_xc_wb97 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_WB97"]], "hyb_gga_xc_wb97x (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_WB97X"]], "hyb_gga_xc_wb97x_d (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_WB97X_D"]], "hyb_gga_xc_wb97x_v (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_WB97X_V"]], "hyb_gga_xc_x3lyp (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_X3LYP"]], "hyb_gga_xc_mpw1k (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_mPW1K"]], "hyb_gga_xc_mpw1pw (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_XC_mPW1PW"]], "hyb_gga_x_n12_sx (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_X_N12_SX"]], "hyb_gga_x_sogga11_x (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_GGA_X_SOGGA11_X"]], "hyb_mgga_xc_b86b95 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_MGGA_XC_B86B95"]], "hyb_mgga_xc_b88b95 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_MGGA_XC_B88B95"]], "hyb_mgga_xc_bb1k (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_MGGA_XC_BB1K"]], "hyb_mgga_xc_m05 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_MGGA_XC_M05"]], "hyb_mgga_xc_m05_2x (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_MGGA_XC_M05_2X"]], "hyb_mgga_xc_m06 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_MGGA_XC_M06"]], "hyb_mgga_xc_m06_2x (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_MGGA_XC_M06_2X"]], "hyb_mgga_xc_m06_hf (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_MGGA_XC_M06_HF"]], "hyb_mgga_xc_m08_hx (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_MGGA_XC_M08_HX"]], "hyb_mgga_xc_m08_so (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_MGGA_XC_M08_SO"]], "hyb_mgga_xc_m11 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_MGGA_XC_M11"]], "hyb_mgga_xc_mpw1b95 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_MGGA_XC_MPW1B95"]], "hyb_mgga_xc_mpwb1k (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_MGGA_XC_MPWB1K"]], "hyb_mgga_xc_pw6b95 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_MGGA_XC_PW6B95"]], "hyb_mgga_xc_pw86b95 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_MGGA_XC_PW86B95"]], "hyb_mgga_xc_pwb6k (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_MGGA_XC_PWB6K"]], "hyb_mgga_xc_revtpssh (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_MGGA_XC_REVTPSSH"]], "hyb_mgga_xc_tpssh (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_MGGA_XC_TPSSH"]], "hyb_mgga_xc_wb97m_v (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_MGGA_XC_WB97M_V"]], "hyb_mgga_xc_x1b95 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_MGGA_XC_X1B95"]], "hyb_mgga_xc_xb1k (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_MGGA_XC_XB1K"]], "hyb_mgga_x_dldf (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_MGGA_X_DLDF"]], "hyb_mgga_x_mn12_sx (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_MGGA_X_MN12_SX"]], "hyb_mgga_x_mn15 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_MGGA_X_MN15"]], "hyb_mgga_x_ms2h (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_MGGA_X_MS2H"]], "hyb_mgga_x_mvsh (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_MGGA_X_MVSH"]], "hyb_mgga_x_scan0 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.HYB_MGGA_X_SCAN0"]], "lda_c_1d_csc (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_C_1D_CSC"]], "lda_c_1d_loos (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_C_1D_LOOS"]], "lda_c_2d_amgb (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_C_2D_AMGB"]], "lda_c_2d_prm (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_C_2D_PRM"]], "lda_c_gl (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_C_GL"]], "lda_c_gombas (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_C_GOMBAS"]], "lda_c_hl (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_C_HL"]], "lda_c_ml1 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_C_ML1"]], "lda_c_ml2 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_C_ML2"]], "lda_c_ob_pw (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_C_OB_PW"]], "lda_c_ob_pz (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_C_OB_PZ"]], "lda_c_pw (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_C_PW"]], "lda_c_pw_mod (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_C_PW_MOD"]], "lda_c_pw_rpa (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_C_PW_RPA"]], "lda_c_pz (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_C_PZ"]], "lda_c_pz_mod (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_C_PZ_MOD"]], "lda_c_rc04 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_C_RC04"]], "lda_c_rpa (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_C_RPA"]], "lda_c_vwn (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_C_VWN"]], "lda_c_vwn_1 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_C_VWN_1"]], "lda_c_vwn_2 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_C_VWN_2"]], "lda_c_vwn_3 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_C_VWN_3"]], "lda_c_vwn_4 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_C_VWN_4"]], "lda_c_vwn_rpa (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_C_VWN_RPA"]], "lda_c_wigner (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_C_WIGNER"]], "lda_c_xalpha (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_C_XALPHA"]], "lda_c_vbh (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_C_vBH"]], "lda_k_lp (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_K_LP"]], "lda_k_tf (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_K_TF"]], "lda_x (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_X"]], "lda_xc_ksdt (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_XC_KSDT"]], "lda_xc_teter93 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_XC_TETER93"]], "lda_xc_zlp (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_XC_ZLP"]], "lda_x_1d (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_X_1D"]], "lda_x_2d (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.LDA_X_2D"]], "libxcfunc (class in pymatgen.core.libxcfunc)": [[141, "pymatgen.core.libxcfunc.LibxcFunc"]], "mgga_c_bc95 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_C_BC95"]], "mgga_c_cc06 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_C_CC06"]], "mgga_c_cs (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_C_CS"]], "mgga_c_dldf (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_C_DLDF"]], "mgga_c_m05 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_C_M05"]], "mgga_c_m05_2x (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_C_M05_2X"]], "mgga_c_m06 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_C_M06"]], "mgga_c_m06_2x (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_C_M06_2X"]], "mgga_c_m06_hf (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_C_M06_HF"]], "mgga_c_m06_l (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_C_M06_L"]], "mgga_c_m08_hx (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_C_M08_HX"]], "mgga_c_m08_so (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_C_M08_SO"]], "mgga_c_m11 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_C_M11"]], "mgga_c_m11_l (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_C_M11_L"]], "mgga_c_mn12_l (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_C_MN12_L"]], "mgga_c_mn12_sx (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_C_MN12_SX"]], "mgga_c_mn15 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_C_MN15"]], "mgga_c_mn15_l (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_C_MN15_L"]], "mgga_c_pkzb (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_C_PKZB"]], "mgga_c_revtpss (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_C_REVTPSS"]], "mgga_c_scan (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_C_SCAN"]], "mgga_c_tpss (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_C_TPSS"]], "mgga_c_tpssloc (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_C_TPSSLOC"]], "mgga_c_vsxc (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_C_VSXC"]], "mgga_xc_b97m_v (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_XC_B97M_V"]], "mgga_xc_otpss_d (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_XC_OTPSS_D"]], "mgga_xc_tpsslyp1w (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_XC_TPSSLYP1W"]], "mgga_xc_zlp (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_XC_ZLP"]], "mgga_x_2d_prhg07 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_2D_PRHG07"]], "mgga_x_2d_prhg07_prp10 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_2D_PRHG07_PRP10"]], "mgga_x_bj06 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_BJ06"]], "mgga_x_bloc (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_BLOC"]], "mgga_x_br89 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_BR89"]], "mgga_x_gvt4 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_GVT4"]], "mgga_x_lta (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_LTA"]], "mgga_x_m05 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_M05"]], "mgga_x_m05_2x (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_M05_2X"]], "mgga_x_m06 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_M06"]], "mgga_x_m06_2x (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_M06_2X"]], "mgga_x_m06_hf (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_M06_HF"]], "mgga_x_m06_l (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_M06_L"]], "mgga_x_m08_hx (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_M08_HX"]], "mgga_x_m08_so (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_M08_SO"]], "mgga_x_m11 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_M11"]], "mgga_x_m11_l (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_M11_L"]], "mgga_x_mbeef (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_MBEEF"]], "mgga_x_mbeefvdw (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_MBEEFVDW"]], "mgga_x_mk00 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_MK00"]], "mgga_x_mk00b (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_MK00B"]], "mgga_x_mn12_l (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_MN12_L"]], "mgga_x_mn15_l (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_MN15_L"]], "mgga_x_modtpss (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_MODTPSS"]], "mgga_x_ms0 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_MS0"]], "mgga_x_ms1 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_MS1"]], "mgga_x_ms2 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_MS2"]], "mgga_x_mvs (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_MVS"]], "mgga_x_pkzb (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_PKZB"]], "mgga_x_revtpss (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_REVTPSS"]], "mgga_x_rpp09 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_RPP09"]], "mgga_x_scan (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_SCAN"]], "mgga_x_tau_hcth (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_TAU_HCTH"]], "mgga_x_tb09 (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_TB09"]], "mgga_x_tpss (libxcfunc attribute)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.MGGA_X_TPSS"]], "all_families() (libxcfunc static method)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.all_families"]], "all_kinds() (libxcfunc static method)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.all_kinds"]], "as_dict() (libxcfunc method)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.as_dict"]], "from_dict() (libxcfunc static method)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.from_dict"]], "info_dict (libxcfunc property)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.info_dict"]], "is_c_kind (libxcfunc property)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.is_c_kind"]], "is_gga_family (libxcfunc property)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.is_gga_family"]], "is_hyb_gga_family (libxcfunc property)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.is_hyb_gga_family"]], "is_hyb_mgga_family (libxcfunc property)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.is_hyb_mgga_family"]], "is_k_kind (libxcfunc property)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.is_k_kind"]], "is_lda_family (libxcfunc property)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.is_lda_family"]], "is_mgga_family (libxcfunc property)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.is_mgga_family"]], "is_x_kind (libxcfunc property)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.is_x_kind"]], "is_xc_kind (libxcfunc property)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.is_xc_kind"]], "pymatgen.core.libxcfunc": [[141, "module-pymatgen.core.libxcfunc"]], "to_json() (libxcfunc method)": [[141, "pymatgen.core.libxcfunc.LibxcFunc.to_json"]], "molecularorbitals (class in pymatgen.core.molecular_orbitals)": [[142, "pymatgen.core.molecular_orbitals.MolecularOrbitals"]], "aos (molecularorbitals attribute)": [[142, "pymatgen.core.molecular_orbitals.MolecularOrbitals.aos"]], "aos_as_list() (molecularorbitals method)": [[142, "pymatgen.core.molecular_orbitals.MolecularOrbitals.aos_as_list"]], "band_edges (molecularorbitals attribute)": [[142, "pymatgen.core.molecular_orbitals.MolecularOrbitals.band_edges"]], "composition (molecularorbitals attribute)": [[142, "pymatgen.core.molecular_orbitals.MolecularOrbitals.composition"]], "elec_neg (molecularorbitals attribute)": [[142, "pymatgen.core.molecular_orbitals.MolecularOrbitals.elec_neg"]], "elements (molecularorbitals attribute)": [[142, "pymatgen.core.molecular_orbitals.MolecularOrbitals.elements"]], "max_electronegativity() (molecularorbitals method)": [[142, "pymatgen.core.molecular_orbitals.MolecularOrbitals.max_electronegativity"]], "obtain_band_edges() (molecularorbitals method)": [[142, "pymatgen.core.molecular_orbitals.MolecularOrbitals.obtain_band_edges"]], "pymatgen.core.molecular_orbitals": [[142, "module-pymatgen.core.molecular_orbitals"]], "magsymmop (class in pymatgen.core.operations)": [[143, "pymatgen.core.operations.MagSymmOp"]], "symmop (class in pymatgen.core.operations)": [[143, "pymatgen.core.operations.SymmOp"]], "affine_matrix (symmop attribute)": [[143, "pymatgen.core.operations.SymmOp.affine_matrix"]], "apply_rotation_only() (symmop method)": [[143, "pymatgen.core.operations.SymmOp.apply_rotation_only"]], "are_symmetrically_related() (symmop method)": [[143, "pymatgen.core.operations.SymmOp.are_symmetrically_related"]], "are_symmetrically_related_vectors() (symmop method)": [[143, "pymatgen.core.operations.SymmOp.are_symmetrically_related_vectors"]], "as_dict() (magsymmop method)": [[143, "pymatgen.core.operations.MagSymmOp.as_dict"]], "as_dict() (symmop method)": [[143, "pymatgen.core.operations.SymmOp.as_dict"]], "as_xyz_string() (symmop method)": [[143, "pymatgen.core.operations.SymmOp.as_xyz_string"]], "as_xyzt_string() (magsymmop method)": [[143, "pymatgen.core.operations.MagSymmOp.as_xyzt_string"]], "from_axis_angle_and_translation() (symmop static method)": [[143, "pymatgen.core.operations.SymmOp.from_axis_angle_and_translation"]], "from_dict() (magsymmop class method)": [[143, "pymatgen.core.operations.MagSymmOp.from_dict"]], "from_dict() (symmop class method)": [[143, "pymatgen.core.operations.SymmOp.from_dict"]], "from_origin_axis_angle() (symmop static method)": [[143, "pymatgen.core.operations.SymmOp.from_origin_axis_angle"]], "from_rotation_and_translation() (symmop static method)": [[143, "pymatgen.core.operations.SymmOp.from_rotation_and_translation"]], "from_rotation_and_translation_and_time_reversal() (magsymmop static method)": [[143, "pymatgen.core.operations.MagSymmOp.from_rotation_and_translation_and_time_reversal"]], "from_symmop() (magsymmop class method)": [[143, "pymatgen.core.operations.MagSymmOp.from_symmop"]], "from_xyz_string() (symmop static method)": [[143, "pymatgen.core.operations.SymmOp.from_xyz_string"]], "from_xyzt_string() (magsymmop static method)": [[143, "pymatgen.core.operations.MagSymmOp.from_xyzt_string"]], "inverse (symmop property)": [[143, "pymatgen.core.operations.SymmOp.inverse"]], "inversion() (symmop static method)": [[143, "pymatgen.core.operations.SymmOp.inversion"]], "operate() (symmop method)": [[143, "pymatgen.core.operations.SymmOp.operate"]], "operate_magmom() (magsymmop method)": [[143, "pymatgen.core.operations.MagSymmOp.operate_magmom"]], "operate_multi() (symmop method)": [[143, "pymatgen.core.operations.SymmOp.operate_multi"]], "pymatgen.core.operations": [[143, "module-pymatgen.core.operations"]], "reflection() (symmop static method)": [[143, "pymatgen.core.operations.SymmOp.reflection"]], "rotation_matrix (symmop property)": [[143, "pymatgen.core.operations.SymmOp.rotation_matrix"]], "rotoreflection() (symmop static method)": [[143, "pymatgen.core.operations.SymmOp.rotoreflection"]], "transform_tensor() (symmop method)": [[143, "pymatgen.core.operations.SymmOp.transform_tensor"]], "translation_vector (symmop property)": [[143, "pymatgen.core.operations.SymmOp.translation_vector"]], "ac (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Ac"]], "ag (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Ag"]], "al (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Al"]], "am (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Am"]], "ar (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Ar"]], "as (element attribute)": [[144, "pymatgen.core.periodic_table.Element.As"]], "at (element attribute)": [[144, "pymatgen.core.periodic_table.Element.At"]], "au (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Au"]], "b (element attribute)": [[144, "pymatgen.core.periodic_table.Element.B"]], "ba (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Ba"]], "be (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Be"]], "bh (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Bh"]], "bi (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Bi"]], "bk (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Bk"]], "br (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Br"]], "c (element attribute)": [[144, "pymatgen.core.periodic_table.Element.C"]], "ca (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Ca"]], "cd (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Cd"]], "ce (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Ce"]], "cf (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Cf"]], "cl (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Cl"]], "cm (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Cm"]], "cn (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Cn"]], "co (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Co"]], "cr (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Cr"]], "cs (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Cs"]], "cu (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Cu"]], "db (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Db"]], "ds (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Ds"]], "dummyspecie (class in pymatgen.core.periodic_table)": [[144, "pymatgen.core.periodic_table.DummySpecie"]], "dummyspecies (class in pymatgen.core.periodic_table)": [[144, "pymatgen.core.periodic_table.DummySpecies"]], "dy (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Dy"]], "element (class in pymatgen.core.periodic_table)": [[144, "pymatgen.core.periodic_table.Element"]], "elementbase (class in pymatgen.core.periodic_table)": [[144, "pymatgen.core.periodic_table.ElementBase"]], "er (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Er"]], "es (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Es"]], "eu (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Eu"]], "f (element attribute)": [[144, "pymatgen.core.periodic_table.Element.F"]], "fe (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Fe"]], "fl (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Fl"]], "fm (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Fm"]], "fr (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Fr"]], "ga (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Ga"]], "gd (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Gd"]], "ge (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Ge"]], "h (element attribute)": [[144, "pymatgen.core.periodic_table.Element.H"]], "he (element attribute)": [[144, "pymatgen.core.periodic_table.Element.He"]], "hf (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Hf"]], "hg (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Hg"]], "ho (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Ho"]], "hs (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Hs"]], "i (element attribute)": [[144, "pymatgen.core.periodic_table.Element.I"]], "in (element attribute)": [[144, "pymatgen.core.periodic_table.Element.In"]], "ir (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Ir"]], "k (element attribute)": [[144, "pymatgen.core.periodic_table.Element.K"]], "kr (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Kr"]], "la (element attribute)": [[144, "pymatgen.core.periodic_table.Element.La"]], "li (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Li"]], "lr (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Lr"]], "lu (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Lu"]], "lv (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Lv"]], "mc (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Mc"]], "md (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Md"]], "mg (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Mg"]], "mn (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Mn"]], "mo (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Mo"]], "mt (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Mt"]], "n (element attribute)": [[144, "pymatgen.core.periodic_table.Element.N"]], "na (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Na"]], "nb (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Nb"]], "nd (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Nd"]], "ne (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Ne"]], "nh (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Nh"]], "ni (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Ni"]], "no (element attribute)": [[144, "pymatgen.core.periodic_table.Element.No"]], "np (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Np"]], "o (element attribute)": [[144, "pymatgen.core.periodic_table.Element.O"]], "og (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Og"]], "os (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Os"]], "p (element attribute)": [[144, "pymatgen.core.periodic_table.Element.P"]], "pa (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Pa"]], "pb (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Pb"]], "pd (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Pd"]], "pm (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Pm"]], "po (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Po"]], "pr (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Pr"]], "pt (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Pt"]], "pu (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Pu"]], "ra (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Ra"]], "rb (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Rb"]], "re (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Re"]], "rf (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Rf"]], "rg (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Rg"]], "rh (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Rh"]], "rn (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Rn"]], "ru (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Ru"]], "s (element attribute)": [[144, "pymatgen.core.periodic_table.Element.S"]], "string_mode (species attribute)": [[144, "pymatgen.core.periodic_table.Species.STRING_MODE"]], "sb (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Sb"]], "sc (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Sc"]], "se (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Se"]], "sg (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Sg"]], "si (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Si"]], "sm (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Sm"]], "sn (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Sn"]], "specie (class in pymatgen.core.periodic_table)": [[144, "pymatgen.core.periodic_table.Specie"]], "species (class in pymatgen.core.periodic_table)": [[144, "pymatgen.core.periodic_table.Species"]], "sr (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Sr"]], "ta (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Ta"]], "tb (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Tb"]], "tc (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Tc"]], "te (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Te"]], "th (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Th"]], "ti (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Ti"]], "tl (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Tl"]], "tm (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Tm"]], "ts (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Ts"]], "u (element attribute)": [[144, "pymatgen.core.periodic_table.Element.U"]], "v (element attribute)": [[144, "pymatgen.core.periodic_table.Element.V"]], "w (element attribute)": [[144, "pymatgen.core.periodic_table.Element.W"]], "x (dummyspecies attribute)": [[144, "pymatgen.core.periodic_table.DummySpecies.X"]], "x (dummyspecies property)": [[144, "id0"]], "x (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.X"]], "xe (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Xe"]], "y (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Y"]], "yb (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Yb"]], "z (dummyspecies attribute)": [[144, "pymatgen.core.periodic_table.DummySpecies.Z"]], "z (dummyspecies property)": [[144, "id1"]], "z (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Z"]], "z (elementbase attribute)": [[144, "pymatgen.core.periodic_table.ElementBase.Z"]], "zn (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Zn"]], "zr (element attribute)": [[144, "pymatgen.core.periodic_table.Element.Zr"]], "as_dict() (dummyspecies method)": [[144, "pymatgen.core.periodic_table.DummySpecies.as_dict"]], "as_dict() (elementbase method)": [[144, "pymatgen.core.periodic_table.ElementBase.as_dict"]], "as_dict() (species method)": [[144, "pymatgen.core.periodic_table.Species.as_dict"]], "atomic_mass (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.atomic_mass"]], "atomic_orbitals (element attribute)": [[144, "pymatgen.core.periodic_table.Element.atomic_orbitals"]], "atomic_orbitals (elementbase attribute)": [[144, "pymatgen.core.periodic_table.ElementBase.atomic_orbitals"]], "atomic_radius (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.atomic_radius"]], "atomic_radius_calculated (element attribute)": [[144, "pymatgen.core.periodic_table.Element.atomic_radius_calculated"]], "atomic_radius_calculated (elementbase attribute)": [[144, "pymatgen.core.periodic_table.ElementBase.atomic_radius_calculated"]], "average_anionic_radius (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.average_anionic_radius"]], "average_cationic_radius (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.average_cationic_radius"]], "average_ionic_radius (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.average_ionic_radius"]], "block (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.block"]], "boiling_point (element attribute)": [[144, "pymatgen.core.periodic_table.Element.boiling_point"]], "boiling_point (elementbase attribute)": [[144, "pymatgen.core.periodic_table.ElementBase.boiling_point"]], "brinell_hardness (element attribute)": [[144, "pymatgen.core.periodic_table.Element.brinell_hardness"]], "brinell_hardness (elementbase attribute)": [[144, "pymatgen.core.periodic_table.ElementBase.brinell_hardness"]], "bulk_modulus (element attribute)": [[144, "pymatgen.core.periodic_table.Element.bulk_modulus"]], "bulk_modulus (elementbase attribute)": [[144, "pymatgen.core.periodic_table.ElementBase.bulk_modulus"]], "coefficient_of_linear_thermal_expansion (element attribute)": [[144, "pymatgen.core.periodic_table.Element.coefficient_of_linear_thermal_expansion"]], "coefficient_of_linear_thermal_expansion (elementbase attribute)": [[144, "pymatgen.core.periodic_table.ElementBase.coefficient_of_linear_thermal_expansion"]], "common_oxidation_states (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.common_oxidation_states"]], "critical_temperature (element attribute)": [[144, "pymatgen.core.periodic_table.Element.critical_temperature"]], "critical_temperature (elementbase attribute)": [[144, "pymatgen.core.periodic_table.ElementBase.critical_temperature"]], "data (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.data"]], "density_of_solid (element attribute)": [[144, "pymatgen.core.periodic_table.Element.density_of_solid"]], "density_of_solid (elementbase attribute)": [[144, "pymatgen.core.periodic_table.ElementBase.density_of_solid"]], "electrical_resistivity (element attribute)": [[144, "pymatgen.core.periodic_table.Element.electrical_resistivity"]], "electrical_resistivity (elementbase attribute)": [[144, "pymatgen.core.periodic_table.ElementBase.electrical_resistivity"]], "electron_affinity (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.electron_affinity"]], "electronic_structure (element attribute)": [[144, "pymatgen.core.periodic_table.Element.electronic_structure"]], "electronic_structure (elementbase attribute)": [[144, "pymatgen.core.periodic_table.ElementBase.electronic_structure"]], "electronic_structure (elementbase property)": [[144, "id3"]], "element (species property)": [[144, "pymatgen.core.periodic_table.Species.element"]], "from_z() (elementbase static method)": [[144, "pymatgen.core.periodic_table.ElementBase.from_Z"]], "from_dict() (dummyspecies class method)": [[144, "pymatgen.core.periodic_table.DummySpecies.from_dict"]], "from_dict() (elementbase static method)": [[144, "pymatgen.core.periodic_table.ElementBase.from_dict"]], "from_dict() (species class method)": [[144, "pymatgen.core.periodic_table.Species.from_dict"]], "from_name() (elementbase static method)": [[144, "pymatgen.core.periodic_table.ElementBase.from_name"]], "from_row_and_group() (elementbase static method)": [[144, "pymatgen.core.periodic_table.ElementBase.from_row_and_group"]], "from_string() (dummyspecies static method)": [[144, "pymatgen.core.periodic_table.DummySpecies.from_string"]], "from_string() (species static method)": [[144, "pymatgen.core.periodic_table.Species.from_string"]], "full_electronic_structure (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.full_electronic_structure"]], "get_crystal_field_spin() (species method)": [[144, "pymatgen.core.periodic_table.Species.get_crystal_field_spin"]], "get_el_sp() (in module pymatgen.core.periodic_table)": [[144, "pymatgen.core.periodic_table.get_el_sp"]], "get_nmr_quadrupole_moment() (species method)": [[144, "pymatgen.core.periodic_table.Species.get_nmr_quadrupole_moment"]], "get_shannon_radius() (species method)": [[144, "pymatgen.core.periodic_table.Species.get_shannon_radius"]], "ground_level (element attribute)": [[144, "pymatgen.core.periodic_table.Element.ground_level"]], "ground_level (elementbase attribute)": [[144, "pymatgen.core.periodic_table.ElementBase.ground_level"]], "ground_state_term_symbol (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.ground_state_term_symbol"]], "group (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.group"]], "icsd_oxidation_states (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.icsd_oxidation_states"]], "ionic_radii (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.ionic_radii"]], "ionic_radius (species property)": [[144, "pymatgen.core.periodic_table.Species.ionic_radius"]], "ionization_energies (element attribute)": [[144, "pymatgen.core.periodic_table.Element.ionization_energies"]], "ionization_energies (elementbase attribute)": [[144, "pymatgen.core.periodic_table.ElementBase.ionization_energies"]], "ionization_energy (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.ionization_energy"]], "is_actinoid (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.is_actinoid"]], "is_alkali (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.is_alkali"]], "is_alkaline (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.is_alkaline"]], "is_chalcogen (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.is_chalcogen"]], "is_halogen (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.is_halogen"]], "is_lanthanoid (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.is_lanthanoid"]], "is_metal (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.is_metal"]], "is_metalloid (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.is_metalloid"]], "is_noble_gas (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.is_noble_gas"]], "is_post_transition_metal (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.is_post_transition_metal"]], "is_quadrupolar (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.is_quadrupolar"]], "is_rare_earth_metal (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.is_rare_earth_metal"]], "is_transition_metal (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.is_transition_metal"]], "is_valid_symbol() (elementbase static method)": [[144, "pymatgen.core.periodic_table.ElementBase.is_valid_symbol"]], "iupac_ordering (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.iupac_ordering"]], "liquid_range (element attribute)": [[144, "pymatgen.core.periodic_table.Element.liquid_range"]], "liquid_range (elementbase attribute)": [[144, "pymatgen.core.periodic_table.ElementBase.liquid_range"]], "long_name (element attribute)": [[144, "pymatgen.core.periodic_table.Element.long_name"]], "long_name (elementbase attribute)": [[144, "pymatgen.core.periodic_table.ElementBase.long_name"]], "max_oxidation_state (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.max_oxidation_state"]], "melting_point (element attribute)": [[144, "pymatgen.core.periodic_table.Element.melting_point"]], "melting_point (elementbase attribute)": [[144, "pymatgen.core.periodic_table.ElementBase.melting_point"]], "mendeleev_no (element attribute)": [[144, "pymatgen.core.periodic_table.Element.mendeleev_no"]], "mendeleev_no (elementbase attribute)": [[144, "pymatgen.core.periodic_table.ElementBase.mendeleev_no"]], "metallic_radius (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.metallic_radius"]], "min_oxidation_state (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.min_oxidation_state"]], "mineral_hardness (element attribute)": [[144, "pymatgen.core.periodic_table.Element.mineral_hardness"]], "mineral_hardness (elementbase attribute)": [[144, "pymatgen.core.periodic_table.ElementBase.mineral_hardness"]], "molar_volume (element attribute)": [[144, "pymatgen.core.periodic_table.Element.molar_volume"]], "molar_volume (elementbase attribute)": [[144, "pymatgen.core.periodic_table.ElementBase.molar_volume"]], "nmr_quadrupole_moment (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.nmr_quadrupole_moment"]], "number (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.number"]], "oxi_state (dummyspecies attribute)": [[144, "pymatgen.core.periodic_table.DummySpecies.oxi_state"]], "oxi_state (dummyspecies property)": [[144, "id2"]], "oxi_state (species property)": [[144, "pymatgen.core.periodic_table.Species.oxi_state"]], "oxidation_states (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.oxidation_states"]], "poissons_ratio (element attribute)": [[144, "pymatgen.core.periodic_table.Element.poissons_ratio"]], "poissons_ratio (elementbase attribute)": [[144, "pymatgen.core.periodic_table.ElementBase.poissons_ratio"]], "print_periodic_table() (elementbase static method)": [[144, "pymatgen.core.periodic_table.ElementBase.print_periodic_table"]], "properties (species property)": [[144, "pymatgen.core.periodic_table.Species.properties"]], "pymatgen.core.periodic_table": [[144, "module-pymatgen.core.periodic_table"]], "reflectivity (element attribute)": [[144, "pymatgen.core.periodic_table.Element.reflectivity"]], "reflectivity (elementbase attribute)": [[144, "pymatgen.core.periodic_table.ElementBase.reflectivity"]], "refractive_index (element attribute)": [[144, "pymatgen.core.periodic_table.Element.refractive_index"]], "refractive_index (elementbase attribute)": [[144, "pymatgen.core.periodic_table.ElementBase.refractive_index"]], "rigidity_modulus (element attribute)": [[144, "pymatgen.core.periodic_table.Element.rigidity_modulus"]], "rigidity_modulus (elementbase attribute)": [[144, "pymatgen.core.periodic_table.ElementBase.rigidity_modulus"]], "row (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.row"]], "spin (species property)": [[144, "pymatgen.core.periodic_table.Species.spin"]], "superconduction_temperature (element attribute)": [[144, "pymatgen.core.periodic_table.Element.superconduction_temperature"]], "superconduction_temperature (elementbase attribute)": [[144, "pymatgen.core.periodic_table.ElementBase.superconduction_temperature"]], "symbol (dummyspecies property)": [[144, "pymatgen.core.periodic_table.DummySpecies.symbol"]], "symbol (element attribute)": [[144, "pymatgen.core.periodic_table.Element.symbol"]], "symbol (elementbase attribute)": [[144, "pymatgen.core.periodic_table.ElementBase.symbol"]], "term_symbols (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.term_symbols"]], "thermal_conductivity (element attribute)": [[144, "pymatgen.core.periodic_table.Element.thermal_conductivity"]], "thermal_conductivity (elementbase attribute)": [[144, "pymatgen.core.periodic_table.ElementBase.thermal_conductivity"]], "to_pretty_string() (species method)": [[144, "pymatgen.core.periodic_table.Species.to_pretty_string"]], "valence (elementbase property)": [[144, "pymatgen.core.periodic_table.ElementBase.valence"]], "van_der_waals_radius (element attribute)": [[144, "pymatgen.core.periodic_table.Element.van_der_waals_radius"]], "van_der_waals_radius (elementbase attribute)": [[144, "pymatgen.core.periodic_table.ElementBase.van_der_waals_radius"]], "velocity_of_sound (element attribute)": [[144, "pymatgen.core.periodic_table.Element.velocity_of_sound"]], "velocity_of_sound (elementbase attribute)": [[144, "pymatgen.core.periodic_table.ElementBase.velocity_of_sound"]], "vickers_hardness (element attribute)": [[144, "pymatgen.core.periodic_table.Element.vickers_hardness"]], "vickers_hardness (elementbase attribute)": [[144, "pymatgen.core.periodic_table.ElementBase.vickers_hardness"]], "youngs_modulus (element attribute)": [[144, "pymatgen.core.periodic_table.Element.youngs_modulus"]], "youngs_modulus (elementbase attribute)": [[144, "pymatgen.core.periodic_table.ElementBase.youngs_modulus"]], "periodicsite (class in pymatgen.core.sites)": [[145, "pymatgen.core.sites.PeriodicSite"]], "site (class in pymatgen.core.sites)": [[145, "pymatgen.core.sites.Site"]], "a (periodicsite property)": [[145, "pymatgen.core.sites.PeriodicSite.a"]], "as_dict() (periodicsite method)": [[145, "pymatgen.core.sites.PeriodicSite.as_dict"]], "as_dict() (site method)": [[145, "pymatgen.core.sites.Site.as_dict"]], "b (periodicsite property)": [[145, "pymatgen.core.sites.PeriodicSite.b"]], "c (periodicsite property)": [[145, "pymatgen.core.sites.PeriodicSite.c"]], "coords (periodicsite property)": [[145, "pymatgen.core.sites.PeriodicSite.coords"]], "distance() (periodicsite method)": [[145, "pymatgen.core.sites.PeriodicSite.distance"]], "distance() (site method)": [[145, "pymatgen.core.sites.Site.distance"]], "distance_and_image() (periodicsite method)": [[145, "pymatgen.core.sites.PeriodicSite.distance_and_image"]], "distance_and_image_from_frac_coords() (periodicsite method)": [[145, "pymatgen.core.sites.PeriodicSite.distance_and_image_from_frac_coords"]], "distance_from_point() (site method)": [[145, "pymatgen.core.sites.Site.distance_from_point"]], "frac_coords (periodicsite property)": [[145, "pymatgen.core.sites.PeriodicSite.frac_coords"]], "from_dict() (periodicsite class method)": [[145, "pymatgen.core.sites.PeriodicSite.from_dict"]], "from_dict() (site class method)": [[145, "pymatgen.core.sites.Site.from_dict"]], "is_ordered (site property)": [[145, "pymatgen.core.sites.Site.is_ordered"]], "is_periodic_image() (periodicsite method)": [[145, "pymatgen.core.sites.PeriodicSite.is_periodic_image"]], "lattice (periodicsite property)": [[145, "pymatgen.core.sites.PeriodicSite.lattice"]], "position_atol (site attribute)": [[145, "pymatgen.core.sites.Site.position_atol"]], "pymatgen.core.sites": [[145, "module-pymatgen.core.sites"]], "specie (site property)": [[145, "pymatgen.core.sites.Site.specie"]], "species (site property)": [[145, "pymatgen.core.sites.Site.species"]], "species_string (site property)": [[145, "pymatgen.core.sites.Site.species_string"]], "to_unit_cell() (periodicsite method)": [[145, "pymatgen.core.sites.PeriodicSite.to_unit_cell"]], "x (periodicsite property)": [[145, "pymatgen.core.sites.PeriodicSite.x"]], "x (site property)": [[145, "pymatgen.core.sites.Site.x"]], "y (periodicsite property)": [[145, "pymatgen.core.sites.PeriodicSite.y"]], "y (site property)": [[145, "pymatgen.core.sites.Site.y"]], "z (periodicsite property)": [[145, "pymatgen.core.sites.PeriodicSite.z"]], "z (site property)": [[145, "pymatgen.core.sites.Site.z"]], "spectrum (class in pymatgen.core.spectrum)": [[146, "pymatgen.core.spectrum.Spectrum"]], "xlabel (spectrum attribute)": [[146, "pymatgen.core.spectrum.Spectrum.XLABEL"]], "ylabel (spectrum attribute)": [[146, "pymatgen.core.spectrum.Spectrum.YLABEL"]], "copy() (spectrum method)": [[146, "pymatgen.core.spectrum.Spectrum.copy"]], "get_interpolated_value() (spectrum method)": [[146, "pymatgen.core.spectrum.Spectrum.get_interpolated_value"]], "lorentzian() (in module pymatgen.core.spectrum)": [[146, "pymatgen.core.spectrum.lorentzian"]], "normalize() (spectrum method)": [[146, "pymatgen.core.spectrum.Spectrum.normalize"]], "pymatgen.core.spectrum": [[146, "module-pymatgen.core.spectrum"]], "smear() (spectrum method)": [[146, "pymatgen.core.spectrum.Spectrum.smear"]], "distance_tolerance (sitecollection attribute)": [[147, "pymatgen.core.structure.SiteCollection.DISTANCE_TOLERANCE"]], "imolecule (class in pymatgen.core.structure)": [[147, "pymatgen.core.structure.IMolecule"]], "istructure (class in pymatgen.core.structure)": [[147, "pymatgen.core.structure.IStructure"]], "molecule (class in pymatgen.core.structure)": [[147, "pymatgen.core.structure.Molecule"]], "neighbor (class in pymatgen.core.structure)": [[147, "pymatgen.core.structure.Neighbor"]], "periodicneighbor (class in pymatgen.core.structure)": [[147, "pymatgen.core.structure.PeriodicNeighbor"]], "sitecollection (class in pymatgen.core.structure)": [[147, "pymatgen.core.structure.SiteCollection"]], "structure (class in pymatgen.core.structure)": [[147, "pymatgen.core.structure.Structure"]], "structureerror": [[147, "pymatgen.core.structure.StructureError"]], "add_oxidation_state_by_element() (sitecollection method)": [[147, "pymatgen.core.structure.SiteCollection.add_oxidation_state_by_element"]], "add_oxidation_state_by_guess() (sitecollection method)": [[147, "pymatgen.core.structure.SiteCollection.add_oxidation_state_by_guess"]], "add_oxidation_state_by_site() (sitecollection method)": [[147, "pymatgen.core.structure.SiteCollection.add_oxidation_state_by_site"]], "add_site_property() (sitecollection method)": [[147, "pymatgen.core.structure.SiteCollection.add_site_property"]], "add_spin_by_element() (sitecollection method)": [[147, "pymatgen.core.structure.SiteCollection.add_spin_by_element"]], "add_spin_by_site() (sitecollection method)": [[147, "pymatgen.core.structure.SiteCollection.add_spin_by_site"]], "append() (molecule method)": [[147, "pymatgen.core.structure.Molecule.append"]], "append() (structure method)": [[147, "pymatgen.core.structure.Structure.append"]], "apply_operation() (molecule method)": [[147, "pymatgen.core.structure.Molecule.apply_operation"]], "apply_operation() (structure method)": [[147, "pymatgen.core.structure.Structure.apply_operation"]], "apply_strain() (structure method)": [[147, "pymatgen.core.structure.Structure.apply_strain"]], "as_dataframe() (istructure method)": [[147, "pymatgen.core.structure.IStructure.as_dataframe"]], "as_dict() (imolecule method)": [[147, "pymatgen.core.structure.IMolecule.as_dict"]], "as_dict() (istructure method)": [[147, "pymatgen.core.structure.IStructure.as_dict"]], "as_dict() (neighbor method)": [[147, "pymatgen.core.structure.Neighbor.as_dict"]], "as_dict() (periodicneighbor method)": [[147, "pymatgen.core.structure.PeriodicNeighbor.as_dict"]], "atomic_numbers (sitecollection property)": [[147, "pymatgen.core.structure.SiteCollection.atomic_numbers"]], "break_bond() (imolecule method)": [[147, "pymatgen.core.structure.IMolecule.break_bond"]], "calculate() (molecule method)": [[147, "pymatgen.core.structure.Molecule.calculate"]], "calculate() (structure method)": [[147, "pymatgen.core.structure.Structure.calculate"]], "cart_coords (sitecollection property)": [[147, "pymatgen.core.structure.SiteCollection.cart_coords"]], "center_of_mass (imolecule property)": [[147, "pymatgen.core.structure.IMolecule.center_of_mass"]], "charge (imolecule property)": [[147, "pymatgen.core.structure.IMolecule.charge"]], "charge (istructure property)": [[147, "pymatgen.core.structure.IStructure.charge"]], "charge (sitecollection property)": [[147, "pymatgen.core.structure.SiteCollection.charge"]], "composition (sitecollection property)": [[147, "pymatgen.core.structure.SiteCollection.composition"]], "coords (neighbor attribute)": [[147, "pymatgen.core.structure.Neighbor.coords"]], "coords (periodicneighbor property)": [[147, "pymatgen.core.structure.PeriodicNeighbor.coords"]], "copy() (istructure method)": [[147, "pymatgen.core.structure.IStructure.copy"]], "copy() (molecule method)": [[147, "pymatgen.core.structure.Molecule.copy"]], "density (istructure property)": [[147, "pymatgen.core.structure.IStructure.density"]], "distance_matrix (istructure property)": [[147, "pymatgen.core.structure.IStructure.distance_matrix"]], "distance_matrix (sitecollection property)": [[147, "pymatgen.core.structure.SiteCollection.distance_matrix"]], "extract_cluster() (sitecollection method)": [[147, "pymatgen.core.structure.SiteCollection.extract_cluster"]], "formula (sitecollection property)": [[147, "pymatgen.core.structure.SiteCollection.formula"]], "frac_coords (istructure property)": [[147, "pymatgen.core.structure.IStructure.frac_coords"]], "from_dict() (imolecule class method)": [[147, "pymatgen.core.structure.IMolecule.from_dict"]], "from_dict() (istructure class method)": [[147, "pymatgen.core.structure.IStructure.from_dict"]], "from_dict() (neighbor class method)": [[147, "pymatgen.core.structure.Neighbor.from_dict"]], "from_dict() (periodicneighbor class method)": [[147, "pymatgen.core.structure.PeriodicNeighbor.from_dict"]], "from_file() (imolecule class method)": [[147, "pymatgen.core.structure.IMolecule.from_file"]], "from_file() (istructure class method)": [[147, "pymatgen.core.structure.IStructure.from_file"]], "from_file() (sitecollection class method)": [[147, "pymatgen.core.structure.SiteCollection.from_file"]], "from_magnetic_spacegroup() (istructure class method)": [[147, "pymatgen.core.structure.IStructure.from_magnetic_spacegroup"]], "from_prototype() (structure class method)": [[147, "pymatgen.core.structure.Structure.from_prototype"]], "from_sites() (imolecule class method)": [[147, "pymatgen.core.structure.IMolecule.from_sites"]], "from_sites() (istructure class method)": [[147, "pymatgen.core.structure.IStructure.from_sites"]], "from_spacegroup() (istructure class method)": [[147, "pymatgen.core.structure.IStructure.from_spacegroup"]], "from_str() (imolecule class method)": [[147, "pymatgen.core.structure.IMolecule.from_str"]], "from_str() (istructure class method)": [[147, "pymatgen.core.structure.IStructure.from_str"]], "from_str() (sitecollection class method)": [[147, "pymatgen.core.structure.SiteCollection.from_str"]], "get_all_neighbors() (istructure method)": [[147, "pymatgen.core.structure.IStructure.get_all_neighbors"]], "get_all_neighbors_old() (istructure method)": [[147, "pymatgen.core.structure.IStructure.get_all_neighbors_old"]], "get_all_neighbors_py() (istructure method)": [[147, "pymatgen.core.structure.IStructure.get_all_neighbors_py"]], "get_angle() (sitecollection method)": [[147, "pymatgen.core.structure.SiteCollection.get_angle"]], "get_boxed_structure() (imolecule method)": [[147, "pymatgen.core.structure.IMolecule.get_boxed_structure"]], "get_centered_molecule() (imolecule method)": [[147, "pymatgen.core.structure.IMolecule.get_centered_molecule"]], "get_covalent_bonds() (imolecule method)": [[147, "pymatgen.core.structure.IMolecule.get_covalent_bonds"]], "get_dihedral() (sitecollection method)": [[147, "pymatgen.core.structure.SiteCollection.get_dihedral"]], "get_distance() (imolecule method)": [[147, "pymatgen.core.structure.IMolecule.get_distance"]], "get_distance() (istructure method)": [[147, "pymatgen.core.structure.IStructure.get_distance"]], "get_distance() (sitecollection method)": [[147, "pymatgen.core.structure.SiteCollection.get_distance"]], "get_miller_index_from_site_indexes() (istructure method)": [[147, "pymatgen.core.structure.IStructure.get_miller_index_from_site_indexes"]], "get_neighbor_list() (istructure method)": [[147, "pymatgen.core.structure.IStructure.get_neighbor_list"]], "get_neighbors() (imolecule method)": [[147, "pymatgen.core.structure.IMolecule.get_neighbors"]], "get_neighbors() (istructure method)": [[147, "pymatgen.core.structure.IStructure.get_neighbors"]], "get_neighbors_in_shell() (imolecule method)": [[147, "pymatgen.core.structure.IMolecule.get_neighbors_in_shell"]], "get_neighbors_in_shell() (istructure method)": [[147, "pymatgen.core.structure.IStructure.get_neighbors_in_shell"]], "get_neighbors_old() (istructure method)": [[147, "pymatgen.core.structure.IStructure.get_neighbors_old"]], "get_orderings() (istructure method)": [[147, "pymatgen.core.structure.IStructure.get_orderings"]], "get_primitive_structure() (istructure method)": [[147, "pymatgen.core.structure.IStructure.get_primitive_structure"]], "get_reduced_structure() (istructure method)": [[147, "pymatgen.core.structure.IStructure.get_reduced_structure"]], "get_sites_in_sphere() (imolecule method)": [[147, "pymatgen.core.structure.IMolecule.get_sites_in_sphere"]], "get_sites_in_sphere() (istructure method)": [[147, "pymatgen.core.structure.IStructure.get_sites_in_sphere"]], "get_sorted_structure() (istructure method)": [[147, "pymatgen.core.structure.IStructure.get_sorted_structure"]], "get_space_group_info() (istructure method)": [[147, "pymatgen.core.structure.IStructure.get_space_group_info"]], "get_symmetric_neighbor_list() (istructure method)": [[147, "pymatgen.core.structure.IStructure.get_symmetric_neighbor_list"]], "get_zmatrix() (imolecule method)": [[147, "pymatgen.core.structure.IMolecule.get_zmatrix"]], "group_by_types() (sitecollection method)": [[147, "pymatgen.core.structure.SiteCollection.group_by_types"]], "indices_from_symbol() (sitecollection method)": [[147, "pymatgen.core.structure.SiteCollection.indices_from_symbol"]], "insert() (molecule method)": [[147, "pymatgen.core.structure.Molecule.insert"]], "insert() (structure method)": [[147, "pymatgen.core.structure.Structure.insert"]], "interpolate() (istructure method)": [[147, "pymatgen.core.structure.IStructure.interpolate"]], "is_3d_periodic (istructure property)": [[147, "pymatgen.core.structure.IStructure.is_3d_periodic"]], "is_ordered (sitecollection property)": [[147, "pymatgen.core.structure.SiteCollection.is_ordered"]], "is_valid() (sitecollection method)": [[147, "pymatgen.core.structure.SiteCollection.is_valid"]], "lattice (istructure property)": [[147, "pymatgen.core.structure.IStructure.lattice"]], "lattice (structure property)": [[147, "pymatgen.core.structure.Structure.lattice"]], "make_supercell() (structure method)": [[147, "pymatgen.core.structure.Structure.make_supercell"]], "matches() (istructure method)": [[147, "pymatgen.core.structure.IStructure.matches"]], "merge_sites() (structure method)": [[147, "pymatgen.core.structure.Structure.merge_sites"]], "nelectrons (imolecule property)": [[147, "pymatgen.core.structure.IMolecule.nelectrons"]], "ntypesp (sitecollection property)": [[147, "pymatgen.core.structure.SiteCollection.ntypesp"]], "num_sites (sitecollection property)": [[147, "pymatgen.core.structure.SiteCollection.num_sites"]], "pbc (istructure property)": [[147, "pymatgen.core.structure.IStructure.pbc"]], "perturb() (molecule method)": [[147, "pymatgen.core.structure.Molecule.perturb"]], "perturb() (structure method)": [[147, "pymatgen.core.structure.Structure.perturb"]], "properties (neighbor attribute)": [[147, "pymatgen.core.structure.Neighbor.properties"]], "properties (periodicneighbor attribute)": [[147, "pymatgen.core.structure.PeriodicNeighbor.properties"]], "pymatgen.core.structure": [[147, "module-pymatgen.core.structure"]], "relax() (molecule method)": [[147, "pymatgen.core.structure.Molecule.relax"]], "relax() (structure method)": [[147, "pymatgen.core.structure.Structure.relax"]], "remove_oxidation_states() (sitecollection method)": [[147, "pymatgen.core.structure.SiteCollection.remove_oxidation_states"]], "remove_site_property() (sitecollection method)": [[147, "pymatgen.core.structure.SiteCollection.remove_site_property"]], "remove_sites() (molecule method)": [[147, "pymatgen.core.structure.Molecule.remove_sites"]], "remove_sites() (structure method)": [[147, "pymatgen.core.structure.Structure.remove_sites"]], "remove_species() (molecule method)": [[147, "pymatgen.core.structure.Molecule.remove_species"]], "remove_species() (structure method)": [[147, "pymatgen.core.structure.Structure.remove_species"]], "remove_spin() (sitecollection method)": [[147, "pymatgen.core.structure.SiteCollection.remove_spin"]], "replace() (structure method)": [[147, "pymatgen.core.structure.Structure.replace"]], "replace_species() (sitecollection method)": [[147, "pymatgen.core.structure.SiteCollection.replace_species"]], "rotate_sites() (molecule method)": [[147, "pymatgen.core.structure.Molecule.rotate_sites"]], "rotate_sites() (structure method)": [[147, "pymatgen.core.structure.Structure.rotate_sites"]], "scale_lattice() (structure method)": [[147, "pymatgen.core.structure.Structure.scale_lattice"]], "set_charge() (structure method)": [[147, "pymatgen.core.structure.Structure.set_charge"]], "set_charge_and_spin() (molecule method)": [[147, "pymatgen.core.structure.Molecule.set_charge_and_spin"]], "site_properties (sitecollection property)": [[147, "pymatgen.core.structure.SiteCollection.site_properties"]], "sites (imolecule property)": [[147, "pymatgen.core.structure.IMolecule.sites"]], "sites (istructure property)": [[147, "pymatgen.core.structure.IStructure.sites"]], "sites (sitecollection property)": [[147, "pymatgen.core.structure.SiteCollection.sites"]], "sort() (structure method)": [[147, "pymatgen.core.structure.Structure.sort"]], "species (sitecollection property)": [[147, "pymatgen.core.structure.SiteCollection.species"]], "species_and_occu (sitecollection property)": [[147, "pymatgen.core.structure.SiteCollection.species_and_occu"]], "spin_multiplicity (imolecule property)": [[147, "pymatgen.core.structure.IMolecule.spin_multiplicity"]], "substitute() (molecule method)": [[147, "pymatgen.core.structure.Molecule.substitute"]], "substitute() (structure method)": [[147, "pymatgen.core.structure.Structure.substitute"]], "symbol_set (sitecollection property)": [[147, "pymatgen.core.structure.SiteCollection.symbol_set"]], "to() (imolecule method)": [[147, "pymatgen.core.structure.IMolecule.to"]], "to() (istructure method)": [[147, "pymatgen.core.structure.IStructure.to"]], "to() (sitecollection method)": [[147, "pymatgen.core.structure.SiteCollection.to"]], "translate_sites() (molecule method)": [[147, "pymatgen.core.structure.Molecule.translate_sites"]], "translate_sites() (structure method)": [[147, "pymatgen.core.structure.Structure.translate_sites"]], "types_of_specie (sitecollection property)": [[147, "pymatgen.core.structure.SiteCollection.types_of_specie"]], "types_of_species (sitecollection property)": [[147, "pymatgen.core.structure.SiteCollection.types_of_species"]], "unset_charge() (istructure method)": [[147, "pymatgen.core.structure.IStructure.unset_charge"]], "volume (istructure property)": [[147, "pymatgen.core.structure.IStructure.volume"]], "reconstructiongenerator (class in pymatgen.core.surface)": [[148, "pymatgen.core.surface.ReconstructionGenerator"]], "slab (class in pymatgen.core.surface)": [[148, "pymatgen.core.surface.Slab"]], "slabgenerator (class in pymatgen.core.surface)": [[148, "pymatgen.core.surface.SlabGenerator"]], "add_adsorbate_atom() (slab method)": [[148, "pymatgen.core.surface.Slab.add_adsorbate_atom"]], "as_dict() (slab method)": [[148, "pymatgen.core.surface.Slab.as_dict"]], "build_slabs() (reconstructiongenerator method)": [[148, "pymatgen.core.surface.ReconstructionGenerator.build_slabs"]], "center_of_mass (slab property)": [[148, "pymatgen.core.surface.Slab.center_of_mass"]], "center_slab (slabgenerator attribute)": [[148, "pymatgen.core.surface.SlabGenerator.center_slab"]], "center_slab() (in module pymatgen.core.surface)": [[148, "pymatgen.core.surface.center_slab"]], "copy() (slab method)": [[148, "pymatgen.core.surface.Slab.copy"]], "dipole (slab property)": [[148, "pymatgen.core.surface.Slab.dipole"]], "from_dict() (slab class method)": [[148, "pymatgen.core.surface.Slab.from_dict"]], "generate_all_slabs() (in module pymatgen.core.surface)": [[148, "pymatgen.core.surface.generate_all_slabs"]], "get_d() (in module pymatgen.core.surface)": [[148, "pymatgen.core.surface.get_d"]], "get_orthogonal_c_slab() (slab method)": [[148, "pymatgen.core.surface.Slab.get_orthogonal_c_slab"]], "get_slab() (slabgenerator method)": [[148, "pymatgen.core.surface.SlabGenerator.get_slab"]], "get_slab_regions() (in module pymatgen.core.surface)": [[148, "pymatgen.core.surface.get_slab_regions"]], "get_slabs() (slabgenerator method)": [[148, "pymatgen.core.surface.SlabGenerator.get_slabs"]], "get_sorted_structure() (slab method)": [[148, "pymatgen.core.surface.Slab.get_sorted_structure"]], "get_surface_sites() (slab method)": [[148, "pymatgen.core.surface.Slab.get_surface_sites"]], "get_symmetric_site() (slab method)": [[148, "pymatgen.core.surface.Slab.get_symmetric_site"]], "get_symmetrically_distinct_miller_indices() (in module pymatgen.core.surface)": [[148, "pymatgen.core.surface.get_symmetrically_distinct_miller_indices"]], "get_symmetrically_equivalent_miller_indices() (in module pymatgen.core.surface)": [[148, "pymatgen.core.surface.get_symmetrically_equivalent_miller_indices"]], "get_tasker2_slabs() (slab method)": [[148, "pymatgen.core.surface.Slab.get_tasker2_slabs"]], "get_unreconstructed_slabs() (reconstructiongenerator method)": [[148, "pymatgen.core.surface.ReconstructionGenerator.get_unreconstructed_slabs"]], "hkl_transformation() (in module pymatgen.core.surface)": [[148, "pymatgen.core.surface.hkl_transformation"]], "is_already_analyzed() (in module pymatgen.core.surface)": [[148, "pymatgen.core.surface.is_already_analyzed"]], "is_polar() (slab method)": [[148, "pymatgen.core.surface.Slab.is_polar"]], "is_symmetric() (slab method)": [[148, "pymatgen.core.surface.Slab.is_symmetric"]], "lll_reduce (slabgenerator attribute)": [[148, "pymatgen.core.surface.SlabGenerator.lll_reduce"]], "miller_index (slab attribute)": [[148, "pymatgen.core.surface.Slab.miller_index"]], "miller_index (slabgenerator attribute)": [[148, "pymatgen.core.surface.SlabGenerator.miller_index"]], "miller_index_from_sites() (in module pymatgen.core.surface)": [[148, "pymatgen.core.surface.miller_index_from_sites"]], "min_slab_size (slabgenerator attribute)": [[148, "pymatgen.core.surface.SlabGenerator.min_slab_size"]], "min_vac_size (slabgenerator attribute)": [[148, "pymatgen.core.surface.SlabGenerator.min_vac_size"]], "move_to_other_side() (slabgenerator method)": [[148, "pymatgen.core.surface.SlabGenerator.move_to_other_side"]], "nonstoichiometric_symmetrized_slab() (slabgenerator method)": [[148, "pymatgen.core.surface.SlabGenerator.nonstoichiometric_symmetrized_slab"]], "normal (slab property)": [[148, "pymatgen.core.surface.Slab.normal"]], "oriented_unit_cell (slabgenerator attribute)": [[148, "pymatgen.core.surface.SlabGenerator.oriented_unit_cell"]], "parent (slabgenerator attribute)": [[148, "pymatgen.core.surface.SlabGenerator.parent"]], "pymatgen.core.surface": [[148, "module-pymatgen.core.surface"]], "repair_broken_bonds() (slabgenerator method)": [[148, "pymatgen.core.surface.SlabGenerator.repair_broken_bonds"]], "scale_factor (slab attribute)": [[148, "pymatgen.core.surface.Slab.scale_factor"]], "shift (slab attribute)": [[148, "pymatgen.core.surface.Slab.shift"]], "slab_scale_factor (slabgenerator attribute)": [[148, "pymatgen.core.surface.SlabGenerator.slab_scale_factor"]], "slabgen_params (reconstructiongenerator attribute)": [[148, "pymatgen.core.surface.ReconstructionGenerator.slabgen_params"]], "surface_area (slab property)": [[148, "pymatgen.core.surface.Slab.surface_area"]], "symmetrically_add_atom() (slab method)": [[148, "pymatgen.core.surface.Slab.symmetrically_add_atom"]], "symmetrically_remove_atoms() (slab method)": [[148, "pymatgen.core.surface.Slab.symmetrically_remove_atoms"]], "squaretensor (class in pymatgen.core.tensors)": [[149, "pymatgen.core.tensors.SquareTensor"]], "tensor (class in pymatgen.core.tensors)": [[149, "pymatgen.core.tensors.Tensor"]], "tensorcollection (class in pymatgen.core.tensors)": [[149, "pymatgen.core.tensors.TensorCollection"]], "tensormapping (class in pymatgen.core.tensors)": [[149, "pymatgen.core.tensors.TensorMapping"]], "as_dict() (tensor method)": [[149, "pymatgen.core.tensors.Tensor.as_dict"]], "as_dict() (tensorcollection method)": [[149, "pymatgen.core.tensors.TensorCollection.as_dict"]], "average_over_unit_sphere() (tensor method)": [[149, "pymatgen.core.tensors.Tensor.average_over_unit_sphere"]], "convert_to_ieee() (tensor method)": [[149, "pymatgen.core.tensors.Tensor.convert_to_ieee"]], "convert_to_ieee() (tensorcollection method)": [[149, "pymatgen.core.tensors.TensorCollection.convert_to_ieee"]], "det (squaretensor property)": [[149, "pymatgen.core.tensors.SquareTensor.det"]], "einsum_sequence() (tensor method)": [[149, "pymatgen.core.tensors.Tensor.einsum_sequence"]], "fit_to_structure() (tensor method)": [[149, "pymatgen.core.tensors.Tensor.fit_to_structure"]], "fit_to_structure() (tensorcollection method)": [[149, "pymatgen.core.tensors.TensorCollection.fit_to_structure"]], "from_dict() (tensor class method)": [[149, "pymatgen.core.tensors.Tensor.from_dict"]], "from_dict() (tensorcollection class method)": [[149, "pymatgen.core.tensors.TensorCollection.from_dict"]], "from_values_indices() (tensor class method)": [[149, "pymatgen.core.tensors.Tensor.from_values_indices"]], "from_voigt() (tensor class method)": [[149, "pymatgen.core.tensors.Tensor.from_voigt"]], "from_voigt() (tensorcollection class method)": [[149, "pymatgen.core.tensors.TensorCollection.from_voigt"]], "get_grouped_indices() (tensor method)": [[149, "pymatgen.core.tensors.Tensor.get_grouped_indices"]], "get_ieee_rotation() (tensor static method)": [[149, "pymatgen.core.tensors.Tensor.get_ieee_rotation"]], "get_scaled() (squaretensor method)": [[149, "pymatgen.core.tensors.SquareTensor.get_scaled"]], "get_symbol_dict() (tensor method)": [[149, "pymatgen.core.tensors.Tensor.get_symbol_dict"]], "get_uvec() (in module pymatgen.core.tensors)": [[149, "pymatgen.core.tensors.get_uvec"]], "get_voigt_dict() (tensor static method)": [[149, "pymatgen.core.tensors.Tensor.get_voigt_dict"]], "inv (squaretensor property)": [[149, "pymatgen.core.tensors.SquareTensor.inv"]], "is_fit_to_structure() (tensor method)": [[149, "pymatgen.core.tensors.Tensor.is_fit_to_structure"]], "is_fit_to_structure() (tensorcollection method)": [[149, "pymatgen.core.tensors.TensorCollection.is_fit_to_structure"]], "is_rotation() (squaretensor method)": [[149, "pymatgen.core.tensors.SquareTensor.is_rotation"]], "is_symmetric() (tensor method)": [[149, "pymatgen.core.tensors.Tensor.is_symmetric"]], "is_symmetric() (tensorcollection method)": [[149, "pymatgen.core.tensors.TensorCollection.is_symmetric"]], "is_voigt_symmetric() (tensor method)": [[149, "pymatgen.core.tensors.Tensor.is_voigt_symmetric"]], "is_voigt_symmetric() (tensorcollection method)": [[149, "pymatgen.core.tensors.TensorCollection.is_voigt_symmetric"]], "items() (tensormapping method)": [[149, "pymatgen.core.tensors.TensorMapping.items"]], "polar_decomposition() (squaretensor method)": [[149, "pymatgen.core.tensors.SquareTensor.polar_decomposition"]], "populate() (tensor method)": [[149, "pymatgen.core.tensors.Tensor.populate"]], "principal_invariants (squaretensor property)": [[149, "pymatgen.core.tensors.SquareTensor.principal_invariants"]], "project() (tensor method)": [[149, "pymatgen.core.tensors.Tensor.project"]], "pymatgen.core.tensors": [[149, "module-pymatgen.core.tensors"]], "ranks (tensorcollection property)": [[149, "pymatgen.core.tensors.TensorCollection.ranks"]], "refine_rotation() (squaretensor method)": [[149, "pymatgen.core.tensors.SquareTensor.refine_rotation"]], "rotate() (tensor method)": [[149, "pymatgen.core.tensors.Tensor.rotate"]], "rotate() (tensorcollection method)": [[149, "pymatgen.core.tensors.TensorCollection.rotate"]], "round() (tensor method)": [[149, "pymatgen.core.tensors.Tensor.round"]], "round() (tensorcollection method)": [[149, "pymatgen.core.tensors.TensorCollection.round"]], "structure_transform() (tensor method)": [[149, "pymatgen.core.tensors.Tensor.structure_transform"]], "symbol (tensor attribute)": [[149, "pymatgen.core.tensors.Tensor.symbol"]], "symmetrized (tensor property)": [[149, "pymatgen.core.tensors.Tensor.symmetrized"]], "symmetrized (tensorcollection property)": [[149, "pymatgen.core.tensors.TensorCollection.symmetrized"]], "symmetry_reduce() (in module pymatgen.core.tensors)": [[149, "pymatgen.core.tensors.symmetry_reduce"]], "trans (squaretensor property)": [[149, "pymatgen.core.tensors.SquareTensor.trans"]], "transform() (tensor method)": [[149, "pymatgen.core.tensors.Tensor.transform"]], "transform() (tensorcollection method)": [[149, "pymatgen.core.tensors.TensorCollection.transform"]], "values() (tensormapping method)": [[149, "pymatgen.core.tensors.TensorMapping.values"]], "voigt (tensor property)": [[149, "pymatgen.core.tensors.Tensor.voigt"]], "voigt (tensorcollection property)": [[149, "pymatgen.core.tensors.TensorCollection.voigt"]], "voigt_symmetrized (tensor property)": [[149, "pymatgen.core.tensors.Tensor.voigt_symmetrized"]], "voigt_symmetrized (tensorcollection property)": [[149, "pymatgen.core.tensors.TensorCollection.voigt_symmetrized"]], "zeroed() (tensor method)": [[149, "pymatgen.core.tensors.Tensor.zeroed"]], "zeroed() (tensorcollection method)": [[149, "pymatgen.core.tensors.TensorCollection.zeroed"]], "trajectory (class in pymatgen.core.trajectory)": [[150, "pymatgen.core.trajectory.Trajectory"]], "as_dict() (trajectory method)": [[150, "pymatgen.core.trajectory.Trajectory.as_dict"]], "extend() (trajectory method)": [[150, "pymatgen.core.trajectory.Trajectory.extend"]], "from_file() (trajectory class method)": [[150, "pymatgen.core.trajectory.Trajectory.from_file"]], "from_molecules() (trajectory class method)": [[150, "pymatgen.core.trajectory.Trajectory.from_molecules"]], "from_structures() (trajectory class method)": [[150, "pymatgen.core.trajectory.Trajectory.from_structures"]], "get_molecule() (trajectory method)": [[150, "pymatgen.core.trajectory.Trajectory.get_molecule"]], "get_structure() (trajectory method)": [[150, "pymatgen.core.trajectory.Trajectory.get_structure"]], "pymatgen.core.trajectory": [[150, "module-pymatgen.core.trajectory"]], "to_displacements() (trajectory method)": [[150, "pymatgen.core.trajectory.Trajectory.to_displacements"]], "to_positions() (trajectory method)": [[150, "pymatgen.core.trajectory.Trajectory.to_positions"]], "write_xdatcar() (trajectory method)": [[150, "pymatgen.core.trajectory.Trajectory.write_Xdatcar"]], "arraywithunit (class in pymatgen.core.units)": [[151, "pymatgen.core.units.ArrayWithUnit"]], "charge (in module pymatgen.core.units)": [[151, "pymatgen.core.units.Charge"]], "energy (in module pymatgen.core.units)": [[151, "pymatgen.core.units.Energy"]], "error (arraywithunit attribute)": [[151, "pymatgen.core.units.ArrayWithUnit.Error"]], "error (floatwithunit attribute)": [[151, "pymatgen.core.units.FloatWithUnit.Error"]], "error (unit attribute)": [[151, "pymatgen.core.units.Unit.Error"]], "floatwithunit (class in pymatgen.core.units)": [[151, "pymatgen.core.units.FloatWithUnit"]], "length (in module pymatgen.core.units)": [[151, "pymatgen.core.units.Length"]], "mass (in module pymatgen.core.units)": [[151, "pymatgen.core.units.Mass"]], "memory (in module pymatgen.core.units)": [[151, "pymatgen.core.units.Memory"]], "temp (in module pymatgen.core.units)": [[151, "pymatgen.core.units.Temp"]], "time (in module pymatgen.core.units)": [[151, "pymatgen.core.units.Time"]], "unit (class in pymatgen.core.units)": [[151, "pymatgen.core.units.Unit"]], "uniterror": [[151, "pymatgen.core.units.UnitError"]], "as_base_units (arraywithunit property)": [[151, "pymatgen.core.units.ArrayWithUnit.as_base_units"]], "as_base_units (floatwithunit property)": [[151, "pymatgen.core.units.FloatWithUnit.as_base_units"]], "as_base_units (unit property)": [[151, "pymatgen.core.units.Unit.as_base_units"]], "conversions() (arraywithunit method)": [[151, "pymatgen.core.units.ArrayWithUnit.conversions"]], "from_string() (floatwithunit class method)": [[151, "pymatgen.core.units.FloatWithUnit.from_string"]], "get_conversion_factor() (unit method)": [[151, "pymatgen.core.units.Unit.get_conversion_factor"]], "kb (in module pymatgen.core.units)": [[151, "pymatgen.core.units.kb"]], "obj_with_unit() (in module pymatgen.core.units)": [[151, "pymatgen.core.units.obj_with_unit"]], "pymatgen.core.units": [[151, "module-pymatgen.core.units"]], "supported_units (arraywithunit property)": [[151, "pymatgen.core.units.ArrayWithUnit.supported_units"]], "supported_units (floatwithunit property)": [[151, "pymatgen.core.units.FloatWithUnit.supported_units"]], "to() (arraywithunit method)": [[151, "pymatgen.core.units.ArrayWithUnit.to"]], "to() (floatwithunit method)": [[151, "pymatgen.core.units.FloatWithUnit.to"]], "unit (arraywithunit property)": [[151, "pymatgen.core.units.ArrayWithUnit.unit"]], "unit (floatwithunit property)": [[151, "pymatgen.core.units.FloatWithUnit.unit"]], "unit_type (arraywithunit property)": [[151, "pymatgen.core.units.ArrayWithUnit.unit_type"]], "unit_type (floatwithunit property)": [[151, "pymatgen.core.units.FloatWithUnit.unit_type"]], "unitized() (in module pymatgen.core.units)": [[151, "pymatgen.core.units.unitized"]], "xcfunc (class in pymatgen.core.xcfunc)": [[152, "pymatgen.core.xcfunc.XcFunc"]], "abinitixc_to_libxc (xcfunc attribute)": [[152, "pymatgen.core.xcfunc.XcFunc.abinitixc_to_libxc"]], "aliases() (xcfunc class method)": [[152, "pymatgen.core.xcfunc.XcFunc.aliases"]], "as_dict() (xcfunc method)": [[152, "pymatgen.core.xcfunc.XcFunc.as_dict"]], "asxc() (xcfunc class method)": [[152, "pymatgen.core.xcfunc.XcFunc.asxc"]], "defined_aliases (xcfunc attribute)": [[152, "pymatgen.core.xcfunc.XcFunc.defined_aliases"]], "from_abinit_ixc() (xcfunc class method)": [[152, "pymatgen.core.xcfunc.XcFunc.from_abinit_ixc"]], "from_dict() (xcfunc class method)": [[152, "pymatgen.core.xcfunc.XcFunc.from_dict"]], "from_name() (xcfunc class method)": [[152, "pymatgen.core.xcfunc.XcFunc.from_name"]], "from_type_name() (xcfunc class method)": [[152, "pymatgen.core.xcfunc.XcFunc.from_type_name"]], "name() (xcfunc method)": [[152, "pymatgen.core.xcfunc.XcFunc.name"]], "pymatgen.core.xcfunc": [[152, "module-pymatgen.core.xcfunc"]], "type() (xcfunc method)": [[152, "pymatgen.core.xcfunc.XcFunc.type"]], "pymatgen.dao": [[153, "module-pymatgen.dao"]], "pymatgen.electronic_structure": [[154, "module-pymatgen.electronic_structure"]], "bandstructure (class in pymatgen.electronic_structure.bandstructure)": [[155, "pymatgen.electronic_structure.bandstructure.BandStructure"]], "bandstructuresymmline (class in pymatgen.electronic_structure.bandstructure)": [[155, "pymatgen.electronic_structure.bandstructure.BandStructureSymmLine"]], "kpoint (class in pymatgen.electronic_structure.bandstructure)": [[155, "pymatgen.electronic_structure.bandstructure.Kpoint"]], "lobsterbandstructuresymmline (class in pymatgen.electronic_structure.bandstructure)": [[155, "pymatgen.electronic_structure.bandstructure.LobsterBandStructureSymmLine"]], "a (kpoint property)": [[155, "pymatgen.electronic_structure.bandstructure.Kpoint.a"]], "apply_scissor() (bandstructuresymmline method)": [[155, "pymatgen.electronic_structure.bandstructure.BandStructureSymmLine.apply_scissor"]], "as_dict() (bandstructure method)": [[155, "pymatgen.electronic_structure.bandstructure.BandStructure.as_dict"]], "as_dict() (bandstructuresymmline method)": [[155, "pymatgen.electronic_structure.bandstructure.BandStructureSymmLine.as_dict"]], "as_dict() (kpoint method)": [[155, "pymatgen.electronic_structure.bandstructure.Kpoint.as_dict"]], "as_dict() (lobsterbandstructuresymmline method)": [[155, "pymatgen.electronic_structure.bandstructure.LobsterBandStructureSymmLine.as_dict"]], "b (kpoint property)": [[155, "pymatgen.electronic_structure.bandstructure.Kpoint.b"]], "bands (bandstructure attribute)": [[155, "pymatgen.electronic_structure.bandstructure.BandStructure.bands"]], "c (kpoint property)": [[155, "pymatgen.electronic_structure.bandstructure.Kpoint.c"]], "cart_coords (kpoint property)": [[155, "pymatgen.electronic_structure.bandstructure.Kpoint.cart_coords"]], "efermi (bandstructure attribute)": [[155, "pymatgen.electronic_structure.bandstructure.BandStructure.efermi"]], "frac_coords (kpoint property)": [[155, "pymatgen.electronic_structure.bandstructure.Kpoint.frac_coords"]], "from_dict() (bandstructure class method)": [[155, "pymatgen.electronic_structure.bandstructure.BandStructure.from_dict"]], "from_dict() (kpoint class method)": [[155, "pymatgen.electronic_structure.bandstructure.Kpoint.from_dict"]], "from_dict() (lobsterbandstructuresymmline class method)": [[155, "pymatgen.electronic_structure.bandstructure.LobsterBandStructureSymmLine.from_dict"]], "from_old_dict() (bandstructure class method)": [[155, "pymatgen.electronic_structure.bandstructure.BandStructure.from_old_dict"]], "from_old_dict() (lobsterbandstructuresymmline class method)": [[155, "pymatgen.electronic_structure.bandstructure.LobsterBandStructureSymmLine.from_old_dict"]], "get_band_gap() (bandstructure method)": [[155, "pymatgen.electronic_structure.bandstructure.BandStructure.get_band_gap"]], "get_branch() (bandstructuresymmline method)": [[155, "pymatgen.electronic_structure.bandstructure.BandStructureSymmLine.get_branch"]], "get_cbm() (bandstructure method)": [[155, "pymatgen.electronic_structure.bandstructure.BandStructure.get_cbm"]], "get_direct_band_gap() (bandstructure method)": [[155, "pymatgen.electronic_structure.bandstructure.BandStructure.get_direct_band_gap"]], "get_direct_band_gap_dict() (bandstructure method)": [[155, "pymatgen.electronic_structure.bandstructure.BandStructure.get_direct_band_gap_dict"]], "get_equivalent_kpoints() (bandstructuresymmline method)": [[155, "pymatgen.electronic_structure.bandstructure.BandStructureSymmLine.get_equivalent_kpoints"]], "get_kpoint_degeneracy() (bandstructure method)": [[155, "pymatgen.electronic_structure.bandstructure.BandStructure.get_kpoint_degeneracy"]], "get_projection_on_elements() (bandstructure method)": [[155, "pymatgen.electronic_structure.bandstructure.BandStructure.get_projection_on_elements"]], "get_projection_on_elements() (lobsterbandstructuresymmline method)": [[155, "pymatgen.electronic_structure.bandstructure.LobsterBandStructureSymmLine.get_projection_on_elements"]], "get_projections_on_elements_and_orbitals() (bandstructure method)": [[155, "pymatgen.electronic_structure.bandstructure.BandStructure.get_projections_on_elements_and_orbitals"]], "get_projections_on_elements_and_orbitals() (lobsterbandstructuresymmline method)": [[155, "pymatgen.electronic_structure.bandstructure.LobsterBandStructureSymmLine.get_projections_on_elements_and_orbitals"]], "get_reconstructed_band_structure() (in module pymatgen.electronic_structure.bandstructure)": [[155, "pymatgen.electronic_structure.bandstructure.get_reconstructed_band_structure"]], "get_sym_eq_kpoints() (bandstructure method)": [[155, "pymatgen.electronic_structure.bandstructure.BandStructure.get_sym_eq_kpoints"]], "get_vbm() (bandstructure method)": [[155, "pymatgen.electronic_structure.bandstructure.BandStructure.get_vbm"]], "is_metal() (bandstructure method)": [[155, "pymatgen.electronic_structure.bandstructure.BandStructure.is_metal"]], "is_spin_polarized (bandstructure attribute)": [[155, "pymatgen.electronic_structure.bandstructure.BandStructure.is_spin_polarized"]], "label (kpoint property)": [[155, "pymatgen.electronic_structure.bandstructure.Kpoint.label"]], "lattice (kpoint property)": [[155, "pymatgen.electronic_structure.bandstructure.Kpoint.lattice"]], "lattice_rec (bandstructure attribute)": [[155, "pymatgen.electronic_structure.bandstructure.BandStructure.lattice_rec"]], "nb_bands (bandstructure attribute)": [[155, "pymatgen.electronic_structure.bandstructure.BandStructure.nb_bands"]], "projections (bandstructure attribute)": [[155, "pymatgen.electronic_structure.bandstructure.BandStructure.projections"]], "pymatgen.electronic_structure.bandstructure": [[155, "module-pymatgen.electronic_structure.bandstructure"]], "structure (bandstructure attribute)": [[155, "pymatgen.electronic_structure.bandstructure.BandStructure.structure"]], "boltztrapanalyzer (class in pymatgen.electronic_structure.boltztrap)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapAnalyzer"]], "boltztraperror": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapError"]], "boltztraprunner (class in pymatgen.electronic_structure.boltztrap)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapRunner"]], "as_dict() (boltztrapanalyzer method)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapAnalyzer.as_dict"]], "as_dict() (boltztraprunner method)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapRunner.as_dict"]], "bs (boltztraprunner property)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapRunner.bs"]], "check_acc_bzt_bands() (boltztrapanalyzer static method)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapAnalyzer.check_acc_bzt_bands"]], "compare_sym_bands() (in module pymatgen.electronic_structure.boltztrap)": [[156, "pymatgen.electronic_structure.boltztrap.compare_sym_bands"]], "eta_from_seebeck() (in module pymatgen.electronic_structure.boltztrap)": [[156, "pymatgen.electronic_structure.boltztrap.eta_from_seebeck"]], "from_dict() (boltztrapanalyzer static method)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapAnalyzer.from_dict"]], "from_files() (boltztrapanalyzer static method)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapAnalyzer.from_files"]], "get_average_eff_mass() (boltztrapanalyzer method)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapAnalyzer.get_average_eff_mass"]], "get_carrier_concentration() (boltztrapanalyzer method)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapAnalyzer.get_carrier_concentration"]], "get_complete_dos() (boltztrapanalyzer method)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapAnalyzer.get_complete_dos"]], "get_complexity_factor() (boltztrapanalyzer method)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapAnalyzer.get_complexity_factor"]], "get_conductivity() (boltztrapanalyzer method)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapAnalyzer.get_conductivity"]], "get_extreme() (boltztrapanalyzer method)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapAnalyzer.get_extreme"]], "get_hall_carrier_concentration() (boltztrapanalyzer method)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapAnalyzer.get_hall_carrier_concentration"]], "get_mu_bounds() (boltztrapanalyzer method)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapAnalyzer.get_mu_bounds"]], "get_power_factor() (boltztrapanalyzer method)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapAnalyzer.get_power_factor"]], "get_seebeck() (boltztrapanalyzer method)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapAnalyzer.get_seebeck"]], "get_seebeck_eff_mass() (boltztrapanalyzer method)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapAnalyzer.get_seebeck_eff_mass"]], "get_symm_bands() (boltztrapanalyzer method)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapAnalyzer.get_symm_bands"]], "get_thermal_conductivity() (boltztrapanalyzer method)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapAnalyzer.get_thermal_conductivity"]], "get_zt() (boltztrapanalyzer method)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapAnalyzer.get_zt"]], "nelec (boltztraprunner property)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapRunner.nelec"]], "parse_cond_and_hall() (boltztrapanalyzer static method)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapAnalyzer.parse_cond_and_hall"]], "parse_intrans() (boltztrapanalyzer static method)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapAnalyzer.parse_intrans"]], "parse_outputtrans() (boltztrapanalyzer static method)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapAnalyzer.parse_outputtrans"]], "parse_struct() (boltztrapanalyzer static method)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapAnalyzer.parse_struct"]], "parse_transdos() (boltztrapanalyzer static method)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapAnalyzer.parse_transdos"]], "pymatgen.electronic_structure.boltztrap": [[156, "module-pymatgen.electronic_structure.boltztrap"]], "read_cube_file() (in module pymatgen.electronic_structure.boltztrap)": [[156, "pymatgen.electronic_structure.boltztrap.read_cube_file"]], "run() (boltztraprunner method)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapRunner.run"]], "seebeck_eff_mass_from_carr() (in module pymatgen.electronic_structure.boltztrap)": [[156, "pymatgen.electronic_structure.boltztrap.seebeck_eff_mass_from_carr"]], "seebeck_eff_mass_from_seebeck_carr() (in module pymatgen.electronic_structure.boltztrap)": [[156, "pymatgen.electronic_structure.boltztrap.seebeck_eff_mass_from_seebeck_carr"]], "seebeck_spb() (in module pymatgen.electronic_structure.boltztrap)": [[156, "pymatgen.electronic_structure.boltztrap.seebeck_spb"]], "write_def() (boltztraprunner method)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapRunner.write_def"]], "write_energy() (boltztraprunner method)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapRunner.write_energy"]], "write_input() (boltztraprunner method)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapRunner.write_input"]], "write_intrans() (boltztraprunner method)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapRunner.write_intrans"]], "write_proj() (boltztraprunner method)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapRunner.write_proj"]], "write_struct() (boltztraprunner method)": [[156, "pymatgen.electronic_structure.boltztrap.BoltztrapRunner.write_struct"]], "cohp (class in pymatgen.electronic_structure.cohp)": [[158, "pymatgen.electronic_structure.cohp.Cohp"]], "completecohp (class in pymatgen.electronic_structure.cohp)": [[158, "pymatgen.electronic_structure.cohp.CompleteCohp"]], "icohpcollection (class in pymatgen.electronic_structure.cohp)": [[158, "pymatgen.electronic_structure.cohp.IcohpCollection"]], "icohpvalue (class in pymatgen.electronic_structure.cohp)": [[158, "pymatgen.electronic_structure.cohp.IcohpValue"]], "are_cobis (icohpcollection attribute)": [[158, "pymatgen.electronic_structure.cohp.IcohpCollection.are_cobis"]], "are_cobis (icohpcollection property)": [[158, "id0"]], "are_cobis (icohpvalue attribute)": [[158, "pymatgen.electronic_structure.cohp.IcohpValue.are_cobis"]], "are_cobis (icohpvalue property)": [[158, "id3"]], "are_coops (icohpcollection attribute)": [[158, "pymatgen.electronic_structure.cohp.IcohpCollection.are_coops"]], "are_coops (icohpcollection property)": [[158, "id1"]], "are_coops (icohpvalue attribute)": [[158, "pymatgen.electronic_structure.cohp.IcohpValue.are_coops"]], "are_coops (icohpvalue property)": [[158, "id4"]], "as_dict() (cohp method)": [[158, "pymatgen.electronic_structure.cohp.Cohp.as_dict"]], "as_dict() (completecohp method)": [[158, "pymatgen.electronic_structure.cohp.CompleteCohp.as_dict"]], "extremum_icohpvalue() (icohpcollection method)": [[158, "pymatgen.electronic_structure.cohp.IcohpCollection.extremum_icohpvalue"]], "from_dict() (cohp class method)": [[158, "pymatgen.electronic_structure.cohp.Cohp.from_dict"]], "from_dict() (completecohp class method)": [[158, "pymatgen.electronic_structure.cohp.CompleteCohp.from_dict"]], "from_file() (completecohp class method)": [[158, "pymatgen.electronic_structure.cohp.CompleteCohp.from_file"]], "get_cohp() (cohp method)": [[158, "pymatgen.electronic_structure.cohp.Cohp.get_cohp"]], "get_cohp_by_label() (completecohp method)": [[158, "pymatgen.electronic_structure.cohp.CompleteCohp.get_cohp_by_label"]], "get_icohp() (cohp method)": [[158, "pymatgen.electronic_structure.cohp.Cohp.get_icohp"]], "get_icohp_by_label() (icohpcollection method)": [[158, "pymatgen.electronic_structure.cohp.IcohpCollection.get_icohp_by_label"]], "get_icohp_dict_by_bondlengths() (icohpcollection method)": [[158, "pymatgen.electronic_structure.cohp.IcohpCollection.get_icohp_dict_by_bondlengths"]], "get_icohp_dict_of_site() (icohpcollection method)": [[158, "pymatgen.electronic_structure.cohp.IcohpCollection.get_icohp_dict_of_site"]], "get_integrated_cohp_in_energy_range() (in module pymatgen.electronic_structure.cohp)": [[158, "pymatgen.electronic_structure.cohp.get_integrated_cohp_in_energy_range"]], "get_interpolated_value() (cohp method)": [[158, "pymatgen.electronic_structure.cohp.Cohp.get_interpolated_value"]], "get_orbital_resolved_cohp() (completecohp method)": [[158, "pymatgen.electronic_structure.cohp.CompleteCohp.get_orbital_resolved_cohp"]], "get_summed_cohp_by_label_and_orbital_list() (completecohp method)": [[158, "pymatgen.electronic_structure.cohp.CompleteCohp.get_summed_cohp_by_label_and_orbital_list"]], "get_summed_cohp_by_label_list() (completecohp method)": [[158, "pymatgen.electronic_structure.cohp.CompleteCohp.get_summed_cohp_by_label_list"]], "get_summed_icohp_by_label_list() (icohpcollection method)": [[158, "pymatgen.electronic_structure.cohp.IcohpCollection.get_summed_icohp_by_label_list"]], "has_antibnd_states_below_efermi() (cohp method)": [[158, "pymatgen.electronic_structure.cohp.Cohp.has_antibnd_states_below_efermi"]], "icohp (icohpvalue attribute)": [[158, "pymatgen.electronic_structure.cohp.IcohpValue.icohp"]], "icohp (icohpvalue property)": [[158, "id5"]], "icohpvalue() (icohpvalue method)": [[158, "pymatgen.electronic_structure.cohp.IcohpValue.icohpvalue"]], "icohpvalue_orbital() (icohpvalue method)": [[158, "pymatgen.electronic_structure.cohp.IcohpValue.icohpvalue_orbital"]], "is_spin_polarized (icohpcollection attribute)": [[158, "pymatgen.electronic_structure.cohp.IcohpCollection.is_spin_polarized"]], "is_spin_polarized (icohpcollection property)": [[158, "id2"]], "is_spin_polarized (icohpvalue property)": [[158, "pymatgen.electronic_structure.cohp.IcohpValue.is_spin_polarized"]], "num_bonds (icohpvalue attribute)": [[158, "pymatgen.electronic_structure.cohp.IcohpValue.num_bonds"]], "num_bonds (icohpvalue property)": [[158, "id6"]], "pymatgen.electronic_structure.cohp": [[158, "module-pymatgen.electronic_structure.cohp"]], "summed_icohp (icohpvalue property)": [[158, "pymatgen.electronic_structure.cohp.IcohpValue.summed_icohp"]], "summed_orbital_icohp (icohpvalue property)": [[158, "pymatgen.electronic_structure.cohp.IcohpValue.summed_orbital_icohp"]], "magmom (class in pymatgen.electronic_structure.core)": [[159, "pymatgen.electronic_structure.core.Magmom"]], "orbital (class in pymatgen.electronic_structure.core)": [[159, "pymatgen.electronic_structure.core.Orbital"]], "orbitaltype (class in pymatgen.electronic_structure.core)": [[159, "pymatgen.electronic_structure.core.OrbitalType"]], "spin (class in pymatgen.electronic_structure.core)": [[159, "pymatgen.electronic_structure.core.Spin"]], "are_collinear() (magmom static method)": [[159, "pymatgen.electronic_structure.core.Magmom.are_collinear"]], "d (orbitaltype attribute)": [[159, "pymatgen.electronic_structure.core.OrbitalType.d"]], "down (spin attribute)": [[159, "pymatgen.electronic_structure.core.Spin.down"]], "dx2 (orbital attribute)": [[159, "pymatgen.electronic_structure.core.Orbital.dx2"]], "dxy (orbital attribute)": [[159, "pymatgen.electronic_structure.core.Orbital.dxy"]], "dxz (orbital attribute)": [[159, "pymatgen.electronic_structure.core.Orbital.dxz"]], "dyz (orbital attribute)": [[159, "pymatgen.electronic_structure.core.Orbital.dyz"]], "dz2 (orbital attribute)": [[159, "pymatgen.electronic_structure.core.Orbital.dz2"]], "f (orbitaltype attribute)": [[159, "pymatgen.electronic_structure.core.OrbitalType.f"]], "f0 (orbital attribute)": [[159, "pymatgen.electronic_structure.core.Orbital.f0"]], "f1 (orbital attribute)": [[159, "pymatgen.electronic_structure.core.Orbital.f1"]], "f2 (orbital attribute)": [[159, "pymatgen.electronic_structure.core.Orbital.f2"]], "f3 (orbital attribute)": [[159, "pymatgen.electronic_structure.core.Orbital.f3"]], "f_1 (orbital attribute)": [[159, "pymatgen.electronic_structure.core.Orbital.f_1"]], "f_2 (orbital attribute)": [[159, "pymatgen.electronic_structure.core.Orbital.f_2"]], "f_3 (orbital attribute)": [[159, "pymatgen.electronic_structure.core.Orbital.f_3"]], "from_global_moment_and_saxis() (magmom class method)": [[159, "pymatgen.electronic_structure.core.Magmom.from_global_moment_and_saxis"]], "from_moment_relative_to_crystal_axes() (magmom class method)": [[159, "pymatgen.electronic_structure.core.Magmom.from_moment_relative_to_crystal_axes"]], "get_00t_magmom_with_xyz_saxis() (magmom method)": [[159, "pymatgen.electronic_structure.core.Magmom.get_00t_magmom_with_xyz_saxis"]], "get_consistent_set_and_saxis() (magmom static method)": [[159, "pymatgen.electronic_structure.core.Magmom.get_consistent_set_and_saxis"]], "get_moment() (magmom method)": [[159, "pymatgen.electronic_structure.core.Magmom.get_moment"]], "get_moment_relative_to_crystal_axes() (magmom method)": [[159, "pymatgen.electronic_structure.core.Magmom.get_moment_relative_to_crystal_axes"]], "get_suggested_saxis() (magmom static method)": [[159, "pymatgen.electronic_structure.core.Magmom.get_suggested_saxis"]], "get_xyz_magmom_with_001_saxis() (magmom method)": [[159, "pymatgen.electronic_structure.core.Magmom.get_xyz_magmom_with_001_saxis"]], "global_moment (magmom property)": [[159, "pymatgen.electronic_structure.core.Magmom.global_moment"]], "have_consistent_saxis() (magmom static method)": [[159, "pymatgen.electronic_structure.core.Magmom.have_consistent_saxis"]], "orbital_type (orbital property)": [[159, "pymatgen.electronic_structure.core.Orbital.orbital_type"]], "p (orbitaltype attribute)": [[159, "pymatgen.electronic_structure.core.OrbitalType.p"]], "projection (magmom property)": [[159, "pymatgen.electronic_structure.core.Magmom.projection"]], "px (orbital attribute)": [[159, "pymatgen.electronic_structure.core.Orbital.px"]], "py (orbital attribute)": [[159, "pymatgen.electronic_structure.core.Orbital.py"]], "pymatgen.electronic_structure.core": [[159, "module-pymatgen.electronic_structure.core"]], "pz (orbital attribute)": [[159, "pymatgen.electronic_structure.core.Orbital.pz"]], "s (orbital attribute)": [[159, "pymatgen.electronic_structure.core.Orbital.s"]], "s (orbitaltype attribute)": [[159, "pymatgen.electronic_structure.core.OrbitalType.s"]], "up (spin attribute)": [[159, "pymatgen.electronic_structure.core.Spin.up"]], "completedos (class in pymatgen.electronic_structure.dos)": [[160, "pymatgen.electronic_structure.dos.CompleteDos"]], "dos (class in pymatgen.electronic_structure.dos)": [[160, "pymatgen.electronic_structure.dos.DOS"], [160, "pymatgen.electronic_structure.dos.Dos"]], "fermidos (class in pymatgen.electronic_structure.dos)": [[160, "pymatgen.electronic_structure.dos.FermiDos"]], "lobstercompletedos (class in pymatgen.electronic_structure.dos)": [[160, "pymatgen.electronic_structure.dos.LobsterCompleteDos"]], "xlabel (dos attribute)": [[160, "pymatgen.electronic_structure.dos.DOS.XLABEL"]], "ylabel (dos attribute)": [[160, "pymatgen.electronic_structure.dos.DOS.YLABEL"]], "add_densities() (in module pymatgen.electronic_structure.dos)": [[160, "pymatgen.electronic_structure.dos.add_densities"]], "as_dict() (completedos method)": [[160, "pymatgen.electronic_structure.dos.CompleteDos.as_dict"]], "as_dict() (dos method)": [[160, "pymatgen.electronic_structure.dos.Dos.as_dict"]], "as_dict() (fermidos method)": [[160, "pymatgen.electronic_structure.dos.FermiDos.as_dict"]], "f0() (in module pymatgen.electronic_structure.dos)": [[160, "pymatgen.electronic_structure.dos.f0"]], "fp_to_dict() (completedos static method)": [[160, "pymatgen.electronic_structure.dos.CompleteDos.fp_to_dict"]], "from_dict() (completedos class method)": [[160, "pymatgen.electronic_structure.dos.CompleteDos.from_dict"]], "from_dict() (dos class method)": [[160, "pymatgen.electronic_structure.dos.Dos.from_dict"]], "from_dict() (fermidos class method)": [[160, "pymatgen.electronic_structure.dos.FermiDos.from_dict"]], "from_dict() (lobstercompletedos class method)": [[160, "pymatgen.electronic_structure.dos.LobsterCompleteDos.from_dict"]], "get_band_center() (completedos method)": [[160, "pymatgen.electronic_structure.dos.CompleteDos.get_band_center"]], "get_band_filling() (completedos method)": [[160, "pymatgen.electronic_structure.dos.CompleteDos.get_band_filling"]], "get_band_kurtosis() (completedos method)": [[160, "pymatgen.electronic_structure.dos.CompleteDos.get_band_kurtosis"]], "get_band_skewness() (completedos method)": [[160, "pymatgen.electronic_structure.dos.CompleteDos.get_band_skewness"]], "get_band_width() (completedos method)": [[160, "pymatgen.electronic_structure.dos.CompleteDos.get_band_width"]], "get_cbm_vbm() (dos method)": [[160, "pymatgen.electronic_structure.dos.DOS.get_cbm_vbm"], [160, "pymatgen.electronic_structure.dos.Dos.get_cbm_vbm"]], "get_densities() (dos method)": [[160, "pymatgen.electronic_structure.dos.Dos.get_densities"]], "get_doping() (fermidos method)": [[160, "pymatgen.electronic_structure.dos.FermiDos.get_doping"]], "get_dos_fp() (completedos method)": [[160, "pymatgen.electronic_structure.dos.CompleteDos.get_dos_fp"]], "get_dos_fp_similarity() (completedos static method)": [[160, "pymatgen.electronic_structure.dos.CompleteDos.get_dos_fp_similarity"]], "get_element_dos() (completedos method)": [[160, "pymatgen.electronic_structure.dos.CompleteDos.get_element_dos"]], "get_element_spd_dos() (completedos method)": [[160, "pymatgen.electronic_structure.dos.CompleteDos.get_element_spd_dos"]], "get_element_spd_dos() (lobstercompletedos method)": [[160, "pymatgen.electronic_structure.dos.LobsterCompleteDos.get_element_spd_dos"]], "get_fermi() (fermidos method)": [[160, "pymatgen.electronic_structure.dos.FermiDos.get_fermi"]], "get_fermi_interextrapolated() (fermidos method)": [[160, "pymatgen.electronic_structure.dos.FermiDos.get_fermi_interextrapolated"]], "get_gap() (dos method)": [[160, "pymatgen.electronic_structure.dos.DOS.get_gap"], [160, "pymatgen.electronic_structure.dos.Dos.get_gap"]], "get_hilbert_transform() (completedos method)": [[160, "pymatgen.electronic_structure.dos.CompleteDos.get_hilbert_transform"]], "get_interpolated_gap() (dos method)": [[160, "pymatgen.electronic_structure.dos.DOS.get_interpolated_gap"], [160, "pymatgen.electronic_structure.dos.Dos.get_interpolated_gap"]], "get_interpolated_value() (dos method)": [[160, "pymatgen.electronic_structure.dos.Dos.get_interpolated_value"]], "get_n_moment() (completedos method)": [[160, "pymatgen.electronic_structure.dos.CompleteDos.get_n_moment"]], "get_normalized() (completedos method)": [[160, "pymatgen.electronic_structure.dos.CompleteDos.get_normalized"]], "get_site_dos() (completedos method)": [[160, "pymatgen.electronic_structure.dos.CompleteDos.get_site_dos"]], "get_site_orbital_dos() (completedos method)": [[160, "pymatgen.electronic_structure.dos.CompleteDos.get_site_orbital_dos"]], "get_site_orbital_dos() (lobstercompletedos method)": [[160, "pymatgen.electronic_structure.dos.LobsterCompleteDos.get_site_orbital_dos"]], "get_site_spd_dos() (completedos method)": [[160, "pymatgen.electronic_structure.dos.CompleteDos.get_site_spd_dos"]], "get_site_t2g_eg_resolved_dos() (completedos method)": [[160, "pymatgen.electronic_structure.dos.CompleteDos.get_site_t2g_eg_resolved_dos"]], "get_site_t2g_eg_resolved_dos() (lobstercompletedos method)": [[160, "pymatgen.electronic_structure.dos.LobsterCompleteDos.get_site_t2g_eg_resolved_dos"]], "get_smeared_densities() (dos method)": [[160, "pymatgen.electronic_structure.dos.Dos.get_smeared_densities"]], "get_spd_dos() (completedos method)": [[160, "pymatgen.electronic_structure.dos.CompleteDos.get_spd_dos"]], "get_spd_dos() (lobstercompletedos method)": [[160, "pymatgen.electronic_structure.dos.LobsterCompleteDos.get_spd_dos"]], "get_upper_band_edge() (completedos method)": [[160, "pymatgen.electronic_structure.dos.CompleteDos.get_upper_band_edge"]], "pdos (completedos attribute)": [[160, "pymatgen.electronic_structure.dos.CompleteDos.pdos"]], "pymatgen.electronic_structure.dos": [[160, "module-pymatgen.electronic_structure.dos"]], "spin_polarization (completedos property)": [[160, "pymatgen.electronic_structure.dos.CompleteDos.spin_polarization"]], "structure (completedos attribute)": [[160, "pymatgen.electronic_structure.dos.CompleteDos.structure"]], "bsdosplotter (class in pymatgen.electronic_structure.plotter)": [[161, "pymatgen.electronic_structure.plotter.BSDOSPlotter"]], "bsplotter (class in pymatgen.electronic_structure.plotter)": [[161, "pymatgen.electronic_structure.plotter.BSPlotter"]], "bsplotterprojected (class in pymatgen.electronic_structure.plotter)": [[161, "pymatgen.electronic_structure.plotter.BSPlotterProjected"]], "boltztrapplotter (class in pymatgen.electronic_structure.plotter)": [[161, "pymatgen.electronic_structure.plotter.BoltztrapPlotter"]], "cohpplotter (class in pymatgen.electronic_structure.plotter)": [[161, "pymatgen.electronic_structure.plotter.CohpPlotter"]], "dosplotter (class in pymatgen.electronic_structure.plotter)": [[161, "pymatgen.electronic_structure.plotter.DosPlotter"]], "add_bs() (bsplotter method)": [[161, "pymatgen.electronic_structure.plotter.BSPlotter.add_bs"]], "add_cohp() (cohpplotter method)": [[161, "pymatgen.electronic_structure.plotter.CohpPlotter.add_cohp"]], "add_cohp_dict() (cohpplotter method)": [[161, "pymatgen.electronic_structure.plotter.CohpPlotter.add_cohp_dict"]], "add_dos() (dosplotter method)": [[161, "pymatgen.electronic_structure.plotter.DosPlotter.add_dos"]], "add_dos_dict() (dosplotter method)": [[161, "pymatgen.electronic_structure.plotter.DosPlotter.add_dos_dict"]], "bs_plot_data() (bsplotter method)": [[161, "pymatgen.electronic_structure.plotter.BSPlotter.bs_plot_data"]], "fold_point() (in module pymatgen.electronic_structure.plotter)": [[161, "pymatgen.electronic_structure.plotter.fold_point"]], "get_cohp_dict() (cohpplotter method)": [[161, "pymatgen.electronic_structure.plotter.CohpPlotter.get_cohp_dict"]], "get_dos_dict() (dosplotter method)": [[161, "pymatgen.electronic_structure.plotter.DosPlotter.get_dos_dict"]], "get_elt_projected_plots() (bsplotterprojected method)": [[161, "pymatgen.electronic_structure.plotter.BSPlotterProjected.get_elt_projected_plots"]], "get_elt_projected_plots_color() (bsplotterprojected method)": [[161, "pymatgen.electronic_structure.plotter.BSPlotterProjected.get_elt_projected_plots_color"]], "get_plot() (bsdosplotter method)": [[161, "pymatgen.electronic_structure.plotter.BSDOSPlotter.get_plot"]], "get_plot() (bsplotter method)": [[161, "pymatgen.electronic_structure.plotter.BSPlotter.get_plot"]], "get_plot() (cohpplotter method)": [[161, "pymatgen.electronic_structure.plotter.CohpPlotter.get_plot"]], "get_plot() (dosplotter method)": [[161, "pymatgen.electronic_structure.plotter.DosPlotter.get_plot"]], "get_projected_plots_dots() (bsplotterprojected method)": [[161, "pymatgen.electronic_structure.plotter.BSPlotterProjected.get_projected_plots_dots"]], "get_projected_plots_dots_patom_pmorb() (bsplotterprojected method)": [[161, "pymatgen.electronic_structure.plotter.BSPlotterProjected.get_projected_plots_dots_patom_pmorb"]], "get_ticks() (bsplotter method)": [[161, "pymatgen.electronic_structure.plotter.BSPlotter.get_ticks"]], "get_ticks_old() (bsplotter method)": [[161, "pymatgen.electronic_structure.plotter.BSPlotter.get_ticks_old"]], "plot_brillouin() (bsplotter method)": [[161, "pymatgen.electronic_structure.plotter.BSPlotter.plot_brillouin"]], "plot_brillouin_zone() (in module pymatgen.electronic_structure.plotter)": [[161, "pymatgen.electronic_structure.plotter.plot_brillouin_zone"]], "plot_brillouin_zone_from_kpath() (in module pymatgen.electronic_structure.plotter)": [[161, "pymatgen.electronic_structure.plotter.plot_brillouin_zone_from_kpath"]], "plot_carriers() (boltztrapplotter method)": [[161, "pymatgen.electronic_structure.plotter.BoltztrapPlotter.plot_carriers"]], "plot_compare() (bsplotter method)": [[161, "pymatgen.electronic_structure.plotter.BSPlotter.plot_compare"]], "plot_complexity_factor_mu() (boltztrapplotter method)": [[161, "pymatgen.electronic_structure.plotter.BoltztrapPlotter.plot_complexity_factor_mu"]], "plot_conductivity_dop() (boltztrapplotter method)": [[161, "pymatgen.electronic_structure.plotter.BoltztrapPlotter.plot_conductivity_dop"]], "plot_conductivity_mu() (boltztrapplotter method)": [[161, "pymatgen.electronic_structure.plotter.BoltztrapPlotter.plot_conductivity_mu"]], "plot_conductivity_temp() (boltztrapplotter method)": [[161, "pymatgen.electronic_structure.plotter.BoltztrapPlotter.plot_conductivity_temp"]], "plot_dos() (boltztrapplotter method)": [[161, "pymatgen.electronic_structure.plotter.BoltztrapPlotter.plot_dos"]], "plot_eff_mass_dop() (boltztrapplotter method)": [[161, "pymatgen.electronic_structure.plotter.BoltztrapPlotter.plot_eff_mass_dop"]], "plot_eff_mass_temp() (boltztrapplotter method)": [[161, "pymatgen.electronic_structure.plotter.BoltztrapPlotter.plot_eff_mass_temp"]], "plot_ellipsoid() (in module pymatgen.electronic_structure.plotter)": [[161, "pymatgen.electronic_structure.plotter.plot_ellipsoid"]], "plot_fermi_surface() (in module pymatgen.electronic_structure.plotter)": [[161, "pymatgen.electronic_structure.plotter.plot_fermi_surface"]], "plot_hall_carriers() (boltztrapplotter method)": [[161, "pymatgen.electronic_structure.plotter.BoltztrapPlotter.plot_hall_carriers"]], "plot_labels() (in module pymatgen.electronic_structure.plotter)": [[161, "pymatgen.electronic_structure.plotter.plot_labels"]], "plot_lattice_vectors() (in module pymatgen.electronic_structure.plotter)": [[161, "pymatgen.electronic_structure.plotter.plot_lattice_vectors"]], "plot_path() (in module pymatgen.electronic_structure.plotter)": [[161, "pymatgen.electronic_structure.plotter.plot_path"]], "plot_points() (in module pymatgen.electronic_structure.plotter)": [[161, "pymatgen.electronic_structure.plotter.plot_points"]], "plot_power_factor_dop() (boltztrapplotter method)": [[161, "pymatgen.electronic_structure.plotter.BoltztrapPlotter.plot_power_factor_dop"]], "plot_power_factor_mu() (boltztrapplotter method)": [[161, "pymatgen.electronic_structure.plotter.BoltztrapPlotter.plot_power_factor_mu"]], "plot_power_factor_temp() (boltztrapplotter method)": [[161, "pymatgen.electronic_structure.plotter.BoltztrapPlotter.plot_power_factor_temp"]], "plot_seebeck_dop() (boltztrapplotter method)": [[161, "pymatgen.electronic_structure.plotter.BoltztrapPlotter.plot_seebeck_dop"]], "plot_seebeck_eff_mass_mu() (boltztrapplotter method)": [[161, "pymatgen.electronic_structure.plotter.BoltztrapPlotter.plot_seebeck_eff_mass_mu"]], "plot_seebeck_mu() (boltztrapplotter method)": [[161, "pymatgen.electronic_structure.plotter.BoltztrapPlotter.plot_seebeck_mu"]], "plot_seebeck_temp() (boltztrapplotter method)": [[161, "pymatgen.electronic_structure.plotter.BoltztrapPlotter.plot_seebeck_temp"]], "plot_wigner_seitz() (in module pymatgen.electronic_structure.plotter)": [[161, "pymatgen.electronic_structure.plotter.plot_wigner_seitz"]], "plot_zt_dop() (boltztrapplotter method)": [[161, "pymatgen.electronic_structure.plotter.BoltztrapPlotter.plot_zt_dop"]], "plot_zt_mu() (boltztrapplotter method)": [[161, "pymatgen.electronic_structure.plotter.BoltztrapPlotter.plot_zt_mu"]], "plot_zt_temp() (boltztrapplotter method)": [[161, "pymatgen.electronic_structure.plotter.BoltztrapPlotter.plot_zt_temp"]], "pymatgen.electronic_structure.plotter": [[161, "module-pymatgen.electronic_structure.plotter"]], "save_plot() (bsplotter method)": [[161, "pymatgen.electronic_structure.plotter.BSPlotter.save_plot"]], "save_plot() (cohpplotter method)": [[161, "pymatgen.electronic_structure.plotter.CohpPlotter.save_plot"]], "save_plot() (dosplotter method)": [[161, "pymatgen.electronic_structure.plotter.DosPlotter.save_plot"]], "show() (bsplotter method)": [[161, "pymatgen.electronic_structure.plotter.BSPlotter.show"]], "show() (cohpplotter method)": [[161, "pymatgen.electronic_structure.plotter.CohpPlotter.show"]], "show() (dosplotter method)": [[161, "pymatgen.electronic_structure.plotter.DosPlotter.show"]], "entry (class in pymatgen.entries)": [[162, "pymatgen.entries.Entry"]], "as_dict() (entry method)": [[162, "pymatgen.entries.Entry.as_dict"]], "composition (entry property)": [[162, "pymatgen.entries.Entry.composition"]], "energy (entry property)": [[162, "pymatgen.entries.Entry.energy"]], "energy_per_atom (entry property)": [[162, "pymatgen.entries.Entry.energy_per_atom"]], "is_element (entry property)": [[162, "pymatgen.entries.Entry.is_element"]], "normalize() (entry method)": [[162, "pymatgen.entries.Entry.normalize"]], "pymatgen.entries": [[162, "module-pymatgen.entries"]], "anioncorrection (class in pymatgen.entries.compatibility)": [[163, "pymatgen.entries.compatibility.AnionCorrection"]], "aqueouscorrection (class in pymatgen.entries.compatibility)": [[163, "pymatgen.entries.compatibility.AqueousCorrection"]], "compatibility (class in pymatgen.entries.compatibility)": [[163, "pymatgen.entries.compatibility.Compatibility"]], "compatibilityerror": [[163, "pymatgen.entries.compatibility.CompatibilityError"]], "correction (class in pymatgen.entries.compatibility)": [[163, "pymatgen.entries.compatibility.Correction"]], "correctionslist (class in pymatgen.entries.compatibility)": [[163, "pymatgen.entries.compatibility.CorrectionsList"]], "gascorrection (class in pymatgen.entries.compatibility)": [[163, "pymatgen.entries.compatibility.GasCorrection"]], "mitaqueouscompatibility (class in pymatgen.entries.compatibility)": [[163, "pymatgen.entries.compatibility.MITAqueousCompatibility"]], "mitcompatibility (class in pymatgen.entries.compatibility)": [[163, "pymatgen.entries.compatibility.MITCompatibility"]], "materialsproject2020compatibility (class in pymatgen.entries.compatibility)": [[163, "pymatgen.entries.compatibility.MaterialsProject2020Compatibility"]], "materialsprojectaqueouscompatibility (class in pymatgen.entries.compatibility)": [[163, "pymatgen.entries.compatibility.MaterialsProjectAqueousCompatibility"]], "materialsprojectcompatibility (class in pymatgen.entries.compatibility)": [[163, "pymatgen.entries.compatibility.MaterialsProjectCompatibility"]], "potcarcorrection (class in pymatgen.entries.compatibility)": [[163, "pymatgen.entries.compatibility.PotcarCorrection"]], "ucorrection (class in pymatgen.entries.compatibility)": [[163, "pymatgen.entries.compatibility.UCorrection"]], "correct_entry() (correction method)": [[163, "pymatgen.entries.compatibility.Correction.correct_entry"]], "explain() (compatibility static method)": [[163, "pymatgen.entries.compatibility.Compatibility.explain"]], "explain() (correctionslist method)": [[163, "pymatgen.entries.compatibility.CorrectionsList.explain"]], "get_adjustments() (compatibility method)": [[163, "pymatgen.entries.compatibility.Compatibility.get_adjustments"]], "get_adjustments() (correctionslist method)": [[163, "pymatgen.entries.compatibility.CorrectionsList.get_adjustments"]], "get_correction() (correction method)": [[163, "pymatgen.entries.compatibility.Correction.get_correction"]], "get_correction() (potcarcorrection method)": [[163, "pymatgen.entries.compatibility.PotcarCorrection.get_correction"]], "get_corrections_dict() (correctionslist method)": [[163, "pymatgen.entries.compatibility.CorrectionsList.get_corrections_dict"]], "get_explanation_dict() (correctionslist method)": [[163, "pymatgen.entries.compatibility.CorrectionsList.get_explanation_dict"]], "process_entries() (compatibility method)": [[163, "pymatgen.entries.compatibility.Compatibility.process_entries"]], "process_entry() (compatibility method)": [[163, "pymatgen.entries.compatibility.Compatibility.process_entry"]], "pymatgen.entries.compatibility": [[163, "module-pymatgen.entries.compatibility"]], "compositionenergyadjustment (class in pymatgen.entries.computed_entries)": [[164, "pymatgen.entries.computed_entries.CompositionEnergyAdjustment"]], "computedentry (class in pymatgen.entries.computed_entries)": [[164, "pymatgen.entries.computed_entries.ComputedEntry"]], "computedstructureentry (class in pymatgen.entries.computed_entries)": [[164, "pymatgen.entries.computed_entries.ComputedStructureEntry"]], "constantenergyadjustment (class in pymatgen.entries.computed_entries)": [[164, "pymatgen.entries.computed_entries.ConstantEnergyAdjustment"]], "energyadjustment (class in pymatgen.entries.computed_entries)": [[164, "pymatgen.entries.computed_entries.EnergyAdjustment"]], "gibbscomputedstructureentry (class in pymatgen.entries.computed_entries)": [[164, "pymatgen.entries.computed_entries.GibbsComputedStructureEntry"]], "manualenergyadjustment (class in pymatgen.entries.computed_entries)": [[164, "pymatgen.entries.computed_entries.ManualEnergyAdjustment"]], "temperatureenergyadjustment (class in pymatgen.entries.computed_entries)": [[164, "pymatgen.entries.computed_entries.TemperatureEnergyAdjustment"]], "as_dict() (computedentry method)": [[164, "pymatgen.entries.computed_entries.ComputedEntry.as_dict"]], "as_dict() (computedstructureentry method)": [[164, "pymatgen.entries.computed_entries.ComputedStructureEntry.as_dict"]], "as_dict() (gibbscomputedstructureentry method)": [[164, "pymatgen.entries.computed_entries.GibbsComputedStructureEntry.as_dict"]], "copy() (computedentry method)": [[164, "pymatgen.entries.computed_entries.ComputedEntry.copy"]], "copy() (computedstructureentry method)": [[164, "pymatgen.entries.computed_entries.ComputedStructureEntry.copy"]], "correction (computedentry property)": [[164, "pymatgen.entries.computed_entries.ComputedEntry.correction"]], "correction_per_atom (computedentry property)": [[164, "pymatgen.entries.computed_entries.ComputedEntry.correction_per_atom"]], "correction_uncertainty (computedentry property)": [[164, "pymatgen.entries.computed_entries.ComputedEntry.correction_uncertainty"]], "correction_uncertainty_per_atom (computedentry property)": [[164, "pymatgen.entries.computed_entries.ComputedEntry.correction_uncertainty_per_atom"]], "energy (computedentry property)": [[164, "pymatgen.entries.computed_entries.ComputedEntry.energy"]], "explain (compositionenergyadjustment property)": [[164, "pymatgen.entries.computed_entries.CompositionEnergyAdjustment.explain"]], "explain (constantenergyadjustment property)": [[164, "pymatgen.entries.computed_entries.ConstantEnergyAdjustment.explain"]], "explain (energyadjustment property)": [[164, "pymatgen.entries.computed_entries.EnergyAdjustment.explain"]], "explain (temperatureenergyadjustment property)": [[164, "pymatgen.entries.computed_entries.TemperatureEnergyAdjustment.explain"]], "from_dict() (computedentry class method)": [[164, "pymatgen.entries.computed_entries.ComputedEntry.from_dict"]], "from_dict() (computedstructureentry class method)": [[164, "pymatgen.entries.computed_entries.ComputedStructureEntry.from_dict"]], "from_dict() (gibbscomputedstructureentry class method)": [[164, "pymatgen.entries.computed_entries.GibbsComputedStructureEntry.from_dict"]], "from_entries() (gibbscomputedstructureentry class method)": [[164, "pymatgen.entries.computed_entries.GibbsComputedStructureEntry.from_entries"]], "from_pd() (gibbscomputedstructureentry class method)": [[164, "pymatgen.entries.computed_entries.GibbsComputedStructureEntry.from_pd"]], "gf_sisso() (gibbscomputedstructureentry method)": [[164, "pymatgen.entries.computed_entries.GibbsComputedStructureEntry.gf_sisso"]], "normalize() (compositionenergyadjustment method)": [[164, "pymatgen.entries.computed_entries.CompositionEnergyAdjustment.normalize"]], "normalize() (computedentry method)": [[164, "pymatgen.entries.computed_entries.ComputedEntry.normalize"]], "normalize() (computedstructureentry method)": [[164, "pymatgen.entries.computed_entries.ComputedStructureEntry.normalize"]], "normalize() (constantenergyadjustment method)": [[164, "pymatgen.entries.computed_entries.ConstantEnergyAdjustment.normalize"]], "normalize() (energyadjustment method)": [[164, "pymatgen.entries.computed_entries.EnergyAdjustment.normalize"]], "normalize() (temperatureenergyadjustment method)": [[164, "pymatgen.entries.computed_entries.TemperatureEnergyAdjustment.normalize"]], "pymatgen.entries.computed_entries": [[164, "module-pymatgen.entries.computed_entries"]], "structure (computedstructureentry property)": [[164, "pymatgen.entries.computed_entries.ComputedStructureEntry.structure"]], "uncertainty (compositionenergyadjustment property)": [[164, "pymatgen.entries.computed_entries.CompositionEnergyAdjustment.uncertainty"]], "uncertainty (energyadjustment property)": [[164, "pymatgen.entries.computed_entries.EnergyAdjustment.uncertainty"]], "uncertainty (temperatureenergyadjustment property)": [[164, "pymatgen.entries.computed_entries.TemperatureEnergyAdjustment.uncertainty"]], "uncorrected_energy (computedentry property)": [[164, "pymatgen.entries.computed_entries.ComputedEntry.uncorrected_energy"]], "uncorrected_energy_per_atom (computedentry property)": [[164, "pymatgen.entries.computed_entries.ComputedEntry.uncorrected_energy_per_atom"]], "value (compositionenergyadjustment property)": [[164, "pymatgen.entries.computed_entries.CompositionEnergyAdjustment.value"]], "value (energyadjustment property)": [[164, "pymatgen.entries.computed_entries.EnergyAdjustment.value"]], "value (temperatureenergyadjustment property)": [[164, "pymatgen.entries.computed_entries.TemperatureEnergyAdjustment.value"]], "correctioncalculator (class in pymatgen.entries.correction_calculator)": [[165, "pymatgen.entries.correction_calculator.CorrectionCalculator"]], "calc_compounds (correctioncalculator attribute)": [[165, "pymatgen.entries.correction_calculator.CorrectionCalculator.calc_compounds"]], "compute_corrections() (correctioncalculator method)": [[165, "pymatgen.entries.correction_calculator.CorrectionCalculator.compute_corrections"]], "compute_from_files() (correctioncalculator method)": [[165, "pymatgen.entries.correction_calculator.CorrectionCalculator.compute_from_files"]], "corrections (correctioncalculator attribute)": [[165, "pymatgen.entries.correction_calculator.CorrectionCalculator.corrections"]], "corrections_dict (correctioncalculator attribute)": [[165, "pymatgen.entries.correction_calculator.CorrectionCalculator.corrections_dict"]], "corrections_std_error (correctioncalculator attribute)": [[165, "pymatgen.entries.correction_calculator.CorrectionCalculator.corrections_std_error"]], "exp_compounds (correctioncalculator attribute)": [[165, "pymatgen.entries.correction_calculator.CorrectionCalculator.exp_compounds"]], "graph_residual_error() (correctioncalculator method)": [[165, "pymatgen.entries.correction_calculator.CorrectionCalculator.graph_residual_error"]], "graph_residual_error_per_species() (correctioncalculator method)": [[165, "pymatgen.entries.correction_calculator.CorrectionCalculator.graph_residual_error_per_species"]], "make_yaml() (correctioncalculator method)": [[165, "pymatgen.entries.correction_calculator.CorrectionCalculator.make_yaml"]], "pymatgen.entries.correction_calculator": [[165, "module-pymatgen.entries.correction_calculator"]], "species (correctioncalculator attribute)": [[165, "pymatgen.entries.correction_calculator.CorrectionCalculator.species"]], "entryset (class in pymatgen.entries.entry_tools)": [[166, "pymatgen.entries.entry_tools.EntrySet"]], "add() (entryset method)": [[166, "pymatgen.entries.entry_tools.EntrySet.add"]], "as_dict() (entryset method)": [[166, "pymatgen.entries.entry_tools.EntrySet.as_dict"]], "chemsys (entryset property)": [[166, "pymatgen.entries.entry_tools.EntrySet.chemsys"]], "discard() (entryset method)": [[166, "pymatgen.entries.entry_tools.EntrySet.discard"]], "from_csv() (entryset class method)": [[166, "pymatgen.entries.entry_tools.EntrySet.from_csv"]], "get_subset_in_chemsys() (entryset method)": [[166, "pymatgen.entries.entry_tools.EntrySet.get_subset_in_chemsys"]], "ground_states (entryset property)": [[166, "pymatgen.entries.entry_tools.EntrySet.ground_states"]], "group_entries_by_composition() (in module pymatgen.entries.entry_tools)": [[166, "pymatgen.entries.entry_tools.group_entries_by_composition"]], "group_entries_by_structure() (in module pymatgen.entries.entry_tools)": [[166, "pymatgen.entries.entry_tools.group_entries_by_structure"]], "is_ground_state() (entryset method)": [[166, "pymatgen.entries.entry_tools.EntrySet.is_ground_state"]], "pymatgen.entries.entry_tools": [[166, "module-pymatgen.entries.entry_tools"]], "remove_non_ground_states() (entryset method)": [[166, "pymatgen.entries.entry_tools.EntrySet.remove_non_ground_states"]], "to_csv() (entryset method)": [[166, "pymatgen.entries.entry_tools.EntrySet.to_csv"]], "expentry (class in pymatgen.entries.exp_entries)": [[167, "pymatgen.entries.exp_entries.ExpEntry"]], "as_dict() (expentry method)": [[167, "pymatgen.entries.exp_entries.ExpEntry.as_dict"]], "from_dict() (expentry class method)": [[167, "pymatgen.entries.exp_entries.ExpEntry.from_dict"]], "pymatgen.entries.exp_entries": [[167, "module-pymatgen.entries.exp_entries"]], "materialsprojectdftmixingscheme (class in pymatgen.entries.mixing_scheme)": [[168, "pymatgen.entries.mixing_scheme.MaterialsProjectDFTMixingScheme"]], "display_entries() (materialsprojectdftmixingscheme static method)": [[168, "pymatgen.entries.mixing_scheme.MaterialsProjectDFTMixingScheme.display_entries"]], "get_adjustments() (materialsprojectdftmixingscheme method)": [[168, "pymatgen.entries.mixing_scheme.MaterialsProjectDFTMixingScheme.get_adjustments"]], "get_mixing_state_data() (materialsprojectdftmixingscheme method)": [[168, "pymatgen.entries.mixing_scheme.MaterialsProjectDFTMixingScheme.get_mixing_state_data"]], "process_entries() (materialsprojectdftmixingscheme method)": [[168, "pymatgen.entries.mixing_scheme.MaterialsProjectDFTMixingScheme.process_entries"]], "pymatgen.entries.mixing_scheme": [[168, "module-pymatgen.entries.mixing_scheme"]], "pymatgen.ext": [[169, "module-pymatgen.ext"]], "cod (class in pymatgen.ext.cod)": [[170, "pymatgen.ext.cod.COD"]], "get_cod_ids() (cod method)": [[170, "pymatgen.ext.cod.COD.get_cod_ids"]], "get_structure_by_formula() (cod method)": [[170, "pymatgen.ext.cod.COD.get_structure_by_formula"]], "get_structure_by_id() (cod method)": [[170, "pymatgen.ext.cod.COD.get_structure_by_id"]], "pymatgen.ext.cod": [[170, "module-pymatgen.ext.cod"]], "query() (cod method)": [[170, "pymatgen.ext.cod.COD.query"]], "ggau_def (tasktype attribute)": [[171, "pymatgen.ext.matproj.TaskType.GGAU_DEF"]], "ggau_line (tasktype attribute)": [[171, "pymatgen.ext.matproj.TaskType.GGAU_LINE"]], "ggau_opt (tasktype attribute)": [[171, "pymatgen.ext.matproj.TaskType.GGAU_OPT"]], "ggau_static (tasktype attribute)": [[171, "pymatgen.ext.matproj.TaskType.GGAU_STATIC"]], "ggau_static_diel (tasktype attribute)": [[171, "pymatgen.ext.matproj.TaskType.GGAU_STATIC_DIEL"]], "ggau_uniform (tasktype attribute)": [[171, "pymatgen.ext.matproj.TaskType.GGAU_UNIFORM"]], "gga_def (tasktype attribute)": [[171, "pymatgen.ext.matproj.TaskType.GGA_DEF"]], "gga_line (tasktype attribute)": [[171, "pymatgen.ext.matproj.TaskType.GGA_LINE"]], "gga_opt (tasktype attribute)": [[171, "pymatgen.ext.matproj.TaskType.GGA_OPT"]], "gga_static (tasktype attribute)": [[171, "pymatgen.ext.matproj.TaskType.GGA_STATIC"]], "gga_static_diel (tasktype attribute)": [[171, "pymatgen.ext.matproj.TaskType.GGA_STATIC_DIEL"]], "gga_uniform (tasktype attribute)": [[171, "pymatgen.ext.matproj.TaskType.GGA_UNIFORM"]], "lda_static_diel (tasktype attribute)": [[171, "pymatgen.ext.matproj.TaskType.LDA_STATIC_DIEL"]], "mpresterror": [[171, "pymatgen.ext.matproj.MPRestError"]], "mprester (class in pymatgen.ext.matproj)": [[171, "pymatgen.ext.matproj.MPRester"]], "scan_opt (tasktype attribute)": [[171, "pymatgen.ext.matproj.TaskType.SCAN_OPT"]], "tasktype (class in pymatgen.ext.matproj)": [[171, "pymatgen.ext.matproj.TaskType"]], "get_chunks() (in module pymatgen.ext.matproj)": [[171, "pymatgen.ext.matproj.get_chunks"]], "pymatgen.ext.matproj": [[171, "module-pymatgen.ext.matproj"]], "optimaderester (class in pymatgen.ext.optimade)": [[172, "pymatgen.ext.optimade.OptimadeRester"]], "provider (class in pymatgen.ext.optimade)": [[172, "pymatgen.ext.optimade.Provider"]], "aliases (optimaderester attribute)": [[172, "pymatgen.ext.optimade.OptimadeRester.aliases"]], "base_url (provider attribute)": [[172, "pymatgen.ext.optimade.Provider.base_url"]], "describe() (optimaderester method)": [[172, "pymatgen.ext.optimade.OptimadeRester.describe"]], "description (provider attribute)": [[172, "pymatgen.ext.optimade.Provider.description"]], "get_snls() (optimaderester method)": [[172, "pymatgen.ext.optimade.OptimadeRester.get_snls"]], "get_snls_with_filter() (optimaderester method)": [[172, "pymatgen.ext.optimade.OptimadeRester.get_snls_with_filter"]], "get_structures() (optimaderester method)": [[172, "pymatgen.ext.optimade.OptimadeRester.get_structures"]], "get_structures_with_filter() (optimaderester method)": [[172, "pymatgen.ext.optimade.OptimadeRester.get_structures_with_filter"]], "homepage (provider attribute)": [[172, "pymatgen.ext.optimade.Provider.homepage"]], "mandatory_response_fields (optimaderester attribute)": [[172, "pymatgen.ext.optimade.OptimadeRester.mandatory_response_fields"]], "name (provider attribute)": [[172, "pymatgen.ext.optimade.Provider.name"]], "prefix (provider attribute)": [[172, "pymatgen.ext.optimade.Provider.prefix"]], "pymatgen.ext.optimade": [[172, "module-pymatgen.ext.optimade"]], "refresh_aliases() (optimaderester method)": [[172, "pymatgen.ext.optimade.OptimadeRester.refresh_aliases"]], "pymatgen.io": [[173, "module-pymatgen.io"]], "pymatgen.io.abinit": [[174, "module-pymatgen.io.abinit"]], "abivarable (class in pymatgen.io.abinit.abiobjects)": [[175, "pymatgen.io.abinit.abiobjects.AbivarAble"]], "constraints (class in pymatgen.io.abinit.abiobjects)": [[175, "pymatgen.io.abinit.abiobjects.Constraints"]], "electrons (class in pymatgen.io.abinit.abiobjects)": [[175, "pymatgen.io.abinit.abiobjects.Electrons"]], "electronsalgorithm (class in pymatgen.io.abinit.abiobjects)": [[175, "pymatgen.io.abinit.abiobjects.ElectronsAlgorithm"]], "exchamiltonian (class in pymatgen.io.abinit.abiobjects)": [[175, "pymatgen.io.abinit.abiobjects.ExcHamiltonian"]], "hilberttransform (class in pymatgen.io.abinit.abiobjects)": [[175, "pymatgen.io.abinit.abiobjects.HilbertTransform"]], "ionmov_default (relaxationmethod attribute)": [[175, "pymatgen.io.abinit.abiobjects.RelaxationMethod.IONMOV_DEFAULT"]], "ksampling (class in pymatgen.io.abinit.abiobjects)": [[175, "pymatgen.io.abinit.abiobjects.KSampling"]], "ksamplingmodes (class in pymatgen.io.abinit.abiobjects)": [[175, "pymatgen.io.abinit.abiobjects.KSamplingModes"]], "modeldielectricfunction (class in pymatgen.io.abinit.abiobjects)": [[175, "pymatgen.io.abinit.abiobjects.ModelDielectricFunction"]], "optcell_default (relaxationmethod attribute)": [[175, "pymatgen.io.abinit.abiobjects.RelaxationMethod.OPTCELL_DEFAULT"]], "ppmodel (class in pymatgen.io.abinit.abiobjects)": [[175, "pymatgen.io.abinit.abiobjects.PPModel"]], "ppmodelmodes (class in pymatgen.io.abinit.abiobjects)": [[175, "pymatgen.io.abinit.abiobjects.PPModelModes"]], "relaxationmethod (class in pymatgen.io.abinit.abiobjects)": [[175, "pymatgen.io.abinit.abiobjects.RelaxationMethod"]], "screening (class in pymatgen.io.abinit.abiobjects)": [[175, "pymatgen.io.abinit.abiobjects.Screening"]], "selfenergy (class in pymatgen.io.abinit.abiobjects)": [[175, "pymatgen.io.abinit.abiobjects.SelfEnergy"]], "smearing (class in pymatgen.io.abinit.abiobjects)": [[175, "pymatgen.io.abinit.abiobjects.Smearing"]], "spinmode (class in pymatgen.io.abinit.abiobjects)": [[175, "pymatgen.io.abinit.abiobjects.SpinMode"]], "as_dict() (electrons method)": [[175, "pymatgen.io.abinit.abiobjects.Electrons.as_dict"]], "as_dict() (electronsalgorithm method)": [[175, "pymatgen.io.abinit.abiobjects.ElectronsAlgorithm.as_dict"]], "as_dict() (ksampling method)": [[175, "pymatgen.io.abinit.abiobjects.KSampling.as_dict"]], "as_dict() (ppmodel method)": [[175, "pymatgen.io.abinit.abiobjects.PPModel.as_dict"]], "as_dict() (relaxationmethod method)": [[175, "pymatgen.io.abinit.abiobjects.RelaxationMethod.as_dict"]], "as_dict() (smearing method)": [[175, "pymatgen.io.abinit.abiobjects.Smearing.as_dict"]], "as_dict() (spinmode method)": [[175, "pymatgen.io.abinit.abiobjects.SpinMode.as_dict"]], "as_ppmodel() (ppmodel class method)": [[175, "pymatgen.io.abinit.abiobjects.PPModel.as_ppmodel"]], "as_smearing() (smearing class method)": [[175, "pymatgen.io.abinit.abiobjects.Smearing.as_smearing"]], "as_spinmode() (spinmode class method)": [[175, "pymatgen.io.abinit.abiobjects.SpinMode.as_spinmode"]], "atoms_and_cell() (relaxationmethod class method)": [[175, "pymatgen.io.abinit.abiobjects.RelaxationMethod.atoms_and_cell"]], "atoms_only() (relaxationmethod class method)": [[175, "pymatgen.io.abinit.abiobjects.RelaxationMethod.atoms_only"]], "automatic (ksamplingmodes attribute)": [[175, "pymatgen.io.abinit.abiobjects.KSamplingModes.automatic"]], "automatic_density() (ksampling class method)": [[175, "pymatgen.io.abinit.abiobjects.KSampling.automatic_density"]], "contract() (in module pymatgen.io.abinit.abiobjects)": [[175, "pymatgen.io.abinit.abiobjects.contract"]], "explicit_path() (ksampling class method)": [[175, "pymatgen.io.abinit.abiobjects.KSampling.explicit_path"]], "farid (ppmodelmodes attribute)": [[175, "pymatgen.io.abinit.abiobjects.PPModelModes.farid"]], "from_dict() (electrons class method)": [[175, "pymatgen.io.abinit.abiobjects.Electrons.from_dict"]], "from_dict() (electronsalgorithm class method)": [[175, "pymatgen.io.abinit.abiobjects.ElectronsAlgorithm.from_dict"]], "from_dict() (ksampling class method)": [[175, "pymatgen.io.abinit.abiobjects.KSampling.from_dict"]], "from_dict() (ppmodel static method)": [[175, "pymatgen.io.abinit.abiobjects.PPModel.from_dict"]], "from_dict() (relaxationmethod class method)": [[175, "pymatgen.io.abinit.abiobjects.RelaxationMethod.from_dict"]], "from_dict() (smearing static method)": [[175, "pymatgen.io.abinit.abiobjects.Smearing.from_dict"]], "from_dict() (spinmode class method)": [[175, "pymatgen.io.abinit.abiobjects.SpinMode.from_dict"]], "gamma_centered() (ksampling class method)": [[175, "pymatgen.io.abinit.abiobjects.KSampling.gamma_centered"]], "gamma_only() (ksampling class method)": [[175, "pymatgen.io.abinit.abiobjects.KSampling.gamma_only"]], "get_noppmodel() (ppmodel class method)": [[175, "pymatgen.io.abinit.abiobjects.PPModel.get_noppmodel"]], "godby (ppmodelmodes attribute)": [[175, "pymatgen.io.abinit.abiobjects.PPModelModes.godby"]], "gwcalctyp (selfenergy property)": [[175, "pymatgen.io.abinit.abiobjects.SelfEnergy.gwcalctyp"]], "hybersten (ppmodelmodes attribute)": [[175, "pymatgen.io.abinit.abiobjects.PPModelModes.hybersten"]], "inclvkb (exchamiltonian property)": [[175, "pymatgen.io.abinit.abiobjects.ExcHamiltonian.inclvkb"]], "is_homogeneous (ksampling property)": [[175, "pymatgen.io.abinit.abiobjects.KSampling.is_homogeneous"]], "lattice_from_abivars() (in module pymatgen.io.abinit.abiobjects)": [[175, "pymatgen.io.abinit.abiobjects.lattice_from_abivars"]], "linden (ppmodelmodes attribute)": [[175, "pymatgen.io.abinit.abiobjects.PPModelModes.linden"]], "mode (smearing property)": [[175, "pymatgen.io.abinit.abiobjects.Smearing.mode"]], "monkhorst (ksamplingmodes attribute)": [[175, "pymatgen.io.abinit.abiobjects.KSamplingModes.monkhorst"]], "monkhorst() (ksampling class method)": [[175, "pymatgen.io.abinit.abiobjects.KSampling.monkhorst"]], "monkhorst_automatic() (ksampling class method)": [[175, "pymatgen.io.abinit.abiobjects.KSampling.monkhorst_automatic"]], "move_atoms (relaxationmethod property)": [[175, "pymatgen.io.abinit.abiobjects.RelaxationMethod.move_atoms"]], "move_cell (relaxationmethod property)": [[175, "pymatgen.io.abinit.abiobjects.RelaxationMethod.move_cell"]], "noppmodel (ppmodelmodes attribute)": [[175, "pymatgen.io.abinit.abiobjects.PPModelModes.noppmodel"]], "nosmearing() (smearing static method)": [[175, "pymatgen.io.abinit.abiobjects.Smearing.nosmearing"]], "nspden (electrons property)": [[175, "pymatgen.io.abinit.abiobjects.Electrons.nspden"]], "nspinor (electrons property)": [[175, "pymatgen.io.abinit.abiobjects.Electrons.nspinor"]], "nsppol (electrons property)": [[175, "pymatgen.io.abinit.abiobjects.Electrons.nsppol"]], "path (ksamplingmodes attribute)": [[175, "pymatgen.io.abinit.abiobjects.KSamplingModes.path"]], "path_from_structure() (ksampling class method)": [[175, "pymatgen.io.abinit.abiobjects.KSampling.path_from_structure"]], "pymatgen.io.abinit.abiobjects": [[175, "module-pymatgen.io.abinit.abiobjects"]], "species_by_znucl() (in module pymatgen.io.abinit.abiobjects)": [[175, "pymatgen.io.abinit.abiobjects.species_by_znucl"]], "structure_from_abivars() (in module pymatgen.io.abinit.abiobjects)": [[175, "pymatgen.io.abinit.abiobjects.structure_from_abivars"]], "structure_to_abivars() (in module pymatgen.io.abinit.abiobjects)": [[175, "pymatgen.io.abinit.abiobjects.structure_to_abivars"]], "symsigma (selfenergy property)": [[175, "pymatgen.io.abinit.abiobjects.SelfEnergy.symsigma"]], "to_abivars() (abivarable method)": [[175, "pymatgen.io.abinit.abiobjects.AbivarAble.to_abivars"]], "to_abivars() (constraints method)": [[175, "pymatgen.io.abinit.abiobjects.Constraints.to_abivars"]], "to_abivars() (electrons method)": [[175, "pymatgen.io.abinit.abiobjects.Electrons.to_abivars"]], "to_abivars() (electronsalgorithm method)": [[175, "pymatgen.io.abinit.abiobjects.ElectronsAlgorithm.to_abivars"]], "to_abivars() (exchamiltonian method)": [[175, "pymatgen.io.abinit.abiobjects.ExcHamiltonian.to_abivars"]], "to_abivars() (hilberttransform method)": [[175, "pymatgen.io.abinit.abiobjects.HilbertTransform.to_abivars"]], "to_abivars() (ksampling method)": [[175, "pymatgen.io.abinit.abiobjects.KSampling.to_abivars"]], "to_abivars() (modeldielectricfunction method)": [[175, "pymatgen.io.abinit.abiobjects.ModelDielectricFunction.to_abivars"]], "to_abivars() (ppmodel method)": [[175, "pymatgen.io.abinit.abiobjects.PPModel.to_abivars"]], "to_abivars() (relaxationmethod method)": [[175, "pymatgen.io.abinit.abiobjects.RelaxationMethod.to_abivars"]], "to_abivars() (screening method)": [[175, "pymatgen.io.abinit.abiobjects.Screening.to_abivars"]], "to_abivars() (selfenergy method)": [[175, "pymatgen.io.abinit.abiobjects.SelfEnergy.to_abivars"]], "to_abivars() (smearing method)": [[175, "pymatgen.io.abinit.abiobjects.Smearing.to_abivars"]], "to_abivars() (spinmode method)": [[175, "pymatgen.io.abinit.abiobjects.SpinMode.to_abivars"]], "use_cg (exchamiltonian property)": [[175, "pymatgen.io.abinit.abiobjects.ExcHamiltonian.use_cg"]], "use_direct_diago (exchamiltonian property)": [[175, "pymatgen.io.abinit.abiobjects.ExcHamiltonian.use_direct_diago"]], "use_haydock (exchamiltonian property)": [[175, "pymatgen.io.abinit.abiobjects.ExcHamiltonian.use_haydock"]], "use_hilbert (screening property)": [[175, "pymatgen.io.abinit.abiobjects.Screening.use_hilbert"]], "use_ppmodel (selfenergy property)": [[175, "pymatgen.io.abinit.abiobjects.SelfEnergy.use_ppmodel"]], "abinittimer (class in pymatgen.io.abinit.abitimer)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimer"]], "abinittimerparser (class in pymatgen.io.abinit.abitimer)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimerParser"]], "abinittimerparsererror": [[176, "pymatgen.io.abinit.abitimer.AbinitTimerParserError"]], "abinittimersection (class in pymatgen.io.abinit.abitimer)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimerSection"]], "begin_tag (abinittimerparser attribute)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimerParser.BEGIN_TAG"]], "end_tag (abinittimerparser attribute)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimerParser.END_TAG"]], "error (abinittimerparser attribute)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimerParser.Error"]], "fields (abinittimersection attribute)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimerSection.FIELDS"]], "numeric_fields (abinittimersection attribute)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimerSection.NUMERIC_FIELDS"]], "parallelefficiency (class in pymatgen.io.abinit.abitimer)": [[176, "pymatgen.io.abinit.abitimer.ParallelEfficiency"]], "str_fields (abinittimersection attribute)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimerSection.STR_FIELDS"]], "alternate() (in module pymatgen.io.abinit.abitimer)": [[176, "pymatgen.io.abinit.abitimer.alternate"]], "bad_sections() (parallelefficiency method)": [[176, "pymatgen.io.abinit.abitimer.ParallelEfficiency.bad_sections"]], "cpuwall_histogram() (abinittimer method)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimer.cpuwall_histogram"]], "fake() (abinittimersection class method)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimerSection.fake"]], "filenames (abinittimerparser property)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimerParser.filenames"]], "get_dataframe() (abinittimer method)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimer.get_dataframe"]], "get_section() (abinittimer method)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimer.get_section"]], "get_sections() (abinittimerparser method)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimerParser.get_sections"]], "get_values() (abinittimer method)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimer.get_values"]], "good_sections() (parallelefficiency method)": [[176, "pymatgen.io.abinit.abitimer.ParallelEfficiency.good_sections"]], "names_and_values() (abinittimer method)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimer.names_and_values"]], "ncpus (abinittimer property)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimer.ncpus"]], "order_sections() (abinittimer method)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimer.order_sections"]], "parse() (abinittimerparser method)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimerParser.parse"]], "pefficiency() (abinittimerparser method)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimerParser.pefficiency"]], "pie() (abinittimer method)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimer.pie"]], "plot_all() (abinittimerparser method)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimerParser.plot_all"]], "plot_efficiency() (abinittimerparser method)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimerParser.plot_efficiency"]], "plot_pie() (abinittimerparser method)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimerParser.plot_pie"]], "plot_stacked_hist() (abinittimerparser method)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimerParser.plot_stacked_hist"]], "pymatgen.io.abinit.abitimer": [[176, "module-pymatgen.io.abinit.abitimer"]], "scatter_hist() (abinittimer method)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimer.scatter_hist"]], "section_names() (abinittimerparser method)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimerParser.section_names"]], "sum_sections() (abinittimer method)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimer.sum_sections"]], "summarize() (abinittimerparser method)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimerParser.summarize"]], "timers() (abinittimerparser method)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimerParser.timers"]], "to_csv() (abinittimer method)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimer.to_csv"]], "to_csvline() (abinittimersection method)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimerSection.to_csvline"]], "to_dict() (abinittimersection method)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimerSection.to_dict"]], "to_table() (abinittimer method)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimer.to_table"]], "to_tuple() (abinittimersection method)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimerSection.to_tuple"]], "totable() (abinittimer method)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimer.totable"]], "totable() (parallelefficiency method)": [[176, "pymatgen.io.abinit.abitimer.ParallelEfficiency.totable"]], "walk() (abinittimerparser class method)": [[176, "pymatgen.io.abinit.abitimer.AbinitTimerParser.walk"]], "abstractinput (class in pymatgen.io.abinit.inputs)": [[177, "pymatgen.io.abinit.inputs.AbstractInput"]], "basicabinitinput (class in pymatgen.io.abinit.inputs)": [[177, "pymatgen.io.abinit.inputs.BasicAbinitInput"]], "basicabinitinputerror": [[177, "pymatgen.io.abinit.inputs.BasicAbinitInputError"]], "basicmultidataset (class in pymatgen.io.abinit.inputs)": [[177, "pymatgen.io.abinit.inputs.BasicMultiDataset"]], "error (basicabinitinput attribute)": [[177, "pymatgen.io.abinit.inputs.BasicAbinitInput.Error"]], "error (basicmultidataset attribute)": [[177, "pymatgen.io.abinit.inputs.BasicMultiDataset.Error"]], "gammacentered (shiftmode attribute)": [[177, "pymatgen.io.abinit.inputs.ShiftMode.GammaCentered"]], "monkhorstpack (shiftmode attribute)": [[177, "pymatgen.io.abinit.inputs.ShiftMode.MonkhorstPack"]], "onesymmetric (shiftmode attribute)": [[177, "pymatgen.io.abinit.inputs.ShiftMode.OneSymmetric"]], "shiftmode (class in pymatgen.io.abinit.inputs)": [[177, "pymatgen.io.abinit.inputs.ShiftMode"]], "symmetric (shiftmode attribute)": [[177, "pymatgen.io.abinit.inputs.ShiftMode.Symmetric"]], "add_abiobjects() (basicabinitinput method)": [[177, "pymatgen.io.abinit.inputs.BasicAbinitInput.add_abiobjects"]], "addnew_from() (basicmultidataset method)": [[177, "pymatgen.io.abinit.inputs.BasicMultiDataset.addnew_from"]], "append() (basicmultidataset method)": [[177, "pymatgen.io.abinit.inputs.BasicMultiDataset.append"]], "as_dict() (basicabinitinput method)": [[177, "pymatgen.io.abinit.inputs.BasicAbinitInput.as_dict"]], "as_structure() (in module pymatgen.io.abinit.inputs)": [[177, "pymatgen.io.abinit.inputs.as_structure"]], "calc_shiftk() (in module pymatgen.io.abinit.inputs)": [[177, "pymatgen.io.abinit.inputs.calc_shiftk"]], "comment (basicabinitinput property)": [[177, "pymatgen.io.abinit.inputs.BasicAbinitInput.comment"]], "deepcopy() (abstractinput method)": [[177, "pymatgen.io.abinit.inputs.AbstractInput.deepcopy"]], "deepcopy() (basicmultidataset method)": [[177, "pymatgen.io.abinit.inputs.BasicMultiDataset.deepcopy"]], "ebands_input() (in module pymatgen.io.abinit.inputs)": [[177, "pymatgen.io.abinit.inputs.ebands_input"]], "extend() (basicmultidataset method)": [[177, "pymatgen.io.abinit.inputs.BasicMultiDataset.extend"]], "from_dict() (basicabinitinput class method)": [[177, "pymatgen.io.abinit.inputs.BasicAbinitInput.from_dict"]], "from_inputs() (basicmultidataset class method)": [[177, "pymatgen.io.abinit.inputs.BasicMultiDataset.from_inputs"]], "from_object() (shiftmode class method)": [[177, "pymatgen.io.abinit.inputs.ShiftMode.from_object"]], "gs_input() (in module pymatgen.io.abinit.inputs)": [[177, "pymatgen.io.abinit.inputs.gs_input"]], "has_same_structures (basicmultidataset property)": [[177, "pymatgen.io.abinit.inputs.BasicMultiDataset.has_same_structures"]], "ion_ioncell_relax_input() (in module pymatgen.io.abinit.inputs)": [[177, "pymatgen.io.abinit.inputs.ion_ioncell_relax_input"]], "isnc (basicabinitinput property)": [[177, "pymatgen.io.abinit.inputs.BasicAbinitInput.isnc"]], "isnc (basicmultidataset property)": [[177, "pymatgen.io.abinit.inputs.BasicMultiDataset.isnc"]], "ispaw (basicabinitinput property)": [[177, "pymatgen.io.abinit.inputs.BasicAbinitInput.ispaw"]], "ispaw (basicmultidataset property)": [[177, "pymatgen.io.abinit.inputs.BasicMultiDataset.ispaw"]], "ndtset (basicmultidataset property)": [[177, "pymatgen.io.abinit.inputs.BasicMultiDataset.ndtset"]], "new_with_vars() (basicabinitinput method)": [[177, "pymatgen.io.abinit.inputs.BasicAbinitInput.new_with_vars"]], "num_valence_electrons() (in module pymatgen.io.abinit.inputs)": [[177, "pymatgen.io.abinit.inputs.num_valence_electrons"]], "pop_irdvars() (basicabinitinput method)": [[177, "pymatgen.io.abinit.inputs.BasicAbinitInput.pop_irdvars"]], "pop_tolerances() (basicabinitinput method)": [[177, "pymatgen.io.abinit.inputs.BasicAbinitInput.pop_tolerances"]], "pop_vars() (abstractinput method)": [[177, "pymatgen.io.abinit.inputs.AbstractInput.pop_vars"]], "pseudos (basicabinitinput property)": [[177, "pymatgen.io.abinit.inputs.BasicAbinitInput.pseudos"]], "pseudos (basicmultidataset property)": [[177, "pymatgen.io.abinit.inputs.BasicMultiDataset.pseudos"]], "pymatgen.io.abinit.inputs": [[177, "module-pymatgen.io.abinit.inputs"]], "remove_vars() (abstractinput method)": [[177, "pymatgen.io.abinit.inputs.AbstractInput.remove_vars"]], "replicate_input() (basicmultidataset class method)": [[177, "pymatgen.io.abinit.inputs.BasicMultiDataset.replicate_input"]], "set_comment() (basicabinitinput method)": [[177, "pymatgen.io.abinit.inputs.BasicAbinitInput.set_comment"]], "set_gamma_sampling() (basicabinitinput method)": [[177, "pymatgen.io.abinit.inputs.BasicAbinitInput.set_gamma_sampling"]], "set_kmesh() (basicabinitinput method)": [[177, "pymatgen.io.abinit.inputs.BasicAbinitInput.set_kmesh"]], "set_kpath() (basicabinitinput method)": [[177, "pymatgen.io.abinit.inputs.BasicAbinitInput.set_kpath"]], "set_spin_mode() (basicabinitinput method)": [[177, "pymatgen.io.abinit.inputs.BasicAbinitInput.set_spin_mode"]], "set_structure() (basicabinitinput method)": [[177, "pymatgen.io.abinit.inputs.BasicAbinitInput.set_structure"]], "set_vars() (abstractinput method)": [[177, "pymatgen.io.abinit.inputs.AbstractInput.set_vars"]], "set_vars_ifnotin() (abstractinput method)": [[177, "pymatgen.io.abinit.inputs.AbstractInput.set_vars_ifnotin"]], "split_datasets() (basicmultidataset method)": [[177, "pymatgen.io.abinit.inputs.BasicMultiDataset.split_datasets"]], "structure (basicabinitinput property)": [[177, "pymatgen.io.abinit.inputs.BasicAbinitInput.structure"]], "to_string() (abstractinput method)": [[177, "pymatgen.io.abinit.inputs.AbstractInput.to_string"]], "to_string() (basicabinitinput method)": [[177, "pymatgen.io.abinit.inputs.BasicAbinitInput.to_string"]], "to_string() (basicmultidataset method)": [[177, "pymatgen.io.abinit.inputs.BasicMultiDataset.to_string"]], "vars (abstractinput property)": [[177, "pymatgen.io.abinit.inputs.AbstractInput.vars"]], "vars (basicabinitinput property)": [[177, "pymatgen.io.abinit.inputs.BasicAbinitInput.vars"]], "write() (abstractinput method)": [[177, "pymatgen.io.abinit.inputs.AbstractInput.write"]], "write() (basicmultidataset method)": [[177, "pymatgen.io.abinit.inputs.BasicMultiDataset.write"]], "etsf_reader (class in pymatgen.io.abinit.netcdf)": [[178, "pymatgen.io.abinit.netcdf.ETSF_Reader"]], "error (netcdfreader attribute)": [[178, "pymatgen.io.abinit.netcdf.NetcdfReader.Error"]], "no_default (class in pymatgen.io.abinit.netcdf)": [[178, "pymatgen.io.abinit.netcdf.NO_DEFAULT"]], "netcdfreader (class in pymatgen.io.abinit.netcdf)": [[178, "pymatgen.io.abinit.netcdf.NetcdfReader"]], "as_etsfreader() (in module pymatgen.io.abinit.netcdf)": [[178, "pymatgen.io.abinit.netcdf.as_etsfreader"]], "as_ncreader() (in module pymatgen.io.abinit.netcdf)": [[178, "pymatgen.io.abinit.netcdf.as_ncreader"]], "chemical_symbols() (etsf_reader method)": [[178, "pymatgen.io.abinit.netcdf.ETSF_Reader.chemical_symbols"]], "close() (netcdfreader method)": [[178, "pymatgen.io.abinit.netcdf.NetcdfReader.close"]], "print_tree() (netcdfreader method)": [[178, "pymatgen.io.abinit.netcdf.NetcdfReader.print_tree"]], "pymatgen.io.abinit.netcdf": [[178, "module-pymatgen.io.abinit.netcdf"]], "read_abinit_hdr() (etsf_reader method)": [[178, "pymatgen.io.abinit.netcdf.ETSF_Reader.read_abinit_hdr"]], "read_abinit_xcfunc() (etsf_reader method)": [[178, "pymatgen.io.abinit.netcdf.ETSF_Reader.read_abinit_xcfunc"]], "read_dimvalue() (netcdfreader method)": [[178, "pymatgen.io.abinit.netcdf.NetcdfReader.read_dimvalue"]], "read_keys() (netcdfreader method)": [[178, "pymatgen.io.abinit.netcdf.NetcdfReader.read_keys"]], "read_structure() (etsf_reader method)": [[178, "pymatgen.io.abinit.netcdf.ETSF_Reader.read_structure"]], "read_value() (netcdfreader method)": [[178, "pymatgen.io.abinit.netcdf.NetcdfReader.read_value"]], "read_variable() (netcdfreader method)": [[178, "pymatgen.io.abinit.netcdf.NetcdfReader.read_variable"]], "read_varnames() (netcdfreader method)": [[178, "pymatgen.io.abinit.netcdf.NetcdfReader.read_varnames"]], "structure_from_ncdata() (in module pymatgen.io.abinit.netcdf)": [[178, "pymatgen.io.abinit.netcdf.structure_from_ncdata"]], "typeidx_from_symbol() (etsf_reader method)": [[178, "pymatgen.io.abinit.netcdf.ETSF_Reader.typeidx_from_symbol"]], "walk_tree() (netcdfreader method)": [[178, "pymatgen.io.abinit.netcdf.NetcdfReader.walk_tree"]], "abinitheader (class in pymatgen.io.abinit.pseudos)": [[179, "pymatgen.io.abinit.pseudos.AbinitHeader"]], "abinitpseudo (class in pymatgen.io.abinit.pseudos)": [[179, "pymatgen.io.abinit.pseudos.AbinitPseudo"]], "error (pseudoparser attribute)": [[179, "pymatgen.io.abinit.pseudos.PseudoParser.Error"]], "hint (class in pymatgen.io.abinit.pseudos)": [[179, "pymatgen.io.abinit.pseudos.Hint"]], "ncabinitheader (class in pymatgen.io.abinit.pseudos)": [[179, "pymatgen.io.abinit.pseudos.NcAbinitHeader"]], "ncabinitpseudo (class in pymatgen.io.abinit.pseudos)": [[179, "pymatgen.io.abinit.pseudos.NcAbinitPseudo"]], "ncpseudo (class in pymatgen.io.abinit.pseudos)": [[179, "pymatgen.io.abinit.pseudos.NcPseudo"]], "pawabinitheader (class in pymatgen.io.abinit.pseudos)": [[179, "pymatgen.io.abinit.pseudos.PawAbinitHeader"]], "pawabinitpseudo (class in pymatgen.io.abinit.pseudos)": [[179, "pymatgen.io.abinit.pseudos.PawAbinitPseudo"]], "pawpseudo (class in pymatgen.io.abinit.pseudos)": [[179, "pymatgen.io.abinit.pseudos.PawPseudo"]], "pawxmlsetup (class in pymatgen.io.abinit.pseudos)": [[179, "pymatgen.io.abinit.pseudos.PawXmlSetup"]], "pseudo (class in pymatgen.io.abinit.pseudos)": [[179, "pymatgen.io.abinit.pseudos.Pseudo"]], "pseudoparser (class in pymatgen.io.abinit.pseudos)": [[179, "pymatgen.io.abinit.pseudos.PseudoParser"]], "pseudoparsererror": [[179, "pymatgen.io.abinit.pseudos.PseudoParserError"]], "pseudotable (class in pymatgen.io.abinit.pseudos)": [[179, "pymatgen.io.abinit.pseudos.PseudoTable"]], "radialfunction (class in pymatgen.io.abinit.pseudos)": [[179, "pymatgen.io.abinit.pseudos.RadialFunction"]], "z (abinitpseudo property)": [[179, "pymatgen.io.abinit.pseudos.AbinitPseudo.Z"]], "z (ncabinitpseudo property)": [[179, "pymatgen.io.abinit.pseudos.NcAbinitPseudo.Z"]], "z (pawxmlsetup property)": [[179, "pymatgen.io.abinit.pseudos.PawXmlSetup.Z"]], "z (pseudo property)": [[179, "pymatgen.io.abinit.pseudos.Pseudo.Z"]], "z_val (abinitpseudo property)": [[179, "pymatgen.io.abinit.pseudos.AbinitPseudo.Z_val"]], "z_val (ncabinitpseudo property)": [[179, "pymatgen.io.abinit.pseudos.NcAbinitPseudo.Z_val"]], "z_val (pawxmlsetup property)": [[179, "pymatgen.io.abinit.pseudos.PawXmlSetup.Z_val"]], "z_val (pseudo property)": [[179, "pymatgen.io.abinit.pseudos.Pseudo.Z_val"]], "ae_core_density() (pawxmlsetup method)": [[179, "pymatgen.io.abinit.pseudos.PawXmlSetup.ae_core_density"]], "ae_partial_waves() (pawxmlsetup method)": [[179, "pymatgen.io.abinit.pseudos.PawXmlSetup.ae_partial_waves"]], "all_combinations_for_elements() (pseudotable method)": [[179, "pymatgen.io.abinit.pseudos.PseudoTable.all_combinations_for_elements"]], "allnc (pseudotable property)": [[179, "pymatgen.io.abinit.pseudos.PseudoTable.allnc"]], "allpaw (pseudotable property)": [[179, "pymatgen.io.abinit.pseudos.PseudoTable.allpaw"]], "as_dict() (hint method)": [[179, "pymatgen.io.abinit.pseudos.Hint.as_dict"]], "as_dict() (pseudo method)": [[179, "pymatgen.io.abinit.pseudos.Pseudo.as_dict"]], "as_dict() (pseudotable method)": [[179, "pymatgen.io.abinit.pseudos.PseudoTable.as_dict"]], "as_pseudo() (pseudo class method)": [[179, "pymatgen.io.abinit.pseudos.Pseudo.as_pseudo"]], "as_table() (pseudotable class method)": [[179, "pymatgen.io.abinit.pseudos.PseudoTable.as_table"]], "as_tmpfile() (pseudo method)": [[179, "pymatgen.io.abinit.pseudos.Pseudo.as_tmpfile"]], "basename (pseudo property)": [[179, "pymatgen.io.abinit.pseudos.Pseudo.basename"]], "compute_md5() (pseudo method)": [[179, "pymatgen.io.abinit.pseudos.Pseudo.compute_md5"]], "djrepo_path (pseudo property)": [[179, "pymatgen.io.abinit.pseudos.Pseudo.djrepo_path"]], "element (pseudo property)": [[179, "pymatgen.io.abinit.pseudos.Pseudo.element"]], "fhi_header() (ncabinitheader static method)": [[179, "pymatgen.io.abinit.pseudos.NcAbinitHeader.fhi_header"]], "filepath (pseudo property)": [[179, "pymatgen.io.abinit.pseudos.Pseudo.filepath"]], "from_dict() (hint class method)": [[179, "pymatgen.io.abinit.pseudos.Hint.from_dict"]], "from_dict() (pseudo class method)": [[179, "pymatgen.io.abinit.pseudos.Pseudo.from_dict"]], "from_dict() (pseudotable class method)": [[179, "pymatgen.io.abinit.pseudos.PseudoTable.from_dict"]], "from_dir() (pseudotable class method)": [[179, "pymatgen.io.abinit.pseudos.PseudoTable.from_dir"]], "from_file() (pseudo static method)": [[179, "pymatgen.io.abinit.pseudos.Pseudo.from_file"]], "get_pseudos_for_structure() (pseudotable method)": [[179, "pymatgen.io.abinit.pseudos.PseudoTable.get_pseudos_for_structure"]], "gth_header() (ncabinitheader static method)": [[179, "pymatgen.io.abinit.pseudos.NcAbinitHeader.gth_header"]], "has_dojo_report (pseudo property)": [[179, "pymatgen.io.abinit.pseudos.Pseudo.has_dojo_report"]], "has_hints (pseudo property)": [[179, "pymatgen.io.abinit.pseudos.Pseudo.has_hints"]], "has_nlcc (ncpseudo property)": [[179, "pymatgen.io.abinit.pseudos.NcPseudo.has_nlcc"]], "hgh_header() (ncabinitheader static method)": [[179, "pymatgen.io.abinit.pseudos.NcAbinitHeader.hgh_header"]], "hint_for_accuracy() (pseudo method)": [[179, "pymatgen.io.abinit.pseudos.Pseudo.hint_for_accuracy"]], "is_complete() (pseudotable method)": [[179, "pymatgen.io.abinit.pseudos.PseudoTable.is_complete"]], "isnc (pseudo property)": [[179, "pymatgen.io.abinit.pseudos.Pseudo.isnc"]], "ispaw (pseudo property)": [[179, "pymatgen.io.abinit.pseudos.Pseudo.ispaw"]], "l2str() (in module pymatgen.io.abinit.pseudos)": [[179, "pymatgen.io.abinit.pseudos.l2str"]], "l_local (abinitpseudo property)": [[179, "pymatgen.io.abinit.pseudos.AbinitPseudo.l_local"]], "l_local (ncabinitpseudo property)": [[179, "pymatgen.io.abinit.pseudos.NcAbinitPseudo.l_local"]], "l_local (pawxmlsetup property)": [[179, "pymatgen.io.abinit.pseudos.PawXmlSetup.l_local"]], "l_local (pseudo property)": [[179, "pymatgen.io.abinit.pseudos.Pseudo.l_local"]], "l_max (abinitpseudo property)": [[179, "pymatgen.io.abinit.pseudos.AbinitPseudo.l_max"]], "l_max (ncabinitpseudo property)": [[179, "pymatgen.io.abinit.pseudos.NcAbinitPseudo.l_max"]], "l_max (pawxmlsetup property)": [[179, "pymatgen.io.abinit.pseudos.PawXmlSetup.l_max"]], "l_max (pseudo property)": [[179, "pymatgen.io.abinit.pseudos.Pseudo.l_max"]], "md5() (pseudo method)": [[179, "pymatgen.io.abinit.pseudos.Pseudo.md5"]], "nlcc_radius (ncabinitpseudo property)": [[179, "pymatgen.io.abinit.pseudos.NcAbinitPseudo.nlcc_radius"]], "nlcc_radius (ncpseudo property)": [[179, "pymatgen.io.abinit.pseudos.NcPseudo.nlcc_radius"]], "oncvpsp_header() (ncabinitheader static method)": [[179, "pymatgen.io.abinit.pseudos.NcAbinitHeader.oncvpsp_header"]], "open_pspsfile() (pseudo method)": [[179, "pymatgen.io.abinit.pseudos.Pseudo.open_pspsfile"]], "parse() (pseudoparser method)": [[179, "pymatgen.io.abinit.pseudos.PseudoParser.parse"]], "paw_header() (pawabinitheader static method)": [[179, "pymatgen.io.abinit.pseudos.PawAbinitHeader.paw_header"]], "paw_radius (pawabinitpseudo property)": [[179, "pymatgen.io.abinit.pseudos.PawAbinitPseudo.paw_radius"]], "paw_radius (pawpseudo property)": [[179, "pymatgen.io.abinit.pseudos.PawPseudo.paw_radius"]], "paw_radius (pawxmlsetup property)": [[179, "pymatgen.io.abinit.pseudos.PawXmlSetup.paw_radius"]], "plot_densities() (pawxmlsetup method)": [[179, "pymatgen.io.abinit.pseudos.PawXmlSetup.plot_densities"]], "plot_projectors() (pawxmlsetup method)": [[179, "pymatgen.io.abinit.pseudos.PawXmlSetup.plot_projectors"]], "plot_waves() (pawxmlsetup method)": [[179, "pymatgen.io.abinit.pseudos.PawXmlSetup.plot_waves"]], "print_table() (pseudotable method)": [[179, "pymatgen.io.abinit.pseudos.PseudoTable.print_table"]], "projector_functions() (pawxmlsetup method)": [[179, "pymatgen.io.abinit.pseudos.PawXmlSetup.projector_functions"]], "pseudo_core_density() (pawxmlsetup method)": [[179, "pymatgen.io.abinit.pseudos.PawXmlSetup.pseudo_core_density"]], "pseudo_partial_waves (pawxmlsetup property)": [[179, "pymatgen.io.abinit.pseudos.PawXmlSetup.pseudo_partial_waves"]], "pseudo_with_symbol() (pseudotable method)": [[179, "pymatgen.io.abinit.pseudos.PseudoTable.pseudo_with_symbol"]], "pseudos_with_symbols() (pseudotable method)": [[179, "pymatgen.io.abinit.pseudos.PseudoTable.pseudos_with_symbols"]], "pymatgen.io.abinit.pseudos": [[179, "module-pymatgen.io.abinit.pseudos"]], "rcore (ncpseudo property)": [[179, "pymatgen.io.abinit.pseudos.NcPseudo.rcore"]], "rcore (pawpseudo property)": [[179, "pymatgen.io.abinit.pseudos.PawPseudo.rcore"]], "read_ppdesc() (pseudoparser method)": [[179, "pymatgen.io.abinit.pseudos.PseudoParser.read_ppdesc"]], "root() (pawxmlsetup method)": [[179, "pymatgen.io.abinit.pseudos.PawXmlSetup.root"]], "scan_directory() (pseudoparser method)": [[179, "pymatgen.io.abinit.pseudos.PseudoParser.scan_directory"]], "select() (pseudotable method)": [[179, "pymatgen.io.abinit.pseudos.PseudoTable.select"]], "select_family() (pseudotable method)": [[179, "pymatgen.io.abinit.pseudos.PseudoTable.select_family"]], "select_rows() (pseudotable method)": [[179, "pymatgen.io.abinit.pseudos.PseudoTable.select_rows"]], "select_symbols() (pseudotable method)": [[179, "pymatgen.io.abinit.pseudos.PseudoTable.select_symbols"]], "sort_by_z() (pseudotable method)": [[179, "pymatgen.io.abinit.pseudos.PseudoTable.sort_by_z"]], "sorted() (pseudotable method)": [[179, "pymatgen.io.abinit.pseudos.PseudoTable.sorted"]], "str2l() (in module pymatgen.io.abinit.pseudos)": [[179, "pymatgen.io.abinit.pseudos.str2l"]], "straceback() (in module pymatgen.io.abinit.pseudos)": [[179, "pymatgen.io.abinit.pseudos.straceback"]], "summary (abinitpseudo property)": [[179, "pymatgen.io.abinit.pseudos.AbinitPseudo.summary"]], "summary (ncabinitpseudo property)": [[179, "pymatgen.io.abinit.pseudos.NcAbinitPseudo.summary"]], "summary (pawxmlsetup property)": [[179, "pymatgen.io.abinit.pseudos.PawXmlSetup.summary"]], "summary (pseudo property)": [[179, "pymatgen.io.abinit.pseudos.Pseudo.summary"]], "supports_soc (abinitpseudo property)": [[179, "pymatgen.io.abinit.pseudos.AbinitPseudo.supports_soc"]], "supports_soc (pawabinitpseudo property)": [[179, "pymatgen.io.abinit.pseudos.PawAbinitPseudo.supports_soc"]], "supports_soc (pawxmlsetup property)": [[179, "pymatgen.io.abinit.pseudos.PawXmlSetup.supports_soc"]], "supports_soc (pseudo property)": [[179, "pymatgen.io.abinit.pseudos.Pseudo.supports_soc"]], "symbol (pseudo property)": [[179, "pymatgen.io.abinit.pseudos.Pseudo.symbol"]], "tm_header() (ncabinitheader static method)": [[179, "pymatgen.io.abinit.pseudos.NcAbinitHeader.tm_header"]], "to_string() (pseudo method)": [[179, "pymatgen.io.abinit.pseudos.Pseudo.to_string"]], "to_table() (pseudotable method)": [[179, "pymatgen.io.abinit.pseudos.PseudoTable.to_table"]], "type (pseudo property)": [[179, "pymatgen.io.abinit.pseudos.Pseudo.type"]], "with_dojo_report() (pseudotable method)": [[179, "pymatgen.io.abinit.pseudos.PseudoTable.with_dojo_report"]], "yield_figs() (pawxmlsetup method)": [[179, "pymatgen.io.abinit.pseudos.PawXmlSetup.yield_figs"]], "zlist (pseudotable property)": [[179, "pymatgen.io.abinit.pseudos.PseudoTable.zlist"]], "inputvariable (class in pymatgen.io.abinit.variable)": [[180, "pymatgen.io.abinit.variable.InputVariable"]], "basename (inputvariable property)": [[180, "pymatgen.io.abinit.variable.InputVariable.basename"]], "dataset (inputvariable property)": [[180, "pymatgen.io.abinit.variable.InputVariable.dataset"]], "format_list() (inputvariable method)": [[180, "pymatgen.io.abinit.variable.InputVariable.format_list"]], "format_list2d() (inputvariable static method)": [[180, "pymatgen.io.abinit.variable.InputVariable.format_list2d"]], "format_scalar() (inputvariable static method)": [[180, "pymatgen.io.abinit.variable.InputVariable.format_scalar"]], "get_value() (inputvariable method)": [[180, "pymatgen.io.abinit.variable.InputVariable.get_value"]], "name (inputvariable property)": [[180, "pymatgen.io.abinit.variable.InputVariable.name"]], "pymatgen.io.abinit.variable": [[180, "module-pymatgen.io.abinit.variable"]], "units (inputvariable property)": [[180, "pymatgen.io.abinit.variable.InputVariable.units"]], "adfinput (class in pymatgen.io.adf)": [[181, "pymatgen.io.adf.AdfInput"]], "adfinputerror": [[181, "pymatgen.io.adf.AdfInputError"]], "adfkey (class in pymatgen.io.adf)": [[181, "pymatgen.io.adf.AdfKey"]], "adfoutput (class in pymatgen.io.adf)": [[181, "pymatgen.io.adf.AdfOutput"]], "adfoutputerror": [[181, "pymatgen.io.adf.AdfOutputError"]], "adftask (class in pymatgen.io.adf)": [[181, "pymatgen.io.adf.AdfTask"]], "add_option() (adfkey method)": [[181, "pymatgen.io.adf.AdfKey.add_option"]], "add_subkey() (adfkey method)": [[181, "pymatgen.io.adf.AdfKey.add_subkey"]], "as_dict() (adfkey method)": [[181, "pymatgen.io.adf.AdfKey.as_dict"]], "as_dict() (adftask method)": [[181, "pymatgen.io.adf.AdfTask.as_dict"]], "block_keys (adfkey attribute)": [[181, "pymatgen.io.adf.AdfKey.block_keys"]], "from_dict() (adfkey class method)": [[181, "pymatgen.io.adf.AdfKey.from_dict"]], "from_dict() (adftask class method)": [[181, "pymatgen.io.adf.AdfTask.from_dict"]], "from_string() (adfkey static method)": [[181, "pymatgen.io.adf.AdfKey.from_string"]], "get_default_basis_set() (adftask static method)": [[181, "pymatgen.io.adf.AdfTask.get_default_basis_set"]], "get_default_geo() (adftask static method)": [[181, "pymatgen.io.adf.AdfTask.get_default_geo"]], "get_default_scf() (adftask static method)": [[181, "pymatgen.io.adf.AdfTask.get_default_scf"]], "get_default_units() (adftask static method)": [[181, "pymatgen.io.adf.AdfTask.get_default_units"]], "get_default_xc() (adftask static method)": [[181, "pymatgen.io.adf.AdfTask.get_default_xc"]], "has_option() (adfkey method)": [[181, "pymatgen.io.adf.AdfKey.has_option"]], "has_subkey() (adfkey method)": [[181, "pymatgen.io.adf.AdfKey.has_subkey"]], "is_block_key() (adfkey method)": [[181, "pymatgen.io.adf.AdfKey.is_block_key"]], "is_numeric() (in module pymatgen.io.adf)": [[181, "pymatgen.io.adf.is_numeric"]], "iterlines() (in module pymatgen.io.adf)": [[181, "pymatgen.io.adf.iterlines"]], "key (adfkey property)": [[181, "pymatgen.io.adf.AdfKey.key"]], "operations (adftask attribute)": [[181, "pymatgen.io.adf.AdfTask.operations"]], "pymatgen.io.adf": [[181, "module-pymatgen.io.adf"]], "remove_option() (adfkey method)": [[181, "pymatgen.io.adf.AdfKey.remove_option"]], "remove_subkey() (adfkey method)": [[181, "pymatgen.io.adf.AdfKey.remove_subkey"]], "sub_keys (adfkey attribute)": [[181, "pymatgen.io.adf.AdfKey.sub_keys"]], "write_file() (adfinput method)": [[181, "pymatgen.io.adf.AdfInput.write_file"]], "aseatomsadaptor (class in pymatgen.io.ase)": [[182, "pymatgen.io.ase.AseAtomsAdaptor"]], "get_atoms() (aseatomsadaptor static method)": [[182, "pymatgen.io.ase.AseAtomsAdaptor.get_atoms"]], "get_molecule() (aseatomsadaptor static method)": [[182, "pymatgen.io.ase.AseAtomsAdaptor.get_molecule"]], "get_structure() (aseatomsadaptor static method)": [[182, "pymatgen.io.ase.AseAtomsAdaptor.get_structure"]], "pymatgen.io.ase": [[182, "module-pymatgen.io.ase"]], "mcsqs (class in pymatgen.io.atat)": [[183, "pymatgen.io.atat.Mcsqs"]], "pymatgen.io.atat": [[183, "module-pymatgen.io.atat"]], "structure_from_string() (mcsqs static method)": [[183, "pymatgen.io.atat.Mcsqs.structure_from_string"]], "to_string() (mcsqs method)": [[183, "pymatgen.io.atat.Mcsqs.to_string"]], "babelmoladaptor (class in pymatgen.io.babel)": [[184, "pymatgen.io.babel.BabelMolAdaptor"]], "add_hydrogen() (babelmoladaptor method)": [[184, "pymatgen.io.babel.BabelMolAdaptor.add_hydrogen"]], "confab_conformers() (babelmoladaptor method)": [[184, "pymatgen.io.babel.BabelMolAdaptor.confab_conformers"]], "from_file() (babelmoladaptor static method)": [[184, "pymatgen.io.babel.BabelMolAdaptor.from_file"]], "from_molecule_graph() (babelmoladaptor static method)": [[184, "pymatgen.io.babel.BabelMolAdaptor.from_molecule_graph"]], "from_string() (babelmoladaptor static method)": [[184, "pymatgen.io.babel.BabelMolAdaptor.from_string"]], "gen3d_conformer() (babelmoladaptor method)": [[184, "pymatgen.io.babel.BabelMolAdaptor.gen3d_conformer"]], "localopt() (babelmoladaptor method)": [[184, "pymatgen.io.babel.BabelMolAdaptor.localopt"]], "make3d() (babelmoladaptor method)": [[184, "pymatgen.io.babel.BabelMolAdaptor.make3d"]], "openbabel_mol (babelmoladaptor property)": [[184, "pymatgen.io.babel.BabelMolAdaptor.openbabel_mol"]], "pybel_mol (babelmoladaptor property)": [[184, "pymatgen.io.babel.BabelMolAdaptor.pybel_mol"]], "pymatgen.io.babel": [[184, "module-pymatgen.io.babel"]], "pymatgen_mol (babelmoladaptor property)": [[184, "pymatgen.io.babel.BabelMolAdaptor.pymatgen_mol"]], "remove_bond() (babelmoladaptor method)": [[184, "pymatgen.io.babel.BabelMolAdaptor.remove_bond"]], "rotor_conformer() (babelmoladaptor method)": [[184, "pymatgen.io.babel.BabelMolAdaptor.rotor_conformer"]], "write_file() (babelmoladaptor method)": [[184, "pymatgen.io.babel.BabelMolAdaptor.write_file"]], "cifblock (class in pymatgen.io.cif)": [[185, "pymatgen.io.cif.CifBlock"]], "ciffile (class in pymatgen.io.cif)": [[185, "pymatgen.io.cif.CifFile"]], "cifparser (class in pymatgen.io.cif)": [[185, "pymatgen.io.cif.CifParser"]], "cifwriter (class in pymatgen.io.cif)": [[185, "pymatgen.io.cif.CifWriter"]], "as_dict() (cifparser method)": [[185, "pymatgen.io.cif.CifParser.as_dict"]], "ciffile (cifwriter property)": [[185, "pymatgen.io.cif.CifWriter.ciffile"]], "from_file() (ciffile class method)": [[185, "pymatgen.io.cif.CifFile.from_file"]], "from_string() (cifblock class method)": [[185, "pymatgen.io.cif.CifBlock.from_string"]], "from_string() (ciffile class method)": [[185, "pymatgen.io.cif.CifFile.from_string"]], "from_string() (cifparser static method)": [[185, "pymatgen.io.cif.CifParser.from_string"]], "get_bibtex_string() (cifparser method)": [[185, "pymatgen.io.cif.CifParser.get_bibtex_string"]], "get_lattice() (cifparser method)": [[185, "pymatgen.io.cif.CifParser.get_lattice"]], "get_lattice_no_exception() (cifparser static method)": [[185, "pymatgen.io.cif.CifParser.get_lattice_no_exception"]], "get_magsymops() (cifparser method)": [[185, "pymatgen.io.cif.CifParser.get_magsymops"]], "get_structures() (cifparser method)": [[185, "pymatgen.io.cif.CifParser.get_structures"]], "get_symops() (cifparser method)": [[185, "pymatgen.io.cif.CifParser.get_symops"]], "has_errors (cifparser property)": [[185, "pymatgen.io.cif.CifParser.has_errors"]], "maxlen (cifblock attribute)": [[185, "pymatgen.io.cif.CifBlock.maxlen"]], "parse_magmoms() (cifparser static method)": [[185, "pymatgen.io.cif.CifParser.parse_magmoms"]], "parse_oxi_states() (cifparser static method)": [[185, "pymatgen.io.cif.CifParser.parse_oxi_states"]], "pymatgen.io.cif": [[185, "module-pymatgen.io.cif"]], "str2float() (in module pymatgen.io.cif)": [[185, "pymatgen.io.cif.str2float"]], "write_file() (cifwriter method)": [[185, "pymatgen.io.cif.CifWriter.write_file"]], "volumetricdata (class in pymatgen.io.common)": [[186, "pymatgen.io.common.VolumetricData"]], "copy() (volumetricdata method)": [[186, "pymatgen.io.common.VolumetricData.copy"]], "from_cube() (volumetricdata class method)": [[186, "pymatgen.io.common.VolumetricData.from_cube"]], "from_hdf5() (volumetricdata class method)": [[186, "pymatgen.io.common.VolumetricData.from_hdf5"]], "get_average_along_axis() (volumetricdata method)": [[186, "pymatgen.io.common.VolumetricData.get_average_along_axis"]], "get_axis_grid() (volumetricdata method)": [[186, "pymatgen.io.common.VolumetricData.get_axis_grid"]], "get_integrated_diff() (volumetricdata method)": [[186, "pymatgen.io.common.VolumetricData.get_integrated_diff"]], "linear_add() (volumetricdata method)": [[186, "pymatgen.io.common.VolumetricData.linear_add"]], "linear_slice() (volumetricdata method)": [[186, "pymatgen.io.common.VolumetricData.linear_slice"]], "ngridpts (volumetricdata attribute)": [[186, "pymatgen.io.common.VolumetricData.ngridpts"]], "pymatgen.io.common": [[186, "module-pymatgen.io.common"]], "scale() (volumetricdata method)": [[186, "pymatgen.io.common.VolumetricData.scale"]], "spin_data (volumetricdata property)": [[186, "pymatgen.io.common.VolumetricData.spin_data"]], "structure (volumetricdata attribute)": [[186, "pymatgen.io.common.VolumetricData.structure"]], "to_cube() (volumetricdata method)": [[186, "pymatgen.io.common.VolumetricData.to_cube"]], "to_hdf5() (volumetricdata method)": [[186, "pymatgen.io.common.VolumetricData.to_hdf5"]], "value_at() (volumetricdata method)": [[186, "pymatgen.io.common.VolumetricData.value_at"]], "inputfile (class in pymatgen.io.core)": [[187, "pymatgen.io.core.InputFile"]], "inputgenerator (class in pymatgen.io.core)": [[187, "pymatgen.io.core.InputGenerator"]], "inputset (class in pymatgen.io.core)": [[187, "pymatgen.io.core.InputSet"]], "from_directory() (inputset class method)": [[187, "pymatgen.io.core.InputSet.from_directory"]], "from_file() (inputfile class method)": [[187, "pymatgen.io.core.InputFile.from_file"]], "from_string() (inputfile class method)": [[187, "pymatgen.io.core.InputFile.from_string"]], "get_input_set() (inputgenerator method)": [[187, "pymatgen.io.core.InputGenerator.get_input_set"]], "get_string() (inputfile method)": [[187, "pymatgen.io.core.InputFile.get_string"]], "pymatgen.io.core": [[187, "module-pymatgen.io.core"]], "validate() (inputset method)": [[187, "pymatgen.io.core.InputSet.validate"]], "write_file() (inputfile method)": [[187, "pymatgen.io.core.InputFile.write_file"]], "write_input() (inputset method)": [[187, "pymatgen.io.core.InputSet.write_input"]], "pymatgen.io.cp2k": [[188, "module-pymatgen.io.cp2k"]], "atomicmetadata (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.AtomicMetadata"]], "band_structure (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.Band_Structure"]], "basisfile (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.BasisFile"]], "basisinfo (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.BasisInfo"]], "brokensymmetry (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.BrokenSymmetry"]], "cell (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.Cell"]], "coord (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.Coord"]], "cp2kinput (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.Cp2kInput"]], "dos (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.DOS"]], "datafile (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.DataFile"]], "davidson (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.Davidson"]], "dft (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.Dft"]], "dftplusu (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.DftPlusU"]], "diagonalization (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.Diagonalization"]], "e_density_cube (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.E_Density_Cube"]], "forceeval (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.ForceEval"]], "gaussiantypeorbitalbasisset (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.GaussianTypeOrbitalBasisSet"]], "global (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.Global"]], "gthpotential (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.GthPotential"]], "keyword (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.Keyword"]], "keywordlist (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.KeywordList"]], "kind (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.Kind"]], "kpoint_set (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.Kpoint_Set"]], "kpoints (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.Kpoints"]], "ldos (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.LDOS"]], "mo_cubes (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.MO_Cubes"]], "mgrid (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.Mgrid"]], "orbitaltransformation (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.OrbitalTransformation"]], "pbe (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.PBE"]], "pdos (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.PDOS"]], "potentialfile (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.PotentialFile"]], "potentialinfo (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.PotentialInfo"]], "qs (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.QS"]], "scf (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.Scf"]], "section (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.Section"]], "sectionlist (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.SectionList"]], "smear (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.Smear"]], "subsys (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.Subsys"]], "v_hartree_cube (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.V_Hartree_Cube"]], "xc_functional (class in pymatgen.io.cp2k.inputs)": [[189, "pymatgen.io.cp2k.inputs.Xc_Functional"]], "add() (section method)": [[189, "pymatgen.io.cp2k.inputs.Section.add"]], "admm (basisinfo attribute)": [[189, "id7"], [189, "pymatgen.io.cp2k.inputs.BasisInfo.admm"]], "alias_names (atomicmetadata attribute)": [[189, "id0"], [189, "pymatgen.io.cp2k.inputs.AtomicMetadata.alias_names"]], "append() (keywordlist method)": [[189, "pymatgen.io.cp2k.inputs.KeywordList.append"]], "append() (sectionlist method)": [[189, "pymatgen.io.cp2k.inputs.SectionList.append"]], "as_dict() (keyword method)": [[189, "pymatgen.io.cp2k.inputs.Keyword.as_dict"]], "by_path() (section method)": [[189, "pymatgen.io.cp2k.inputs.Section.by_path"]], "c_exp_ppl (gthpotential attribute)": [[189, "id28"], [189, "pymatgen.io.cp2k.inputs.GthPotential.c_exp_ppl"]], "cc (basisinfo attribute)": [[189, "id8"], [189, "pymatgen.io.cp2k.inputs.BasisInfo.cc"]], "check() (section method)": [[189, "pymatgen.io.cp2k.inputs.Section.check"]], "coefficients (gaussiantypeorbitalbasisset attribute)": [[189, "id20"], [189, "pymatgen.io.cp2k.inputs.GaussianTypeOrbitalBasisSet.coefficients"]], "contracted (basisinfo attribute)": [[189, "id9"], [189, "pymatgen.io.cp2k.inputs.BasisInfo.contracted"]], "core (basisinfo attribute)": [[189, "id10"], [189, "pymatgen.io.cp2k.inputs.BasisInfo.core"]], "diffuse (basisinfo attribute)": [[189, "id11"], [189, "pymatgen.io.cp2k.inputs.BasisInfo.diffuse"]], "electrons (basisinfo attribute)": [[189, "id12"], [189, "pymatgen.io.cp2k.inputs.BasisInfo.electrons"]], "electrons (potentialinfo attribute)": [[189, "id36"], [189, "pymatgen.io.cp2k.inputs.PotentialInfo.electrons"]], "element (atomicmetadata attribute)": [[189, "id1"], [189, "pymatgen.io.cp2k.inputs.AtomicMetadata.element"]], "exponents (gaussiantypeorbitalbasisset attribute)": [[189, "id21"], [189, "pymatgen.io.cp2k.inputs.GaussianTypeOrbitalBasisSet.exponents"]], "extend() (keywordlist method)": [[189, "pymatgen.io.cp2k.inputs.KeywordList.extend"]], "extend() (sectionlist method)": [[189, "pymatgen.io.cp2k.inputs.SectionList.extend"]], "filename (atomicmetadata attribute)": [[189, "id2"], [189, "pymatgen.io.cp2k.inputs.AtomicMetadata.filename"]], "from_dict() (keyword class method)": [[189, "pymatgen.io.cp2k.inputs.Keyword.from_dict"]], "from_el() (brokensymmetry class method)": [[189, "pymatgen.io.cp2k.inputs.BrokenSymmetry.from_el"]], "from_file() (cp2kinput static method)": [[189, "pymatgen.io.cp2k.inputs.Cp2kInput.from_file"]], "from_file() (datafile class method)": [[189, "pymatgen.io.cp2k.inputs.DataFile.from_file"]], "from_kpoints() (band_structure static method)": [[189, "pymatgen.io.cp2k.inputs.Band_Structure.from_kpoints"]], "from_kpoints() (kpoints class method)": [[189, "pymatgen.io.cp2k.inputs.Kpoints.from_kpoints"]], "from_lines() (cp2kinput class method)": [[189, "pymatgen.io.cp2k.inputs.Cp2kInput.from_lines"]], "from_section() (gthpotential class method)": [[189, "pymatgen.io.cp2k.inputs.GthPotential.from_section"]], "from_string() (basisfile class method)": [[189, "pymatgen.io.cp2k.inputs.BasisFile.from_string"]], "from_string() (basisinfo class method)": [[189, "pymatgen.io.cp2k.inputs.BasisInfo.from_string"]], "from_string() (cp2kinput static method)": [[189, "pymatgen.io.cp2k.inputs.Cp2kInput.from_string"]], "from_string() (datafile class method)": [[189, "pymatgen.io.cp2k.inputs.DataFile.from_string"]], "from_string() (gaussiantypeorbitalbasisset class method)": [[189, "pymatgen.io.cp2k.inputs.GaussianTypeOrbitalBasisSet.from_string"]], "from_string() (gthpotential class method)": [[189, "pymatgen.io.cp2k.inputs.GthPotential.from_string"]], "from_string() (keyword static method)": [[189, "pymatgen.io.cp2k.inputs.Keyword.from_string"]], "from_string() (potentialfile class method)": [[189, "pymatgen.io.cp2k.inputs.PotentialFile.from_string"]], "from_string() (potentialinfo class method)": [[189, "pymatgen.io.cp2k.inputs.PotentialInfo.from_string"]], "get() (section method)": [[189, "pymatgen.io.cp2k.inputs.Section.get"]], "get() (sectionlist method)": [[189, "pymatgen.io.cp2k.inputs.SectionList.get"]], "get_hash() (atomicmetadata method)": [[189, "pymatgen.io.cp2k.inputs.AtomicMetadata.get_hash"]], "get_keyword() (gaussiantypeorbitalbasisset method)": [[189, "pymatgen.io.cp2k.inputs.GaussianTypeOrbitalBasisSet.get_keyword"]], "get_keyword() (gthpotential method)": [[189, "pymatgen.io.cp2k.inputs.GthPotential.get_keyword"]], "get_keyword() (section method)": [[189, "pymatgen.io.cp2k.inputs.Section.get_keyword"]], "get_section() (gthpotential method)": [[189, "pymatgen.io.cp2k.inputs.GthPotential.get_section"]], "get_section() (section method)": [[189, "pymatgen.io.cp2k.inputs.Section.get_section"]], "get_string() (atomicmetadata method)": [[189, "pymatgen.io.cp2k.inputs.AtomicMetadata.get_string"]], "get_string() (cp2kinput method)": [[189, "pymatgen.io.cp2k.inputs.Cp2kInput.get_string"]], "get_string() (datafile method)": [[189, "pymatgen.io.cp2k.inputs.DataFile.get_string"]], "get_string() (gaussiantypeorbitalbasisset method)": [[189, "pymatgen.io.cp2k.inputs.GaussianTypeOrbitalBasisSet.get_string"]], "get_string() (gthpotential method)": [[189, "pymatgen.io.cp2k.inputs.GthPotential.get_string"]], "get_string() (keyword method)": [[189, "pymatgen.io.cp2k.inputs.Keyword.get_string"]], "get_string() (keywordlist method)": [[189, "pymatgen.io.cp2k.inputs.KeywordList.get_string"]], "get_string() (section method)": [[189, "pymatgen.io.cp2k.inputs.Section.get_string"]], "get_string() (sectionlist method)": [[189, "pymatgen.io.cp2k.inputs.SectionList.get_string"]], "hprj_ppnl (gthpotential attribute)": [[189, "id29"], [189, "pymatgen.io.cp2k.inputs.GthPotential.hprj_ppnl"]], "inc() (section method)": [[189, "pymatgen.io.cp2k.inputs.Section.inc"]], "info (atomicmetadata attribute)": [[189, "id3"], [189, "pymatgen.io.cp2k.inputs.AtomicMetadata.info"]], "info (gaussiantypeorbitalbasisset attribute)": [[189, "id22"], [189, "pymatgen.io.cp2k.inputs.GaussianTypeOrbitalBasisSet.info"]], "info (gthpotential attribute)": [[189, "pymatgen.io.cp2k.inputs.GthPotential.info"]], "insert() (section method)": [[189, "pymatgen.io.cp2k.inputs.Section.insert"]], "lmax (gaussiantypeorbitalbasisset attribute)": [[189, "id23"], [189, "pymatgen.io.cp2k.inputs.GaussianTypeOrbitalBasisSet.lmax"]], "lmin (gaussiantypeorbitalbasisset attribute)": [[189, "id24"], [189, "pymatgen.io.cp2k.inputs.GaussianTypeOrbitalBasisSet.lmin"]], "lri (basisinfo attribute)": [[189, "id13"], [189, "pymatgen.io.cp2k.inputs.BasisInfo.lri"]], "molopt (basisinfo attribute)": [[189, "id14"], [189, "pymatgen.io.cp2k.inputs.BasisInfo.molopt"]], "n (gaussiantypeorbitalbasisset attribute)": [[189, "id25"], [189, "pymatgen.io.cp2k.inputs.GaussianTypeOrbitalBasisSet.n"]], "n_elecs (gthpotential attribute)": [[189, "id30"], [189, "pymatgen.io.cp2k.inputs.GthPotential.n_elecs"]], "name (atomicmetadata attribute)": [[189, "id4"], [189, "pymatgen.io.cp2k.inputs.AtomicMetadata.name"]], "nexp (gaussiantypeorbitalbasisset property)": [[189, "pymatgen.io.cp2k.inputs.GaussianTypeOrbitalBasisSet.nexp"]], "nexp_ppl (gthpotential attribute)": [[189, "id31"], [189, "pymatgen.io.cp2k.inputs.GthPotential.nexp_ppl"]], "nlcc (potentialinfo attribute)": [[189, "id37"], [189, "pymatgen.io.cp2k.inputs.PotentialInfo.nlcc"]], "nprj (gthpotential attribute)": [[189, "id32"], [189, "pymatgen.io.cp2k.inputs.GthPotential.nprj"]], "nprj_ppnl (gthpotential attribute)": [[189, "id33"], [189, "pymatgen.io.cp2k.inputs.GthPotential.nprj_ppnl"]], "nset (gaussiantypeorbitalbasisset attribute)": [[189, "id26"], [189, "pymatgen.io.cp2k.inputs.GaussianTypeOrbitalBasisSet.nset"]], "nshell (gaussiantypeorbitalbasisset attribute)": [[189, "id27"], [189, "pymatgen.io.cp2k.inputs.GaussianTypeOrbitalBasisSet.nshell"]], "objects (datafile attribute)": [[189, "pymatgen.io.cp2k.inputs.DataFile.objects"]], "pc (basisinfo attribute)": [[189, "id15"], [189, "pymatgen.io.cp2k.inputs.BasisInfo.pc"]], "polarization (basisinfo attribute)": [[189, "id16"], [189, "pymatgen.io.cp2k.inputs.BasisInfo.polarization"]], "potential (atomicmetadata attribute)": [[189, "id5"], [189, "pymatgen.io.cp2k.inputs.AtomicMetadata.potential"]], "potential_type (potentialinfo attribute)": [[189, "id38"], [189, "pymatgen.io.cp2k.inputs.PotentialInfo.potential_type"]], "pymatgen.io.cp2k.inputs": [[189, "module-pymatgen.io.cp2k.inputs"]], "r_loc (gthpotential attribute)": [[189, "id34"], [189, "pymatgen.io.cp2k.inputs.GthPotential.r_loc"]], "radii (gthpotential attribute)": [[189, "id35"], [189, "pymatgen.io.cp2k.inputs.GthPotential.radii"]], "safeset() (section method)": [[189, "pymatgen.io.cp2k.inputs.Section.safeset"]], "set() (section method)": [[189, "pymatgen.io.cp2k.inputs.Section.set"]], "setitem() (section method)": [[189, "pymatgen.io.cp2k.inputs.Section.setitem"]], "silence() (section method)": [[189, "pymatgen.io.cp2k.inputs.Section.silence"]], "softmatch() (atomicmetadata method)": [[189, "pymatgen.io.cp2k.inputs.AtomicMetadata.softmatch"]], "softmatch() (basisinfo method)": [[189, "pymatgen.io.cp2k.inputs.BasisInfo.softmatch"]], "softmatch() (potentialinfo method)": [[189, "pymatgen.io.cp2k.inputs.PotentialInfo.softmatch"]], "sr (basisinfo attribute)": [[189, "id17"], [189, "pymatgen.io.cp2k.inputs.BasisInfo.sr"]], "unset() (section method)": [[189, "pymatgen.io.cp2k.inputs.Section.unset"]], "update() (section method)": [[189, "pymatgen.io.cp2k.inputs.Section.update"]], "valence (basisinfo attribute)": [[189, "id18"], [189, "pymatgen.io.cp2k.inputs.BasisInfo.valence"]], "verbosity() (keyword method)": [[189, "pymatgen.io.cp2k.inputs.Keyword.verbosity"]], "verbosity() (keywordlist method)": [[189, "pymatgen.io.cp2k.inputs.KeywordList.verbosity"]], "verbosity() (section method)": [[189, "pymatgen.io.cp2k.inputs.Section.verbosity"]], "verbosity() (sectionlist method)": [[189, "pymatgen.io.cp2k.inputs.SectionList.verbosity"]], "version (atomicmetadata attribute)": [[189, "id6"], [189, "pymatgen.io.cp2k.inputs.AtomicMetadata.version"]], "write_file() (cp2kinput method)": [[189, "pymatgen.io.cp2k.inputs.Cp2kInput.write_file"]], "write_file() (datafile method)": [[189, "pymatgen.io.cp2k.inputs.DataFile.write_file"]], "xc (basisinfo attribute)": [[189, "id19"], [189, "pymatgen.io.cp2k.inputs.BasisInfo.xc"]], "xc (potentialinfo attribute)": [[189, "id39"], [189, "pymatgen.io.cp2k.inputs.PotentialInfo.xc"]], "cp2koutput (class in pymatgen.io.cp2k.outputs)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput"]], "as_dict() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.as_dict"]], "band_structure (cp2koutput property)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.band_structure"]], "calculation_type (cp2koutput property)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.calculation_type"]], "charge (cp2koutput property)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.charge"]], "complete_dos (cp2koutput property)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.complete_dos"]], "completed (cp2koutput property)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.completed"]], "convergence() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.convergence"]], "cp2k_version (cp2koutput property)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.cp2k_version"]], "is_hubbard (cp2koutput property)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.is_hubbard"]], "is_metal (cp2koutput property)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.is_metal"]], "is_molecule (cp2koutput property)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.is_molecule"]], "multiplicity (cp2koutput property)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.multiplicity"]], "num_warnings (cp2koutput property)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.num_warnings"]], "parse_atomic_kind_info() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_atomic_kind_info"]], "parse_bandstructure() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_bandstructure"]], "parse_cell_params() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_cell_params"]], "parse_chi_tensor() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_chi_tensor"]], "parse_cp2k_params() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_cp2k_params"]], "parse_dft_params() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_dft_params"]], "parse_dos() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_dos"]], "parse_dos() (in module pymatgen.io.cp2k.outputs)": [[190, "pymatgen.io.cp2k.outputs.parse_dos"]], "parse_energies() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_energies"]], "parse_energy_file() (in module pymatgen.io.cp2k.outputs)": [[190, "pymatgen.io.cp2k.outputs.parse_energy_file"]], "parse_files() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_files"]], "parse_forces() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_forces"]], "parse_global_params() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_global_params"]], "parse_gtensor() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_gtensor"]], "parse_hirshfeld() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_hirshfeld"]], "parse_homo_lumo() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_homo_lumo"]], "parse_hyperfine() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_hyperfine"]], "parse_initial_structure() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_initial_structure"]], "parse_input() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_input"]], "parse_ionic_steps() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_ionic_steps"]], "parse_mo_eigenvalues() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_mo_eigenvalues"]], "parse_mulliken() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_mulliken"]], "parse_nmr_shift() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_nmr_shift"]], "parse_opt_steps() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_opt_steps"]], "parse_overlap_condition() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_overlap_condition"]], "parse_pdos() (in module pymatgen.io.cp2k.outputs)": [[190, "pymatgen.io.cp2k.outputs.parse_pdos"]], "parse_plus_u_params() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_plus_u_params"]], "parse_qs_params() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_qs_params"]], "parse_raman() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_raman"]], "parse_scf_opt() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_scf_opt"]], "parse_scf_params() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_scf_params"]], "parse_stresses() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_stresses"]], "parse_structures() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_structures"]], "parse_tddfpt() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_tddfpt"]], "parse_timing() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_timing"]], "parse_total_numbers() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.parse_total_numbers"]], "project_name (cp2koutput property)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.project_name"]], "pymatgen.io.cp2k.outputs": [[190, "module-pymatgen.io.cp2k.outputs"]], "ran_successfully() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.ran_successfully"]], "read_pattern() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.read_pattern"]], "read_table_pattern() (cp2koutput method)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.read_table_pattern"]], "run_type (cp2koutput property)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.run_type"]], "spin_polarized (cp2koutput property)": [[190, "pymatgen.io.cp2k.outputs.Cp2kOutput.spin_polarized"]], "cp2k_version (cp2kvalidationerror attribute)": [[191, "pymatgen.io.cp2k.sets.Cp2kValidationError.CP2K_VERSION"]], "celloptset (class in pymatgen.io.cp2k.sets)": [[191, "pymatgen.io.cp2k.sets.CellOptSet"]], "cp2kvalidationerror": [[191, "pymatgen.io.cp2k.sets.Cp2kValidationError"]], "dftset (class in pymatgen.io.cp2k.sets)": [[191, "pymatgen.io.cp2k.sets.DftSet"]], "hybridcelloptset (class in pymatgen.io.cp2k.sets)": [[191, "pymatgen.io.cp2k.sets.HybridCellOptSet"]], "hybridrelaxset (class in pymatgen.io.cp2k.sets)": [[191, "pymatgen.io.cp2k.sets.HybridRelaxSet"]], "hybridstaticset (class in pymatgen.io.cp2k.sets)": [[191, "pymatgen.io.cp2k.sets.HybridStaticSet"]], "relaxset (class in pymatgen.io.cp2k.sets)": [[191, "pymatgen.io.cp2k.sets.RelaxSet"]], "staticset (class in pymatgen.io.cp2k.sets)": [[191, "pymatgen.io.cp2k.sets.StaticSet"]], "activate_epr() (dftset method)": [[191, "pymatgen.io.cp2k.sets.DftSet.activate_epr"]], "activate_fast_minimization() (dftset method)": [[191, "pymatgen.io.cp2k.sets.DftSet.activate_fast_minimization"]], "activate_hybrid() (dftset method)": [[191, "pymatgen.io.cp2k.sets.DftSet.activate_hybrid"]], "activate_hyperfine() (dftset method)": [[191, "pymatgen.io.cp2k.sets.DftSet.activate_hyperfine"]], "activate_localize() (dftset method)": [[191, "pymatgen.io.cp2k.sets.DftSet.activate_localize"]], "activate_motion() (dftset method)": [[191, "pymatgen.io.cp2k.sets.DftSet.activate_motion"]], "activate_nmr() (dftset method)": [[191, "pymatgen.io.cp2k.sets.DftSet.activate_nmr"]], "activate_nonperiodic() (dftset method)": [[191, "pymatgen.io.cp2k.sets.DftSet.activate_nonperiodic"]], "activate_polar() (dftset method)": [[191, "pymatgen.io.cp2k.sets.DftSet.activate_polar"]], "activate_robust_minimization() (dftset method)": [[191, "pymatgen.io.cp2k.sets.DftSet.activate_robust_minimization"]], "activate_spinspin() (dftset method)": [[191, "pymatgen.io.cp2k.sets.DftSet.activate_spinspin"]], "activate_tddfpt() (dftset method)": [[191, "pymatgen.io.cp2k.sets.DftSet.activate_tddfpt"]], "activate_vdw_potential() (dftset method)": [[191, "pymatgen.io.cp2k.sets.DftSet.activate_vdw_potential"]], "activate_very_strict_minimization() (dftset method)": [[191, "pymatgen.io.cp2k.sets.DftSet.activate_very_strict_minimization"]], "create_subsys() (dftset method)": [[191, "pymatgen.io.cp2k.sets.DftSet.create_subsys"]], "get_basis_and_potential() (dftset static method)": [[191, "pymatgen.io.cp2k.sets.DftSet.get_basis_and_potential"]], "get_cutoff_from_basis() (dftset static method)": [[191, "pymatgen.io.cp2k.sets.DftSet.get_cutoff_from_basis"]], "get_xc_functionals() (dftset static method)": [[191, "pymatgen.io.cp2k.sets.DftSet.get_xc_functionals"]], "modify_dft_print_iters() (dftset method)": [[191, "pymatgen.io.cp2k.sets.DftSet.modify_dft_print_iters"]], "print_bandstructure() (dftset method)": [[191, "pymatgen.io.cp2k.sets.DftSet.print_bandstructure"]], "print_dos() (dftset method)": [[191, "pymatgen.io.cp2k.sets.DftSet.print_dos"]], "print_e_density() (dftset method)": [[191, "pymatgen.io.cp2k.sets.DftSet.print_e_density"]], "print_forces() (dftset method)": [[191, "pymatgen.io.cp2k.sets.DftSet.print_forces"]], "print_hirshfeld() (dftset method)": [[191, "pymatgen.io.cp2k.sets.DftSet.print_hirshfeld"]], "print_ldos() (dftset method)": [[191, "pymatgen.io.cp2k.sets.DftSet.print_ldos"]], "print_mo() (dftset method)": [[191, "pymatgen.io.cp2k.sets.DftSet.print_mo"]], "print_mo_cubes() (dftset method)": [[191, "pymatgen.io.cp2k.sets.DftSet.print_mo_cubes"]], "print_mulliken() (dftset method)": [[191, "pymatgen.io.cp2k.sets.DftSet.print_mulliken"]], "print_pdos() (dftset method)": [[191, "pymatgen.io.cp2k.sets.DftSet.print_pdos"]], "print_v_hartree() (dftset method)": [[191, "pymatgen.io.cp2k.sets.DftSet.print_v_hartree"]], "pymatgen.io.cp2k.sets": [[191, "module-pymatgen.io.cp2k.sets"]], "set_charge() (dftset method)": [[191, "pymatgen.io.cp2k.sets.DftSet.set_charge"]], "validate() (dftset method)": [[191, "pymatgen.io.cp2k.sets.DftSet.validate"]], "write_basis_set_file() (dftset method)": [[191, "pymatgen.io.cp2k.sets.DftSet.write_basis_set_file"]], "write_potential_file() (dftset method)": [[191, "pymatgen.io.cp2k.sets.DftSet.write_potential_file"]], "chunk() (in module pymatgen.io.cp2k.utils)": [[192, "pymatgen.io.cp2k.utils.chunk"]], "get_truncated_coulomb_cutoff() (in module pymatgen.io.cp2k.utils)": [[192, "pymatgen.io.cp2k.utils.get_truncated_coulomb_cutoff"]], "get_unique_site_indices() (in module pymatgen.io.cp2k.utils)": [[192, "pymatgen.io.cp2k.utils.get_unique_site_indices"]], "natural_keys() (in module pymatgen.io.cp2k.utils)": [[192, "pymatgen.io.cp2k.utils.natural_keys"]], "postprocessor() (in module pymatgen.io.cp2k.utils)": [[192, "pymatgen.io.cp2k.utils.postprocessor"]], "preprocessor() (in module pymatgen.io.cp2k.utils)": [[192, "pymatgen.io.cp2k.utils.preprocessor"]], "pymatgen.io.cp2k.utils": [[192, "module-pymatgen.io.cp2k.utils"]], "cssr (class in pymatgen.io.cssr)": [[193, "pymatgen.io.cssr.Cssr"]], "from_file() (cssr static method)": [[193, "pymatgen.io.cssr.Cssr.from_file"]], "from_string() (cssr static method)": [[193, "pymatgen.io.cssr.Cssr.from_string"]], "pymatgen.io.cssr": [[193, "module-pymatgen.io.cssr"]], "write_file() (cssr method)": [[193, "pymatgen.io.cssr.Cssr.write_file"]], "pymatgen.io.exciting": [[194, "module-pymatgen.io.exciting"]], "excitinginput (class in pymatgen.io.exciting.inputs)": [[195, "pymatgen.io.exciting.inputs.ExcitingInput"]], "bohr2ang (excitinginput attribute)": [[195, "pymatgen.io.exciting.inputs.ExcitingInput.bohr2ang"]], "from_file() (excitinginput static method)": [[195, "pymatgen.io.exciting.inputs.ExcitingInput.from_file"]], "from_string() (excitinginput static method)": [[195, "pymatgen.io.exciting.inputs.ExcitingInput.from_string"]], "lockxyz (excitinginput attribute)": [[195, "pymatgen.io.exciting.inputs.ExcitingInput.lockxyz"]], "lockxyz (excitinginput property)": [[195, "id0"]], "pymatgen.io.exciting.inputs": [[195, "module-pymatgen.io.exciting.inputs"]], "structure (excitinginput attribute)": [[195, "pymatgen.io.exciting.inputs.ExcitingInput.structure"]], "title (excitinginput attribute)": [[195, "pymatgen.io.exciting.inputs.ExcitingInput.title"]], "write_etree() (excitinginput method)": [[195, "pymatgen.io.exciting.inputs.ExcitingInput.write_etree"]], "write_file() (excitinginput method)": [[195, "pymatgen.io.exciting.inputs.ExcitingInput.write_file"]], "write_string() (excitinginput method)": [[195, "pymatgen.io.exciting.inputs.ExcitingInput.write_string"]], "pymatgen.io.feff": [[196, "module-pymatgen.io.feff"]], "atoms (class in pymatgen.io.feff.inputs)": [[197, "pymatgen.io.feff.inputs.Atoms"]], "feffparsererror": [[197, "pymatgen.io.feff.inputs.FeffParserError"]], "header (class in pymatgen.io.feff.inputs)": [[197, "pymatgen.io.feff.inputs.Header"]], "paths (class in pymatgen.io.feff.inputs)": [[197, "pymatgen.io.feff.inputs.Paths"]], "potential (class in pymatgen.io.feff.inputs)": [[197, "pymatgen.io.feff.inputs.Potential"]], "tags (class in pymatgen.io.feff.inputs)": [[197, "pymatgen.io.feff.inputs.Tags"]], "as_dict() (tags method)": [[197, "pymatgen.io.feff.inputs.Tags.as_dict"]], "atoms_string_from_file() (atoms static method)": [[197, "pymatgen.io.feff.inputs.Atoms.atoms_string_from_file"]], "cluster (atoms property)": [[197, "pymatgen.io.feff.inputs.Atoms.cluster"]], "cluster_from_file() (atoms static method)": [[197, "pymatgen.io.feff.inputs.Atoms.cluster_from_file"]], "diff() (tags method)": [[197, "pymatgen.io.feff.inputs.Tags.diff"]], "formula (header property)": [[197, "pymatgen.io.feff.inputs.Header.formula"]], "from_cif_file() (header static method)": [[197, "pymatgen.io.feff.inputs.Header.from_cif_file"]], "from_dict() (tags static method)": [[197, "pymatgen.io.feff.inputs.Tags.from_dict"]], "from_file() (header static method)": [[197, "pymatgen.io.feff.inputs.Header.from_file"]], "from_file() (tags static method)": [[197, "pymatgen.io.feff.inputs.Tags.from_file"]], "from_string() (header static method)": [[197, "pymatgen.io.feff.inputs.Header.from_string"]], "get_absorbing_atom_symbol_index() (in module pymatgen.io.feff.inputs)": [[197, "pymatgen.io.feff.inputs.get_absorbing_atom_symbol_index"]], "get_atom_map() (in module pymatgen.io.feff.inputs)": [[197, "pymatgen.io.feff.inputs.get_atom_map"]], "get_lines() (atoms method)": [[197, "pymatgen.io.feff.inputs.Atoms.get_lines"]], "get_string() (tags method)": [[197, "pymatgen.io.feff.inputs.Tags.get_string"]], "header_string_from_file() (header static method)": [[197, "pymatgen.io.feff.inputs.Header.header_string_from_file"]], "pot_dict_from_string() (potential static method)": [[197, "pymatgen.io.feff.inputs.Potential.pot_dict_from_string"]], "pot_string_from_file() (potential static method)": [[197, "pymatgen.io.feff.inputs.Potential.pot_string_from_file"]], "proc_val() (tags static method)": [[197, "pymatgen.io.feff.inputs.Tags.proc_val"]], "pymatgen.io.feff.inputs": [[197, "module-pymatgen.io.feff.inputs"]], "structure_symmetry (header property)": [[197, "pymatgen.io.feff.inputs.Header.structure_symmetry"]], "write_file() (atoms method)": [[197, "pymatgen.io.feff.inputs.Atoms.write_file"]], "write_file() (header method)": [[197, "pymatgen.io.feff.inputs.Header.write_file"]], "write_file() (paths method)": [[197, "pymatgen.io.feff.inputs.Paths.write_file"]], "write_file() (potential method)": [[197, "pymatgen.io.feff.inputs.Potential.write_file"]], "write_file() (tags method)": [[197, "pymatgen.io.feff.inputs.Tags.write_file"]], "eels (class in pymatgen.io.feff.outputs)": [[198, "pymatgen.io.feff.outputs.Eels"]], "ldos (class in pymatgen.io.feff.outputs)": [[198, "pymatgen.io.feff.outputs.LDos"]], "xmu (class in pymatgen.io.feff.outputs)": [[198, "pymatgen.io.feff.outputs.Xmu"]], "as_dict() (eels method)": [[198, "pymatgen.io.feff.outputs.Eels.as_dict"]], "as_dict() (xmu method)": [[198, "pymatgen.io.feff.outputs.Xmu.as_dict"]], "atomic_background (eels property)": [[198, "pymatgen.io.feff.outputs.Eels.atomic_background"]], "calc (xmu property)": [[198, "pymatgen.io.feff.outputs.Xmu.calc"]], "charge_transfer_from_file() (ldos static method)": [[198, "pymatgen.io.feff.outputs.LDos.charge_transfer_from_file"]], "charge_transfer_to_string() (ldos method)": [[198, "pymatgen.io.feff.outputs.LDos.charge_transfer_to_string"]], "chi (xmu property)": [[198, "pymatgen.io.feff.outputs.Xmu.chi"]], "e_fermi (xmu property)": [[198, "pymatgen.io.feff.outputs.Xmu.e_fermi"]], "edge (xmu property)": [[198, "pymatgen.io.feff.outputs.Xmu.edge"]], "energies (eels property)": [[198, "pymatgen.io.feff.outputs.Eels.energies"]], "energies (xmu property)": [[198, "pymatgen.io.feff.outputs.Xmu.energies"]], "fine_structure (eels property)": [[198, "pymatgen.io.feff.outputs.Eels.fine_structure"]], "from_file() (eels static method)": [[198, "pymatgen.io.feff.outputs.Eels.from_file"]], "from_file() (ldos static method)": [[198, "pymatgen.io.feff.outputs.LDos.from_file"]], "from_file() (xmu static method)": [[198, "pymatgen.io.feff.outputs.Xmu.from_file"]], "material_formula (xmu property)": [[198, "pymatgen.io.feff.outputs.Xmu.material_formula"]], "mu (xmu property)": [[198, "pymatgen.io.feff.outputs.Xmu.mu"]], "mu0 (xmu property)": [[198, "pymatgen.io.feff.outputs.Xmu.mu0"]], "pymatgen.io.feff.outputs": [[198, "module-pymatgen.io.feff.outputs"]], "relative_energies (xmu property)": [[198, "pymatgen.io.feff.outputs.Xmu.relative_energies"]], "source (xmu property)": [[198, "pymatgen.io.feff.outputs.Xmu.source"]], "total_spectrum (eels property)": [[198, "pymatgen.io.feff.outputs.Eels.total_spectrum"]], "wavenumber (xmu property)": [[198, "pymatgen.io.feff.outputs.Xmu.wavenumber"]], "abstractfeffinputset (class in pymatgen.io.feff.sets)": [[199, "pymatgen.io.feff.sets.AbstractFeffInputSet"]], "config (mpelnesset attribute)": [[199, "pymatgen.io.feff.sets.MPELNESSet.CONFIG"]], "config (mpexafsset attribute)": [[199, "pymatgen.io.feff.sets.MPEXAFSSet.CONFIG"]], "config (mpexelfsset attribute)": [[199, "pymatgen.io.feff.sets.MPEXELFSSet.CONFIG"]], "config (mpxanesset attribute)": [[199, "pymatgen.io.feff.sets.MPXANESSet.CONFIG"]], "feffdictset (class in pymatgen.io.feff.sets)": [[199, "pymatgen.io.feff.sets.FEFFDictSet"]], "mpeelsdictset (class in pymatgen.io.feff.sets)": [[199, "pymatgen.io.feff.sets.MPEELSDictSet"]], "mpelnesset (class in pymatgen.io.feff.sets)": [[199, "pymatgen.io.feff.sets.MPELNESSet"]], "mpexafsset (class in pymatgen.io.feff.sets)": [[199, "pymatgen.io.feff.sets.MPEXAFSSet"]], "mpexelfsset (class in pymatgen.io.feff.sets)": [[199, "pymatgen.io.feff.sets.MPEXELFSSet"]], "mpxanesset (class in pymatgen.io.feff.sets)": [[199, "pymatgen.io.feff.sets.MPXANESSet"]], "all_input() (abstractfeffinputset method)": [[199, "pymatgen.io.feff.sets.AbstractFeffInputSet.all_input"]], "atoms (abstractfeffinputset property)": [[199, "pymatgen.io.feff.sets.AbstractFeffInputSet.atoms"]], "atoms (feffdictset property)": [[199, "pymatgen.io.feff.sets.FEFFDictSet.atoms"]], "from_directory() (feffdictset static method)": [[199, "pymatgen.io.feff.sets.FEFFDictSet.from_directory"]], "header() (abstractfeffinputset method)": [[199, "pymatgen.io.feff.sets.AbstractFeffInputSet.header"]], "header() (feffdictset method)": [[199, "pymatgen.io.feff.sets.FEFFDictSet.header"]], "potential (abstractfeffinputset property)": [[199, "pymatgen.io.feff.sets.AbstractFeffInputSet.potential"]], "potential (feffdictset property)": [[199, "pymatgen.io.feff.sets.FEFFDictSet.potential"]], "pymatgen.io.feff.sets": [[199, "module-pymatgen.io.feff.sets"]], "tags (abstractfeffinputset property)": [[199, "pymatgen.io.feff.sets.AbstractFeffInputSet.tags"]], "tags (feffdictset property)": [[199, "pymatgen.io.feff.sets.FEFFDictSet.tags"]], "write_input() (abstractfeffinputset method)": [[199, "pymatgen.io.feff.sets.AbstractFeffInputSet.write_input"]], "bseoutput (class in pymatgen.io.fiesta)": [[200, "pymatgen.io.fiesta.BSEOutput"]], "basissetreader (class in pymatgen.io.fiesta)": [[200, "pymatgen.io.fiesta.BasisSetReader"]], "fiestainput (class in pymatgen.io.fiesta)": [[200, "pymatgen.io.fiesta.FiestaInput"]], "fiestaoutput (class in pymatgen.io.fiesta)": [[200, "pymatgen.io.fiesta.FiestaOutput"]], "fiestarun (class in pymatgen.io.fiesta)": [[200, "pymatgen.io.fiesta.FiestaRun"]], "nwchem2fiesta (class in pymatgen.io.fiesta)": [[200, "pymatgen.io.fiesta.Nwchem2Fiesta"]], "as_dict() (fiestainput method)": [[200, "pymatgen.io.fiesta.FiestaInput.as_dict"]], "as_dict() (fiestarun method)": [[200, "pymatgen.io.fiesta.FiestaRun.as_dict"]], "as_dict() (nwchem2fiesta method)": [[200, "pymatgen.io.fiesta.Nwchem2Fiesta.as_dict"]], "bse_run() (fiestarun method)": [[200, "pymatgen.io.fiesta.FiestaRun.bse_run"]], "dump_bse_data_in_gw_run() (fiestainput method)": [[200, "pymatgen.io.fiesta.FiestaInput.dump_BSE_data_in_GW_run"]], "dump_tddft_data_in_gw_run() (fiestainput method)": [[200, "pymatgen.io.fiesta.FiestaInput.dump_TDDFT_data_in_GW_run"]], "from_dict() (fiestainput class method)": [[200, "pymatgen.io.fiesta.FiestaInput.from_dict"]], "from_dict() (fiestarun class method)": [[200, "pymatgen.io.fiesta.FiestaRun.from_dict"]], "from_dict() (nwchem2fiesta class method)": [[200, "pymatgen.io.fiesta.Nwchem2Fiesta.from_dict"]], "from_file() (fiestainput class method)": [[200, "pymatgen.io.fiesta.FiestaInput.from_file"]], "from_string() (fiestainput class method)": [[200, "pymatgen.io.fiesta.FiestaInput.from_string"]], "infos_on_basis_set() (basissetreader method)": [[200, "pymatgen.io.fiesta.BasisSetReader.infos_on_basis_set"]], "infos_on_system (fiestainput property)": [[200, "pymatgen.io.fiesta.FiestaInput.infos_on_system"]], "make_full_bse_densities_folder() (fiestainput static method)": [[200, "pymatgen.io.fiesta.FiestaInput.make_FULL_BSE_Densities_folder"]], "molecule (fiestainput property)": [[200, "pymatgen.io.fiesta.FiestaInput.molecule"]], "pymatgen.io.fiesta": [[200, "module-pymatgen.io.fiesta"]], "run() (fiestarun method)": [[200, "pymatgen.io.fiesta.FiestaRun.run"]], "run() (nwchem2fiesta method)": [[200, "pymatgen.io.fiesta.Nwchem2Fiesta.run"]], "set_bse_options() (fiestainput method)": [[200, "pymatgen.io.fiesta.FiestaInput.set_BSE_options"]], "set_gw_options() (fiestainput method)": [[200, "pymatgen.io.fiesta.FiestaInput.set_GW_options"]], "set_auxiliary_basis_set() (fiestainput method)": [[200, "pymatgen.io.fiesta.FiestaInput.set_auxiliary_basis_set"]], "set_n_nlmo() (basissetreader method)": [[200, "pymatgen.io.fiesta.BasisSetReader.set_n_nlmo"]], "write_file() (fiestainput method)": [[200, "pymatgen.io.fiesta.FiestaInput.write_file"]], "gaussianinput (class in pymatgen.io.gaussian)": [[201, "pymatgen.io.gaussian.GaussianInput"]], "gaussianoutput (class in pymatgen.io.gaussian)": [[201, "pymatgen.io.gaussian.GaussianOutput"]], "mo_coefficients (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.MO_coefficients"]], "mulliken_charges (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.Mulliken_charges"]], "as_dict() (gaussianinput method)": [[201, "pymatgen.io.gaussian.GaussianInput.as_dict"]], "as_dict() (gaussianoutput method)": [[201, "pymatgen.io.gaussian.GaussianOutput.as_dict"]], "atom_basis_labels (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.atom_basis_labels"]], "basis_set (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.basis_set"]], "bond_orders (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.bond_orders"]], "cart_forces (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.cart_forces"]], "charge (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.charge"]], "corrections (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.corrections"]], "dieze_tag (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.dieze_tag"]], "eigenvalues (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.eigenvalues"]], "eigenvectors (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.eigenvectors"]], "electrons (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.electrons"]], "energies (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.energies"]], "errors (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.errors"]], "final_energy (gaussianoutput property)": [[201, "pymatgen.io.gaussian.GaussianOutput.final_energy"]], "final_structure (gaussianoutput property)": [[201, "pymatgen.io.gaussian.GaussianOutput.final_structure"]], "frequencies (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.frequencies"]], "from_dict() (gaussianinput class method)": [[201, "pymatgen.io.gaussian.GaussianInput.from_dict"]], "from_file() (gaussianinput static method)": [[201, "pymatgen.io.gaussian.GaussianInput.from_file"]], "from_string() (gaussianinput static method)": [[201, "pymatgen.io.gaussian.GaussianInput.from_string"]], "functional (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.functional"]], "get_cart_coords() (gaussianinput method)": [[201, "pymatgen.io.gaussian.GaussianInput.get_cart_coords"]], "get_scan_plot() (gaussianoutput method)": [[201, "id0"], [201, "pymatgen.io.gaussian.GaussianOutput.get_scan_plot"]], "get_spectre_plot() (gaussianoutput method)": [[201, "pymatgen.io.gaussian.GaussianOutput.get_spectre_plot"]], "get_zmatrix() (gaussianinput method)": [[201, "pymatgen.io.gaussian.GaussianInput.get_zmatrix"]], "hessian (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.hessian"]], "is_pcm (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.is_pcm"]], "is_spin (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.is_spin"]], "link0 (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.link0"]], "molecular_orbital (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.molecular_orbital"]], "molecule (gaussianinput property)": [[201, "pymatgen.io.gaussian.GaussianInput.molecule"]], "num_basis_func (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.num_basis_func"]], "opt_structures (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.opt_structures"]], "pcm (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.pcm"]], "properly_terminated (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.properly_terminated"]], "pymatgen.io.gaussian": [[201, "module-pymatgen.io.gaussian"]], "read_excitation_energies() (gaussianoutput method)": [[201, "pymatgen.io.gaussian.GaussianOutput.read_excitation_energies"]], "read_route_line() (in module pymatgen.io.gaussian)": [[201, "pymatgen.io.gaussian.read_route_line"]], "read_scan() (gaussianoutput method)": [[201, "id1"], [201, "pymatgen.io.gaussian.GaussianOutput.read_scan"]], "resumes (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.resumes"]], "route (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.route"]], "save_scan_plot() (gaussianoutput method)": [[201, "id2"], [201, "pymatgen.io.gaussian.GaussianOutput.save_scan_plot"]], "save_spectre_plot() (gaussianoutput method)": [[201, "pymatgen.io.gaussian.GaussianOutput.save_spectre_plot"]], "spin_multiplicity (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.spin_multiplicity"]], "standard_orientation (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.standard_orientation"]], "stationary_type (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.stationary_type"]], "structures_input_orientation (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.structures_input_orientation"]], "title (gaussianoutput attribute)": [[201, "pymatgen.io.gaussian.GaussianOutput.title"]], "to_input() (gaussianoutput method)": [[201, "pymatgen.io.gaussian.GaussianOutput.to_input"]], "to_string() (gaussianinput method)": [[201, "pymatgen.io.gaussian.GaussianInput.to_string"]], "write_file() (gaussianinput method)": [[201, "pymatgen.io.gaussian.GaussianInput.write_file"]], "jarvisatomsadaptor (class in pymatgen.io.jarvis)": [[202, "pymatgen.io.jarvis.JarvisAtomsAdaptor"]], "get_atoms() (jarvisatomsadaptor static method)": [[202, "pymatgen.io.jarvis.JarvisAtomsAdaptor.get_atoms"]], "get_structure() (jarvisatomsadaptor static method)": [[202, "pymatgen.io.jarvis.JarvisAtomsAdaptor.get_structure"]], "pymatgen.io.jarvis": [[202, "module-pymatgen.io.jarvis"]], "pymatgen.io.lammps": [[203, "module-pymatgen.io.lammps"]], "combineddata (class in pymatgen.io.lammps.data)": [[204, "pymatgen.io.lammps.data.CombinedData"]], "forcefield (class in pymatgen.io.lammps.data)": [[204, "pymatgen.io.lammps.data.ForceField"]], "lammpsbox (class in pymatgen.io.lammps.data)": [[204, "pymatgen.io.lammps.data.LammpsBox"]], "lammpsdata (class in pymatgen.io.lammps.data)": [[204, "pymatgen.io.lammps.data.LammpsData"]], "topology (class in pymatgen.io.lammps.data)": [[204, "pymatgen.io.lammps.data.Topology"]], "as_lammpsdata() (combineddata method)": [[204, "pymatgen.io.lammps.data.CombinedData.as_lammpsdata"]], "disassemble() (combineddata method)": [[204, "pymatgen.io.lammps.data.CombinedData.disassemble"]], "disassemble() (lammpsdata method)": [[204, "pymatgen.io.lammps.data.LammpsData.disassemble"]], "force_field (forcefield attribute)": [[204, "pymatgen.io.lammps.data.ForceField.force_field"]], "from_bonding() (topology class method)": [[204, "pymatgen.io.lammps.data.Topology.from_bonding"]], "from_dict() (forcefield class method)": [[204, "pymatgen.io.lammps.data.ForceField.from_dict"]], "from_ff_and_topologies() (combineddata class method)": [[204, "pymatgen.io.lammps.data.CombinedData.from_ff_and_topologies"]], "from_ff_and_topologies() (lammpsdata class method)": [[204, "pymatgen.io.lammps.data.LammpsData.from_ff_and_topologies"]], "from_file() (forcefield class method)": [[204, "pymatgen.io.lammps.data.ForceField.from_file"]], "from_file() (lammpsdata class method)": [[204, "pymatgen.io.lammps.data.LammpsData.from_file"]], "from_files() (combineddata class method)": [[204, "pymatgen.io.lammps.data.CombinedData.from_files"]], "from_lammpsdata() (combineddata class method)": [[204, "pymatgen.io.lammps.data.CombinedData.from_lammpsdata"]], "from_structure() (combineddata class method)": [[204, "pymatgen.io.lammps.data.CombinedData.from_structure"]], "from_structure() (lammpsdata class method)": [[204, "pymatgen.io.lammps.data.LammpsData.from_structure"]], "get_box_shift() (lammpsbox method)": [[204, "pymatgen.io.lammps.data.LammpsBox.get_box_shift"]], "get_string() (combineddata method)": [[204, "pymatgen.io.lammps.data.CombinedData.get_string"]], "get_string() (lammpsbox method)": [[204, "pymatgen.io.lammps.data.LammpsBox.get_string"]], "get_string() (lammpsdata method)": [[204, "pymatgen.io.lammps.data.LammpsData.get_string"]], "lattice_2_lmpbox() (in module pymatgen.io.lammps.data)": [[204, "pymatgen.io.lammps.data.lattice_2_lmpbox"]], "maps (forcefield attribute)": [[204, "pymatgen.io.lammps.data.ForceField.maps"]], "masses (forcefield attribute)": [[204, "pymatgen.io.lammps.data.ForceField.masses"]], "parse_xyz() (combineddata class method)": [[204, "pymatgen.io.lammps.data.CombinedData.parse_xyz"]], "pymatgen.io.lammps.data": [[204, "module-pymatgen.io.lammps.data"]], "set_charge_atom() (lammpsdata method)": [[204, "pymatgen.io.lammps.data.LammpsData.set_charge_atom"]], "set_charge_atom_type() (lammpsdata method)": [[204, "pymatgen.io.lammps.data.LammpsData.set_charge_atom_type"]], "structure (combineddata property)": [[204, "pymatgen.io.lammps.data.CombinedData.structure"]], "structure (lammpsdata property)": [[204, "pymatgen.io.lammps.data.LammpsData.structure"]], "to_file() (forcefield method)": [[204, "pymatgen.io.lammps.data.ForceField.to_file"]], "to_lattice() (lammpsbox method)": [[204, "pymatgen.io.lammps.data.LammpsBox.to_lattice"]], "volume (lammpsbox property)": [[204, "pymatgen.io.lammps.data.LammpsBox.volume"]], "write_file() (lammpsdata method)": [[204, "pymatgen.io.lammps.data.LammpsData.write_file"]], "baselammpsgenerator (class in pymatgen.io.lammps.generators)": [[205, "pymatgen.io.lammps.generators.BaseLammpsGenerator"]], "lammpsminimization (class in pymatgen.io.lammps.generators)": [[205, "pymatgen.io.lammps.generators.LammpsMinimization"]], "atom_style (lammpsminimization property)": [[205, "pymatgen.io.lammps.generators.LammpsMinimization.atom_style"]], "boundary (lammpsminimization property)": [[205, "pymatgen.io.lammps.generators.LammpsMinimization.boundary"]], "calc_type (baselammpsgenerator attribute)": [[205, "pymatgen.io.lammps.generators.BaseLammpsGenerator.calc_type"]], "dimension (lammpsminimization property)": [[205, "pymatgen.io.lammps.generators.LammpsMinimization.dimension"]], "force_field (lammpsminimization property)": [[205, "pymatgen.io.lammps.generators.LammpsMinimization.force_field"]], "get_input_set() (baselammpsgenerator method)": [[205, "pymatgen.io.lammps.generators.BaseLammpsGenerator.get_input_set"]], "keep_stages (baselammpsgenerator attribute)": [[205, "pymatgen.io.lammps.generators.BaseLammpsGenerator.keep_stages"]], "pymatgen.io.lammps.generators": [[205, "module-pymatgen.io.lammps.generators"]], "read_data (lammpsminimization property)": [[205, "pymatgen.io.lammps.generators.LammpsMinimization.read_data"]], "settings (baselammpsgenerator attribute)": [[205, "pymatgen.io.lammps.generators.BaseLammpsGenerator.settings"]], "settings (lammpsminimization attribute)": [[205, "pymatgen.io.lammps.generators.LammpsMinimization.settings"]], "template (baselammpsgenerator attribute)": [[205, "pymatgen.io.lammps.generators.BaseLammpsGenerator.template"]], "template (lammpsminimization attribute)": [[205, "pymatgen.io.lammps.generators.LammpsMinimization.template"]], "units (lammpsminimization property)": [[205, "pymatgen.io.lammps.generators.LammpsMinimization.units"]], "lammpsinputfile (class in pymatgen.io.lammps.inputs)": [[206, "pymatgen.io.lammps.inputs.LammpsInputFile"]], "lammpsrun (class in pymatgen.io.lammps.inputs)": [[206, "pymatgen.io.lammps.inputs.LammpsRun"]], "lammpstemplategen (class in pymatgen.io.lammps.inputs)": [[206, "pymatgen.io.lammps.inputs.LammpsTemplateGen"]], "add_commands() (lammpsinputfile method)": [[206, "pymatgen.io.lammps.inputs.LammpsInputFile.add_commands"]], "add_stage() (lammpsinputfile method)": [[206, "pymatgen.io.lammps.inputs.LammpsInputFile.add_stage"]], "append() (lammpsinputfile method)": [[206, "pymatgen.io.lammps.inputs.LammpsInputFile.append"]], "contains_command() (lammpsinputfile method)": [[206, "pymatgen.io.lammps.inputs.LammpsInputFile.contains_command"]], "from_file() (lammpsinputfile class method)": [[206, "pymatgen.io.lammps.inputs.LammpsInputFile.from_file"]], "from_string() (lammpsinputfile class method)": [[206, "pymatgen.io.lammps.inputs.LammpsInputFile.from_string"]], "get_args() (lammpsinputfile method)": [[206, "pymatgen.io.lammps.inputs.LammpsInputFile.get_args"]], "get_input_set() (lammpstemplategen method)": [[206, "pymatgen.io.lammps.inputs.LammpsTemplateGen.get_input_set"]], "get_string() (lammpsinputfile method)": [[206, "pymatgen.io.lammps.inputs.LammpsInputFile.get_string"]], "md() (lammpsrun class method)": [[206, "pymatgen.io.lammps.inputs.LammpsRun.md"]], "merge_stages() (lammpsinputfile method)": [[206, "pymatgen.io.lammps.inputs.LammpsInputFile.merge_stages"]], "ncomments (lammpsinputfile property)": [[206, "pymatgen.io.lammps.inputs.LammpsInputFile.ncomments"]], "nstages (lammpsinputfile property)": [[206, "pymatgen.io.lammps.inputs.LammpsInputFile.nstages"]], "pymatgen.io.lammps.inputs": [[206, "module-pymatgen.io.lammps.inputs"]], "remove_command() (lammpsinputfile method)": [[206, "pymatgen.io.lammps.inputs.LammpsInputFile.remove_command"]], "remove_stage() (lammpsinputfile method)": [[206, "pymatgen.io.lammps.inputs.LammpsInputFile.remove_stage"]], "rename_stage() (lammpsinputfile method)": [[206, "pymatgen.io.lammps.inputs.LammpsInputFile.rename_stage"]], "set_args() (lammpsinputfile method)": [[206, "pymatgen.io.lammps.inputs.LammpsInputFile.set_args"]], "stages_names (lammpsinputfile property)": [[206, "pymatgen.io.lammps.inputs.LammpsInputFile.stages_names"]], "template_dir (lammpsrun attribute)": [[206, "pymatgen.io.lammps.inputs.LammpsRun.template_dir"]], "write_file() (lammpsinputfile method)": [[206, "pymatgen.io.lammps.inputs.LammpsInputFile.write_file"]], "write_inputs() (lammpsrun method)": [[206, "pymatgen.io.lammps.inputs.LammpsRun.write_inputs"]], "lammpsdump (class in pymatgen.io.lammps.outputs)": [[207, "pymatgen.io.lammps.outputs.LammpsDump"]], "as_dict() (lammpsdump method)": [[207, "pymatgen.io.lammps.outputs.LammpsDump.as_dict"]], "from_dict() (lammpsdump class method)": [[207, "pymatgen.io.lammps.outputs.LammpsDump.from_dict"]], "from_string() (lammpsdump class method)": [[207, "pymatgen.io.lammps.outputs.LammpsDump.from_string"]], "parse_lammps_dumps() (in module pymatgen.io.lammps.outputs)": [[207, "pymatgen.io.lammps.outputs.parse_lammps_dumps"]], "parse_lammps_log() (in module pymatgen.io.lammps.outputs)": [[207, "pymatgen.io.lammps.outputs.parse_lammps_log"]], "pymatgen.io.lammps.outputs": [[207, "module-pymatgen.io.lammps.outputs"]], "lammpsinputset (class in pymatgen.io.lammps.sets)": [[208, "pymatgen.io.lammps.sets.LammpsInputSet"]], "from_directory() (lammpsinputset class method)": [[208, "pymatgen.io.lammps.sets.LammpsInputSet.from_directory"]], "pymatgen.io.lammps.sets": [[208, "module-pymatgen.io.lammps.sets"]], "validate() (lammpsinputset method)": [[208, "pymatgen.io.lammps.sets.LammpsInputSet.validate"]], "lammpsrunner (class in pymatgen.io.lammps.utils)": [[209, "pymatgen.io.lammps.utils.LammpsRunner"]], "polymer (class in pymatgen.io.lammps.utils)": [[209, "pymatgen.io.lammps.utils.Polymer"]], "pymatgen.io.lammps.utils": [[209, "module-pymatgen.io.lammps.utils"]], "run() (lammpsrunner method)": [[209, "pymatgen.io.lammps.utils.LammpsRunner.run"]], "lmtocopl (class in pymatgen.io.lmto)": [[210, "pymatgen.io.lmto.LMTOCopl"]], "lmtoctrl (class in pymatgen.io.lmto)": [[210, "pymatgen.io.lmto.LMTOCtrl"]], "as_dict() (lmtoctrl method)": [[210, "pymatgen.io.lmto.LMTOCtrl.as_dict"]], "from_dict() (lmtoctrl class method)": [[210, "pymatgen.io.lmto.LMTOCtrl.from_dict"]], "from_file() (lmtoctrl class method)": [[210, "pymatgen.io.lmto.LMTOCtrl.from_file"]], "from_string() (lmtoctrl class method)": [[210, "pymatgen.io.lmto.LMTOCtrl.from_string"]], "get_string() (lmtoctrl method)": [[210, "pymatgen.io.lmto.LMTOCtrl.get_string"]], "pymatgen.io.lmto": [[210, "module-pymatgen.io.lmto"]], "write_file() (lmtoctrl method)": [[210, "pymatgen.io.lmto.LMTOCtrl.write_file"]], "pymatgen.io.lobster": [[211, "module-pymatgen.io.lobster"]], "availablekeywords (lobsterin attribute)": [[212, "pymatgen.io.lobster.inputs.Lobsterin.AVAILABLEKEYWORDS"]], "boolean_keywords (lobsterin attribute)": [[212, "pymatgen.io.lobster.inputs.Lobsterin.BOOLEAN_KEYWORDS"]], "float_keywords (lobsterin attribute)": [[212, "pymatgen.io.lobster.inputs.Lobsterin.FLOAT_KEYWORDS"]], "listkeywords (lobsterin attribute)": [[212, "pymatgen.io.lobster.inputs.Lobsterin.LISTKEYWORDS"]], "lobsterin (class in pymatgen.io.lobster.inputs)": [[212, "pymatgen.io.lobster.inputs.Lobsterin"]], "string_keywords (lobsterin attribute)": [[212, "pymatgen.io.lobster.inputs.Lobsterin.STRING_KEYWORDS"]], "as_dict() (lobsterin method)": [[212, "pymatgen.io.lobster.inputs.Lobsterin.as_dict"]], "diff() (lobsterin method)": [[212, "pymatgen.io.lobster.inputs.Lobsterin.diff"]], "from_dict() (lobsterin class method)": [[212, "pymatgen.io.lobster.inputs.Lobsterin.from_dict"]], "from_file() (lobsterin class method)": [[212, "pymatgen.io.lobster.inputs.Lobsterin.from_file"]], "get_all_possible_basis_combinations() (in module pymatgen.io.lobster.inputs)": [[212, "pymatgen.io.lobster.inputs.get_all_possible_basis_combinations"]], "get_all_possible_basis_functions() (lobsterin static method)": [[212, "pymatgen.io.lobster.inputs.Lobsterin.get_all_possible_basis_functions"]], "get_basis() (lobsterin static method)": [[212, "pymatgen.io.lobster.inputs.Lobsterin.get_basis"]], "pymatgen.io.lobster.inputs": [[212, "module-pymatgen.io.lobster.inputs"]], "standard_calculations_from_vasp_files() (lobsterin class method)": [[212, "pymatgen.io.lobster.inputs.Lobsterin.standard_calculations_from_vasp_files"]], "write_incar() (lobsterin method)": [[212, "pymatgen.io.lobster.inputs.Lobsterin.write_INCAR"]], "write_kpoints() (lobsterin static method)": [[212, "pymatgen.io.lobster.inputs.Lobsterin.write_KPOINTS"]], "write_poscar_with_standard_primitive() (lobsterin static method)": [[212, "pymatgen.io.lobster.inputs.Lobsterin.write_POSCAR_with_standard_primitive"]], "write_lobsterin() (lobsterin method)": [[212, "pymatgen.io.lobster.inputs.Lobsterin.write_lobsterin"]], "icohpneighborsinfo (class in pymatgen.io.lobster.lobsterenv)": [[213, "pymatgen.io.lobster.lobsterenv.ICOHPNeighborsInfo"]], "lobsterlightstructureenvironments (class in pymatgen.io.lobster.lobsterenv)": [[213, "pymatgen.io.lobster.lobsterenv.LobsterLightStructureEnvironments"]], "lobsterneighbors (class in pymatgen.io.lobster.lobsterenv)": [[213, "pymatgen.io.lobster.lobsterenv.LobsterNeighbors"]], "anion_types (lobsterneighbors property)": [[213, "pymatgen.io.lobster.lobsterenv.LobsterNeighbors.anion_types"]], "as_dict() (lobsterlightstructureenvironments method)": [[213, "pymatgen.io.lobster.lobsterenv.LobsterLightStructureEnvironments.as_dict"]], "atoms (icohpneighborsinfo attribute)": [[213, "pymatgen.io.lobster.lobsterenv.ICOHPNeighborsInfo.atoms"]], "central_isites (icohpneighborsinfo attribute)": [[213, "pymatgen.io.lobster.lobsterenv.ICOHPNeighborsInfo.central_isites"]], "from_lobster() (lobsterlightstructureenvironments class method)": [[213, "pymatgen.io.lobster.lobsterenv.LobsterLightStructureEnvironments.from_Lobster"]], "get_anion_types() (lobsterneighbors method)": [[213, "pymatgen.io.lobster.lobsterenv.LobsterNeighbors.get_anion_types"]], "get_info_cohps_to_neighbors() (lobsterneighbors method)": [[213, "pymatgen.io.lobster.lobsterenv.LobsterNeighbors.get_info_cohps_to_neighbors"]], "get_info_icohps_between_neighbors() (lobsterneighbors method)": [[213, "pymatgen.io.lobster.lobsterenv.LobsterNeighbors.get_info_icohps_between_neighbors"]], "get_info_icohps_to_neighbors() (lobsterneighbors method)": [[213, "pymatgen.io.lobster.lobsterenv.LobsterNeighbors.get_info_icohps_to_neighbors"]], "get_light_structure_environment() (lobsterneighbors method)": [[213, "pymatgen.io.lobster.lobsterenv.LobsterNeighbors.get_light_structure_environment"]], "get_nn_info() (lobsterneighbors method)": [[213, "pymatgen.io.lobster.lobsterenv.LobsterNeighbors.get_nn_info"]], "labels (icohpneighborsinfo attribute)": [[213, "pymatgen.io.lobster.lobsterenv.ICOHPNeighborsInfo.labels"]], "list_icohps (icohpneighborsinfo attribute)": [[213, "pymatgen.io.lobster.lobsterenv.ICOHPNeighborsInfo.list_icohps"]], "molecules_allowed (lobsterneighbors property)": [[213, "pymatgen.io.lobster.lobsterenv.LobsterNeighbors.molecules_allowed"]], "n_bonds (icohpneighborsinfo attribute)": [[213, "pymatgen.io.lobster.lobsterenv.ICOHPNeighborsInfo.n_bonds"]], "plot_cohps_of_neighbors() (lobsterneighbors method)": [[213, "pymatgen.io.lobster.lobsterenv.LobsterNeighbors.plot_cohps_of_neighbors"]], "pymatgen.io.lobster.lobsterenv": [[213, "module-pymatgen.io.lobster.lobsterenv"]], "structures_allowed (lobsterneighbors property)": [[213, "pymatgen.io.lobster.lobsterenv.LobsterNeighbors.structures_allowed"]], "total_icohp (icohpneighborsinfo attribute)": [[213, "pymatgen.io.lobster.lobsterenv.ICOHPNeighborsInfo.total_icohp"]], "uniquely_determines_coordination_environments (lobsterlightstructureenvironments property)": [[213, "pymatgen.io.lobster.lobsterenv.LobsterLightStructureEnvironments.uniquely_determines_coordination_environments"]], "bandoverlaps (class in pymatgen.io.lobster.outputs)": [[214, "pymatgen.io.lobster.outputs.Bandoverlaps"]], "charge (class in pymatgen.io.lobster.outputs)": [[214, "pymatgen.io.lobster.outputs.Charge"]], "cohpcar (class in pymatgen.io.lobster.outputs)": [[214, "pymatgen.io.lobster.outputs.Cohpcar"]], "doscar (class in pymatgen.io.lobster.outputs)": [[214, "pymatgen.io.lobster.outputs.Doscar"]], "fatband (class in pymatgen.io.lobster.outputs)": [[214, "pymatgen.io.lobster.outputs.Fatband"]], "grosspop (class in pymatgen.io.lobster.outputs)": [[214, "pymatgen.io.lobster.outputs.Grosspop"]], "icohplist (class in pymatgen.io.lobster.outputs)": [[214, "pymatgen.io.lobster.outputs.Icohplist"]], "lobsterout (class in pymatgen.io.lobster.outputs)": [[214, "pymatgen.io.lobster.outputs.Lobsterout"]], "madelungenergies (class in pymatgen.io.lobster.outputs)": [[214, "pymatgen.io.lobster.outputs.MadelungEnergies"]], "sitepotential (class in pymatgen.io.lobster.outputs)": [[214, "pymatgen.io.lobster.outputs.SitePotential"]], "wavefunction (class in pymatgen.io.lobster.outputs)": [[214, "pymatgen.io.lobster.outputs.Wavefunction"]], "completedos (doscar attribute)": [[214, "pymatgen.io.lobster.outputs.Doscar.completedos"]], "completedos (doscar property)": [[214, "id2"]], "energies (doscar attribute)": [[214, "id0"], [214, "id1"], [214, "pymatgen.io.lobster.outputs.Doscar.energies"]], "energies (doscar property)": [[214, "id3"]], "get_bandstructure() (fatband method)": [[214, "pymatgen.io.lobster.outputs.Fatband.get_bandstructure"]], "get_doc() (lobsterout method)": [[214, "pymatgen.io.lobster.outputs.Lobsterout.get_doc"]], "get_orb_from_str() (in module pymatgen.io.lobster.outputs)": [[214, "pymatgen.io.lobster.outputs.get_orb_from_str"]], "get_structure_with_charges() (charge method)": [[214, "pymatgen.io.lobster.outputs.Charge.get_structure_with_charges"]], "get_structure_with_site_potentials() (sitepotential method)": [[214, "pymatgen.io.lobster.outputs.SitePotential.get_structure_with_site_potentials"]], "get_structure_with_total_grosspop() (grosspop method)": [[214, "pymatgen.io.lobster.outputs.Grosspop.get_structure_with_total_grosspop"]], "get_volumetricdata_density() (wavefunction method)": [[214, "pymatgen.io.lobster.outputs.Wavefunction.get_volumetricdata_density"]], "get_volumetricdata_imaginary() (wavefunction method)": [[214, "pymatgen.io.lobster.outputs.Wavefunction.get_volumetricdata_imaginary"]], "get_volumetricdata_real() (wavefunction method)": [[214, "pymatgen.io.lobster.outputs.Wavefunction.get_volumetricdata_real"]], "has_good_quality_check_occupied_bands() (bandoverlaps method)": [[214, "pymatgen.io.lobster.outputs.Bandoverlaps.has_good_quality_check_occupied_bands"]], "has_good_quality_maxdeviation() (bandoverlaps method)": [[214, "pymatgen.io.lobster.outputs.Bandoverlaps.has_good_quality_maxDeviation"]], "icohpcollection (icohplist property)": [[214, "pymatgen.io.lobster.outputs.Icohplist.icohpcollection"]], "icohplist (icohplist property)": [[214, "pymatgen.io.lobster.outputs.Icohplist.icohplist"]], "is_spin_polarized (doscar attribute)": [[214, "pymatgen.io.lobster.outputs.Doscar.is_spin_polarized"]], "is_spin_polarized (doscar property)": [[214, "id4"]], "itdensities (doscar property)": [[214, "pymatgen.io.lobster.outputs.Doscar.itdensities"]], "pdos (doscar attribute)": [[214, "pymatgen.io.lobster.outputs.Doscar.pdos"]], "pdos (doscar property)": [[214, "id5"]], "pymatgen.io.lobster.outputs": [[214, "module-pymatgen.io.lobster.outputs"]], "set_volumetric_data() (wavefunction method)": [[214, "pymatgen.io.lobster.outputs.Wavefunction.set_volumetric_data"]], "tdensities (doscar attribute)": [[214, "pymatgen.io.lobster.outputs.Doscar.tdensities"]], "tdensities (doscar property)": [[214, "id6"]], "tdos (doscar attribute)": [[214, "pymatgen.io.lobster.outputs.Doscar.tdos"]], "tdos (doscar property)": [[214, "id7"]], "write_file() (wavefunction method)": [[214, "pymatgen.io.lobster.outputs.Wavefunction.write_file"]], "nwinput (class in pymatgen.io.nwchem)": [[215, "pymatgen.io.nwchem.NwInput"]], "nwinputerror": [[215, "pymatgen.io.nwchem.NwInputError"]], "nwoutput (class in pymatgen.io.nwchem)": [[215, "pymatgen.io.nwchem.NwOutput"]], "nwtask (class in pymatgen.io.nwchem)": [[215, "pymatgen.io.nwchem.NwTask"]], "as_dict() (nwinput method)": [[215, "pymatgen.io.nwchem.NwInput.as_dict"]], "as_dict() (nwtask method)": [[215, "pymatgen.io.nwchem.NwTask.as_dict"]], "dft_task() (nwtask class method)": [[215, "pymatgen.io.nwchem.NwTask.dft_task"]], "esp_task() (nwtask class method)": [[215, "pymatgen.io.nwchem.NwTask.esp_task"]], "from_dict() (nwinput class method)": [[215, "pymatgen.io.nwchem.NwInput.from_dict"]], "from_dict() (nwtask class method)": [[215, "pymatgen.io.nwchem.NwTask.from_dict"]], "from_file() (nwinput class method)": [[215, "pymatgen.io.nwchem.NwInput.from_file"]], "from_molecule() (nwtask class method)": [[215, "pymatgen.io.nwchem.NwTask.from_molecule"]], "from_string() (nwinput class method)": [[215, "pymatgen.io.nwchem.NwInput.from_string"]], "get_excitation_spectrum() (nwoutput method)": [[215, "pymatgen.io.nwchem.NwOutput.get_excitation_spectrum"]], "molecule (nwinput property)": [[215, "pymatgen.io.nwchem.NwInput.molecule"]], "operations (nwtask attribute)": [[215, "pymatgen.io.nwchem.NwTask.operations"]], "parse_tddft() (nwoutput method)": [[215, "pymatgen.io.nwchem.NwOutput.parse_tddft"]], "pymatgen.io.nwchem": [[215, "module-pymatgen.io.nwchem"]], "theories (nwtask attribute)": [[215, "pymatgen.io.nwchem.NwTask.theories"]], "write_file() (nwinput method)": [[215, "pymatgen.io.nwchem.NwInput.write_file"]], "packmolboxgen (class in pymatgen.io.packmol)": [[216, "pymatgen.io.packmol.PackmolBoxGen"]], "packmolset (class in pymatgen.io.packmol)": [[216, "pymatgen.io.packmol.PackmolSet"]], "from_directory() (packmolset class method)": [[216, "pymatgen.io.packmol.PackmolSet.from_directory"]], "get_input_set() (packmolboxgen method)": [[216, "pymatgen.io.packmol.PackmolBoxGen.get_input_set"]], "pymatgen.io.packmol": [[216, "module-pymatgen.io.packmol"]], "run() (packmolset method)": [[216, "pymatgen.io.packmol.PackmolSet.run"]], "eigvec_to_eigdispl() (in module pymatgen.io.phonopy)": [[217, "pymatgen.io.phonopy.eigvec_to_eigdispl"]], "get_complete_ph_dos() (in module pymatgen.io.phonopy)": [[217, "pymatgen.io.phonopy.get_complete_ph_dos"]], "get_displaced_structures() (in module pymatgen.io.phonopy)": [[217, "pymatgen.io.phonopy.get_displaced_structures"]], "get_gruneisen_ph_bs_symm_line() (in module pymatgen.io.phonopy)": [[217, "pymatgen.io.phonopy.get_gruneisen_ph_bs_symm_line"]], "get_gruneisenparameter() (in module pymatgen.io.phonopy)": [[217, "pymatgen.io.phonopy.get_gruneisenparameter"]], "get_gs_ph_bs_symm_line_from_dict() (in module pymatgen.io.phonopy)": [[217, "pymatgen.io.phonopy.get_gs_ph_bs_symm_line_from_dict"]], "get_ph_bs_symm_line() (in module pymatgen.io.phonopy)": [[217, "pymatgen.io.phonopy.get_ph_bs_symm_line"]], "get_ph_bs_symm_line_from_dict() (in module pymatgen.io.phonopy)": [[217, "pymatgen.io.phonopy.get_ph_bs_symm_line_from_dict"]], "get_ph_dos() (in module pymatgen.io.phonopy)": [[217, "pymatgen.io.phonopy.get_ph_dos"]], "get_phonon_band_structure_from_fc() (in module pymatgen.io.phonopy)": [[217, "pymatgen.io.phonopy.get_phonon_band_structure_from_fc"]], "get_phonon_band_structure_symm_line_from_fc() (in module pymatgen.io.phonopy)": [[217, "pymatgen.io.phonopy.get_phonon_band_structure_symm_line_from_fc"]], "get_phonon_dos_from_fc() (in module pymatgen.io.phonopy)": [[217, "pymatgen.io.phonopy.get_phonon_dos_from_fc"]], "get_phonopy_structure() (in module pymatgen.io.phonopy)": [[217, "pymatgen.io.phonopy.get_phonopy_structure"]], "get_pmg_structure() (in module pymatgen.io.phonopy)": [[217, "pymatgen.io.phonopy.get_pmg_structure"]], "get_structure_from_dict() (in module pymatgen.io.phonopy)": [[217, "pymatgen.io.phonopy.get_structure_from_dict"]], "get_thermal_displacement_matrices() (in module pymatgen.io.phonopy)": [[217, "pymatgen.io.phonopy.get_thermal_displacement_matrices"]], "pymatgen.io.phonopy": [[217, "module-pymatgen.io.phonopy"]], "prismatic (class in pymatgen.io.prismatic)": [[218, "pymatgen.io.prismatic.Prismatic"]], "pymatgen.io.prismatic": [[218, "module-pymatgen.io.prismatic"]], "to_string() (prismatic method)": [[218, "pymatgen.io.prismatic.Prismatic.to_string"]], "pwinput (class in pymatgen.io.pwscf)": [[219, "pymatgen.io.pwscf.PWInput"]], "pwinputerror": [[219, "pymatgen.io.pwscf.PWInputError"]], "pwoutput (class in pymatgen.io.pwscf)": [[219, "pymatgen.io.pwscf.PWOutput"]], "as_dict() (pwinput method)": [[219, "pymatgen.io.pwscf.PWInput.as_dict"]], "final_energy (pwoutput property)": [[219, "pymatgen.io.pwscf.PWOutput.final_energy"]], "from_dict() (pwinput class method)": [[219, "pymatgen.io.pwscf.PWInput.from_dict"]], "from_file() (pwinput static method)": [[219, "pymatgen.io.pwscf.PWInput.from_file"]], "from_string() (pwinput static method)": [[219, "pymatgen.io.pwscf.PWInput.from_string"]], "get_celldm() (pwoutput method)": [[219, "pymatgen.io.pwscf.PWOutput.get_celldm"]], "lattice_type (pwoutput property)": [[219, "pymatgen.io.pwscf.PWOutput.lattice_type"]], "patterns (pwoutput attribute)": [[219, "pymatgen.io.pwscf.PWOutput.patterns"]], "proc_val() (pwinput static method)": [[219, "pymatgen.io.pwscf.PWInput.proc_val"]], "pymatgen.io.pwscf": [[219, "module-pymatgen.io.pwscf"]], "read_pattern() (pwoutput method)": [[219, "pymatgen.io.pwscf.PWOutput.read_pattern"]], "write_file() (pwinput method)": [[219, "pymatgen.io.pwscf.PWInput.write_file"]], "pymatgen.io.qchem": [[220, "module-pymatgen.io.qchem"]], "qcinput (class in pymatgen.io.qchem.inputs)": [[221, "pymatgen.io.qchem.inputs.QCInput"]], "almo_template() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.almo_template"]], "cdft_template() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.cdft_template"]], "find_sections() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.find_sections"]], "from_file() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.from_file"]], "from_multi_jobs_file() (qcinput class method)": [[221, "pymatgen.io.qchem.inputs.QCInput.from_multi_jobs_file"]], "from_string() (qcinput class method)": [[221, "pymatgen.io.qchem.inputs.QCInput.from_string"]], "geom_opt_template() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.geom_opt_template"]], "get_string() (qcinput method)": [[221, "pymatgen.io.qchem.inputs.QCInput.get_string"]], "molecule_template() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.molecule_template"]], "multi_job_string() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.multi_job_string"]], "nbo_template() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.nbo_template"]], "opt_template() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.opt_template"]], "pcm_nonels_template() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.pcm_nonels_template"]], "pcm_template() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.pcm_template"]], "plots_template() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.plots_template"]], "pymatgen.io.qchem.inputs": [[221, "module-pymatgen.io.qchem.inputs"]], "read_almo() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.read_almo"]], "read_cdft() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.read_cdft"]], "read_geom_opt() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.read_geom_opt"]], "read_molecule() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.read_molecule"]], "read_nbo() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.read_nbo"]], "read_opt() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.read_opt"]], "read_pcm() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.read_pcm"]], "read_pcm_nonels() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.read_pcm_nonels"]], "read_plots() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.read_plots"]], "read_rem() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.read_rem"]], "read_scan() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.read_scan"]], "read_smx() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.read_smx"]], "read_solvent() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.read_solvent"]], "read_svp() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.read_svp"]], "read_vdw() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.read_vdw"]], "rem_template() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.rem_template"]], "scan_template() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.scan_template"]], "smx_template() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.smx_template"]], "solvent_template() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.solvent_template"]], "svp_template() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.svp_template"]], "van_der_waals_template() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.van_der_waals_template"]], "write_multi_job_file() (qcinput static method)": [[221, "pymatgen.io.qchem.inputs.QCInput.write_multi_job_file"]], "qcoutput (class in pymatgen.io.qchem.outputs)": [[222, "pymatgen.io.qchem.outputs.QCOutput"]], "as_dict() (qcoutput method)": [[222, "pymatgen.io.qchem.outputs.QCOutput.as_dict"]], "check_for_structure_changes() (in module pymatgen.io.qchem.outputs)": [[222, "pymatgen.io.qchem.outputs.check_for_structure_changes"]], "get_percentage() (in module pymatgen.io.qchem.outputs)": [[222, "pymatgen.io.qchem.outputs.get_percentage"]], "jump_to_header() (in module pymatgen.io.qchem.outputs)": [[222, "pymatgen.io.qchem.outputs.jump_to_header"]], "multiple_outputs_from_file() (qcoutput static method)": [[222, "pymatgen.io.qchem.outputs.QCOutput.multiple_outputs_from_file"]], "nbo_parser() (in module pymatgen.io.qchem.outputs)": [[222, "pymatgen.io.qchem.outputs.nbo_parser"]], "parse_hybridization_character() (in module pymatgen.io.qchem.outputs)": [[222, "pymatgen.io.qchem.outputs.parse_hybridization_character"]], "parse_hyperbonds() (in module pymatgen.io.qchem.outputs)": [[222, "pymatgen.io.qchem.outputs.parse_hyperbonds"]], "parse_natural_populations() (in module pymatgen.io.qchem.outputs)": [[222, "pymatgen.io.qchem.outputs.parse_natural_populations"]], "parse_perturbation_energy() (in module pymatgen.io.qchem.outputs)": [[222, "pymatgen.io.qchem.outputs.parse_perturbation_energy"]], "pymatgen.io.qchem.outputs": [[222, "module-pymatgen.io.qchem.outputs"]], "z_int() (in module pymatgen.io.qchem.outputs)": [[222, "pymatgen.io.qchem.outputs.z_int"]], "forceset (class in pymatgen.io.qchem.sets)": [[223, "pymatgen.io.qchem.sets.ForceSet"]], "freqset (class in pymatgen.io.qchem.sets)": [[223, "pymatgen.io.qchem.sets.FreqSet"]], "optset (class in pymatgen.io.qchem.sets)": [[223, "pymatgen.io.qchem.sets.OptSet"]], "pesscanset (class in pymatgen.io.qchem.sets)": [[223, "pymatgen.io.qchem.sets.PESScanSet"]], "qchemdictset (class in pymatgen.io.qchem.sets)": [[223, "pymatgen.io.qchem.sets.QChemDictSet"]], "singlepointset (class in pymatgen.io.qchem.sets)": [[223, "pymatgen.io.qchem.sets.SinglePointSet"]], "transitionstateset (class in pymatgen.io.qchem.sets)": [[223, "pymatgen.io.qchem.sets.TransitionStateSet"]], "pymatgen.io.qchem.sets": [[223, "module-pymatgen.io.qchem.sets"]], "write() (qchemdictset method)": [[223, "pymatgen.io.qchem.sets.QChemDictSet.write"]], "lower_and_check_unique() (in module pymatgen.io.qchem.utils)": [[224, "pymatgen.io.qchem.utils.lower_and_check_unique"]], "process_parsed_hess() (in module pymatgen.io.qchem.utils)": [[224, "pymatgen.io.qchem.utils.process_parsed_HESS"]], "process_parsed_coords() (in module pymatgen.io.qchem.utils)": [[224, "pymatgen.io.qchem.utils.process_parsed_coords"]], "process_parsed_fock_matrix() (in module pymatgen.io.qchem.utils)": [[224, "pymatgen.io.qchem.utils.process_parsed_fock_matrix"]], "pymatgen.io.qchem.utils": [[224, "module-pymatgen.io.qchem.utils"]], "read_matrix_pattern() (in module pymatgen.io.qchem.utils)": [[224, "pymatgen.io.qchem.utils.read_matrix_pattern"]], "read_pattern() (in module pymatgen.io.qchem.utils)": [[224, "pymatgen.io.qchem.utils.read_pattern"]], "read_table_pattern() (in module pymatgen.io.qchem.utils)": [[224, "pymatgen.io.qchem.utils.read_table_pattern"]], "airssprovider (class in pymatgen.io.res)": [[225, "pymatgen.io.res.AirssProvider"]], "parseerror": [[225, "pymatgen.io.res.ParseError"]], "reserror": [[225, "pymatgen.io.res.ResError"]], "resio (class in pymatgen.io.res)": [[225, "pymatgen.io.res.ResIO"]], "resprovider (class in pymatgen.io.res)": [[225, "pymatgen.io.res.ResProvider"]], "reswriter (class in pymatgen.io.res)": [[225, "pymatgen.io.res.ResWriter"]], "appearances (airssprovider property)": [[225, "pymatgen.io.res.AirssProvider.appearances"]], "as_dict() (airssprovider method)": [[225, "pymatgen.io.res.AirssProvider.as_dict"]], "energy (airssprovider property)": [[225, "pymatgen.io.res.AirssProvider.energy"]], "entry (airssprovider property)": [[225, "pymatgen.io.res.AirssProvider.entry"]], "entry_from_file() (resio class method)": [[225, "pymatgen.io.res.ResIO.entry_from_file"]], "entry_from_str() (resio class method)": [[225, "pymatgen.io.res.ResIO.entry_from_str"]], "entry_to_file() (resio class method)": [[225, "pymatgen.io.res.ResIO.entry_to_file"]], "entry_to_str() (resio class method)": [[225, "pymatgen.io.res.ResIO.entry_to_str"]], "from_file() (airssprovider class method)": [[225, "pymatgen.io.res.AirssProvider.from_file"]], "from_file() (resprovider class method)": [[225, "pymatgen.io.res.ResProvider.from_file"]], "from_str() (airssprovider class method)": [[225, "pymatgen.io.res.AirssProvider.from_str"]], "from_str() (resprovider class method)": [[225, "pymatgen.io.res.ResProvider.from_str"]], "get_airss_version() (airssprovider method)": [[225, "pymatgen.io.res.AirssProvider.get_airss_version"]], "get_castep_version() (airssprovider method)": [[225, "pymatgen.io.res.AirssProvider.get_castep_version"]], "get_cut_grid_gmax_fsbc() (airssprovider method)": [[225, "pymatgen.io.res.AirssProvider.get_cut_grid_gmax_fsbc"]], "get_func_rel_disp() (airssprovider method)": [[225, "pymatgen.io.res.AirssProvider.get_func_rel_disp"]], "get_mpgrid_offset_nkpts_spacing() (airssprovider method)": [[225, "pymatgen.io.res.AirssProvider.get_mpgrid_offset_nkpts_spacing"]], "get_pspots() (airssprovider method)": [[225, "pymatgen.io.res.AirssProvider.get_pspots"]], "get_run_start_info() (airssprovider method)": [[225, "pymatgen.io.res.AirssProvider.get_run_start_info"]], "integrated_absolute_spin_density (airssprovider property)": [[225, "pymatgen.io.res.AirssProvider.integrated_absolute_spin_density"]], "integrated_spin_density (airssprovider property)": [[225, "pymatgen.io.res.AirssProvider.integrated_spin_density"]], "lattice (resprovider property)": [[225, "pymatgen.io.res.ResProvider.lattice"]], "pressure (airssprovider property)": [[225, "pymatgen.io.res.AirssProvider.pressure"]], "pymatgen.io.res": [[225, "module-pymatgen.io.res"]], "rems (resprovider property)": [[225, "pymatgen.io.res.ResProvider.rems"]], "seed (airssprovider property)": [[225, "pymatgen.io.res.AirssProvider.seed"]], "sites (resprovider property)": [[225, "pymatgen.io.res.ResProvider.sites"]], "spacegroup_label (airssprovider property)": [[225, "pymatgen.io.res.AirssProvider.spacegroup_label"]], "string (reswriter property)": [[225, "pymatgen.io.res.ResWriter.string"]], "structure (resprovider property)": [[225, "pymatgen.io.res.ResProvider.structure"]], "structure_from_file() (resio class method)": [[225, "pymatgen.io.res.ResIO.structure_from_file"]], "structure_from_str() (resio class method)": [[225, "pymatgen.io.res.ResIO.structure_from_str"]], "structure_to_file() (resio class method)": [[225, "pymatgen.io.res.ResIO.structure_to_file"]], "structure_to_str() (resio class method)": [[225, "pymatgen.io.res.ResIO.structure_to_str"]], "volume (airssprovider property)": [[225, "pymatgen.io.res.AirssProvider.volume"]], "write() (reswriter method)": [[225, "pymatgen.io.res.ResWriter.write"]], "control (class in pymatgen.io.shengbte)": [[226, "pymatgen.io.shengbte.Control"]], "allocations_keys (control attribute)": [[226, "pymatgen.io.shengbte.Control.allocations_keys"]], "as_dict() (control method)": [[226, "pymatgen.io.shengbte.Control.as_dict"]], "crystal_keys (control attribute)": [[226, "pymatgen.io.shengbte.Control.crystal_keys"]], "data_keys (control attribute)": [[226, "pymatgen.io.shengbte.Control.data_keys"]], "flags_keys (control attribute)": [[226, "pymatgen.io.shengbte.Control.flags_keys"]], "from_dict() (control class method)": [[226, "pymatgen.io.shengbte.Control.from_dict"]], "from_file() (control class method)": [[226, "pymatgen.io.shengbte.Control.from_file"]], "from_structure() (control class method)": [[226, "pymatgen.io.shengbte.Control.from_structure"]], "get_structure() (control method)": [[226, "pymatgen.io.shengbte.Control.get_structure"]], "params_keys (control attribute)": [[226, "pymatgen.io.shengbte.Control.params_keys"]], "pymatgen.io.shengbte": [[226, "module-pymatgen.io.shengbte"]], "required_params (control attribute)": [[226, "pymatgen.io.shengbte.Control.required_params"]], "to_file() (control method)": [[226, "pymatgen.io.shengbte.Control.to_file"]], "templateinputgen (class in pymatgen.io.template)": [[227, "pymatgen.io.template.TemplateInputGen"]], "get_input_set() (templateinputgen method)": [[227, "pymatgen.io.template.TemplateInputGen.get_input_set"]], "pymatgen.io.template": [[227, "module-pymatgen.io.template"]], "pymatgen.io.vasp": [[228, "module-pymatgen.io.vasp"]], "vaspdoc (class in pymatgen.io.vasp.help)": [[229, "pymatgen.io.vasp.help.VaspDoc"]], "get_help() (vaspdoc class method)": [[229, "pymatgen.io.vasp.help.VaspDoc.get_help"]], "get_incar_tags() (vaspdoc class method)": [[229, "pymatgen.io.vasp.help.VaspDoc.get_incar_tags"]], "print_help() (vaspdoc method)": [[229, "pymatgen.io.vasp.help.VaspDoc.print_help"]], "print_jupyter_help() (vaspdoc method)": [[229, "pymatgen.io.vasp.help.VaspDoc.print_jupyter_help"]], "pymatgen.io.vasp.help": [[229, "module-pymatgen.io.vasp.help"]], "automatic (kpoints_supported_modes attribute)": [[230, "pymatgen.io.vasp.inputs.Kpoints_supported_modes.Automatic"]], "badincarwarning": [[230, "pymatgen.io.vasp.inputs.BadIncarWarning"]], "cartesian (kpoints_supported_modes attribute)": [[230, "pymatgen.io.vasp.inputs.Kpoints_supported_modes.Cartesian"]], "e (orbital attribute)": [[230, "pymatgen.io.vasp.inputs.Orbital.E"]], "e (orbitaldescription attribute)": [[230, "pymatgen.io.vasp.inputs.OrbitalDescription.E"]], "functional_choices (potcar attribute)": [[230, "pymatgen.io.vasp.inputs.Potcar.FUNCTIONAL_CHOICES"]], "gamma (kpoints_supported_modes attribute)": [[230, "pymatgen.io.vasp.inputs.Kpoints_supported_modes.Gamma"]], "incar (class in pymatgen.io.vasp.inputs)": [[230, "pymatgen.io.vasp.inputs.Incar"]], "kpoints (class in pymatgen.io.vasp.inputs)": [[230, "pymatgen.io.vasp.inputs.Kpoints"]], "kpoints_supported_modes (class in pymatgen.io.vasp.inputs)": [[230, "pymatgen.io.vasp.inputs.Kpoints_supported_modes"]], "line_mode (kpoints_supported_modes attribute)": [[230, "pymatgen.io.vasp.inputs.Kpoints_supported_modes.Line_mode"]], "monkhorst (kpoints_supported_modes attribute)": [[230, "pymatgen.io.vasp.inputs.Kpoints_supported_modes.Monkhorst"]], "orbital (class in pymatgen.io.vasp.inputs)": [[230, "pymatgen.io.vasp.inputs.Orbital"]], "orbitaldescription (class in pymatgen.io.vasp.inputs)": [[230, "pymatgen.io.vasp.inputs.OrbitalDescription"]], "poscar (class in pymatgen.io.vasp.inputs)": [[230, "pymatgen.io.vasp.inputs.Poscar"]], "potcar (class in pymatgen.io.vasp.inputs)": [[230, "pymatgen.io.vasp.inputs.Potcar"]], "potcarsingle (class in pymatgen.io.vasp.inputs)": [[230, "pymatgen.io.vasp.inputs.PotcarSingle"]], "rcut (orbitaldescription attribute)": [[230, "pymatgen.io.vasp.inputs.OrbitalDescription.Rcut"]], "rcut2 (orbitaldescription attribute)": [[230, "pymatgen.io.vasp.inputs.OrbitalDescription.Rcut2"]], "reciprocal (kpoints_supported_modes attribute)": [[230, "pymatgen.io.vasp.inputs.Kpoints_supported_modes.Reciprocal"]], "type (orbitaldescription attribute)": [[230, "pymatgen.io.vasp.inputs.OrbitalDescription.Type"]], "type2 (orbitaldescription attribute)": [[230, "pymatgen.io.vasp.inputs.OrbitalDescription.Type2"]], "unknownpotcarwarning": [[230, "pymatgen.io.vasp.inputs.UnknownPotcarWarning"]], "vaspinput (class in pymatgen.io.vasp.inputs)": [[230, "pymatgen.io.vasp.inputs.VaspInput"]], "as_dict() (incar method)": [[230, "pymatgen.io.vasp.inputs.Incar.as_dict"]], "as_dict() (kpoints method)": [[230, "pymatgen.io.vasp.inputs.Kpoints.as_dict"]], "as_dict() (poscar method)": [[230, "pymatgen.io.vasp.inputs.Poscar.as_dict"]], "as_dict() (potcar method)": [[230, "pymatgen.io.vasp.inputs.Potcar.as_dict"]], "as_dict() (vaspinput method)": [[230, "pymatgen.io.vasp.inputs.VaspInput.as_dict"]], "atomic_no (potcarsingle property)": [[230, "pymatgen.io.vasp.inputs.PotcarSingle.atomic_no"]], "automatic() (kpoints static method)": [[230, "pymatgen.io.vasp.inputs.Kpoints.automatic"]], "automatic_density() (kpoints static method)": [[230, "pymatgen.io.vasp.inputs.Kpoints.automatic_density"]], "automatic_density_by_lengths() (kpoints static method)": [[230, "pymatgen.io.vasp.inputs.Kpoints.automatic_density_by_lengths"]], "automatic_density_by_vol() (kpoints static method)": [[230, "pymatgen.io.vasp.inputs.Kpoints.automatic_density_by_vol"]], "automatic_gamma_density() (kpoints static method)": [[230, "pymatgen.io.vasp.inputs.Kpoints.automatic_gamma_density"]], "automatic_linemode() (kpoints static method)": [[230, "pymatgen.io.vasp.inputs.Kpoints.automatic_linemode"]], "check_params() (incar method)": [[230, "pymatgen.io.vasp.inputs.Incar.check_params"]], "comment (poscar attribute)": [[230, "pymatgen.io.vasp.inputs.Poscar.comment"]], "data (potcarsingle attribute)": [[230, "pymatgen.io.vasp.inputs.PotcarSingle.data"]], "diff() (incar method)": [[230, "pymatgen.io.vasp.inputs.Incar.diff"]], "electron_configuration (potcarsingle property)": [[230, "pymatgen.io.vasp.inputs.PotcarSingle.electron_configuration"]], "element (potcarsingle property)": [[230, "pymatgen.io.vasp.inputs.PotcarSingle.element"]], "from_dict() (incar class method)": [[230, "pymatgen.io.vasp.inputs.Incar.from_dict"]], "from_dict() (kpoints class method)": [[230, "pymatgen.io.vasp.inputs.Kpoints.from_dict"]], "from_dict() (poscar class method)": [[230, "pymatgen.io.vasp.inputs.Poscar.from_dict"]], "from_dict() (potcar class method)": [[230, "pymatgen.io.vasp.inputs.Potcar.from_dict"]], "from_dict() (vaspinput class method)": [[230, "pymatgen.io.vasp.inputs.VaspInput.from_dict"]], "from_directory() (vaspinput static method)": [[230, "pymatgen.io.vasp.inputs.VaspInput.from_directory"]], "from_file() (incar static method)": [[230, "pymatgen.io.vasp.inputs.Incar.from_file"]], "from_file() (kpoints static method)": [[230, "pymatgen.io.vasp.inputs.Kpoints.from_file"]], "from_file() (poscar static method)": [[230, "pymatgen.io.vasp.inputs.Poscar.from_file"]], "from_file() (potcar static method)": [[230, "pymatgen.io.vasp.inputs.Potcar.from_file"]], "from_file() (potcarsingle static method)": [[230, "pymatgen.io.vasp.inputs.PotcarSingle.from_file"]], "from_string() (incar static method)": [[230, "pymatgen.io.vasp.inputs.Incar.from_string"]], "from_string() (kpoints static method)": [[230, "pymatgen.io.vasp.inputs.Kpoints.from_string"]], "from_string() (kpoints_supported_modes static method)": [[230, "pymatgen.io.vasp.inputs.Kpoints_supported_modes.from_string"]], "from_string() (poscar static method)": [[230, "pymatgen.io.vasp.inputs.Poscar.from_string"]], "from_symbol_and_functional() (potcarsingle static method)": [[230, "pymatgen.io.vasp.inputs.PotcarSingle.from_symbol_and_functional"]], "functional (potcarsingle property)": [[230, "pymatgen.io.vasp.inputs.PotcarSingle.functional"]], "functional_class (potcarsingle property)": [[230, "pymatgen.io.vasp.inputs.PotcarSingle.functional_class"]], "functional_dir (potcarsingle attribute)": [[230, "pymatgen.io.vasp.inputs.PotcarSingle.functional_dir"]], "functional_tags (potcarsingle attribute)": [[230, "pymatgen.io.vasp.inputs.PotcarSingle.functional_tags"]], "gamma_automatic() (kpoints static method)": [[230, "pymatgen.io.vasp.inputs.Kpoints.gamma_automatic"]], "get_potcar_file_hash() (potcarsingle method)": [[230, "pymatgen.io.vasp.inputs.PotcarSingle.get_potcar_file_hash"]], "get_potcar_hash() (potcarsingle method)": [[230, "pymatgen.io.vasp.inputs.PotcarSingle.get_potcar_hash"]], "get_sha256_file_hash() (potcarsingle method)": [[230, "pymatgen.io.vasp.inputs.PotcarSingle.get_sha256_file_hash"]], "get_string() (incar method)": [[230, "pymatgen.io.vasp.inputs.Incar.get_string"]], "get_string() (poscar method)": [[230, "pymatgen.io.vasp.inputs.Poscar.get_string"]], "identify_potcar() (potcarsingle method)": [[230, "pymatgen.io.vasp.inputs.PotcarSingle.identify_potcar"]], "j (orbital attribute)": [[230, "pymatgen.io.vasp.inputs.Orbital.j"]], "keywords (potcarsingle attribute)": [[230, "pymatgen.io.vasp.inputs.PotcarSingle.keywords"]], "l (orbital attribute)": [[230, "pymatgen.io.vasp.inputs.Orbital.l"]], "l (orbitaldescription attribute)": [[230, "pymatgen.io.vasp.inputs.OrbitalDescription.l"]], "monkhorst_automatic() (kpoints static method)": [[230, "pymatgen.io.vasp.inputs.Kpoints.monkhorst_automatic"]], "n (orbital attribute)": [[230, "pymatgen.io.vasp.inputs.Orbital.n"]], "natoms (poscar property)": [[230, "pymatgen.io.vasp.inputs.Poscar.natoms"]], "nelectrons (potcarsingle property)": [[230, "pymatgen.io.vasp.inputs.PotcarSingle.nelectrons"]], "occ (orbital attribute)": [[230, "pymatgen.io.vasp.inputs.Orbital.occ"]], "parse_functions (potcarsingle attribute)": [[230, "pymatgen.io.vasp.inputs.PotcarSingle.parse_functions"]], "potential_type (potcarsingle property)": [[230, "pymatgen.io.vasp.inputs.PotcarSingle.potential_type"]], "predictor_corrector (poscar attribute)": [[230, "pymatgen.io.vasp.inputs.Poscar.predictor_corrector"]], "predictor_corrector (poscar property)": [[230, "id0"]], "predictor_corrector_preamble (poscar attribute)": [[230, "pymatgen.io.vasp.inputs.Poscar.predictor_corrector_preamble"]], "proc_val() (incar static method)": [[230, "pymatgen.io.vasp.inputs.Incar.proc_val"]], "pymatgen.io.vasp.inputs": [[230, "module-pymatgen.io.vasp.inputs"]], "run_vasp() (vaspinput method)": [[230, "pymatgen.io.vasp.inputs.VaspInput.run_vasp"]], "selective_dynamics (poscar attribute)": [[230, "pymatgen.io.vasp.inputs.Poscar.selective_dynamics"]], "selective_dynamics (poscar property)": [[230, "id1"]], "set_symbols() (potcar method)": [[230, "pymatgen.io.vasp.inputs.Potcar.set_symbols"]], "set_temperature() (poscar method)": [[230, "pymatgen.io.vasp.inputs.Poscar.set_temperature"]], "site_symbols (poscar property)": [[230, "pymatgen.io.vasp.inputs.Poscar.site_symbols"]], "spec (potcar property)": [[230, "pymatgen.io.vasp.inputs.Potcar.spec"]], "structure (poscar attribute)": [[230, "pymatgen.io.vasp.inputs.Poscar.structure"]], "style (kpoints property)": [[230, "pymatgen.io.vasp.inputs.Kpoints.style"]], "supported_modes (kpoints attribute)": [[230, "pymatgen.io.vasp.inputs.Kpoints.supported_modes"]], "symbol (potcarsingle property)": [[230, "pymatgen.io.vasp.inputs.PotcarSingle.symbol"]], "symbols (potcar property)": [[230, "pymatgen.io.vasp.inputs.Potcar.symbols"]], "temperature (poscar attribute)": [[230, "pymatgen.io.vasp.inputs.Poscar.temperature"]], "true_names (poscar attribute)": [[230, "pymatgen.io.vasp.inputs.Poscar.true_names"]], "velocities (poscar attribute)": [[230, "pymatgen.io.vasp.inputs.Poscar.velocities"]], "velocities (poscar property)": [[230, "id2"]], "verify_potcar() (potcarsingle method)": [[230, "pymatgen.io.vasp.inputs.PotcarSingle.verify_potcar"]], "write_file() (incar method)": [[230, "pymatgen.io.vasp.inputs.Incar.write_file"]], "write_file() (kpoints method)": [[230, "pymatgen.io.vasp.inputs.Kpoints.write_file"]], "write_file() (poscar method)": [[230, "pymatgen.io.vasp.inputs.Poscar.write_file"]], "write_file() (potcar method)": [[230, "pymatgen.io.vasp.inputs.Potcar.write_file"]], "write_file() (potcarsingle method)": [[230, "pymatgen.io.vasp.inputs.PotcarSingle.write_file"]], "write_input() (vaspinput method)": [[230, "pymatgen.io.vasp.inputs.VaspInput.write_input"]], "dielectricfunctioncalculator (class in pymatgen.io.vasp.optics)": [[231, "pymatgen.io.vasp.optics.DielectricFunctionCalculator"]], "cder (dielectricfunctioncalculator property)": [[231, "pymatgen.io.vasp.optics.DielectricFunctionCalculator.cder"]], "cder_imag (dielectricfunctioncalculator attribute)": [[231, "pymatgen.io.vasp.optics.DielectricFunctionCalculator.cder_imag"]], "cder_real (dielectricfunctioncalculator attribute)": [[231, "pymatgen.io.vasp.optics.DielectricFunctionCalculator.cder_real"]], "cshift (dielectricfunctioncalculator attribute)": [[231, "pymatgen.io.vasp.optics.DielectricFunctionCalculator.cshift"]], "delta_func() (in module pymatgen.io.vasp.optics)": [[231, "pymatgen.io.vasp.optics.delta_func"]], "delta_methfessel_paxton() (in module pymatgen.io.vasp.optics)": [[231, "pymatgen.io.vasp.optics.delta_methfessel_paxton"]], "deltae (dielectricfunctioncalculator attribute)": [[231, "pymatgen.io.vasp.optics.DielectricFunctionCalculator.deltae"]], "efermi (dielectricfunctioncalculator attribute)": [[231, "pymatgen.io.vasp.optics.DielectricFunctionCalculator.efermi"]], "eigs (dielectricfunctioncalculator attribute)": [[231, "pymatgen.io.vasp.optics.DielectricFunctionCalculator.eigs"]], "epsilon_imag() (in module pymatgen.io.vasp.optics)": [[231, "pymatgen.io.vasp.optics.epsilon_imag"]], "from_directory() (dielectricfunctioncalculator class method)": [[231, "pymatgen.io.vasp.optics.DielectricFunctionCalculator.from_directory"]], "from_vasp_objects() (dielectricfunctioncalculator class method)": [[231, "pymatgen.io.vasp.optics.DielectricFunctionCalculator.from_vasp_objects"]], "get_delta() (in module pymatgen.io.vasp.optics)": [[231, "pymatgen.io.vasp.optics.get_delta"]], "get_epsilon() (dielectricfunctioncalculator method)": [[231, "pymatgen.io.vasp.optics.DielectricFunctionCalculator.get_epsilon"]], "get_step() (in module pymatgen.io.vasp.optics)": [[231, "pymatgen.io.vasp.optics.get_step"]], "ismear (dielectricfunctioncalculator attribute)": [[231, "pymatgen.io.vasp.optics.DielectricFunctionCalculator.ismear"]], "ispin (dielectricfunctioncalculator attribute)": [[231, "pymatgen.io.vasp.optics.DielectricFunctionCalculator.ispin"]], "kramers_kronig() (in module pymatgen.io.vasp.optics)": [[231, "pymatgen.io.vasp.optics.kramers_kronig"]], "kweights (dielectricfunctioncalculator attribute)": [[231, "pymatgen.io.vasp.optics.DielectricFunctionCalculator.kweights"]], "nedos (dielectricfunctioncalculator attribute)": [[231, "pymatgen.io.vasp.optics.DielectricFunctionCalculator.nedos"]], "plot_weighted_transition_data() (dielectricfunctioncalculator method)": [[231, "pymatgen.io.vasp.optics.DielectricFunctionCalculator.plot_weighted_transition_data"]], "pymatgen.io.vasp.optics": [[231, "module-pymatgen.io.vasp.optics"]], "sigma (dielectricfunctioncalculator attribute)": [[231, "pymatgen.io.vasp.optics.DielectricFunctionCalculator.sigma"]], "step_func() (in module pymatgen.io.vasp.optics)": [[231, "pymatgen.io.vasp.optics.step_func"]], "step_methfessel_paxton() (in module pymatgen.io.vasp.optics)": [[231, "pymatgen.io.vasp.optics.step_methfessel_paxton"]], "volume (dielectricfunctioncalculator attribute)": [[231, "pymatgen.io.vasp.optics.DielectricFunctionCalculator.volume"]], "bsvasprun (class in pymatgen.io.vasp.outputs)": [[232, "pymatgen.io.vasp.outputs.BSVasprun"]], "chgcar (class in pymatgen.io.vasp.outputs)": [[232, "pymatgen.io.vasp.outputs.Chgcar"]], "dynmat (class in pymatgen.io.vasp.outputs)": [[232, "pymatgen.io.vasp.outputs.Dynmat"]], "eigenval (class in pymatgen.io.vasp.outputs)": [[232, "pymatgen.io.vasp.outputs.Eigenval"]], "elfcar (class in pymatgen.io.vasp.outputs)": [[232, "pymatgen.io.vasp.outputs.Elfcar"]], "gpoints (wavecar attribute)": [[232, "pymatgen.io.vasp.outputs.Wavecar.Gpoints"]], "locpot (class in pymatgen.io.vasp.outputs)": [[232, "pymatgen.io.vasp.outputs.Locpot"]], "oszicar (class in pymatgen.io.vasp.outputs)": [[232, "pymatgen.io.vasp.outputs.Oszicar"]], "outcar (class in pymatgen.io.vasp.outputs)": [[232, "pymatgen.io.vasp.outputs.Outcar"]], "procar (class in pymatgen.io.vasp.outputs)": [[232, "pymatgen.io.vasp.outputs.Procar"]], "unconvergedvaspwarning": [[232, "pymatgen.io.vasp.outputs.UnconvergedVASPWarning"]], "vaspparsererror": [[232, "pymatgen.io.vasp.outputs.VaspParserError"]], "vasprun (class in pymatgen.io.vasp.outputs)": [[232, "pymatgen.io.vasp.outputs.Vasprun"]], "volumetricdata (class in pymatgen.io.vasp.outputs)": [[232, "pymatgen.io.vasp.outputs.VolumetricData"]], "wswq (class in pymatgen.io.vasp.outputs)": [[232, "pymatgen.io.vasp.outputs.WSWQ"]], "wavecar (class in pymatgen.io.vasp.outputs)": [[232, "pymatgen.io.vasp.outputs.Wavecar"]], "waveder (class in pymatgen.io.vasp.outputs)": [[232, "pymatgen.io.vasp.outputs.Waveder"]], "xdatcar (class in pymatgen.io.vasp.outputs)": [[232, "pymatgen.io.vasp.outputs.Xdatcar"]], "a (wavecar attribute)": [[232, "pymatgen.io.vasp.outputs.Wavecar.a"]], "actual_kpoints (vasprun attribute)": [[232, "pymatgen.io.vasp.outputs.Vasprun.actual_kpoints"]], "actual_kpoints_weights (vasprun attribute)": [[232, "pymatgen.io.vasp.outputs.Vasprun.actual_kpoints_weights"]], "all_energies (oszicar property)": [[232, "pymatgen.io.vasp.outputs.Oszicar.all_energies"]], "as_dict() (bsvasprun method)": [[232, "pymatgen.io.vasp.outputs.BSVasprun.as_dict"]], "as_dict() (oszicar method)": [[232, "pymatgen.io.vasp.outputs.Oszicar.as_dict"]], "as_dict() (outcar method)": [[232, "pymatgen.io.vasp.outputs.Outcar.as_dict"]], "as_dict() (vasprun method)": [[232, "pymatgen.io.vasp.outputs.Vasprun.as_dict"]], "atomic_symbols (vasprun attribute)": [[232, "pymatgen.io.vasp.outputs.Vasprun.atomic_symbols"]], "b (wavecar attribute)": [[232, "pymatgen.io.vasp.outputs.Wavecar.b"]], "band_energy (wavecar attribute)": [[232, "pymatgen.io.vasp.outputs.Wavecar.band_energy"]], "calculate_efermi() (vasprun method)": [[232, "pymatgen.io.vasp.outputs.Vasprun.calculate_efermi"]], "cder (waveder property)": [[232, "pymatgen.io.vasp.outputs.Waveder.cder"]], "cder_imag (waveder attribute)": [[232, "id5"], [232, "pymatgen.io.vasp.outputs.Waveder.cder_imag"]], "cder_real (waveder attribute)": [[232, "id6"], [232, "pymatgen.io.vasp.outputs.Waveder.cder_real"]], "charge (outcar attribute)": [[232, "pymatgen.io.vasp.outputs.Outcar.charge"]], "chemical_shielding (outcar attribute)": [[232, "pymatgen.io.vasp.outputs.Outcar.chemical_shielding"]], "coeffs (wavecar attribute)": [[232, "pymatgen.io.vasp.outputs.Wavecar.coeffs"]], "comment (xdatcar attribute)": [[232, "pymatgen.io.vasp.outputs.Xdatcar.comment"]], "complete_dos (vasprun property)": [[232, "pymatgen.io.vasp.outputs.Vasprun.complete_dos"]], "complete_dos_normalized (vasprun property)": [[232, "pymatgen.io.vasp.outputs.Vasprun.complete_dos_normalized"]], "concatenate() (xdatcar method)": [[232, "pymatgen.io.vasp.outputs.Xdatcar.concatenate"]], "converged (vasprun property)": [[232, "pymatgen.io.vasp.outputs.Vasprun.converged"]], "converged_electronic (vasprun property)": [[232, "pymatgen.io.vasp.outputs.Vasprun.converged_electronic"]], "converged_ionic (vasprun property)": [[232, "pymatgen.io.vasp.outputs.Vasprun.converged_ionic"]], "cs_core_contribution (outcar attribute)": [[232, "pymatgen.io.vasp.outputs.Outcar.cs_core_contribution"]], "cs_g0_contribution (outcar attribute)": [[232, "pymatgen.io.vasp.outputs.Outcar.cs_g0_contribution"]], "data (dynmat attribute)": [[232, "pymatgen.io.vasp.outputs.Dynmat.data"]], "data (procar attribute)": [[232, "pymatgen.io.vasp.outputs.Procar.data"]], "data (wswq property)": [[232, "pymatgen.io.vasp.outputs.WSWQ.data"]], "dielectric (vasprun property)": [[232, "pymatgen.io.vasp.outputs.Vasprun.dielectric"]], "drift (outcar attribute)": [[232, "pymatgen.io.vasp.outputs.Outcar.drift"]], "efermi (outcar attribute)": [[232, "pymatgen.io.vasp.outputs.Outcar.efermi"]], "efermi (vasprun attribute)": [[232, "pymatgen.io.vasp.outputs.Vasprun.efermi"]], "efermi (wavecar attribute)": [[232, "pymatgen.io.vasp.outputs.Wavecar.efermi"]], "efg (outcar attribute)": [[232, "pymatgen.io.vasp.outputs.Outcar.efg"]], "eigenvalue_band_properties (eigenval property)": [[232, "pymatgen.io.vasp.outputs.Eigenval.eigenvalue_band_properties"]], "eigenvalue_band_properties (vasprun property)": [[232, "pymatgen.io.vasp.outputs.Vasprun.eigenvalue_band_properties"]], "eigenvalues (eigenval attribute)": [[232, "pymatgen.io.vasp.outputs.Eigenval.eigenvalues"]], "eigenvalues (vasprun attribute)": [[232, "pymatgen.io.vasp.outputs.Vasprun.eigenvalues"]], "elastic_tensor (outcar attribute)": [[232, "pymatgen.io.vasp.outputs.Outcar.elastic_tensor"]], "electronic_steps (oszicar attribute)": [[232, "pymatgen.io.vasp.outputs.Oszicar.electronic_steps"]], "encut (wavecar attribute)": [[232, "pymatgen.io.vasp.outputs.Wavecar.encut"]], "epsilon_ionic (vasprun property)": [[232, "pymatgen.io.vasp.outputs.Vasprun.epsilon_ionic"]], "epsilon_static (vasprun property)": [[232, "pymatgen.io.vasp.outputs.Vasprun.epsilon_static"]], "epsilon_static_wolfe (vasprun property)": [[232, "pymatgen.io.vasp.outputs.Vasprun.epsilon_static_wolfe"]], "evaluate_wavefunc() (wavecar method)": [[232, "pymatgen.io.vasp.outputs.Wavecar.evaluate_wavefunc"]], "fft_mesh() (wavecar method)": [[232, "pymatgen.io.vasp.outputs.Wavecar.fft_mesh"]], "filename (eigenval attribute)": [[232, "pymatgen.io.vasp.outputs.Eigenval.filename"]], "filename (outcar attribute)": [[232, "pymatgen.io.vasp.outputs.Outcar.filename"]], "filename (wavecar attribute)": [[232, "pymatgen.io.vasp.outputs.Wavecar.filename"]], "final_energy (oszicar property)": [[232, "pymatgen.io.vasp.outputs.Oszicar.final_energy"]], "final_energy (outcar attribute)": [[232, "pymatgen.io.vasp.outputs.Outcar.final_energy"]], "final_energy (vasprun property)": [[232, "pymatgen.io.vasp.outputs.Vasprun.final_energy"]], "final_energy_wo_entrp (outcar attribute)": [[232, "pymatgen.io.vasp.outputs.Outcar.final_energy_wo_entrp"]], "final_fr_energy (outcar attribute)": [[232, "pymatgen.io.vasp.outputs.Outcar.final_fr_energy"]], "force_constants (vasprun attribute)": [[232, "pymatgen.io.vasp.outputs.Vasprun.force_constants"]], "from_binary() (waveder class method)": [[232, "pymatgen.io.vasp.outputs.Waveder.from_binary"]], "from_file() (chgcar static method)": [[232, "pymatgen.io.vasp.outputs.Chgcar.from_file"]], "from_file() (elfcar class method)": [[232, "pymatgen.io.vasp.outputs.Elfcar.from_file"]], "from_file() (locpot class method)": [[232, "pymatgen.io.vasp.outputs.Locpot.from_file"]], "from_file() (wswq class method)": [[232, "pymatgen.io.vasp.outputs.WSWQ.from_file"]], "from_formatted() (waveder class method)": [[232, "pymatgen.io.vasp.outputs.Waveder.from_formatted"]], "get_adjusted_fermi_level() (in module pymatgen.io.vasp.outputs)": [[232, "pymatgen.io.vasp.outputs.get_adjusted_fermi_level"]], "get_alpha() (elfcar method)": [[232, "pymatgen.io.vasp.outputs.Elfcar.get_alpha"]], "get_band_structure() (vasprun method)": [[232, "pymatgen.io.vasp.outputs.Vasprun.get_band_structure"]], "get_band_structure_from_vasp_multiple_branches() (in module pymatgen.io.vasp.outputs)": [[232, "pymatgen.io.vasp.outputs.get_band_structure_from_vasp_multiple_branches"]], "get_computed_entry() (vasprun method)": [[232, "pymatgen.io.vasp.outputs.Vasprun.get_computed_entry"]], "get_occupation() (procar method)": [[232, "pymatgen.io.vasp.outputs.Procar.get_occupation"]], "get_orbital_derivative_between_states() (waveder method)": [[232, "pymatgen.io.vasp.outputs.Waveder.get_orbital_derivative_between_states"]], "get_parchg() (wavecar method)": [[232, "pymatgen.io.vasp.outputs.Wavecar.get_parchg"]], "get_phonon_frequencies() (dynmat method)": [[232, "pymatgen.io.vasp.outputs.Dynmat.get_phonon_frequencies"]], "get_potcars() (vasprun method)": [[232, "pymatgen.io.vasp.outputs.Vasprun.get_potcars"]], "get_projection_on_elements() (procar method)": [[232, "pymatgen.io.vasp.outputs.Procar.get_projection_on_elements"]], "get_string() (xdatcar method)": [[232, "pymatgen.io.vasp.outputs.Xdatcar.get_string"]], "get_trajectory() (vasprun method)": [[232, "pymatgen.io.vasp.outputs.Vasprun.get_trajectory"]], "has_onsite_density_matrices (outcar attribute)": [[232, "pymatgen.io.vasp.outputs.Outcar.has_onsite_density_matrices"]], "hubbards (vasprun property)": [[232, "pymatgen.io.vasp.outputs.Vasprun.hubbards"]], "idos (vasprun attribute)": [[232, "pymatgen.io.vasp.outputs.Vasprun.idos"]], "incar (vasprun attribute)": [[232, "pymatgen.io.vasp.outputs.Vasprun.incar"]], "ionic_steps (vasprun attribute)": [[232, "pymatgen.io.vasp.outputs.Vasprun.ionic_steps"]], "is_hubbard (vasprun property)": [[232, "pymatgen.io.vasp.outputs.Vasprun.is_hubbard"]], "is_spin (vasprun property)": [[232, "pymatgen.io.vasp.outputs.Vasprun.is_spin"]], "is_stopped (outcar attribute)": [[232, "pymatgen.io.vasp.outputs.Outcar.is_stopped"]], "ispin (eigenval attribute)": [[232, "pymatgen.io.vasp.outputs.Eigenval.ispin"]], "kpoints (eigenval attribute)": [[232, "pymatgen.io.vasp.outputs.Eigenval.kpoints"]], "kpoints (vasprun attribute)": [[232, "pymatgen.io.vasp.outputs.Vasprun.kpoints"]], "kpoints (wavecar attribute)": [[232, "pymatgen.io.vasp.outputs.Wavecar.kpoints"]], "kpoints_weights (eigenval attribute)": [[232, "pymatgen.io.vasp.outputs.Eigenval.kpoints_weights"]], "lcalcpol (outcar attribute)": [[232, "pymatgen.io.vasp.outputs.Outcar.lcalcpol"]], "lepsilon (outcar attribute)": [[232, "pymatgen.io.vasp.outputs.Outcar.lepsilon"]], "magnetization (outcar attribute)": [[232, "pymatgen.io.vasp.outputs.Outcar.magnetization"]], "masses (dynmat property)": [[232, "pymatgen.io.vasp.outputs.Dynmat.masses"]], "md_data (vasprun attribute)": [[232, "pymatgen.io.vasp.outputs.Vasprun.md_data"]], "me_imag (wswq attribute)": [[232, "id0"], [232, "pymatgen.io.vasp.outputs.WSWQ.me_imag"]], "me_real (wswq attribute)": [[232, "id1"], [232, "pymatgen.io.vasp.outputs.WSWQ.me_real"]], "natoms (dynmat property)": [[232, "pymatgen.io.vasp.outputs.Dynmat.natoms"]], "natoms (xdatcar property)": [[232, "pymatgen.io.vasp.outputs.Xdatcar.natoms"]], "nb (wavecar attribute)": [[232, "pymatgen.io.vasp.outputs.Wavecar.nb"]], "nbands (eigenval attribute)": [[232, "pymatgen.io.vasp.outputs.Eigenval.nbands"]], "nbands (wswq attribute)": [[232, "id2"], [232, "pymatgen.io.vasp.outputs.WSWQ.nbands"]], "nbands (waveder property)": [[232, "pymatgen.io.vasp.outputs.Waveder.nbands"]], "ndisps (dynmat property)": [[232, "pymatgen.io.vasp.outputs.Dynmat.ndisps"]], "nelect (eigenval attribute)": [[232, "pymatgen.io.vasp.outputs.Eigenval.nelect"]], "nelect (outcar attribute)": [[232, "pymatgen.io.vasp.outputs.Outcar.nelect"]], "net_magnetization (chgcar property)": [[232, "pymatgen.io.vasp.outputs.Chgcar.net_magnetization"]], "ngf (outcar attribute)": [[232, "pymatgen.io.vasp.outputs.Outcar.ngf"]], "nionic_steps (vasprun attribute)": [[232, "pymatgen.io.vasp.outputs.Vasprun.nionic_steps"]], "nk (wavecar attribute)": [[232, "pymatgen.io.vasp.outputs.Wavecar.nk"]], "nkpoints (wswq attribute)": [[232, "id3"], [232, "pymatgen.io.vasp.outputs.WSWQ.nkpoints"]], "nkpoints (waveder property)": [[232, "pymatgen.io.vasp.outputs.Waveder.nkpoints"]], "nkpt (eigenval attribute)": [[232, "pymatgen.io.vasp.outputs.Eigenval.nkpt"]], "normalmode_eigenvals (vasprun attribute)": [[232, "pymatgen.io.vasp.outputs.Vasprun.normalmode_eigenvals"]], "normalmode_eigenvecs (vasprun attribute)": [[232, "pymatgen.io.vasp.outputs.Vasprun.normalmode_eigenvecs"]], "nspecs (dynmat property)": [[232, "pymatgen.io.vasp.outputs.Dynmat.nspecs"]], "nspin (wswq attribute)": [[232, "id4"], [232, "pymatgen.io.vasp.outputs.WSWQ.nspin"]], "nspin (waveder property)": [[232, "pymatgen.io.vasp.outputs.Waveder.nspin"]], "occu_tol (eigenval attribute)": [[232, "pymatgen.io.vasp.outputs.Eigenval.occu_tol"]], "optical_absorption_coeff (vasprun property)": [[232, "pymatgen.io.vasp.outputs.Vasprun.optical_absorption_coeff"]], "other_dielectric (vasprun attribute)": [[232, "pymatgen.io.vasp.outputs.Vasprun.other_dielectric"]], "parameters (vasprun attribute)": [[232, "pymatgen.io.vasp.outputs.Vasprun.parameters"]], "parse_file() (volumetricdata static method)": [[232, "pymatgen.io.vasp.outputs.VolumetricData.parse_file"]], "pdos (vasprun attribute)": [[232, "pymatgen.io.vasp.outputs.Vasprun.pdos"]], "potcar_symbols (vasprun attribute)": [[232, "pymatgen.io.vasp.outputs.Vasprun.potcar_symbols"]], "projected_eigenvalues (vasprun attribute)": [[232, "pymatgen.io.vasp.outputs.Vasprun.projected_eigenvalues"]], "projected_magnetisation (vasprun attribute)": [[232, "pymatgen.io.vasp.outputs.Vasprun.projected_magnetisation"]], "pymatgen.io.vasp.outputs": [[232, "module-pymatgen.io.vasp.outputs"]], "read_avg_core_poten() (outcar method)": [[232, "pymatgen.io.vasp.outputs.Outcar.read_avg_core_poten"]], "read_chemical_shielding() (outcar method)": [[232, "pymatgen.io.vasp.outputs.Outcar.read_chemical_shielding"]], "read_core_state_eigen() (outcar method)": [[232, "pymatgen.io.vasp.outputs.Outcar.read_core_state_eigen"]], "read_corrections() (outcar method)": [[232, "pymatgen.io.vasp.outputs.Outcar.read_corrections"]], "read_cs_core_contribution() (outcar method)": [[232, "pymatgen.io.vasp.outputs.Outcar.read_cs_core_contribution"]], "read_cs_g0_contribution() (outcar method)": [[232, "pymatgen.io.vasp.outputs.Outcar.read_cs_g0_contribution"]], "read_cs_raw_symmetrized_tensors() (outcar method)": [[232, "pymatgen.io.vasp.outputs.Outcar.read_cs_raw_symmetrized_tensors"]], "read_elastic_tensor() (outcar method)": [[232, "pymatgen.io.vasp.outputs.Outcar.read_elastic_tensor"]], "read_electrostatic_potential() (outcar method)": [[232, "pymatgen.io.vasp.outputs.Outcar.read_electrostatic_potential"]], "read_fermi_contact_shift() (outcar method)": [[232, "pymatgen.io.vasp.outputs.Outcar.read_fermi_contact_shift"]], "read_freq_dielectric() (outcar method)": [[232, "pymatgen.io.vasp.outputs.Outcar.read_freq_dielectric"]], "read_igpar() (outcar method)": [[232, "pymatgen.io.vasp.outputs.Outcar.read_igpar"]], "read_internal_strain_tensor() (outcar method)": [[232, "pymatgen.io.vasp.outputs.Outcar.read_internal_strain_tensor"]], "read_lcalcpol() (outcar method)": [[232, "pymatgen.io.vasp.outputs.Outcar.read_lcalcpol"]], "read_lepsilon() (outcar method)": [[232, "pymatgen.io.vasp.outputs.Outcar.read_lepsilon"]], "read_lepsilon_ionic() (outcar method)": [[232, "pymatgen.io.vasp.outputs.Outcar.read_lepsilon_ionic"]], "read_neb() (outcar method)": [[232, "pymatgen.io.vasp.outputs.Outcar.read_neb"]], "read_nmr_efg() (outcar method)": [[232, "pymatgen.io.vasp.outputs.Outcar.read_nmr_efg"]], "read_nmr_efg_tensor() (outcar method)": [[232, "pymatgen.io.vasp.outputs.Outcar.read_nmr_efg_tensor"]], "read_onsite_density_matrices() (outcar method)": [[232, "pymatgen.io.vasp.outputs.Outcar.read_onsite_density_matrices"]], "read_pattern() (outcar method)": [[232, "pymatgen.io.vasp.outputs.Outcar.read_pattern"]], "read_piezo_tensor() (outcar method)": [[232, "pymatgen.io.vasp.outputs.Outcar.read_piezo_tensor"]], "read_pseudo_zval() (outcar method)": [[232, "pymatgen.io.vasp.outputs.Outcar.read_pseudo_zval"]], "read_table_pattern() (outcar method)": [[232, "pymatgen.io.vasp.outputs.Outcar.read_table_pattern"]], "run_stats (outcar attribute)": [[232, "pymatgen.io.vasp.outputs.Outcar.run_stats"]], "run_type (vasprun property)": [[232, "pymatgen.io.vasp.outputs.Vasprun.run_type"]], "site_symbols (xdatcar property)": [[232, "pymatgen.io.vasp.outputs.Xdatcar.site_symbols"]], "spin (outcar attribute)": [[232, "pymatgen.io.vasp.outputs.Outcar.spin"]], "structures (vasprun property)": [[232, "pymatgen.io.vasp.outputs.Vasprun.structures"]], "structures (xdatcar attribute)": [[232, "pymatgen.io.vasp.outputs.Xdatcar.structures"]], "tdos (vasprun attribute)": [[232, "pymatgen.io.vasp.outputs.Vasprun.tdos"]], "total_mag (outcar attribute)": [[232, "pymatgen.io.vasp.outputs.Outcar.total_mag"]], "unsym_cs_tensor (outcar attribute)": [[232, "pymatgen.io.vasp.outputs.Outcar.unsym_cs_tensor"]], "update_charge_from_potcar() (vasprun method)": [[232, "pymatgen.io.vasp.outputs.Vasprun.update_charge_from_potcar"]], "update_potcar_spec() (vasprun method)": [[232, "pymatgen.io.vasp.outputs.Vasprun.update_potcar_spec"]], "vasp_type (wavecar attribute)": [[232, "pymatgen.io.vasp.outputs.Wavecar.vasp_type"]], "vol (wavecar attribute)": [[232, "pymatgen.io.vasp.outputs.Wavecar.vol"]], "weights (procar attribute)": [[232, "pymatgen.io.vasp.outputs.Procar.weights"]], "write_file() (volumetricdata method)": [[232, "pymatgen.io.vasp.outputs.VolumetricData.write_file"]], "write_file() (xdatcar method)": [[232, "pymatgen.io.vasp.outputs.Xdatcar.write_file"]], "write_unks() (wavecar method)": [[232, "pymatgen.io.vasp.outputs.Wavecar.write_unks"]], "badinputsetwarning": [[233, "pymatgen.io.vasp.sets.BadInputSetWarning"]], "config (lobsterset attribute)": [[233, "pymatgen.io.vasp.sets.LobsterSet.CONFIG"]], "config (mitrelaxset attribute)": [[233, "pymatgen.io.vasp.sets.MITRelaxSet.CONFIG"]], "config (mphserelaxset attribute)": [[233, "pymatgen.io.vasp.sets.MPHSERelaxSet.CONFIG"]], "config (mpmetalrelaxset attribute)": [[233, "pymatgen.io.vasp.sets.MPMetalRelaxSet.CONFIG"]], "config (mprelaxset attribute)": [[233, "pymatgen.io.vasp.sets.MPRelaxSet.CONFIG"]], "config (mpscanrelaxset attribute)": [[233, "pymatgen.io.vasp.sets.MPScanRelaxSet.CONFIG"]], "config (mvlgwset attribute)": [[233, "pymatgen.io.vasp.sets.MVLGWSet.CONFIG"]], "config (mvlrelax52set attribute)": [[233, "pymatgen.io.vasp.sets.MVLRelax52Set.CONFIG"]], "dictset (class in pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.DictSet"]], "lobsterset (class in pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.LobsterSet"]], "mitmdset (class in pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.MITMDSet"]], "mitnebset (class in pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.MITNEBSet"]], "mitrelaxset (class in pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.MITRelaxSet"]], "mpabsorptionset (class in pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.MPAbsorptionSet"]], "mphsebsset (class in pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.MPHSEBSSet"]], "mphserelaxset (class in pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.MPHSERelaxSet"]], "mpmdset (class in pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.MPMDSet"]], "mpmetalrelaxset (class in pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.MPMetalRelaxSet"]], "mpnmrset (class in pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.MPNMRSet"]], "mpnonscfset (class in pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.MPNonSCFSet"]], "mprelaxset (class in pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.MPRelaxSet"]], "mpsocset (class in pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.MPSOCSet"]], "mpscanrelaxset (class in pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.MPScanRelaxSet"]], "mpscanstaticset (class in pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.MPScanStaticSet"]], "mpstaticset (class in pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.MPStaticSet"]], "mvlelasticset (class in pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.MVLElasticSet"]], "mvlgbset (class in pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.MVLGBSet"]], "mvlgwset (class in pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.MVLGWSet"]], "mvlnptmdset (class in pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.MVLNPTMDSet"]], "mvlrelax52set (class in pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.MVLRelax52Set"]], "mvlscanrelaxset (class in pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.MVLScanRelaxSet"]], "mvlslabset (class in pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.MVLSlabSet"]], "supported_modes (mpabsorptionset attribute)": [[233, "pymatgen.io.vasp.sets.MPAbsorptionSet.SUPPORTED_MODES"]], "supported_modes (mvlgwset attribute)": [[233, "pymatgen.io.vasp.sets.MVLGWSet.SUPPORTED_MODES"]], "vaspinputset (class in pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.VaspInputSet"]], "as_dict() (mvlslabset method)": [[233, "pymatgen.io.vasp.sets.MVLSlabSet.as_dict"]], "as_dict() (vaspinputset method)": [[233, "pymatgen.io.vasp.sets.VaspInputSet.as_dict"]], "batch_write_input() (in module pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.batch_write_input"]], "calculate_ng() (dictset method)": [[233, "pymatgen.io.vasp.sets.DictSet.calculate_ng"]], "estimate_nbands() (dictset method)": [[233, "pymatgen.io.vasp.sets.DictSet.estimate_nbands"]], "from_prev_calc() (mpabsorptionset class method)": [[233, "pymatgen.io.vasp.sets.MPAbsorptionSet.from_prev_calc"]], "from_prev_calc() (mphsebsset class method)": [[233, "pymatgen.io.vasp.sets.MPHSEBSSet.from_prev_calc"]], "from_prev_calc() (mpnonscfset class method)": [[233, "pymatgen.io.vasp.sets.MPNonSCFSet.from_prev_calc"]], "from_prev_calc() (mpsocset class method)": [[233, "pymatgen.io.vasp.sets.MPSOCSet.from_prev_calc"]], "from_prev_calc() (mpscanstaticset class method)": [[233, "pymatgen.io.vasp.sets.MPScanStaticSet.from_prev_calc"]], "from_prev_calc() (mpstaticset class method)": [[233, "pymatgen.io.vasp.sets.MPStaticSet.from_prev_calc"]], "from_prev_calc() (mvlgwset class method)": [[233, "pymatgen.io.vasp.sets.MVLGWSet.from_prev_calc"]], "get_structure_from_prev_run() (in module pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.get_structure_from_prev_run"]], "get_valid_magmom_struct() (in module pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.get_valid_magmom_struct"]], "get_vasp_input() (vaspinputset method)": [[233, "pymatgen.io.vasp.sets.VaspInputSet.get_vasp_input"]], "get_vasprun_outcar() (in module pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.get_vasprun_outcar"]], "incar (dictset property)": [[233, "pymatgen.io.vasp.sets.DictSet.incar"]], "incar (mpabsorptionset property)": [[233, "pymatgen.io.vasp.sets.MPAbsorptionSet.incar"]], "incar (mpnmrset property)": [[233, "pymatgen.io.vasp.sets.MPNMRSet.incar"]], "incar (mpnonscfset property)": [[233, "pymatgen.io.vasp.sets.MPNonSCFSet.incar"]], "incar (mpsocset property)": [[233, "pymatgen.io.vasp.sets.MPSOCSet.incar"]], "incar (mpscanstaticset property)": [[233, "pymatgen.io.vasp.sets.MPScanStaticSet.incar"]], "incar (mpstaticset property)": [[233, "pymatgen.io.vasp.sets.MPStaticSet.incar"]], "incar (mvlgbset property)": [[233, "pymatgen.io.vasp.sets.MVLGBSet.incar"]], "incar (mvlgwset property)": [[233, "pymatgen.io.vasp.sets.MVLGWSet.incar"]], "incar (vaspinputset property)": [[233, "pymatgen.io.vasp.sets.VaspInputSet.incar"]], "kpoints (dictset property)": [[233, "pymatgen.io.vasp.sets.DictSet.kpoints"]], "kpoints (mitmdset property)": [[233, "pymatgen.io.vasp.sets.MITMDSet.kpoints"]], "kpoints (mpabsorptionset property)": [[233, "pymatgen.io.vasp.sets.MPAbsorptionSet.kpoints"]], "kpoints (mphsebsset property)": [[233, "pymatgen.io.vasp.sets.MPHSEBSSet.kpoints"]], "kpoints (mpmdset property)": [[233, "pymatgen.io.vasp.sets.MPMDSet.kpoints"]], "kpoints (mpnonscfset property)": [[233, "pymatgen.io.vasp.sets.MPNonSCFSet.kpoints"]], "kpoints (mpstaticset property)": [[233, "pymatgen.io.vasp.sets.MPStaticSet.kpoints"]], "kpoints (mvlgbset property)": [[233, "pymatgen.io.vasp.sets.MVLGBSet.kpoints"]], "kpoints (mvlgwset property)": [[233, "pymatgen.io.vasp.sets.MVLGWSet.kpoints"]], "kpoints (mvlslabset property)": [[233, "pymatgen.io.vasp.sets.MVLSlabSet.kpoints"]], "kpoints (vaspinputset property)": [[233, "pymatgen.io.vasp.sets.VaspInputSet.kpoints"]], "nelect (dictset property)": [[233, "pymatgen.io.vasp.sets.DictSet.nelect"]], "next_num_with_prime_factors() (in module pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.next_num_with_prime_factors"]], "override_from_prev_calc() (mpabsorptionset method)": [[233, "pymatgen.io.vasp.sets.MPAbsorptionSet.override_from_prev_calc"]], "override_from_prev_calc() (mphsebsset method)": [[233, "pymatgen.io.vasp.sets.MPHSEBSSet.override_from_prev_calc"]], "override_from_prev_calc() (mpnonscfset method)": [[233, "pymatgen.io.vasp.sets.MPNonSCFSet.override_from_prev_calc"]], "override_from_prev_calc() (mpsocset method)": [[233, "pymatgen.io.vasp.sets.MPSOCSet.override_from_prev_calc"]], "override_from_prev_calc() (mpscanstaticset method)": [[233, "pymatgen.io.vasp.sets.MPScanStaticSet.override_from_prev_calc"]], "override_from_prev_calc() (mpstaticset method)": [[233, "pymatgen.io.vasp.sets.MPStaticSet.override_from_prev_calc"]], "override_from_prev_calc() (mvlgwset method)": [[233, "pymatgen.io.vasp.sets.MVLGWSet.override_from_prev_calc"]], "poscar (dictset property)": [[233, "pymatgen.io.vasp.sets.DictSet.poscar"]], "poscar (mitnebset property)": [[233, "pymatgen.io.vasp.sets.MITNEBSet.poscar"]], "poscar (vaspinputset property)": [[233, "pymatgen.io.vasp.sets.VaspInputSet.poscar"]], "poscars (mitnebset property)": [[233, "pymatgen.io.vasp.sets.MITNEBSet.poscars"]], "potcar (vaspinputset property)": [[233, "pymatgen.io.vasp.sets.VaspInputSet.potcar"]], "potcar_functional (dictset property)": [[233, "pymatgen.io.vasp.sets.DictSet.potcar_functional"]], "potcar_symbols (vaspinputset property)": [[233, "pymatgen.io.vasp.sets.VaspInputSet.potcar_symbols"]], "primes_less_than() (in module pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.primes_less_than"]], "pymatgen.io.vasp.sets": [[233, "module-pymatgen.io.vasp.sets"]], "standardize_structure() (in module pymatgen.io.vasp.sets)": [[233, "pymatgen.io.vasp.sets.standardize_structure"]], "structure (dictset property)": [[233, "pymatgen.io.vasp.sets.DictSet.structure"]], "user_potcar_functional (mpsocset attribute)": [[233, "pymatgen.io.vasp.sets.MPSOCSet.user_potcar_functional"]], "user_potcar_functional (mpscanstaticset attribute)": [[233, "pymatgen.io.vasp.sets.MPScanStaticSet.user_potcar_functional"]], "user_potcar_functional (mpstaticset attribute)": [[233, "pymatgen.io.vasp.sets.MPStaticSet.user_potcar_functional"]], "user_potcar_functional (mvlelasticset attribute)": [[233, "pymatgen.io.vasp.sets.MVLElasticSet.user_potcar_functional"]], "user_potcar_functional (mvlgbset attribute)": [[233, "pymatgen.io.vasp.sets.MVLGBSet.user_potcar_functional"]], "user_potcar_functional (mvlnptmdset attribute)": [[233, "pymatgen.io.vasp.sets.MVLNPTMDSet.user_potcar_functional"]], "user_potcar_functional (mvlscanrelaxset attribute)": [[233, "pymatgen.io.vasp.sets.MVLScanRelaxSet.user_potcar_functional"]], "user_potcar_functional (mvlslabset attribute)": [[233, "pymatgen.io.vasp.sets.MVLSlabSet.user_potcar_functional"]], "write_input() (dictset method)": [[233, "pymatgen.io.vasp.sets.DictSet.write_input"]], "write_input() (mitnebset method)": [[233, "pymatgen.io.vasp.sets.MITNEBSet.write_input"]], "write_input() (vaspinputset method)": [[233, "pymatgen.io.vasp.sets.VaspInputSet.write_input"]], "unk (class in pymatgen.io.wannier90)": [[234, "pymatgen.io.wannier90.Unk"]], "data (unk attribute)": [[234, "pymatgen.io.wannier90.Unk.data"]], "data (unk property)": [[234, "id0"]], "from_file() (unk static method)": [[234, "pymatgen.io.wannier90.Unk.from_file"]], "ik (unk attribute)": [[234, "id1"], [234, "pymatgen.io.wannier90.Unk.ik"]], "is_noncollinear (unk attribute)": [[234, "id2"], [234, "pymatgen.io.wannier90.Unk.is_noncollinear"]], "nbnd (unk attribute)": [[234, "id3"], [234, "pymatgen.io.wannier90.Unk.nbnd"]], "ng (unk attribute)": [[234, "id4"], [234, "pymatgen.io.wannier90.Unk.ng"]], "pymatgen.io.wannier90": [[234, "module-pymatgen.io.wannier90"]], "write_file() (unk method)": [[234, "pymatgen.io.wannier90.Unk.write_file"]], "xsf (class in pymatgen.io.xcrysden)": [[235, "pymatgen.io.xcrysden.XSF"]], "from_string() (xsf class method)": [[235, "pymatgen.io.xcrysden.XSF.from_string"]], "pymatgen.io.xcrysden": [[235, "module-pymatgen.io.xcrysden"]], "to_string() (xsf method)": [[235, "pymatgen.io.xcrysden.XSF.to_string"]], "xr (class in pymatgen.io.xr)": [[236, "pymatgen.io.xr.Xr"]], "from_file() (xr static method)": [[236, "pymatgen.io.xr.Xr.from_file"]], "from_string() (xr static method)": [[236, "pymatgen.io.xr.Xr.from_string"]], "pymatgen.io.xr": [[236, "module-pymatgen.io.xr"]], "write_file() (xr method)": [[236, "pymatgen.io.xr.Xr.write_file"]], "pymatgen.io.xtb": [[237, "module-pymatgen.io.xtb"]], "crestinput (class in pymatgen.io.xtb.inputs)": [[238, "pymatgen.io.xtb.inputs.CRESTInput"]], "constrains_template() (crestinput static method)": [[238, "pymatgen.io.xtb.inputs.CRESTInput.constrains_template"]], "pymatgen.io.xtb.inputs": [[238, "module-pymatgen.io.xtb.inputs"]], "write_input_files() (crestinput method)": [[238, "pymatgen.io.xtb.inputs.CRESTInput.write_input_files"]], "crestoutput (class in pymatgen.io.xtb.outputs)": [[239, "pymatgen.io.xtb.outputs.CRESTOutput"]], "pymatgen.io.xtb.outputs": [[239, "module-pymatgen.io.xtb.outputs"]], "xyz (class in pymatgen.io.xyz)": [[240, "pymatgen.io.xyz.XYZ"]], "all_molecules (xyz property)": [[240, "pymatgen.io.xyz.XYZ.all_molecules"]], "as_dataframe() (xyz method)": [[240, "pymatgen.io.xyz.XYZ.as_dataframe"]], "from_file() (xyz static method)": [[240, "pymatgen.io.xyz.XYZ.from_file"]], "from_string() (xyz static method)": [[240, "pymatgen.io.xyz.XYZ.from_string"]], "molecule (xyz property)": [[240, "pymatgen.io.xyz.XYZ.molecule"]], "pymatgen.io.xyz": [[240, "module-pymatgen.io.xyz"]], "write_file() (xyz method)": [[240, "pymatgen.io.xyz.XYZ.write_file"]], "zeocssr (class in pymatgen.io.zeopp)": [[241, "pymatgen.io.zeopp.ZeoCssr"]], "zeovoronoixyz (class in pymatgen.io.zeopp)": [[241, "pymatgen.io.zeopp.ZeoVoronoiXYZ"]], "from_file() (zeocssr static method)": [[241, "pymatgen.io.zeopp.ZeoCssr.from_file"]], "from_file() (zeovoronoixyz static method)": [[241, "pymatgen.io.zeopp.ZeoVoronoiXYZ.from_file"]], "from_string() (zeocssr static method)": [[241, "pymatgen.io.zeopp.ZeoCssr.from_string"]], "from_string() (zeovoronoixyz static method)": [[241, "pymatgen.io.zeopp.ZeoVoronoiXYZ.from_string"]], "get_free_sphere_params() (in module pymatgen.io.zeopp)": [[241, "pymatgen.io.zeopp.get_free_sphere_params"]], "get_high_accuracy_voronoi_nodes() (in module pymatgen.io.zeopp)": [[241, "pymatgen.io.zeopp.get_high_accuracy_voronoi_nodes"]], "get_voronoi_nodes() (in module pymatgen.io.zeopp)": [[241, "pymatgen.io.zeopp.get_voronoi_nodes"]], "pymatgen.io.zeopp": [[241, "module-pymatgen.io.zeopp"]], "pymatgen.optimization": [[242, "module-pymatgen.optimization"]], "linearassignment (class in pymatgen.optimization.linear_assignment)": [[243, "pymatgen.optimization.linear_assignment.LinearAssignment"]], "pymatgen.optimization.linear_assignment": [[243, "module-pymatgen.optimization.linear_assignment"]], "linearassignment (class in pymatgen.optimization.linear_assignment_numpy)": [[244, "pymatgen.optimization.linear_assignment_numpy.LinearAssignment"]], "min_cost (linearassignment property)": [[244, "pymatgen.optimization.linear_assignment_numpy.LinearAssignment.min_cost"]], "pymatgen.optimization.linear_assignment_numpy": [[244, "module-pymatgen.optimization.linear_assignment_numpy"]], "find_points_in_spheres() (in module pymatgen.optimization.neighbors)": [[245, "pymatgen.optimization.neighbors.find_points_in_spheres"]], "pymatgen.optimization.neighbors": [[245, "module-pymatgen.optimization.neighbors"]], "pymatgen.phonon": [[246, "module-pymatgen.phonon"]], "phononbandstructure (class in pymatgen.phonon.bandstructure)": [[247, "pymatgen.phonon.bandstructure.PhononBandStructure"]], "phononbandstructuresymmline (class in pymatgen.phonon.bandstructure)": [[247, "pymatgen.phonon.bandstructure.PhononBandStructureSymmLine"]], "as_dict() (phononbandstructure method)": [[247, "pymatgen.phonon.bandstructure.PhononBandStructure.as_dict"]], "as_dict() (phononbandstructuresymmline method)": [[247, "pymatgen.phonon.bandstructure.PhononBandStructureSymmLine.as_dict"]], "as_phononwebsite() (phononbandstructuresymmline method)": [[247, "pymatgen.phonon.bandstructure.PhononBandStructureSymmLine.as_phononwebsite"]], "asr_breaking() (phononbandstructure method)": [[247, "pymatgen.phonon.bandstructure.PhononBandStructure.asr_breaking"]], "band_reorder() (phononbandstructuresymmline method)": [[247, "pymatgen.phonon.bandstructure.PhononBandStructureSymmLine.band_reorder"]], "eigenvectors_from_displacements() (in module pymatgen.phonon.bandstructure)": [[247, "pymatgen.phonon.bandstructure.eigenvectors_from_displacements"]], "estimate_band_connection() (in module pymatgen.phonon.bandstructure)": [[247, "pymatgen.phonon.bandstructure.estimate_band_connection"]], "from_dict() (phononbandstructure class method)": [[247, "pymatgen.phonon.bandstructure.PhononBandStructure.from_dict"]], "from_dict() (phononbandstructuresymmline class method)": [[247, "pymatgen.phonon.bandstructure.PhononBandStructureSymmLine.from_dict"]], "get_branch() (phononbandstructuresymmline method)": [[247, "pymatgen.phonon.bandstructure.PhononBandStructureSymmLine.get_branch"]], "get_equivalent_qpoints() (phononbandstructuresymmline method)": [[247, "pymatgen.phonon.bandstructure.PhononBandStructureSymmLine.get_equivalent_qpoints"]], "get_nac_eigendisplacements_along_dir() (phononbandstructure method)": [[247, "pymatgen.phonon.bandstructure.PhononBandStructure.get_nac_eigendisplacements_along_dir"]], "get_nac_frequencies_along_dir() (phononbandstructure method)": [[247, "pymatgen.phonon.bandstructure.PhononBandStructure.get_nac_frequencies_along_dir"]], "get_reasonable_repetitions() (in module pymatgen.phonon.bandstructure)": [[247, "pymatgen.phonon.bandstructure.get_reasonable_repetitions"]], "has_eigendisplacements (phononbandstructure property)": [[247, "pymatgen.phonon.bandstructure.PhononBandStructure.has_eigendisplacements"]], "has_imaginary_freq() (phononbandstructure method)": [[247, "pymatgen.phonon.bandstructure.PhononBandStructure.has_imaginary_freq"]], "has_nac (phononbandstructure property)": [[247, "pymatgen.phonon.bandstructure.PhononBandStructure.has_nac"]], "min_freq() (phononbandstructure method)": [[247, "pymatgen.phonon.bandstructure.PhononBandStructure.min_freq"]], "pymatgen.phonon.bandstructure": [[247, "module-pymatgen.phonon.bandstructure"]], "write_phononwebsite() (phononbandstructuresymmline method)": [[247, "pymatgen.phonon.bandstructure.PhononBandStructureSymmLine.write_phononwebsite"]], "completephonondos (class in pymatgen.phonon.dos)": [[248, "pymatgen.phonon.dos.CompletePhononDos"]], "phonondos (class in pymatgen.phonon.dos)": [[248, "pymatgen.phonon.dos.PhononDos"]], "as_dict() (completephonondos method)": [[248, "pymatgen.phonon.dos.CompletePhononDos.as_dict"]], "as_dict() (phonondos method)": [[248, "pymatgen.phonon.dos.PhononDos.as_dict"]], "coth() (in module pymatgen.phonon.dos)": [[248, "pymatgen.phonon.dos.coth"]], "cv() (phonondos method)": [[248, "pymatgen.phonon.dos.PhononDos.cv"]], "entropy() (phonondos method)": [[248, "pymatgen.phonon.dos.PhononDos.entropy"]], "from_dict() (completephonondos class method)": [[248, "pymatgen.phonon.dos.CompletePhononDos.from_dict"]], "from_dict() (phonondos class method)": [[248, "pymatgen.phonon.dos.PhononDos.from_dict"]], "get_element_dos() (completephonondos method)": [[248, "pymatgen.phonon.dos.CompletePhononDos.get_element_dos"]], "get_interpolated_value() (phonondos method)": [[248, "pymatgen.phonon.dos.PhononDos.get_interpolated_value"]], "get_site_dos() (completephonondos method)": [[248, "pymatgen.phonon.dos.CompletePhononDos.get_site_dos"]], "get_smeared_densities() (phonondos method)": [[248, "pymatgen.phonon.dos.PhononDos.get_smeared_densities"]], "helmholtz_free_energy() (phonondos method)": [[248, "pymatgen.phonon.dos.PhononDos.helmholtz_free_energy"]], "ind_zero_freq() (phonondos method)": [[248, "pymatgen.phonon.dos.PhononDos.ind_zero_freq"]], "internal_energy() (phonondos method)": [[248, "pymatgen.phonon.dos.PhononDos.internal_energy"]], "pdos (completephonondos attribute)": [[248, "pymatgen.phonon.dos.CompletePhononDos.pdos"]], "pymatgen.phonon.dos": [[248, "module-pymatgen.phonon.dos"]], "zero_point_energy() (phonondos method)": [[248, "pymatgen.phonon.dos.PhononDos.zero_point_energy"]], "gruneisenparameter (class in pymatgen.phonon.gruneisen)": [[249, "pymatgen.phonon.gruneisen.GruneisenParameter"]], "gruneisenphononbandstructure (class in pymatgen.phonon.gruneisen)": [[249, "pymatgen.phonon.gruneisen.GruneisenPhononBandStructure"]], "gruneisenphononbandstructuresymmline (class in pymatgen.phonon.gruneisen)": [[249, "pymatgen.phonon.gruneisen.GruneisenPhononBandStructureSymmLine"]], "acoustic_debye_temp (gruneisenparameter property)": [[249, "pymatgen.phonon.gruneisen.GruneisenParameter.acoustic_debye_temp"]], "as_dict() (gruneisenphononbandstructure method)": [[249, "pymatgen.phonon.gruneisen.GruneisenPhononBandStructure.as_dict"]], "average_gruneisen() (gruneisenparameter method)": [[249, "pymatgen.phonon.gruneisen.GruneisenParameter.average_gruneisen"]], "debye_temp_limit (gruneisenparameter property)": [[249, "pymatgen.phonon.gruneisen.GruneisenParameter.debye_temp_limit"]], "debye_temp_phonopy() (gruneisenparameter method)": [[249, "pymatgen.phonon.gruneisen.GruneisenParameter.debye_temp_phonopy"]], "from_dict() (gruneisenphononbandstructure class method)": [[249, "pymatgen.phonon.gruneisen.GruneisenPhononBandStructure.from_dict"]], "from_dict() (gruneisenphononbandstructuresymmline class method)": [[249, "pymatgen.phonon.gruneisen.GruneisenPhononBandStructureSymmLine.from_dict"]], "phdos (gruneisenparameter property)": [[249, "pymatgen.phonon.gruneisen.GruneisenParameter.phdos"]], "pymatgen.phonon.gruneisen": [[249, "module-pymatgen.phonon.gruneisen"]], "tdos (gruneisenparameter property)": [[249, "pymatgen.phonon.gruneisen.GruneisenParameter.tdos"]], "thermal_conductivity_slack() (gruneisenparameter method)": [[249, "pymatgen.phonon.gruneisen.GruneisenParameter.thermal_conductivity_slack"]], "irdielectrictensor (class in pymatgen.phonon.ir_spectra)": [[250, "pymatgen.phonon.ir_spectra.IRDielectricTensor"]], "as_dict() (irdielectrictensor method)": [[250, "pymatgen.phonon.ir_spectra.IRDielectricTensor.as_dict"]], "from_dict() (irdielectrictensor class method)": [[250, "pymatgen.phonon.ir_spectra.IRDielectricTensor.from_dict"]], "get_ir_spectra() (irdielectrictensor method)": [[250, "pymatgen.phonon.ir_spectra.IRDielectricTensor.get_ir_spectra"]], "get_plotter() (irdielectrictensor method)": [[250, "pymatgen.phonon.ir_spectra.IRDielectricTensor.get_plotter"]], "get_spectrum() (irdielectrictensor method)": [[250, "pymatgen.phonon.ir_spectra.IRDielectricTensor.get_spectrum"]], "max_phfreq (irdielectrictensor property)": [[250, "pymatgen.phonon.ir_spectra.IRDielectricTensor.max_phfreq"]], "nph_freqs (irdielectrictensor property)": [[250, "pymatgen.phonon.ir_spectra.IRDielectricTensor.nph_freqs"]], "plot() (irdielectrictensor method)": [[250, "pymatgen.phonon.ir_spectra.IRDielectricTensor.plot"]], "pymatgen.phonon.ir_spectra": [[250, "module-pymatgen.phonon.ir_spectra"]], "write_json() (irdielectrictensor method)": [[250, "pymatgen.phonon.ir_spectra.IRDielectricTensor.write_json"]], "frequnits (class in pymatgen.phonon.plotter)": [[251, "pymatgen.phonon.plotter.FreqUnits"]], "gruneisenphononbsplotter (class in pymatgen.phonon.plotter)": [[251, "pymatgen.phonon.plotter.GruneisenPhononBSPlotter"]], "gruneisenplotter (class in pymatgen.phonon.plotter)": [[251, "pymatgen.phonon.plotter.GruneisenPlotter"]], "phononbsplotter (class in pymatgen.phonon.plotter)": [[251, "pymatgen.phonon.plotter.PhononBSPlotter"]], "phonondosplotter (class in pymatgen.phonon.plotter)": [[251, "pymatgen.phonon.plotter.PhononDosPlotter"]], "thermoplotter (class in pymatgen.phonon.plotter)": [[251, "pymatgen.phonon.plotter.ThermoPlotter"]], "add_dos() (phonondosplotter method)": [[251, "pymatgen.phonon.plotter.PhononDosPlotter.add_dos"]], "add_dos_dict() (phonondosplotter method)": [[251, "pymatgen.phonon.plotter.PhononDosPlotter.add_dos_dict"]], "bs_plot_data() (gruneisenphononbsplotter method)": [[251, "pymatgen.phonon.plotter.GruneisenPhononBSPlotter.bs_plot_data"]], "bs_plot_data() (phononbsplotter method)": [[251, "pymatgen.phonon.plotter.PhononBSPlotter.bs_plot_data"]], "factor (frequnits attribute)": [[251, "pymatgen.phonon.plotter.FreqUnits.factor"]], "freq_units() (in module pymatgen.phonon.plotter)": [[251, "pymatgen.phonon.plotter.freq_units"]], "get_dos_dict() (phonondosplotter method)": [[251, "pymatgen.phonon.plotter.PhononDosPlotter.get_dos_dict"]], "get_plot() (gruneisenplotter method)": [[251, "pymatgen.phonon.plotter.GruneisenPlotter.get_plot"]], "get_plot() (phononbsplotter method)": [[251, "pymatgen.phonon.plotter.PhononBSPlotter.get_plot"]], "get_plot() (phonondosplotter method)": [[251, "pymatgen.phonon.plotter.PhononDosPlotter.get_plot"]], "get_plot_gs() (gruneisenphononbsplotter method)": [[251, "pymatgen.phonon.plotter.GruneisenPhononBSPlotter.get_plot_gs"]], "get_proj_plot() (phononbsplotter method)": [[251, "pymatgen.phonon.plotter.PhononBSPlotter.get_proj_plot"]], "get_ticks() (phononbsplotter method)": [[251, "pymatgen.phonon.plotter.PhononBSPlotter.get_ticks"]], "label (frequnits attribute)": [[251, "pymatgen.phonon.plotter.FreqUnits.label"]], "plot_brillouin() (phononbsplotter method)": [[251, "pymatgen.phonon.plotter.PhononBSPlotter.plot_brillouin"]], "plot_compare() (phononbsplotter method)": [[251, "pymatgen.phonon.plotter.PhononBSPlotter.plot_compare"]], "plot_compare_gs() (gruneisenphononbsplotter method)": [[251, "pymatgen.phonon.plotter.GruneisenPhononBSPlotter.plot_compare_gs"]], "plot_cv() (thermoplotter method)": [[251, "pymatgen.phonon.plotter.ThermoPlotter.plot_cv"]], "plot_entropy() (thermoplotter method)": [[251, "pymatgen.phonon.plotter.ThermoPlotter.plot_entropy"]], "plot_helmholtz_free_energy() (thermoplotter method)": [[251, "pymatgen.phonon.plotter.ThermoPlotter.plot_helmholtz_free_energy"]], "plot_internal_energy() (thermoplotter method)": [[251, "pymatgen.phonon.plotter.ThermoPlotter.plot_internal_energy"]], "plot_thermodynamic_properties() (thermoplotter method)": [[251, "pymatgen.phonon.plotter.ThermoPlotter.plot_thermodynamic_properties"]], "pymatgen.phonon.plotter": [[251, "module-pymatgen.phonon.plotter"]], "save_plot() (gruneisenplotter method)": [[251, "pymatgen.phonon.plotter.GruneisenPlotter.save_plot"]], "save_plot() (phononbsplotter method)": [[251, "pymatgen.phonon.plotter.PhononBSPlotter.save_plot"]], "save_plot() (phonondosplotter method)": [[251, "pymatgen.phonon.plotter.PhononDosPlotter.save_plot"]], "save_plot_gs() (gruneisenphononbsplotter method)": [[251, "pymatgen.phonon.plotter.GruneisenPhononBSPlotter.save_plot_gs"]], "show() (gruneisenplotter method)": [[251, "pymatgen.phonon.plotter.GruneisenPlotter.show"]], "show() (phononbsplotter method)": [[251, "pymatgen.phonon.plotter.PhononBSPlotter.show"]], "show() (phonondosplotter method)": [[251, "pymatgen.phonon.plotter.PhononDosPlotter.show"]], "show_gs() (gruneisenphononbsplotter method)": [[251, "pymatgen.phonon.plotter.GruneisenPhononBSPlotter.show_gs"]], "show_proj() (phononbsplotter method)": [[251, "pymatgen.phonon.plotter.PhononBSPlotter.show_proj"]], "b (thermaldisplacementmatrices property)": [[252, "pymatgen.phonon.thermal_displacements.ThermalDisplacementMatrices.B"]], "thermaldisplacementmatrices (class in pymatgen.phonon.thermal_displacements)": [[252, "pymatgen.phonon.thermal_displacements.ThermalDisplacementMatrices"]], "u1u2u3 (thermaldisplacementmatrices property)": [[252, "pymatgen.phonon.thermal_displacements.ThermalDisplacementMatrices.U1U2U3"]], "ucif (thermaldisplacementmatrices property)": [[252, "pymatgen.phonon.thermal_displacements.ThermalDisplacementMatrices.Ucif"]], "ustar (thermaldisplacementmatrices property)": [[252, "pymatgen.phonon.thermal_displacements.ThermalDisplacementMatrices.Ustar"]], "beta (thermaldisplacementmatrices property)": [[252, "pymatgen.phonon.thermal_displacements.ThermalDisplacementMatrices.beta"]], "compute_directionality_quality_criterion() (thermaldisplacementmatrices method)": [[252, "pymatgen.phonon.thermal_displacements.ThermalDisplacementMatrices.compute_directionality_quality_criterion"]], "from_ucif() (thermaldisplacementmatrices static method)": [[252, "pymatgen.phonon.thermal_displacements.ThermalDisplacementMatrices.from_Ucif"]], "from_cif_p1() (thermaldisplacementmatrices static method)": [[252, "pymatgen.phonon.thermal_displacements.ThermalDisplacementMatrices.from_cif_P1"]], "from_structure_with_site_properties_ucif() (thermaldisplacementmatrices static method)": [[252, "pymatgen.phonon.thermal_displacements.ThermalDisplacementMatrices.from_structure_with_site_properties_Ucif"]], "get_full_matrix() (thermaldisplacementmatrices static method)": [[252, "pymatgen.phonon.thermal_displacements.ThermalDisplacementMatrices.get_full_matrix"]], "get_reduced_matrix() (thermaldisplacementmatrices static method)": [[252, "pymatgen.phonon.thermal_displacements.ThermalDisplacementMatrices.get_reduced_matrix"]], "pymatgen.phonon.thermal_displacements": [[252, "module-pymatgen.phonon.thermal_displacements"]], "ratio_prolate (thermaldisplacementmatrices property)": [[252, "pymatgen.phonon.thermal_displacements.ThermalDisplacementMatrices.ratio_prolate"]], "to_structure_with_site_properties_ucif() (thermaldisplacementmatrices method)": [[252, "pymatgen.phonon.thermal_displacements.ThermalDisplacementMatrices.to_structure_with_site_properties_Ucif"]], "visualize_directionality_quality_criterion() (thermaldisplacementmatrices method)": [[252, "pymatgen.phonon.thermal_displacements.ThermalDisplacementMatrices.visualize_directionality_quality_criterion"]], "write_cif() (thermaldisplacementmatrices method)": [[252, "pymatgen.phonon.thermal_displacements.ThermalDisplacementMatrices.write_cif"]], "pymatgen.symmetry": [[253, "module-pymatgen.symmetry"]], "pointgroupanalyzer (class in pymatgen.symmetry.analyzer)": [[254, "pymatgen.symmetry.analyzer.PointGroupAnalyzer"]], "pointgroupoperations (class in pymatgen.symmetry.analyzer)": [[254, "pymatgen.symmetry.analyzer.PointGroupOperations"]], "spacegroupanalyzer (class in pymatgen.symmetry.analyzer)": [[254, "pymatgen.symmetry.analyzer.SpacegroupAnalyzer"]], "spacegroupoperations (class in pymatgen.symmetry.analyzer)": [[254, "pymatgen.symmetry.analyzer.SpacegroupOperations"]], "are_symmetrically_equivalent() (spacegroupoperations method)": [[254, "pymatgen.symmetry.analyzer.SpacegroupOperations.are_symmetrically_equivalent"]], "cluster_sites() (in module pymatgen.symmetry.analyzer)": [[254, "pymatgen.symmetry.analyzer.cluster_sites"]], "find_primitive() (spacegroupanalyzer method)": [[254, "pymatgen.symmetry.analyzer.SpacegroupAnalyzer.find_primitive"]], "generate_full_symmops() (in module pymatgen.symmetry.analyzer)": [[254, "pymatgen.symmetry.analyzer.generate_full_symmops"]], "get_conventional_standard_structure() (spacegroupanalyzer method)": [[254, "pymatgen.symmetry.analyzer.SpacegroupAnalyzer.get_conventional_standard_structure"]], "get_conventional_to_primitive_transformation_matrix() (spacegroupanalyzer method)": [[254, "pymatgen.symmetry.analyzer.SpacegroupAnalyzer.get_conventional_to_primitive_transformation_matrix"]], "get_crystal_system() (spacegroupanalyzer method)": [[254, "pymatgen.symmetry.analyzer.SpacegroupAnalyzer.get_crystal_system"]], "get_equivalent_atoms() (pointgroupanalyzer method)": [[254, "pymatgen.symmetry.analyzer.PointGroupAnalyzer.get_equivalent_atoms"]], "get_hall() (spacegroupanalyzer method)": [[254, "pymatgen.symmetry.analyzer.SpacegroupAnalyzer.get_hall"]], "get_ir_reciprocal_mesh() (spacegroupanalyzer method)": [[254, "pymatgen.symmetry.analyzer.SpacegroupAnalyzer.get_ir_reciprocal_mesh"]], "get_ir_reciprocal_mesh_map() (spacegroupanalyzer method)": [[254, "pymatgen.symmetry.analyzer.SpacegroupAnalyzer.get_ir_reciprocal_mesh_map"]], "get_kpoint_weights() (spacegroupanalyzer method)": [[254, "pymatgen.symmetry.analyzer.SpacegroupAnalyzer.get_kpoint_weights"]], "get_lattice_type() (spacegroupanalyzer method)": [[254, "pymatgen.symmetry.analyzer.SpacegroupAnalyzer.get_lattice_type"]], "get_point_group_operations() (spacegroupanalyzer method)": [[254, "pymatgen.symmetry.analyzer.SpacegroupAnalyzer.get_point_group_operations"]], "get_point_group_symbol() (spacegroupanalyzer method)": [[254, "pymatgen.symmetry.analyzer.SpacegroupAnalyzer.get_point_group_symbol"]], "get_pointgroup() (pointgroupanalyzer method)": [[254, "pymatgen.symmetry.analyzer.PointGroupAnalyzer.get_pointgroup"]], "get_primitive_standard_structure() (spacegroupanalyzer method)": [[254, "pymatgen.symmetry.analyzer.SpacegroupAnalyzer.get_primitive_standard_structure"]], "get_refined_structure() (spacegroupanalyzer method)": [[254, "pymatgen.symmetry.analyzer.SpacegroupAnalyzer.get_refined_structure"]], "get_rotational_symmetry_number() (pointgroupanalyzer method)": [[254, "pymatgen.symmetry.analyzer.PointGroupAnalyzer.get_rotational_symmetry_number"]], "get_space_group_number() (spacegroupanalyzer method)": [[254, "pymatgen.symmetry.analyzer.SpacegroupAnalyzer.get_space_group_number"]], "get_space_group_operations() (spacegroupanalyzer method)": [[254, "pymatgen.symmetry.analyzer.SpacegroupAnalyzer.get_space_group_operations"]], "get_space_group_symbol() (spacegroupanalyzer method)": [[254, "pymatgen.symmetry.analyzer.SpacegroupAnalyzer.get_space_group_symbol"]], "get_symmetrized_structure() (spacegroupanalyzer method)": [[254, "pymatgen.symmetry.analyzer.SpacegroupAnalyzer.get_symmetrized_structure"]], "get_symmetry_dataset() (spacegroupanalyzer method)": [[254, "pymatgen.symmetry.analyzer.SpacegroupAnalyzer.get_symmetry_dataset"]], "get_symmetry_operations() (pointgroupanalyzer method)": [[254, "pymatgen.symmetry.analyzer.PointGroupAnalyzer.get_symmetry_operations"]], "get_symmetry_operations() (spacegroupanalyzer method)": [[254, "pymatgen.symmetry.analyzer.SpacegroupAnalyzer.get_symmetry_operations"]], "inversion_op (pointgroupanalyzer attribute)": [[254, "pymatgen.symmetry.analyzer.PointGroupAnalyzer.inversion_op"]], "is_laue() (spacegroupanalyzer method)": [[254, "pymatgen.symmetry.analyzer.SpacegroupAnalyzer.is_laue"]], "is_valid_op() (pointgroupanalyzer method)": [[254, "pymatgen.symmetry.analyzer.PointGroupAnalyzer.is_valid_op"]], "iterative_symmetrize() (in module pymatgen.symmetry.analyzer)": [[254, "pymatgen.symmetry.analyzer.iterative_symmetrize"]], "pymatgen.symmetry.analyzer": [[254, "module-pymatgen.symmetry.analyzer"]], "sch_symbol (pointgroupoperations attribute)": [[254, "pymatgen.symmetry.analyzer.PointGroupOperations.sch_symbol"]], "symmetrize_molecule() (pointgroupanalyzer method)": [[254, "pymatgen.symmetry.analyzer.PointGroupAnalyzer.symmetrize_molecule"]], "highsymmkpath (class in pymatgen.symmetry.bandstructure)": [[255, "pymatgen.symmetry.bandstructure.HighSymmKpath"]], "equiv_labels (highsymmkpath property)": [[255, "pymatgen.symmetry.bandstructure.HighSymmKpath.equiv_labels"]], "get_continuous_path() (highsymmkpath static method)": [[255, "pymatgen.symmetry.bandstructure.HighSymmKpath.get_continuous_path"]], "label_index (highsymmkpath property)": [[255, "pymatgen.symmetry.bandstructure.HighSymmKpath.label_index"]], "path_lengths (highsymmkpath property)": [[255, "pymatgen.symmetry.bandstructure.HighSymmKpath.path_lengths"]], "path_type (highsymmkpath property)": [[255, "pymatgen.symmetry.bandstructure.HighSymmKpath.path_type"]], "pymatgen.symmetry.bandstructure": [[255, "module-pymatgen.symmetry.bandstructure"]], "pointgroup (class in pymatgen.symmetry.groups)": [[256, "pymatgen.symmetry.groups.PointGroup"]], "spacegroup (class in pymatgen.symmetry.groups)": [[256, "pymatgen.symmetry.groups.SpaceGroup"]], "symmetrygroup (class in pymatgen.symmetry.groups)": [[256, "pymatgen.symmetry.groups.SymmetryGroup"]], "generators (pointgroup attribute)": [[256, "pymatgen.symmetry.groups.PointGroup.generators"]], "generators (spacegroup attribute)": [[256, "pymatgen.symmetry.groups.SpaceGroup.generators"]], "in_array_list() (in module pymatgen.symmetry.groups)": [[256, "pymatgen.symmetry.groups.in_array_list"]], "int_number (spacegroup attribute)": [[256, "pymatgen.symmetry.groups.SpaceGroup.int_number"]], "is_subgroup() (symmetrygroup method)": [[256, "pymatgen.symmetry.groups.SymmetryGroup.is_subgroup"]], "is_supergroup() (symmetrygroup method)": [[256, "pymatgen.symmetry.groups.SymmetryGroup.is_supergroup"]], "order (spacegroup attribute)": [[256, "pymatgen.symmetry.groups.SpaceGroup.order"]], "pymatgen.symmetry.groups": [[256, "module-pymatgen.symmetry.groups"]], "sg_symbol_from_int_number() (in module pymatgen.symmetry.groups)": [[256, "pymatgen.symmetry.groups.sg_symbol_from_int_number"]], "symbol (pointgroup attribute)": [[256, "pymatgen.symmetry.groups.PointGroup.symbol"]], "symbol (spacegroup attribute)": [[256, "pymatgen.symmetry.groups.SpaceGroup.symbol"]], "symmetry_ops (pointgroup attribute)": [[256, "pymatgen.symmetry.groups.PointGroup.symmetry_ops"]], "symmetry_ops (symmetrygroup property)": [[256, "pymatgen.symmetry.groups.SymmetryGroup.symmetry_ops"]], "to_latex_string() (symmetrygroup method)": [[256, "pymatgen.symmetry.groups.SymmetryGroup.to_latex_string"]], "kpathbase (class in pymatgen.symmetry.kpath)": [[257, "pymatgen.symmetry.kpath.KPathBase"]], "kpathlatimermunro (class in pymatgen.symmetry.kpath)": [[257, "pymatgen.symmetry.kpath.KPathLatimerMunro"]], "kpathseek (class in pymatgen.symmetry.kpath)": [[257, "pymatgen.symmetry.kpath.KPathSeek"]], "kpathsetyawancurtarolo (class in pymatgen.symmetry.kpath)": [[257, "pymatgen.symmetry.kpath.KPathSetyawanCurtarolo"]], "labelpoints() (kpathlatimermunro static method)": [[257, "pymatgen.symmetry.kpath.KPathLatimerMunro.LabelPoints"]], "labelsymbol() (kpathlatimermunro static method)": [[257, "pymatgen.symmetry.kpath.KPathLatimerMunro.LabelSymbol"]], "bcc() (kpathsetyawancurtarolo method)": [[257, "pymatgen.symmetry.kpath.KPathSetyawanCurtarolo.bcc"]], "bctet1() (kpathsetyawancurtarolo method)": [[257, "pymatgen.symmetry.kpath.KPathSetyawanCurtarolo.bctet1"]], "bctet2() (kpathsetyawancurtarolo method)": [[257, "pymatgen.symmetry.kpath.KPathSetyawanCurtarolo.bctet2"]], "conventional (kpathsetyawancurtarolo property)": [[257, "pymatgen.symmetry.kpath.KPathSetyawanCurtarolo.conventional"]], "cubic() (kpathsetyawancurtarolo method)": [[257, "pymatgen.symmetry.kpath.KPathSetyawanCurtarolo.cubic"]], "fcc() (kpathsetyawancurtarolo method)": [[257, "pymatgen.symmetry.kpath.KPathSetyawanCurtarolo.fcc"]], "get_kpoints() (kpathbase method)": [[257, "pymatgen.symmetry.kpath.KPathBase.get_kpoints"]], "hex() (kpathsetyawancurtarolo method)": [[257, "pymatgen.symmetry.kpath.KPathSetyawanCurtarolo.hex"]], "kpath (kpathbase property)": [[257, "pymatgen.symmetry.kpath.KPathBase.kpath"]], "lattice (kpathbase property)": [[257, "pymatgen.symmetry.kpath.KPathBase.lattice"]], "mag_type (kpathlatimermunro property)": [[257, "pymatgen.symmetry.kpath.KPathLatimerMunro.mag_type"]], "mcl() (kpathsetyawancurtarolo method)": [[257, "pymatgen.symmetry.kpath.KPathSetyawanCurtarolo.mcl"]], "mclc1() (kpathsetyawancurtarolo method)": [[257, "pymatgen.symmetry.kpath.KPathSetyawanCurtarolo.mclc1"]], "mclc2() (kpathsetyawancurtarolo method)": [[257, "pymatgen.symmetry.kpath.KPathSetyawanCurtarolo.mclc2"]], "mclc3() (kpathsetyawancurtarolo method)": [[257, "pymatgen.symmetry.kpath.KPathSetyawanCurtarolo.mclc3"]], "mclc4() (kpathsetyawancurtarolo method)": [[257, "pymatgen.symmetry.kpath.KPathSetyawanCurtarolo.mclc4"]], "mclc5() (kpathsetyawancurtarolo method)": [[257, "pymatgen.symmetry.kpath.KPathSetyawanCurtarolo.mclc5"]], "orc() (kpathsetyawancurtarolo method)": [[257, "pymatgen.symmetry.kpath.KPathSetyawanCurtarolo.orc"]], "orcc() (kpathsetyawancurtarolo method)": [[257, "pymatgen.symmetry.kpath.KPathSetyawanCurtarolo.orcc"]], "orcf1() (kpathsetyawancurtarolo method)": [[257, "pymatgen.symmetry.kpath.KPathSetyawanCurtarolo.orcf1"]], "orcf2() (kpathsetyawancurtarolo method)": [[257, "pymatgen.symmetry.kpath.KPathSetyawanCurtarolo.orcf2"]], "orcf3() (kpathsetyawancurtarolo method)": [[257, "pymatgen.symmetry.kpath.KPathSetyawanCurtarolo.orcf3"]], "orci() (kpathsetyawancurtarolo method)": [[257, "pymatgen.symmetry.kpath.KPathSetyawanCurtarolo.orci"]], "prim (kpathsetyawancurtarolo property)": [[257, "pymatgen.symmetry.kpath.KPathSetyawanCurtarolo.prim"]], "prim_rec (kpathsetyawancurtarolo property)": [[257, "pymatgen.symmetry.kpath.KPathSetyawanCurtarolo.prim_rec"]], "pymatgen.symmetry.kpath": [[257, "module-pymatgen.symmetry.kpath"]], "rec_lattice (kpathbase property)": [[257, "pymatgen.symmetry.kpath.KPathBase.rec_lattice"]], "rhl1() (kpathsetyawancurtarolo method)": [[257, "pymatgen.symmetry.kpath.KPathSetyawanCurtarolo.rhl1"]], "rhl2() (kpathsetyawancurtarolo method)": [[257, "pymatgen.symmetry.kpath.KPathSetyawanCurtarolo.rhl2"]], "structure (kpathbase property)": [[257, "pymatgen.symmetry.kpath.KPathBase.structure"]], "tet() (kpathsetyawancurtarolo method)": [[257, "pymatgen.symmetry.kpath.KPathSetyawanCurtarolo.tet"]], "tria() (kpathsetyawancurtarolo method)": [[257, "pymatgen.symmetry.kpath.KPathSetyawanCurtarolo.tria"]], "trib() (kpathsetyawancurtarolo method)": [[257, "pymatgen.symmetry.kpath.KPathSetyawanCurtarolo.trib"]], "magneticspacegroup (class in pymatgen.symmetry.maggroups)": [[258, "pymatgen.symmetry.maggroups.MagneticSpaceGroup"]], "pymatgen.symmetry.maggroups": [[258, "module-pymatgen.symmetry.maggroups"]], "jonesfaithfultransformation (class in pymatgen.symmetry.settings)": [[259, "pymatgen.symmetry.settings.JonesFaithfulTransformation"]], "p (jonesfaithfultransformation property)": [[259, "pymatgen.symmetry.settings.JonesFaithfulTransformation.P"], [259, "pymatgen.symmetry.settings.JonesFaithfulTransformation.p"]], "from_origin_shift() (jonesfaithfultransformation class method)": [[259, "pymatgen.symmetry.settings.JonesFaithfulTransformation.from_origin_shift"]], "from_transformation_string() (jonesfaithfultransformation class method)": [[259, "pymatgen.symmetry.settings.JonesFaithfulTransformation.from_transformation_string"]], "inverse (jonesfaithfultransformation property)": [[259, "pymatgen.symmetry.settings.JonesFaithfulTransformation.inverse"]], "parse_transformation_string() (jonesfaithfultransformation static method)": [[259, "pymatgen.symmetry.settings.JonesFaithfulTransformation.parse_transformation_string"]], "pymatgen.symmetry.settings": [[259, "module-pymatgen.symmetry.settings"]], "transform_coords() (jonesfaithfultransformation method)": [[259, "pymatgen.symmetry.settings.JonesFaithfulTransformation.transform_coords"]], "transform_lattice() (jonesfaithfultransformation method)": [[259, "pymatgen.symmetry.settings.JonesFaithfulTransformation.transform_lattice"]], "transform_symmop() (jonesfaithfultransformation method)": [[259, "pymatgen.symmetry.settings.JonesFaithfulTransformation.transform_symmop"]], "transformation_string (jonesfaithfultransformation property)": [[259, "pymatgen.symmetry.settings.JonesFaithfulTransformation.transformation_string"]], "get_shared_symmetry_operations() (in module pymatgen.symmetry.site_symmetries)": [[260, "pymatgen.symmetry.site_symmetries.get_shared_symmetry_operations"]], "get_site_symmetries() (in module pymatgen.symmetry.site_symmetries)": [[260, "pymatgen.symmetry.site_symmetries.get_site_symmetries"]], "pymatgen.symmetry.site_symmetries": [[260, "module-pymatgen.symmetry.site_symmetries"]], "symmetrizedstructure (class in pymatgen.symmetry.structure)": [[261, "pymatgen.symmetry.structure.SymmetrizedStructure"]], "as_dict() (symmetrizedstructure method)": [[261, "pymatgen.symmetry.structure.SymmetrizedStructure.as_dict"]], "copy() (symmetrizedstructure method)": [[261, "pymatgen.symmetry.structure.SymmetrizedStructure.copy"]], "find_equivalent_sites() (symmetrizedstructure method)": [[261, "pymatgen.symmetry.structure.SymmetrizedStructure.find_equivalent_sites"]], "from_dict() (symmetrizedstructure class method)": [[261, "pymatgen.symmetry.structure.SymmetrizedStructure.from_dict"]], "pymatgen.symmetry.structure": [[261, "module-pymatgen.symmetry.structure"]], "pymatgen.transformations": [[262, "module-pymatgen.transformations"]], "addadsorbatetransformation (class in pymatgen.transformations.advanced_transformations)": [[263, "pymatgen.transformations.advanced_transformations.AddAdsorbateTransformation"]], "chargebalancetransformation (class in pymatgen.transformations.advanced_transformations)": [[263, "pymatgen.transformations.advanced_transformations.ChargeBalanceTransformation"]], "cubicsupercelltransformation (class in pymatgen.transformations.advanced_transformations)": [[263, "pymatgen.transformations.advanced_transformations.CubicSupercellTransformation"]], "disorderorderedtransformation (class in pymatgen.transformations.advanced_transformations)": [[263, "pymatgen.transformations.advanced_transformations.DisorderOrderedTransformation"]], "dopingtransformation (class in pymatgen.transformations.advanced_transformations)": [[263, "pymatgen.transformations.advanced_transformations.DopingTransformation"]], "enumeratestructuretransformation (class in pymatgen.transformations.advanced_transformations)": [[263, "pymatgen.transformations.advanced_transformations.EnumerateStructureTransformation"]], "grainboundarytransformation (class in pymatgen.transformations.advanced_transformations)": [[263, "pymatgen.transformations.advanced_transformations.GrainBoundaryTransformation"]], "magorderparameterconstraint (class in pymatgen.transformations.advanced_transformations)": [[263, "pymatgen.transformations.advanced_transformations.MagOrderParameterConstraint"]], "magorderingtransformation (class in pymatgen.transformations.advanced_transformations)": [[263, "pymatgen.transformations.advanced_transformations.MagOrderingTransformation"]], "montecarlorattletransformation (class in pymatgen.transformations.advanced_transformations)": [[263, "pymatgen.transformations.advanced_transformations.MonteCarloRattleTransformation"]], "multiplesubstitutiontransformation (class in pymatgen.transformations.advanced_transformations)": [[263, "pymatgen.transformations.advanced_transformations.MultipleSubstitutionTransformation"]], "sqstransformation (class in pymatgen.transformations.advanced_transformations)": [[263, "pymatgen.transformations.advanced_transformations.SQSTransformation"]], "slabtransformation (class in pymatgen.transformations.advanced_transformations)": [[263, "pymatgen.transformations.advanced_transformations.SlabTransformation"]], "substitutesurfacesitetransformation (class in pymatgen.transformations.advanced_transformations)": [[263, "pymatgen.transformations.advanced_transformations.SubstituteSurfaceSiteTransformation"]], "substitutionpredictortransformation (class in pymatgen.transformations.advanced_transformations)": [[263, "pymatgen.transformations.advanced_transformations.SubstitutionPredictorTransformation"]], "supertransformation (class in pymatgen.transformations.advanced_transformations)": [[263, "pymatgen.transformations.advanced_transformations.SuperTransformation"]], "apply_transformation() (addadsorbatetransformation method)": [[263, "pymatgen.transformations.advanced_transformations.AddAdsorbateTransformation.apply_transformation"]], "apply_transformation() (chargebalancetransformation method)": [[263, "pymatgen.transformations.advanced_transformations.ChargeBalanceTransformation.apply_transformation"]], "apply_transformation() (cubicsupercelltransformation method)": [[263, "pymatgen.transformations.advanced_transformations.CubicSupercellTransformation.apply_transformation"]], "apply_transformation() (disorderorderedtransformation method)": [[263, "pymatgen.transformations.advanced_transformations.DisorderOrderedTransformation.apply_transformation"]], "apply_transformation() (dopingtransformation method)": [[263, "pymatgen.transformations.advanced_transformations.DopingTransformation.apply_transformation"]], "apply_transformation() (enumeratestructuretransformation method)": [[263, "pymatgen.transformations.advanced_transformations.EnumerateStructureTransformation.apply_transformation"]], "apply_transformation() (grainboundarytransformation method)": [[263, "pymatgen.transformations.advanced_transformations.GrainBoundaryTransformation.apply_transformation"]], "apply_transformation() (magorderingtransformation method)": [[263, "pymatgen.transformations.advanced_transformations.MagOrderingTransformation.apply_transformation"]], "apply_transformation() (montecarlorattletransformation method)": [[263, "pymatgen.transformations.advanced_transformations.MonteCarloRattleTransformation.apply_transformation"]], "apply_transformation() (multiplesubstitutiontransformation method)": [[263, "pymatgen.transformations.advanced_transformations.MultipleSubstitutionTransformation.apply_transformation"]], "apply_transformation() (sqstransformation method)": [[263, "pymatgen.transformations.advanced_transformations.SQSTransformation.apply_transformation"]], "apply_transformation() (slabtransformation method)": [[263, "pymatgen.transformations.advanced_transformations.SlabTransformation.apply_transformation"]], "apply_transformation() (substitutesurfacesitetransformation method)": [[263, "pymatgen.transformations.advanced_transformations.SubstituteSurfaceSiteTransformation.apply_transformation"]], "apply_transformation() (substitutionpredictortransformation method)": [[263, "pymatgen.transformations.advanced_transformations.SubstitutionPredictorTransformation.apply_transformation"]], "apply_transformation() (supertransformation method)": [[263, "pymatgen.transformations.advanced_transformations.SuperTransformation.apply_transformation"]], "determine_min_cell() (magorderingtransformation static method)": [[263, "pymatgen.transformations.advanced_transformations.MagOrderingTransformation.determine_min_cell"]], "inverse (addadsorbatetransformation property)": [[263, "pymatgen.transformations.advanced_transformations.AddAdsorbateTransformation.inverse"]], "inverse (chargebalancetransformation property)": [[263, "pymatgen.transformations.advanced_transformations.ChargeBalanceTransformation.inverse"]], "inverse (cubicsupercelltransformation property)": [[263, "pymatgen.transformations.advanced_transformations.CubicSupercellTransformation.inverse"]], "inverse (disorderorderedtransformation property)": [[263, "pymatgen.transformations.advanced_transformations.DisorderOrderedTransformation.inverse"]], "inverse (dopingtransformation property)": [[263, "pymatgen.transformations.advanced_transformations.DopingTransformation.inverse"]], "inverse (enumeratestructuretransformation property)": [[263, "pymatgen.transformations.advanced_transformations.EnumerateStructureTransformation.inverse"]], "inverse (grainboundarytransformation property)": [[263, "pymatgen.transformations.advanced_transformations.GrainBoundaryTransformation.inverse"]], "inverse (magorderingtransformation property)": [[263, "pymatgen.transformations.advanced_transformations.MagOrderingTransformation.inverse"]], "inverse (montecarlorattletransformation property)": [[263, "pymatgen.transformations.advanced_transformations.MonteCarloRattleTransformation.inverse"]], "inverse (multiplesubstitutiontransformation property)": [[263, "pymatgen.transformations.advanced_transformations.MultipleSubstitutionTransformation.inverse"]], "inverse (sqstransformation property)": [[263, "pymatgen.transformations.advanced_transformations.SQSTransformation.inverse"]], "inverse (slabtransformation property)": [[263, "pymatgen.transformations.advanced_transformations.SlabTransformation.inverse"]], "inverse (substitutesurfacesitetransformation property)": [[263, "pymatgen.transformations.advanced_transformations.SubstituteSurfaceSiteTransformation.inverse"]], "inverse (substitutionpredictortransformation property)": [[263, "pymatgen.transformations.advanced_transformations.SubstitutionPredictorTransformation.inverse"]], "inverse (supertransformation property)": [[263, "pymatgen.transformations.advanced_transformations.SuperTransformation.inverse"]], "is_one_to_many (addadsorbatetransformation property)": [[263, "pymatgen.transformations.advanced_transformations.AddAdsorbateTransformation.is_one_to_many"]], "is_one_to_many (chargebalancetransformation property)": [[263, "pymatgen.transformations.advanced_transformations.ChargeBalanceTransformation.is_one_to_many"]], "is_one_to_many (cubicsupercelltransformation property)": [[263, "pymatgen.transformations.advanced_transformations.CubicSupercellTransformation.is_one_to_many"]], "is_one_to_many (disorderorderedtransformation property)": [[263, "pymatgen.transformations.advanced_transformations.DisorderOrderedTransformation.is_one_to_many"]], "is_one_to_many (dopingtransformation property)": [[263, "pymatgen.transformations.advanced_transformations.DopingTransformation.is_one_to_many"]], "is_one_to_many (enumeratestructuretransformation property)": [[263, "pymatgen.transformations.advanced_transformations.EnumerateStructureTransformation.is_one_to_many"]], "is_one_to_many (grainboundarytransformation property)": [[263, "pymatgen.transformations.advanced_transformations.GrainBoundaryTransformation.is_one_to_many"]], "is_one_to_many (magorderingtransformation property)": [[263, "pymatgen.transformations.advanced_transformations.MagOrderingTransformation.is_one_to_many"]], "is_one_to_many (montecarlorattletransformation property)": [[263, "pymatgen.transformations.advanced_transformations.MonteCarloRattleTransformation.is_one_to_many"]], "is_one_to_many (multiplesubstitutiontransformation property)": [[263, "pymatgen.transformations.advanced_transformations.MultipleSubstitutionTransformation.is_one_to_many"]], "is_one_to_many (sqstransformation property)": [[263, "pymatgen.transformations.advanced_transformations.SQSTransformation.is_one_to_many"]], "is_one_to_many (slabtransformation property)": [[263, "pymatgen.transformations.advanced_transformations.SlabTransformation.is_one_to_many"]], "is_one_to_many (substitutesurfacesitetransformation property)": [[263, "pymatgen.transformations.advanced_transformations.SubstituteSurfaceSiteTransformation.is_one_to_many"]], "is_one_to_many (substitutionpredictortransformation property)": [[263, "pymatgen.transformations.advanced_transformations.SubstitutionPredictorTransformation.is_one_to_many"]], "is_one_to_many (supertransformation property)": [[263, "pymatgen.transformations.advanced_transformations.SuperTransformation.is_one_to_many"]], "pymatgen.transformations.advanced_transformations": [[263, "module-pymatgen.transformations.advanced_transformations"]], "satisfies_constraint() (magorderparameterconstraint method)": [[263, "pymatgen.transformations.advanced_transformations.MagOrderParameterConstraint.satisfies_constraint"]], "algo_best_first (partialremovesitestransformation attribute)": [[264, "pymatgen.transformations.site_transformations.PartialRemoveSitesTransformation.ALGO_BEST_FIRST"]], "algo_complete (partialremovesitestransformation attribute)": [[264, "pymatgen.transformations.site_transformations.PartialRemoveSitesTransformation.ALGO_COMPLETE"]], "algo_enumerate (partialremovesitestransformation attribute)": [[264, "pymatgen.transformations.site_transformations.PartialRemoveSitesTransformation.ALGO_ENUMERATE"]], "algo_fast (partialremovesitestransformation attribute)": [[264, "pymatgen.transformations.site_transformations.PartialRemoveSitesTransformation.ALGO_FAST"]], "addsitepropertytransformation (class in pymatgen.transformations.site_transformations)": [[264, "pymatgen.transformations.site_transformations.AddSitePropertyTransformation"]], "insertsitestransformation (class in pymatgen.transformations.site_transformations)": [[264, "pymatgen.transformations.site_transformations.InsertSitesTransformation"]], "partialremovesitestransformation (class in pymatgen.transformations.site_transformations)": [[264, "pymatgen.transformations.site_transformations.PartialRemoveSitesTransformation"]], "radialsitedistortiontransformation (class in pymatgen.transformations.site_transformations)": [[264, "pymatgen.transformations.site_transformations.RadialSiteDistortionTransformation"]], "removesitestransformation (class in pymatgen.transformations.site_transformations)": [[264, "pymatgen.transformations.site_transformations.RemoveSitesTransformation"]], "replacesitespeciestransformation (class in pymatgen.transformations.site_transformations)": [[264, "pymatgen.transformations.site_transformations.ReplaceSiteSpeciesTransformation"]], "translatesitestransformation (class in pymatgen.transformations.site_transformations)": [[264, "pymatgen.transformations.site_transformations.TranslateSitesTransformation"]], "apply_transformation() (addsitepropertytransformation method)": [[264, "pymatgen.transformations.site_transformations.AddSitePropertyTransformation.apply_transformation"]], "apply_transformation() (insertsitestransformation method)": [[264, "pymatgen.transformations.site_transformations.InsertSitesTransformation.apply_transformation"]], "apply_transformation() (partialremovesitestransformation method)": [[264, "pymatgen.transformations.site_transformations.PartialRemoveSitesTransformation.apply_transformation"]], "apply_transformation() (radialsitedistortiontransformation method)": [[264, "pymatgen.transformations.site_transformations.RadialSiteDistortionTransformation.apply_transformation"]], "apply_transformation() (removesitestransformation method)": [[264, "pymatgen.transformations.site_transformations.RemoveSitesTransformation.apply_transformation"]], "apply_transformation() (replacesitespeciestransformation method)": [[264, "pymatgen.transformations.site_transformations.ReplaceSiteSpeciesTransformation.apply_transformation"]], "apply_transformation() (translatesitestransformation method)": [[264, "pymatgen.transformations.site_transformations.TranslateSitesTransformation.apply_transformation"]], "as_dict() (translatesitestransformation method)": [[264, "pymatgen.transformations.site_transformations.TranslateSitesTransformation.as_dict"]], "inverse (addsitepropertytransformation property)": [[264, "pymatgen.transformations.site_transformations.AddSitePropertyTransformation.inverse"]], "inverse (insertsitestransformation property)": [[264, "pymatgen.transformations.site_transformations.InsertSitesTransformation.inverse"]], "inverse (partialremovesitestransformation property)": [[264, "pymatgen.transformations.site_transformations.PartialRemoveSitesTransformation.inverse"]], "inverse (radialsitedistortiontransformation property)": [[264, "pymatgen.transformations.site_transformations.RadialSiteDistortionTransformation.inverse"]], "inverse (removesitestransformation property)": [[264, "pymatgen.transformations.site_transformations.RemoveSitesTransformation.inverse"]], "inverse (replacesitespeciestransformation property)": [[264, "pymatgen.transformations.site_transformations.ReplaceSiteSpeciesTransformation.inverse"]], "inverse (translatesitestransformation property)": [[264, "pymatgen.transformations.site_transformations.TranslateSitesTransformation.inverse"]], "is_one_to_many (addsitepropertytransformation property)": [[264, "pymatgen.transformations.site_transformations.AddSitePropertyTransformation.is_one_to_many"]], "is_one_to_many (insertsitestransformation property)": [[264, "pymatgen.transformations.site_transformations.InsertSitesTransformation.is_one_to_many"]], "is_one_to_many (partialremovesitestransformation property)": [[264, "pymatgen.transformations.site_transformations.PartialRemoveSitesTransformation.is_one_to_many"]], "is_one_to_many (radialsitedistortiontransformation property)": [[264, "pymatgen.transformations.site_transformations.RadialSiteDistortionTransformation.is_one_to_many"]], "is_one_to_many (removesitestransformation property)": [[264, "pymatgen.transformations.site_transformations.RemoveSitesTransformation.is_one_to_many"]], "is_one_to_many (replacesitespeciestransformation property)": [[264, "pymatgen.transformations.site_transformations.ReplaceSiteSpeciesTransformation.is_one_to_many"]], "is_one_to_many (translatesitestransformation property)": [[264, "pymatgen.transformations.site_transformations.TranslateSitesTransformation.is_one_to_many"]], "pymatgen.transformations.site_transformations": [[264, "module-pymatgen.transformations.site_transformations"]], "use_multiprocessing (radialsitedistortiontransformation property)": [[264, "pymatgen.transformations.site_transformations.RadialSiteDistortionTransformation.use_multiprocessing"]], "algo_best_first (orderdisorderedstructuretransformation attribute)": [[265, "pymatgen.transformations.standard_transformations.OrderDisorderedStructureTransformation.ALGO_BEST_FIRST"]], "algo_best_first (partialremovespecietransformation attribute)": [[265, "pymatgen.transformations.standard_transformations.PartialRemoveSpecieTransformation.ALGO_BEST_FIRST"]], "algo_complete (orderdisorderedstructuretransformation attribute)": [[265, "pymatgen.transformations.standard_transformations.OrderDisorderedStructureTransformation.ALGO_COMPLETE"]], "algo_complete (partialremovespecietransformation attribute)": [[265, "pymatgen.transformations.standard_transformations.PartialRemoveSpecieTransformation.ALGO_COMPLETE"]], "algo_enumerate (partialremovespecietransformation attribute)": [[265, "pymatgen.transformations.standard_transformations.PartialRemoveSpecieTransformation.ALGO_ENUMERATE"]], "algo_fast (orderdisorderedstructuretransformation attribute)": [[265, "pymatgen.transformations.standard_transformations.OrderDisorderedStructureTransformation.ALGO_FAST"]], "algo_fast (partialremovespecietransformation attribute)": [[265, "pymatgen.transformations.standard_transformations.PartialRemoveSpecieTransformation.ALGO_FAST"]], "autooxistatedecorationtransformation (class in pymatgen.transformations.standard_transformations)": [[265, "pymatgen.transformations.standard_transformations.AutoOxiStateDecorationTransformation"]], "chargedcelltransformation (class in pymatgen.transformations.standard_transformations)": [[265, "pymatgen.transformations.standard_transformations.ChargedCellTransformation"]], "conventionalcelltransformation (class in pymatgen.transformations.standard_transformations)": [[265, "pymatgen.transformations.standard_transformations.ConventionalCellTransformation"]], "deformstructuretransformation (class in pymatgen.transformations.standard_transformations)": [[265, "pymatgen.transformations.standard_transformations.DeformStructureTransformation"]], "discretizeoccupanciestransformation (class in pymatgen.transformations.standard_transformations)": [[265, "pymatgen.transformations.standard_transformations.DiscretizeOccupanciesTransformation"]], "orderdisorderedstructuretransformation (class in pymatgen.transformations.standard_transformations)": [[265, "pymatgen.transformations.standard_transformations.OrderDisorderedStructureTransformation"]], "oxidationstatedecorationtransformation (class in pymatgen.transformations.standard_transformations)": [[265, "pymatgen.transformations.standard_transformations.OxidationStateDecorationTransformation"]], "oxidationstateremovaltransformation (class in pymatgen.transformations.standard_transformations)": [[265, "pymatgen.transformations.standard_transformations.OxidationStateRemovalTransformation"]], "partialremovespecietransformation (class in pymatgen.transformations.standard_transformations)": [[265, "pymatgen.transformations.standard_transformations.PartialRemoveSpecieTransformation"]], "perturbstructuretransformation (class in pymatgen.transformations.standard_transformations)": [[265, "pymatgen.transformations.standard_transformations.PerturbStructureTransformation"]], "primitivecelltransformation (class in pymatgen.transformations.standard_transformations)": [[265, "pymatgen.transformations.standard_transformations.PrimitiveCellTransformation"]], "removespeciestransformation (class in pymatgen.transformations.standard_transformations)": [[265, "pymatgen.transformations.standard_transformations.RemoveSpeciesTransformation"]], "rotationtransformation (class in pymatgen.transformations.standard_transformations)": [[265, "pymatgen.transformations.standard_transformations.RotationTransformation"]], "scaletorelaxedtransformation (class in pymatgen.transformations.standard_transformations)": [[265, "pymatgen.transformations.standard_transformations.ScaleToRelaxedTransformation"]], "substitutiontransformation (class in pymatgen.transformations.standard_transformations)": [[265, "pymatgen.transformations.standard_transformations.SubstitutionTransformation"]], "supercelltransformation (class in pymatgen.transformations.standard_transformations)": [[265, "pymatgen.transformations.standard_transformations.SupercellTransformation"]], "apply_transformation() (autooxistatedecorationtransformation method)": [[265, "pymatgen.transformations.standard_transformations.AutoOxiStateDecorationTransformation.apply_transformation"]], "apply_transformation() (chargedcelltransformation method)": [[265, "pymatgen.transformations.standard_transformations.ChargedCellTransformation.apply_transformation"]], "apply_transformation() (conventionalcelltransformation method)": [[265, "pymatgen.transformations.standard_transformations.ConventionalCellTransformation.apply_transformation"]], "apply_transformation() (deformstructuretransformation method)": [[265, "pymatgen.transformations.standard_transformations.DeformStructureTransformation.apply_transformation"]], "apply_transformation() (discretizeoccupanciestransformation method)": [[265, "pymatgen.transformations.standard_transformations.DiscretizeOccupanciesTransformation.apply_transformation"]], "apply_transformation() (orderdisorderedstructuretransformation method)": [[265, "pymatgen.transformations.standard_transformations.OrderDisorderedStructureTransformation.apply_transformation"]], "apply_transformation() (oxidationstatedecorationtransformation method)": [[265, "pymatgen.transformations.standard_transformations.OxidationStateDecorationTransformation.apply_transformation"]], "apply_transformation() (oxidationstateremovaltransformation method)": [[265, "pymatgen.transformations.standard_transformations.OxidationStateRemovalTransformation.apply_transformation"]], "apply_transformation() (partialremovespecietransformation method)": [[265, "pymatgen.transformations.standard_transformations.PartialRemoveSpecieTransformation.apply_transformation"]], "apply_transformation() (perturbstructuretransformation method)": [[265, "pymatgen.transformations.standard_transformations.PerturbStructureTransformation.apply_transformation"]], "apply_transformation() (primitivecelltransformation method)": [[265, "pymatgen.transformations.standard_transformations.PrimitiveCellTransformation.apply_transformation"]], "apply_transformation() (removespeciestransformation method)": [[265, "pymatgen.transformations.standard_transformations.RemoveSpeciesTransformation.apply_transformation"]], "apply_transformation() (rotationtransformation method)": [[265, "pymatgen.transformations.standard_transformations.RotationTransformation.apply_transformation"]], "apply_transformation() (scaletorelaxedtransformation method)": [[265, "pymatgen.transformations.standard_transformations.ScaleToRelaxedTransformation.apply_transformation"]], "apply_transformation() (substitutiontransformation method)": [[265, "pymatgen.transformations.standard_transformations.SubstitutionTransformation.apply_transformation"]], "apply_transformation() (supercelltransformation method)": [[265, "pymatgen.transformations.standard_transformations.SupercellTransformation.apply_transformation"]], "from_scaling_factors() (supercelltransformation static method)": [[265, "pymatgen.transformations.standard_transformations.SupercellTransformation.from_scaling_factors"]], "inverse (autooxistatedecorationtransformation property)": [[265, "pymatgen.transformations.standard_transformations.AutoOxiStateDecorationTransformation.inverse"]], "inverse (chargedcelltransformation property)": [[265, "pymatgen.transformations.standard_transformations.ChargedCellTransformation.inverse"]], "inverse (conventionalcelltransformation property)": [[265, "pymatgen.transformations.standard_transformations.ConventionalCellTransformation.inverse"]], "inverse (deformstructuretransformation property)": [[265, "pymatgen.transformations.standard_transformations.DeformStructureTransformation.inverse"]], "inverse (discretizeoccupanciestransformation property)": [[265, "pymatgen.transformations.standard_transformations.DiscretizeOccupanciesTransformation.inverse"]], "inverse (orderdisorderedstructuretransformation property)": [[265, "pymatgen.transformations.standard_transformations.OrderDisorderedStructureTransformation.inverse"]], "inverse (oxidationstatedecorationtransformation property)": [[265, "pymatgen.transformations.standard_transformations.OxidationStateDecorationTransformation.inverse"]], "inverse (oxidationstateremovaltransformation property)": [[265, "pymatgen.transformations.standard_transformations.OxidationStateRemovalTransformation.inverse"]], "inverse (partialremovespecietransformation property)": [[265, "pymatgen.transformations.standard_transformations.PartialRemoveSpecieTransformation.inverse"]], "inverse (perturbstructuretransformation property)": [[265, "pymatgen.transformations.standard_transformations.PerturbStructureTransformation.inverse"]], "inverse (primitivecelltransformation property)": [[265, "pymatgen.transformations.standard_transformations.PrimitiveCellTransformation.inverse"]], "inverse (removespeciestransformation property)": [[265, "pymatgen.transformations.standard_transformations.RemoveSpeciesTransformation.inverse"]], "inverse (rotationtransformation property)": [[265, "pymatgen.transformations.standard_transformations.RotationTransformation.inverse"]], "inverse (scaletorelaxedtransformation property)": [[265, "pymatgen.transformations.standard_transformations.ScaleToRelaxedTransformation.inverse"]], "inverse (substitutiontransformation property)": [[265, "pymatgen.transformations.standard_transformations.SubstitutionTransformation.inverse"]], "inverse (supercelltransformation property)": [[265, "pymatgen.transformations.standard_transformations.SupercellTransformation.inverse"]], "is_one_to_many (autooxistatedecorationtransformation property)": [[265, "pymatgen.transformations.standard_transformations.AutoOxiStateDecorationTransformation.is_one_to_many"]], "is_one_to_many (chargedcelltransformation property)": [[265, "pymatgen.transformations.standard_transformations.ChargedCellTransformation.is_one_to_many"]], "is_one_to_many (conventionalcelltransformation property)": [[265, "pymatgen.transformations.standard_transformations.ConventionalCellTransformation.is_one_to_many"]], "is_one_to_many (deformstructuretransformation property)": [[265, "pymatgen.transformations.standard_transformations.DeformStructureTransformation.is_one_to_many"]], "is_one_to_many (discretizeoccupanciestransformation property)": [[265, "pymatgen.transformations.standard_transformations.DiscretizeOccupanciesTransformation.is_one_to_many"]], "is_one_to_many (orderdisorderedstructuretransformation property)": [[265, "pymatgen.transformations.standard_transformations.OrderDisorderedStructureTransformation.is_one_to_many"]], "is_one_to_many (oxidationstatedecorationtransformation property)": [[265, "pymatgen.transformations.standard_transformations.OxidationStateDecorationTransformation.is_one_to_many"]], "is_one_to_many (oxidationstateremovaltransformation property)": [[265, "pymatgen.transformations.standard_transformations.OxidationStateRemovalTransformation.is_one_to_many"]], "is_one_to_many (partialremovespecietransformation property)": [[265, "pymatgen.transformations.standard_transformations.PartialRemoveSpecieTransformation.is_one_to_many"]], "is_one_to_many (perturbstructuretransformation property)": [[265, "pymatgen.transformations.standard_transformations.PerturbStructureTransformation.is_one_to_many"]], "is_one_to_many (primitivecelltransformation property)": [[265, "pymatgen.transformations.standard_transformations.PrimitiveCellTransformation.is_one_to_many"]], "is_one_to_many (removespeciestransformation property)": [[265, "pymatgen.transformations.standard_transformations.RemoveSpeciesTransformation.is_one_to_many"]], "is_one_to_many (rotationtransformation property)": [[265, "pymatgen.transformations.standard_transformations.RotationTransformation.is_one_to_many"]], "is_one_to_many (scaletorelaxedtransformation property)": [[265, "pymatgen.transformations.standard_transformations.ScaleToRelaxedTransformation.is_one_to_many"]], "is_one_to_many (substitutiontransformation property)": [[265, "pymatgen.transformations.standard_transformations.SubstitutionTransformation.is_one_to_many"]], "is_one_to_many (supercelltransformation property)": [[265, "pymatgen.transformations.standard_transformations.SupercellTransformation.is_one_to_many"]], "lowest_energy_structure (orderdisorderedstructuretransformation property)": [[265, "pymatgen.transformations.standard_transformations.OrderDisorderedStructureTransformation.lowest_energy_structure"]], "pymatgen.transformations.standard_transformations": [[265, "module-pymatgen.transformations.standard_transformations"]], "abstracttransformation (class in pymatgen.transformations.transformation_abc)": [[266, "pymatgen.transformations.transformation_abc.AbstractTransformation"]], "apply_transformation() (abstracttransformation method)": [[266, "pymatgen.transformations.transformation_abc.AbstractTransformation.apply_transformation"]], "inverse (abstracttransformation property)": [[266, "pymatgen.transformations.transformation_abc.AbstractTransformation.inverse"]], "is_one_to_many (abstracttransformation property)": [[266, "pymatgen.transformations.transformation_abc.AbstractTransformation.is_one_to_many"]], "pymatgen.transformations.transformation_abc": [[266, "module-pymatgen.transformations.transformation_abc"]], "use_multiprocessing (abstracttransformation property)": [[266, "pymatgen.transformations.transformation_abc.AbstractTransformation.use_multiprocessing"]], "pymatgen.util": [[267, "module-pymatgen.util"]], "splineinputerror": [[268, "pymatgen.util.convergence.SplineInputError"]], "determine_convergence() (in module pymatgen.util.convergence)": [[268, "pymatgen.util.convergence.determine_convergence"]], "exponential() (in module pymatgen.util.convergence)": [[268, "pymatgen.util.convergence.exponential"]], "extrapolate_reciprocal() (in module pymatgen.util.convergence)": [[268, "pymatgen.util.convergence.extrapolate_reciprocal"]], "extrapolate_simple_reciprocal() (in module pymatgen.util.convergence)": [[268, "pymatgen.util.convergence.extrapolate_simple_reciprocal"]], "get_derivatives() (in module pymatgen.util.convergence)": [[268, "pymatgen.util.convergence.get_derivatives"]], "get_weights() (in module pymatgen.util.convergence)": [[268, "pymatgen.util.convergence.get_weights"]], "id_generator() (in module pymatgen.util.convergence)": [[268, "pymatgen.util.convergence.id_generator"]], "measure() (in module pymatgen.util.convergence)": [[268, "pymatgen.util.convergence.measure"]], "multi_curve_fit() (in module pymatgen.util.convergence)": [[268, "pymatgen.util.convergence.multi_curve_fit"]], "multi_reciprocal_extra() (in module pymatgen.util.convergence)": [[268, "pymatgen.util.convergence.multi_reciprocal_extra"]], "p0_exponential() (in module pymatgen.util.convergence)": [[268, "pymatgen.util.convergence.p0_exponential"]], "p0_reciprocal() (in module pymatgen.util.convergence)": [[268, "pymatgen.util.convergence.p0_reciprocal"]], "p0_simple_2reciprocal() (in module pymatgen.util.convergence)": [[268, "pymatgen.util.convergence.p0_simple_2reciprocal"]], "p0_simple_4reciprocal() (in module pymatgen.util.convergence)": [[268, "pymatgen.util.convergence.p0_simple_4reciprocal"]], "p0_simple_5reciprocal() (in module pymatgen.util.convergence)": [[268, "pymatgen.util.convergence.p0_simple_5reciprocal"]], "p0_simple_reciprocal() (in module pymatgen.util.convergence)": [[268, "pymatgen.util.convergence.p0_simple_reciprocal"]], "p0_single_reciprocal() (in module pymatgen.util.convergence)": [[268, "pymatgen.util.convergence.p0_single_reciprocal"]], "print_and_raise_error() (in module pymatgen.util.convergence)": [[268, "pymatgen.util.convergence.print_and_raise_error"]], "print_plot_line() (in module pymatgen.util.convergence)": [[268, "pymatgen.util.convergence.print_plot_line"]], "pymatgen.util.convergence": [[268, "module-pymatgen.util.convergence"]], "reciprocal() (in module pymatgen.util.convergence)": [[268, "pymatgen.util.convergence.reciprocal"]], "simple_2reciprocal() (in module pymatgen.util.convergence)": [[268, "pymatgen.util.convergence.simple_2reciprocal"]], "simple_4reciprocal() (in module pymatgen.util.convergence)": [[268, "pymatgen.util.convergence.simple_4reciprocal"]], "simple_5reciprocal() (in module pymatgen.util.convergence)": [[268, "pymatgen.util.convergence.simple_5reciprocal"]], "simple_reciprocal() (in module pymatgen.util.convergence)": [[268, "pymatgen.util.convergence.simple_reciprocal"]], "single_reciprocal() (in module pymatgen.util.convergence)": [[268, "pymatgen.util.convergence.single_reciprocal"]], "simplex (class in pymatgen.util.coord)": [[269, "pymatgen.util.coord.Simplex"]], "all_distances() (in module pymatgen.util.coord)": [[269, "pymatgen.util.coord.all_distances"]], "bary_coords() (simplex method)": [[269, "pymatgen.util.coord.Simplex.bary_coords"]], "barycentric_coords() (in module pymatgen.util.coord)": [[269, "pymatgen.util.coord.barycentric_coords"]], "coord_list_mapping() (in module pymatgen.util.coord)": [[269, "pymatgen.util.coord.coord_list_mapping"]], "coord_list_mapping_pbc() (in module pymatgen.util.coord)": [[269, "pymatgen.util.coord.coord_list_mapping_pbc"]], "coords (simplex property)": [[269, "pymatgen.util.coord.Simplex.coords"]], "find_in_coord_list() (in module pymatgen.util.coord)": [[269, "pymatgen.util.coord.find_in_coord_list"]], "find_in_coord_list_pbc() (in module pymatgen.util.coord)": [[269, "pymatgen.util.coord.find_in_coord_list_pbc"]], "get_angle() (in module pymatgen.util.coord)": [[269, "pymatgen.util.coord.get_angle"]], "get_linear_interpolated_value() (in module pymatgen.util.coord)": [[269, "pymatgen.util.coord.get_linear_interpolated_value"]], "in_coord_list() (in module pymatgen.util.coord)": [[269, "pymatgen.util.coord.in_coord_list"]], "in_coord_list_pbc() (in module pymatgen.util.coord)": [[269, "pymatgen.util.coord.in_coord_list_pbc"]], "in_simplex() (simplex method)": [[269, "pymatgen.util.coord.Simplex.in_simplex"]], "is_coord_subset() (in module pymatgen.util.coord)": [[269, "pymatgen.util.coord.is_coord_subset"]], "is_coord_subset_pbc() (in module pymatgen.util.coord)": [[269, "pymatgen.util.coord.is_coord_subset_pbc"]], "lattice_points_in_supercell() (in module pymatgen.util.coord)": [[269, "pymatgen.util.coord.lattice_points_in_supercell"]], "line_intersection() (simplex method)": [[269, "pymatgen.util.coord.Simplex.line_intersection"]], "pbc_diff() (in module pymatgen.util.coord)": [[269, "pymatgen.util.coord.pbc_diff"]], "pbc_shortest_vectors() (in module pymatgen.util.coord)": [[269, "pymatgen.util.coord.pbc_shortest_vectors"]], "point_from_bary_coords() (simplex method)": [[269, "pymatgen.util.coord.Simplex.point_from_bary_coords"]], "pymatgen.util.coord": [[269, "module-pymatgen.util.coord"]], "volume (simplex property)": [[269, "pymatgen.util.coord.Simplex.volume"]], "coord_list_mapping_pbc() (in module pymatgen.util.coord_cython)": [[270, "pymatgen.util.coord_cython.coord_list_mapping_pbc"]], "is_coord_subset_pbc() (in module pymatgen.util.coord_cython)": [[270, "pymatgen.util.coord_cython.is_coord_subset_pbc"]], "pbc_shortest_vectors() (in module pymatgen.util.coord_cython)": [[270, "pymatgen.util.coord_cython.pbc_shortest_vectors"]], "pymatgen.util.coord_cython": [[270, "module-pymatgen.util.coord_cython"]], "bibtex() (in module pymatgen.util.due)": [[271, "pymatgen.util.due.BibTeX"]], "doi() (in module pymatgen.util.due)": [[271, "pymatgen.util.due.Doi"]], "inactiveduecreditcollector (class in pymatgen.util.due)": [[271, "pymatgen.util.due.InactiveDueCreditCollector"]], "text() (in module pymatgen.util.due)": [[271, "pymatgen.util.due.Text"]], "url() (in module pymatgen.util.due)": [[271, "pymatgen.util.due.Url"]], "activate() (inactiveduecreditcollector method)": [[271, "pymatgen.util.due.InactiveDueCreditCollector.activate"]], "active (inactiveduecreditcollector attribute)": [[271, "pymatgen.util.due.InactiveDueCreditCollector.active"]], "add() (inactiveduecreditcollector method)": [[271, "pymatgen.util.due.InactiveDueCreditCollector.add"]], "cite() (inactiveduecreditcollector method)": [[271, "pymatgen.util.due.InactiveDueCreditCollector.cite"]], "dcite() (inactiveduecreditcollector method)": [[271, "pymatgen.util.due.InactiveDueCreditCollector.dcite"]], "dump() (inactiveduecreditcollector method)": [[271, "pymatgen.util.due.InactiveDueCreditCollector.dump"]], "load() (inactiveduecreditcollector method)": [[271, "pymatgen.util.due.InactiveDueCreditCollector.load"]], "pymatgen.util.due": [[271, "module-pymatgen.util.due"]], "pymatgen.util.graph_hashing": [[272, "module-pymatgen.util.graph_hashing"]], "weisfeiler_lehman_graph_hash() (in module pymatgen.util.graph_hashing)": [[272, "pymatgen.util.graph_hashing.weisfeiler_lehman_graph_hash"]], "weisfeiler_lehman_subgraph_hashes() (in module pymatgen.util.graph_hashing)": [[272, "pymatgen.util.graph_hashing.weisfeiler_lehman_subgraph_hashes"]], "clean_lines() (in module pymatgen.util.io_utils)": [[273, "pymatgen.util.io_utils.clean_lines"]], "micro_pyawk() (in module pymatgen.util.io_utils)": [[273, "pymatgen.util.io_utils.micro_pyawk"]], "pymatgen.util.io_utils": [[273, "module-pymatgen.util.io_utils"]], "abs_cap() (in module pymatgen.util.num)": [[274, "pymatgen.util.num.abs_cap"]], "make_symmetric_matrix_from_upper_tri() (in module pymatgen.util.num)": [[274, "pymatgen.util.num.make_symmetric_matrix_from_upper_tri"]], "maxloc() (in module pymatgen.util.num)": [[274, "pymatgen.util.num.maxloc"]], "min_max_indexes() (in module pymatgen.util.num)": [[274, "pymatgen.util.num.min_max_indexes"]], "minloc() (in module pymatgen.util.num)": [[274, "pymatgen.util.num.minloc"]], "monotonic() (in module pymatgen.util.num)": [[274, "pymatgen.util.num.monotonic"]], "non_decreasing() (in module pymatgen.util.num)": [[274, "pymatgen.util.num.non_decreasing"]], "non_increasing() (in module pymatgen.util.num)": [[274, "pymatgen.util.num.non_increasing"]], "pymatgen.util.num": [[274, "module-pymatgen.util.num"]], "round_to_sigfigs() (in module pymatgen.util.num)": [[274, "pymatgen.util.num.round_to_sigfigs"]], "strictly_decreasing() (in module pymatgen.util.num)": [[274, "pymatgen.util.num.strictly_decreasing"]], "strictly_increasing() (in module pymatgen.util.num)": [[274, "pymatgen.util.num.strictly_increasing"]], "jit() (in module pymatgen.util.numba)": [[275, "pymatgen.util.numba.jit"]], "njit() (in module pymatgen.util.numba)": [[275, "pymatgen.util.numba.njit"]], "pymatgen.util.numba": [[275, "module-pymatgen.util.numba"]], "add_fig_kwargs() (in module pymatgen.util.plotting)": [[276, "pymatgen.util.plotting.add_fig_kwargs"]], "format_formula() (in module pymatgen.util.plotting)": [[276, "pymatgen.util.plotting.format_formula"]], "get_ax3d_fig_plt() (in module pymatgen.util.plotting)": [[276, "pymatgen.util.plotting.get_ax3d_fig_plt"]], "get_ax_fig_plt() (in module pymatgen.util.plotting)": [[276, "pymatgen.util.plotting.get_ax_fig_plt"]], "get_axarray_fig_plt() (in module pymatgen.util.plotting)": [[276, "pymatgen.util.plotting.get_axarray_fig_plt"]], "periodic_table_heatmap() (in module pymatgen.util.plotting)": [[276, "pymatgen.util.plotting.periodic_table_heatmap"]], "pretty_plot() (in module pymatgen.util.plotting)": [[276, "pymatgen.util.plotting.pretty_plot"]], "pretty_plot_two_axis() (in module pymatgen.util.plotting)": [[276, "pymatgen.util.plotting.pretty_plot_two_axis"]], "pretty_polyfit_plot() (in module pymatgen.util.plotting)": [[276, "pymatgen.util.plotting.pretty_polyfit_plot"]], "pymatgen.util.plotting": [[276, "module-pymatgen.util.plotting"]], "van_arkel_triangle() (in module pymatgen.util.plotting)": [[276, "pymatgen.util.plotting.van_arkel_triangle"]], "author (class in pymatgen.util.provenance)": [[277, "pymatgen.util.provenance.Author"]], "historynode (class in pymatgen.util.provenance)": [[277, "pymatgen.util.provenance.HistoryNode"]], "structurenl (class in pymatgen.util.provenance)": [[277, "pymatgen.util.provenance.StructureNL"]], "as_dict() (author method)": [[277, "pymatgen.util.provenance.Author.as_dict"]], "as_dict() (historynode method)": [[277, "pymatgen.util.provenance.HistoryNode.as_dict"]], "as_dict() (structurenl method)": [[277, "pymatgen.util.provenance.StructureNL.as_dict"]], "description (historynode attribute)": [[277, "pymatgen.util.provenance.HistoryNode.description"]], "email (author attribute)": [[277, "pymatgen.util.provenance.Author.email"]], "from_dict() (author static method)": [[277, "pymatgen.util.provenance.Author.from_dict"]], "from_dict() (historynode static method)": [[277, "pymatgen.util.provenance.HistoryNode.from_dict"]], "from_dict() (structurenl class method)": [[277, "pymatgen.util.provenance.StructureNL.from_dict"]], "from_structures() (structurenl class method)": [[277, "pymatgen.util.provenance.StructureNL.from_structures"]], "is_valid_bibtex() (in module pymatgen.util.provenance)": [[277, "pymatgen.util.provenance.is_valid_bibtex"]], "name (author attribute)": [[277, "pymatgen.util.provenance.Author.name"]], "name (historynode attribute)": [[277, "pymatgen.util.provenance.HistoryNode.name"]], "parse_author() (author static method)": [[277, "pymatgen.util.provenance.Author.parse_author"]], "parse_history_node() (historynode static method)": [[277, "pymatgen.util.provenance.HistoryNode.parse_history_node"]], "pymatgen.util.provenance": [[277, "module-pymatgen.util.provenance"]], "url (historynode attribute)": [[277, "pymatgen.util.provenance.HistoryNode.url"]], "string_mode (stringify attribute)": [[278, "pymatgen.util.string.Stringify.STRING_MODE"]], "stringify (class in pymatgen.util.string)": [[278, "pymatgen.util.string.Stringify"]], "charge_string() (in module pymatgen.util.string)": [[278, "pymatgen.util.string.charge_string"]], "disordered_formula() (in module pymatgen.util.string)": [[278, "pymatgen.util.string.disordered_formula"]], "formula_double_format() (in module pymatgen.util.string)": [[278, "pymatgen.util.string.formula_double_format"]], "htmlify() (in module pymatgen.util.string)": [[278, "pymatgen.util.string.htmlify"]], "latexify() (in module pymatgen.util.string)": [[278, "pymatgen.util.string.latexify"]], "latexify_spacegroup() (in module pymatgen.util.string)": [[278, "pymatgen.util.string.latexify_spacegroup"]], "pymatgen.util.string": [[278, "module-pymatgen.util.string"]], "str_delimited() (in module pymatgen.util.string)": [[278, "pymatgen.util.string.str_delimited"]], "stream_has_colours() (in module pymatgen.util.string)": [[278, "pymatgen.util.string.stream_has_colours"]], "to_html_string() (stringify method)": [[278, "pymatgen.util.string.Stringify.to_html_string"]], "to_latex_string() (stringify method)": [[278, "pymatgen.util.string.Stringify.to_latex_string"]], "to_pretty_string() (stringify method)": [[278, "pymatgen.util.string.Stringify.to_pretty_string"]], "to_unicode_string() (stringify method)": [[278, "pymatgen.util.string.Stringify.to_unicode_string"]], "transformation_to_string() (in module pymatgen.util.string)": [[278, "pymatgen.util.string.transformation_to_string"]], "unicodeify() (in module pymatgen.util.string)": [[278, "pymatgen.util.string.unicodeify"]], "unicodeify_spacegroup() (in module pymatgen.util.string)": [[278, "pymatgen.util.string.unicodeify_spacegroup"]], "unicodeify_species() (in module pymatgen.util.string)": [[278, "pymatgen.util.string.unicodeify_species"]], "module_dir (pymatgentest attribute)": [[279, "pymatgen.util.testing.PymatgenTest.MODULE_DIR"]], "pymatgentest (class in pymatgen.util.testing)": [[279, "pymatgen.util.testing.PymatgenTest"]], "structures_dir (pymatgentest attribute)": [[279, "pymatgen.util.testing.PymatgenTest.STRUCTURES_DIR"]], "test_files_dir (pymatgentest attribute)": [[279, "pymatgen.util.testing.PymatgenTest.TEST_FILES_DIR"]], "test_structures (pymatgentest attribute)": [[279, "pymatgen.util.testing.PymatgenTest.TEST_STRUCTURES"]], "assert_all_close() (pymatgentest static method)": [[279, "pymatgen.util.testing.PymatgenTest.assert_all_close"]], "assert_msonable() (pymatgentest method)": [[279, "pymatgen.util.testing.PymatgenTest.assert_msonable"]], "assert_str_content_equal() (pymatgentest static method)": [[279, "pymatgen.util.testing.PymatgenTest.assert_str_content_equal"]], "fn (pymatgentest attribute)": [[279, "pymatgen.util.testing.PymatgenTest.fn"]], "get_structure() (pymatgentest class method)": [[279, "pymatgen.util.testing.PymatgenTest.get_structure"]], "pymatgen.util.testing": [[279, "module-pymatgen.util.testing"]], "serialize_with_pickle() (pymatgentest method)": [[279, "pymatgen.util.testing.PymatgenTest.serialize_with_pickle"]], "warnings (pymatgentest attribute)": [[279, "pymatgen.util.testing.PymatgenTest.warnings"]], "pymatgen.util.typing": [[280, "module-pymatgen.util.typing"]], "pymatgen.vis": [[281, "module-pymatgen.vis"]], "spectrumplotter (class in pymatgen.vis.plotters)": [[282, "pymatgen.vis.plotters.SpectrumPlotter"]], "add_spectra() (spectrumplotter method)": [[282, "pymatgen.vis.plotters.SpectrumPlotter.add_spectra"]], "add_spectrum() (spectrumplotter method)": [[282, "pymatgen.vis.plotters.SpectrumPlotter.add_spectrum"]], "get_plot() (spectrumplotter method)": [[282, "pymatgen.vis.plotters.SpectrumPlotter.get_plot"]], "pymatgen.vis.plotters": [[282, "module-pymatgen.vis.plotters"]], "save_plot() (spectrumplotter method)": [[282, "pymatgen.vis.plotters.SpectrumPlotter.save_plot"]], "show() (spectrumplotter method)": [[282, "pymatgen.vis.plotters.SpectrumPlotter.show"]], "pymatgen.vis.structure_chemview": [[283, "module-pymatgen.vis.structure_chemview"]], "quick_view() (in module pymatgen.vis.structure_chemview)": [[283, "pymatgen.vis.structure_chemview.quick_view"]], "default_animated_movie_options (multistructuresvis attribute)": [[284, "pymatgen.vis.structure_vtk.MultiStructuresVis.DEFAULT_ANIMATED_MOVIE_OPTIONS"]], "multistructuresinteractorstyle (class in pymatgen.vis.structure_vtk)": [[284, "pymatgen.vis.structure_vtk.MultiStructuresInteractorStyle"]], "multistructuresvis (class in pymatgen.vis.structure_vtk)": [[284, "pymatgen.vis.structure_vtk.MultiStructuresVis"]], "structureinteractorstyle (class in pymatgen.vis.structure_vtk)": [[284, "pymatgen.vis.structure_vtk.StructureInteractorStyle"]], "structurevis (class in pymatgen.vis.structure_vtk)": [[284, "pymatgen.vis.structure_vtk.StructureVis"]], "add_bonds() (structurevis method)": [[284, "pymatgen.vis.structure_vtk.StructureVis.add_bonds"]], "add_edges() (structurevis method)": [[284, "pymatgen.vis.structure_vtk.StructureVis.add_edges"]], "add_faces() (structurevis method)": [[284, "pymatgen.vis.structure_vtk.StructureVis.add_faces"]], "add_line() (structurevis method)": [[284, "pymatgen.vis.structure_vtk.StructureVis.add_line"]], "add_partial_sphere() (structurevis method)": [[284, "pymatgen.vis.structure_vtk.StructureVis.add_partial_sphere"]], "add_picker() (structurevis method)": [[284, "pymatgen.vis.structure_vtk.StructureVis.add_picker"]], "add_picker_fixed() (structurevis method)": [[284, "pymatgen.vis.structure_vtk.StructureVis.add_picker_fixed"]], "add_polyhedron() (structurevis method)": [[284, "pymatgen.vis.structure_vtk.StructureVis.add_polyhedron"]], "add_site() (structurevis method)": [[284, "pymatgen.vis.structure_vtk.StructureVis.add_site"]], "add_text() (structurevis method)": [[284, "pymatgen.vis.structure_vtk.StructureVis.add_text"]], "add_triangle() (structurevis method)": [[284, "pymatgen.vis.structure_vtk.StructureVis.add_triangle"]], "apply_tags() (multistructuresvis method)": [[284, "pymatgen.vis.structure_vtk.MultiStructuresVis.apply_tags"]], "display_help() (multistructuresvis method)": [[284, "pymatgen.vis.structure_vtk.MultiStructuresVis.display_help"]], "display_help() (structurevis method)": [[284, "pymatgen.vis.structure_vtk.StructureVis.display_help"]], "display_info() (multistructuresvis method)": [[284, "pymatgen.vis.structure_vtk.MultiStructuresVis.display_info"]], "display_warning() (multistructuresvis method)": [[284, "pymatgen.vis.structure_vtk.MultiStructuresVis.display_warning"]], "erase_info() (multistructuresvis method)": [[284, "pymatgen.vis.structure_vtk.MultiStructuresVis.erase_info"]], "erase_warning() (multistructuresvis method)": [[284, "pymatgen.vis.structure_vtk.MultiStructuresVis.erase_warning"]], "keypressevent() (multistructuresinteractorstyle method)": [[284, "pymatgen.vis.structure_vtk.MultiStructuresInteractorStyle.keyPressEvent"]], "keypressevent() (structureinteractorstyle method)": [[284, "pymatgen.vis.structure_vtk.StructureInteractorStyle.keyPressEvent"]], "leftbuttonpressevent() (structureinteractorstyle method)": [[284, "pymatgen.vis.structure_vtk.StructureInteractorStyle.leftButtonPressEvent"]], "leftbuttonreleaseevent() (structureinteractorstyle method)": [[284, "pymatgen.vis.structure_vtk.StructureInteractorStyle.leftButtonReleaseEvent"]], "make_movie() (in module pymatgen.vis.structure_vtk)": [[284, "pymatgen.vis.structure_vtk.make_movie"]], "mousemoveevent() (structureinteractorstyle method)": [[284, "pymatgen.vis.structure_vtk.StructureInteractorStyle.mouseMoveEvent"]], "orthongonalize_structure() (structurevis method)": [[284, "pymatgen.vis.structure_vtk.StructureVis.orthongonalize_structure"]], "pymatgen.vis.structure_vtk": [[284, "module-pymatgen.vis.structure_vtk"]], "redraw() (structurevis method)": [[284, "pymatgen.vis.structure_vtk.StructureVis.redraw"]], "rotate_view() (structurevis method)": [[284, "pymatgen.vis.structure_vtk.StructureVis.rotate_view"]], "set_animated_movie_options() (multistructuresvis method)": [[284, "pymatgen.vis.structure_vtk.MultiStructuresVis.set_animated_movie_options"]], "set_structure() (multistructuresvis method)": [[284, "pymatgen.vis.structure_vtk.MultiStructuresVis.set_structure"]], "set_structure() (structurevis method)": [[284, "pymatgen.vis.structure_vtk.StructureVis.set_structure"]], "set_structures() (multistructuresvis method)": [[284, "pymatgen.vis.structure_vtk.MultiStructuresVis.set_structures"]], "show() (structurevis method)": [[284, "pymatgen.vis.structure_vtk.StructureVis.show"]], "write_image() (structurevis method)": [[284, "pymatgen.vis.structure_vtk.StructureVis.write_image"]], "zoom() (structurevis method)": [[284, "pymatgen.vis.structure_vtk.StructureVis.zoom"]]}})